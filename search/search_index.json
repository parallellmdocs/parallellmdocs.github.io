{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Unified Docs\uff08\u4e2d\u6587\u7248\uff09","text":"<p>\u6b22\u8fce\u6765\u5230\u591a\u7ec4\u4ef6\u4e2d\u6587\u6587\u6863\u96c6\u5408\u3002\u672c\u9879\u76ee\u57fa\u4e8e MkDocs Material \u4e3b\u9898\uff0c\u805a\u5408\u4e86 Megatron-LM\u3001Transformer Engine \u4ee5\u53ca NCCL \u7b49\u9879\u76ee\u7684\u4f7f\u7528\u8bf4\u660e\u4e0e API \u53c2\u8003\u3002</p>"},{"location":"#_1","title":"\u5feb\u901f\u5bfc\u822a","text":"<ul> <li>Megatron-LM \u6587\u6863\uff1a\u6a21\u578b\u5e76\u884c\u6846\u67b6\u7684\u6982\u89c8\u3001\u6838\u5fc3\u7279\u6027\u4e0e\u793a\u4f8b\u3002</li> <li>Transformer Engine \u6587\u6863\uff1aFP8 \u53ca\u76f8\u5173\u5de5\u5177\u94fe\u4ecb\u7ecd\u3001\u5b89\u88c5\u4e0e\u8c03\u8bd5\u6307\u5357\u3002</li> <li>NCCL \u6587\u6863\uff1a\u591a GPU \u901a\u4fe1\u5e93\u7684\u7b80\u4ecb\u3001\u7f16\u8bd1\u4e0e\u5b89\u88c5\u8bf4\u660e\u3002</li> </ul> <p>\u82e5\u9700\u5b8c\u6574\u76ee\u5f55\uff0c\u8bf7\u4f7f\u7528\u5de6\u4fa7\u5bfc\u822a\u680f\u6216\u7ad9\u5185\u641c\u7d22\u3002</p>"},{"location":"datasets/docs/","title":"\ud83e\udd17 Datasets \u7b80\u4ecb","text":"<p>\ud83e\udd17 Datasets \u662f\u4e00\u5957\u7528\u4e8e\u4fbf\u6377\u83b7\u53d6\u4e0e\u5171\u4eab\u4eba\u5de5\u667a\u80fd\u6570\u636e\u96c6\u7684\u5e93\uff0c\u8986\u76d6\u8bed\u97f3\u3001\u8ba1\u7b97\u673a\u89c6\u89c9\u4e0e\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7b49\u4efb\u52a1\u3002</p> <p>\u4f60\u53ea\u9700\u4e00\u884c\u4ee3\u7801\u5373\u53ef\u52a0\u8f7d\u4e00\u4e2a\u6570\u636e\u96c6\uff0c\u5e76\u5229\u7528\u5f3a\u5927\u7684\u6570\u636e\u5904\u7406\u4e0e\u6d41\u5f0f\u5de5\u5177\uff0c\u5feb\u901f\u51c6\u5907\u597d\u8bad\u7ec3\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u6240\u9700\u7684\u6570\u636e\u3002\u51ed\u501f Apache Arrow \u683c\u5f0f\u7684\u652f\u6301\uff0c\u53ef\u4ee5\u96f6\u62f7\u8d1d\u8bfb\u53d6\u8d85\u5927\u6570\u636e\u96c6\uff0c\u5728\u4fdd\u6301\u5185\u5b58\u5360\u7528\u53d7\u63a7\u7684\u540c\u65f6\u5b9e\u73b0\u6700\u4f73\u6027\u80fd\u3002\ud83e\udd17 Datasets \u4e0e Hugging Face Hub \u6df1\u5ea6\u96c6\u6210\uff0c\u65b9\u4fbf\u4f60\u4e0e\u793e\u533a\u5171\u4eab\u6570\u636e\u96c6\u6216\u76f4\u63a5\u590d\u7528\u4ed6\u4eba\u516c\u5f00\u7684\u6570\u636e\u3002</p> <p>\u7acb\u5373\u524d\u5f80 Hugging Face Hub \u641c\u7d22\u4f60\u7684\u6570\u636e\u96c6\uff0c\u5e76\u4f7f\u7528\u5728\u7ebf\u9884\u89c8\u5668\u6df1\u5165\u4e86\u89e3\u6570\u636e\u8be6\u60c5\u3002</p> <ul> <li>\u6559\u7a0b\uff1a\u4ece\u96f6\u5f00\u59cb\u4e86\u89e3\u5982\u4f55\u52a0\u8f7d\u3001\u8bbf\u95ee\u4e0e\u5904\u7406\u6570\u636e\u96c6\u3002\u5982\u679c\u4f60\u7b2c\u4e00\u6b21\u4f7f\u7528 \ud83e\udd17 Datasets\uff0c\u8bf7\u5148\u9605\u8bfb\u300a\u6559\u7a0b\u300b\u3002</li> <li>\u64cd\u4f5c\u6307\u5357\uff1a\u9762\u5411\u5177\u4f53\u76ee\u6807\u7684\u5b9e\u8df5\u6307\u5357\uff0c\u6559\u4f60\u7528 \ud83e\udd17 Datasets \u89e3\u51b3\u771f\u5b9e\u95ee\u9898\uff0c\u8be6\u89c1\u300a\u64cd\u4f5c\u6307\u5357\u300b\u3002</li> <li>\u6982\u5ff5\u89e3\u6790\uff1a\u4ece\u9ad8\u5c42\u89c6\u89d2\u7406\u89e3\u5173\u952e\u6982\u5ff5\uff0c\u4f8b\u5982\u5e95\u5c42\u6570\u636e\u683c\u5f0f\u3001\u7f13\u5b58\u673a\u5236\u4ee5\u53ca\u6570\u636e\u96c6\u662f\u5982\u4f55\u751f\u6210\u7684\uff0c\u53c2\u89c1\u300a\u6982\u5ff5\u89e3\u6790\u300b\u3002</li> <li>\u53c2\u8003\u624b\u518c\uff1a\u4e86\u89e3 \ud83e\udd17 Datasets \u4e2d\u7c7b\u4e0e\u65b9\u6cd5\u7684\u6280\u672f\u7ec6\u8282\uff0c\u8bf7\u67e5\u9605\u300a\u53c2\u8003\u624b\u518c\u300b\u3002</li> </ul>"},{"location":"datasets/docs/about_arrow/","title":"Datasets \ud83e\udd1d Arrow","text":""},{"location":"datasets/docs/about_arrow/#arrow","title":"\u4ec0\u4e48\u662f Arrow\uff1f","text":"<p>Arrow \u7528\u4e8e\u9ad8\u6548\u5904\u7406\u4e0e\u4f20\u8f93\u6d77\u91cf\u6570\u636e\u3002\u5b83\u5b9a\u4e49\u4e86\u4e00\u79cd\u4ee5\u5217\u5f0f\u5185\u5b58\u5e03\u5c40\u5b58\u50a8\u6570\u636e\u7684\u4e13\u7528\u683c\u5f0f\uff0c\u5e26\u6765\u8bf8\u591a\u4f18\u52bf\uff1a</p> <ul> <li>Arrow \u7684\u6807\u51c6\u5316\u683c\u5f0f\u652f\u6301\u96f6\u62f7\u8d1d\u8bfb\u53d6\uff0c\u51e0\u4e4e\u6d88\u9664\u5e8f\u5217\u5316\u5f00\u9500\u3002</li> <li>Arrow \u4e0e\u8bed\u8a00\u65e0\u5173\uff0c\u53ef\u88ab\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\u4f7f\u7528\u3002</li> <li>Arrow \u91c7\u7528\u5217\u5f0f\u5b58\u50a8\uff0c\u9488\u5bf9\u6309\u5217\u6216\u5207\u7247\u7684\u67e5\u8be2\u4e0e\u5904\u7406\u901f\u5ea6\u66f4\u5feb\u3002</li> <li>Arrow \u53ef\u4ee5\u65e0\u62f7\u8d1d\u5730\u4e0e NumPy\u3001Pandas\u3001PyTorch\u3001TensorFlow \u7b49\u5e38\u89c1\u673a\u5668\u5b66\u4e60\u5de5\u5177\u534f\u540c\u5de5\u4f5c\u3002</li> <li>Arrow \u652f\u6301\u591a\u79cd\u5217\u7c7b\u578b\uff0c\u5305\u62ec\u5d4c\u5957\u7ed3\u6784\u3002</li> </ul>"},{"location":"datasets/docs/about_arrow/#_1","title":"\u5185\u5b58\u6620\u5c04","text":"<p>\ud83e\udd17 Datasets \u7684\u672c\u5730\u7f13\u5b58\u7cfb\u7edf\u57fa\u4e8e Arrow\u3002\u6570\u636e\u96c6\u4f1a\u5199\u5165\u78c1\u76d8\u7f13\u5b58\uff0c\u518d\u4ee5\u5185\u5b58\u6620\u5c04\u7684\u65b9\u5f0f\u5b9e\u73b0\u5feb\u901f\u8bfb\u53d6\u3002\u8fd9\u4e00\u67b6\u6784\u53ef\u4ee5\u8ba9\u5185\u5b58\u6709\u9650\u7684\u673a\u5668\u4f9d\u7136\u5904\u7406\u8d85\u5927\u89c4\u6a21\u6570\u636e\u96c6\u3002</p> <p>\u4f8b\u5982\uff0c\u52a0\u8f7d\u5b8c\u6574\u7684\u82f1\u6587\u7ef4\u57fa\u767e\u79d1\u6570\u636e\u96c6\uff0c\u5b9e\u9645\u53ea\u5360\u7528\u51e0\u5341 MB \u7684\u5185\u5b58\uff1a</p> <pre><code>&gt;&gt;&gt; import os; import psutil; import timeit\n&gt;&gt;&gt; from datasets import load_dataset\n\n# Process.memory_info \u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u8fd9\u91cc\u8f6c\u6362\u4e3a MB\n&gt;&gt;&gt; mem_before = psutil.Process(os.getpid()).memory_info().rss / (1024 * 1024)\n&gt;&gt;&gt; wiki = load_dataset(\"wikimedia/wikipedia\", \"20220301.en\", split=\"train\")\n&gt;&gt;&gt; mem_after = psutil.Process(os.getpid()).memory_info().rss / (1024 * 1024)\n\n&gt;&gt;&gt; print(f\"RAM memory used: {(mem_after - mem_before)} MB\")\nRAM memory used: 50 MB\n</code></pre> <p>\u539f\u56e0\u5728\u4e8e Arrow \u6570\u636e\u5b9e\u9645\u6765\u81ea\u78c1\u76d8\u7684\u5185\u5b58\u6620\u5c04\uff0c\u800c\u975e\u5b8c\u6574\u8f7d\u5165\u5185\u5b58\u3002\u901a\u8fc7\u5185\u5b58\u6620\u5c04\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u78c1\u76d8\u4e0a\u7684\u6570\u636e\uff0c\u5e76\u5229\u7528\u865a\u62df\u5185\u5b58\u673a\u5236\u5b9e\u73b0\u5feb\u901f\u67e5\u627e\u3002</p>"},{"location":"datasets/docs/about_arrow/#_2","title":"\u6027\u80fd","text":"<p>\u4f7f\u7528 Arrow \u904d\u5386\u5185\u5b58\u6620\u5c04\u6570\u636e\u96c6\u7684\u901f\u5ea6\u975e\u5e38\u5feb\u3002\u5373\u4fbf\u5728\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\u904d\u5386\u7ef4\u57fa\u767e\u79d1\uff0c\u4e5f\u80fd\u8fbe\u5230 1\u20133 Gbit/s \u7684\u541e\u5410\uff1a</p> <pre><code>&gt;&gt;&gt; s = \"\"\"batch_size = 1000\n... for batch in wiki.iter(batch_size):\n...     ...\n... \"\"\"\n\n&gt;&gt;&gt; elapsed_time = timeit.timeit(stmt=s, number=1, globals=globals())\n&gt;&gt;&gt; print(f\"Time to iterate over the {wiki.dataset_size &gt;&gt; 30} GB dataset: {elapsed_time:.1f} sec, \"\n...       f\"ie. {float(wiki.dataset_size &gt;&gt; 27)/elapsed_time:.1f} Gb/s\")\nTime to iterate over the 18 GB dataset: 31.8 sec, ie. 4.8 Gb/s\n</code></pre>"},{"location":"datasets/docs/about_cache/","title":"\u7f13\u5b58\u673a\u5236","text":"<p>\u7f13\u5b58\u662f \ud83e\udd17 Datasets \u9ad8\u6548\u8fd0\u884c\u7684\u5173\u952e\u4e4b\u4e00\u3002\u5b83\u4f1a\u4fdd\u5b58\u5df2\u7ecf\u4e0b\u8f7d\u6216\u5904\u7406\u8fc7\u7684\u6570\u636e\u96c6\uff0c\u4e0b\u6b21\u518d\u4f7f\u7528\u65f6\u5c31\u80fd\u76f4\u63a5\u4ece\u7f13\u5b58\u52a0\u8f7d\uff0c\u800c\u65e0\u9700\u91cd\u65b0\u4e0b\u8f7d\u6216\u91cd\u590d\u6267\u884c\u5904\u7406\u51fd\u6570\u3002\u5373\u4fbf\u5173\u95ed Python \u4f1a\u8bdd\u5e76\u91cd\u65b0\u542f\u52a8\uff0c\ud83e\udd17 Datasets \u4ecd\u4f1a\u76f4\u63a5\u4ece\u7f13\u5b58\u6062\u590d\u6570\u636e\u96c6\uff01</p>"},{"location":"datasets/docs/about_cache/#fingerprint","title":"\u6307\u7eb9\uff08Fingerprint\uff09","text":"<p>\u7f13\u5b58\u5982\u4f55\u8bb0\u5f55\u6570\u636e\u96c6\u4e0a\u5e94\u7528\u8fc7\u7684\u53d8\u6362\uff1f\ud83e\udd17 Datasets \u4f1a\u4e3a\u7f13\u5b58\u6587\u4ef6\u5206\u914d\u4e00\u4e2a\u6307\u7eb9\uff0c\u7528\u4e8e\u63cf\u8ff0\u6570\u636e\u96c6\u7684\u5f53\u524d\u72b6\u6001\u3002\u521d\u59cb\u6307\u7eb9\u53d6\u81ea Arrow \u8868\u7684\u54c8\u5e0c\u503c\uff1b\u82e5\u6570\u636e\u96c6\u5b58\u50a8\u5728\u78c1\u76d8\u4e0a\uff0c\u5219\u6765\u81ea Arrow \u6587\u4ef6\u7684\u54c8\u5e0c\u3002\u4e4b\u540e\u6bcf\u6b21\u53d8\u6362\u90fd\u4f1a\u7ec4\u5408\u524d\u4e00\u6b21\u7684\u6307\u7eb9\u4e0e\u65b0\u53d8\u6362\u7684\u54c8\u5e0c\uff0c\u751f\u6210\u5168\u65b0\u7684\u6307\u7eb9\u3002</p> <p>\u63d0\u793a</p> <p>\u201c\u53d8\u6362\u201d\u6307\u7684\u662f How-to Process \u6307\u5357\u4e2d\u7684\u4efb\u610f\u5904\u7406\u65b9\u6cd5\uff0c\u4f8b\u5982 [<code>Dataset.map</code>] \u6216 [<code>Dataset.shuffle</code>]\u3002</p> <p>\u5b9e\u9645\u7684\u6307\u7eb9\u5927\u81f4\u5982\u4e0b\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import Dataset\n&gt;&gt;&gt; dataset1 = Dataset.from_dict({\"a\": [0, 1, 2]})\n&gt;&gt;&gt; dataset2 = dataset1.map(lambda x: {\"a\": x[\"a\"] + 1})\n&gt;&gt;&gt; print(dataset1._fingerprint, dataset2._fingerprint)\nd19493523d95e2dc 5b86abacd4b42434\n</code></pre> <p>\u4e3a\u4e86\u4fbf\u4e8e\u54c8\u5e0c\u8ba1\u7b97\uff0c\u53d8\u6362\u51fd\u6570\u5fc5\u987b\u80fd\u591f\u88ab dill \u6216 pickle \u5e8f\u5217\u5316\u3002</p> <p>\u5982\u679c\u4f7f\u7528\u4e86\u4e0d\u53ef\u54c8\u5e0c\u7684\u53d8\u6362\uff0c\ud83e\udd17 Datasets \u4f1a\u6539\u7528\u968f\u673a\u6307\u7eb9\u5e76\u7ed9\u51fa\u8b66\u544a\u3002\u6b64\u7c7b\u53d8\u6362\u5c06\u88ab\u89c6\u4e3a\u4e0e\u5386\u53f2\u53d8\u6362\u5b8c\u5168\u4e0d\u540c\uff0c\ud83e\udd17 Datasets \u4f1a\u91cd\u65b0\u6267\u884c\u5168\u90e8\u5904\u7406\u6b65\u9aa4\u3002\u8bf7\u786e\u4fdd\u4f60\u7684\u53d8\u6362\u53ef\u4ee5\u901a\u8fc7 pickle \u6216 dill \u5e8f\u5217\u5316\uff01</p> <p>\u5f53\u7f13\u5b58\u88ab\u7981\u7528\u65f6\uff0c\ud83e\udd17 Datasets \u4e5f\u4f1a\u91cd\u65b0\u8ba1\u7b97\u6240\u6709\u5185\u5bb9\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6bcf\u6b21\u90fd\u4f1a\u751f\u6210\u65b0\u7684\u7f13\u5b58\u6587\u4ef6\uff0c\u5e76\u5199\u5165\u4e34\u65f6\u76ee\u5f55\uff1b\u4f1a\u8bdd\u7ed3\u675f\u540e\u4e34\u65f6\u76ee\u5f55\u4f1a\u88ab\u5220\u9664\u3002\u8fd9\u4e9b\u7f13\u5b58\u6587\u4ef6\u4e0d\u4f1a\u62e5\u6709\u6307\u7eb9\uff0c\u800c\u662f\u9644\u5e26\u968f\u673a\u54c8\u5e0c\u3002</p> <p>\u63d0\u793a</p> <p>\u7981\u7528\u7f13\u5b58\u65f6\uff0c\u8bf7\u4f7f\u7528 [<code>Dataset.save_to_disk</code>] \u4fdd\u5b58\u5904\u7406\u540e\u7684\u6570\u636e\u96c6\uff0c\u5426\u5219\u4f1a\u5728\u4f1a\u8bdd\u7ed3\u675f\u65f6\u88ab\u5220\u9664\u3002</p>"},{"location":"datasets/docs/about_cache/#_2","title":"\u54c8\u5e0c","text":"<p>\u6570\u636e\u96c6\u7684\u6307\u7eb9\u4f1a\u7ed3\u5408\u4f20\u5165 <code>map</code> \u7684\u51fd\u6570\u53ca\u5176\u53c2\u6570\uff08\u5982 <code>batch_size</code>\u3001<code>remove_columns</code> \u7b49\uff09\u751f\u6210\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7 [<code>fingerprint.Hasher</code>] \u67e5\u770b\u4efb\u610f Python \u5bf9\u8c61\u7684\u54c8\u5e0c\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets.fingerprint import Hasher\n&gt;&gt;&gt; my_func = lambda example: {\"length\": len(example[\"text\"])}\n&gt;&gt;&gt; print(Hasher.hash(my_func))\n'3d35e2b3e94c81d6'\n</code></pre> <p>\u54c8\u5e0c\u7684\u8ba1\u7b97\u65b9\u5f0f\u662f\u5148\u7528 <code>dill</code> \u5e8f\u5217\u5316\u76ee\u6807\u5bf9\u8c61\uff0c\u518d\u5bf9\u5f97\u5230\u7684\u5b57\u8282\u6d41\u6c42\u54c8\u5e0c\u3002\u5e8f\u5217\u5316\u5668\u4f1a\u9012\u5f52\u904d\u5386\u51fd\u6570\u91cc\u5f15\u7528\u7684\u6240\u6709\u53d8\u91cf\uff0c\u56e0\u6b64\u53ea\u8981\u8fd9\u4e9b\u53d8\u91cf\u53d1\u751f\u53d8\u5316\uff0c\u54c8\u5e0c\u503c\u4e5f\u4f1a\u968f\u4e4b\u53d8\u5316\u3002</p> <p>\u5982\u679c\u67d0\u4e2a\u51fd\u6570\u5728\u4e0d\u540c\u4f1a\u8bdd\u4e2d\u7684\u54c8\u5e0c\u4e0d\u4e00\u81f4\uff0c\u8bf4\u660e\u5b83\u4f9d\u8d56\u7684\u53d8\u91cf\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5bf9\u8c61\u5e76\u975e\u786e\u5b9a\u6027\u7ed3\u6784\u3002\u6b64\u65f6\u53ef\u4ee5\u5bf9\u53ef\u7591\u5bf9\u8c61\u5206\u522b\u6c42\u54c8\u5e0c\uff0c\u4ee5\u5b9a\u4f4d\u5bfc\u81f4\u5dee\u5f02\u7684\u6765\u6e90\u3002\u4f8b\u5982\uff0c\u5982\u679c\u51fd\u6570\u4f7f\u7528\u7684\u5217\u8868\u5728\u4e0d\u540c\u4f1a\u8bdd\u4e2d\u5143\u7d20\u987a\u5e8f\u4e0d\u56fa\u5b9a\uff0c\u90a3\u4e48\u8be5\u51fd\u6570\u7684\u54c8\u5e0c\u4e5f\u4f1a\u968f\u4e4b\u6539\u53d8\u3002</p>"},{"location":"datasets/docs/about_dataset_features/","title":"\u6570\u636e\u96c6\u7279\u5f81\uff08Features\uff09","text":"<p>[<code>Features</code>] \u7528\u4e8e\u63cf\u8ff0\u6570\u636e\u96c6\u7684\u5185\u90e8\u7ed3\u6784\uff0c\u5e76\u6307\u5b9a\u5e95\u5c42\u7684\u5e8f\u5217\u5316\u683c\u5f0f\u3002\u66f4\u8d34\u8fd1\u4f7f\u7528\u8005\u7684\u89d2\u5ea6\uff0c\u5b83\u8bb0\u5f55\u4e86\u6570\u636e\u96c6\u7684\u9ad8\u5c42\u4fe1\u606f\uff1a\u5217\u540d\u3001\u5217\u7c7b\u578b\uff0c\u4e43\u81f3 [<code>ClassLabel</code>]\u3002\u53ef\u4ee5\u628a [<code>Features</code>] \u60f3\u8c61\u6210\u6570\u636e\u96c6\u7684\u9aa8\u67b6\u3002</p> <p>[<code>Features</code>] \u7684\u7ed3\u6784\u5341\u5206\u7b80\u5355\uff1a<code>dict[column_name, column_type]</code>\u3002\u5373\u5217\u540d\u4e0e\u5217\u7c7b\u578b\u7684\u6620\u5c04\u5173\u7cfb\u3002\u901a\u8fc7\u5217\u7c7b\u578b\u4f60\u53ef\u4ee5\u8868\u8fbe\u591a\u79cd\u6570\u636e\u5f62\u6001\u3002</p> <p>\u4ee5 GLUE \u57fa\u51c6\u4e2d\u7684 MRPC \u6570\u636e\u96c6\u4e3a\u4f8b\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; dataset = load_dataset('nyu-mll/glue', 'mrpc', split='train')\n&gt;&gt;&gt; dataset.features\n{'idx': Value('int32'),\n 'label': ClassLabel(names=['not_equivalent', 'equivalent']),\n 'sentence1': Value('string'),\n 'sentence2': Value('string'),\n}\n</code></pre> <p>\u5176\u4e2d [<code>Value</code>] \u7279\u5f81\u544a\u8bc9 \ud83e\udd17 Datasets\uff1a</p> <ul> <li><code>idx</code> \u5217\u7684\u6570\u636e\u7c7b\u578b\u4e3a <code>int32</code>\u3002</li> <li><code>sentence1</code> \u4e0e <code>sentence2</code> \u5217\u7684\u6570\u636e\u7c7b\u578b\u4e3a <code>string</code>\u3002</li> </ul> <p>\ud83e\udd17 Datasets \u8fd8\u652f\u6301 <code>bool</code>\u3001<code>float32</code>\u3001<code>binary</code> \u7b49\u591a\u79cd\u6570\u636e\u7c7b\u578b\u3002</p> <p>\u63d0\u793a</p> <p>\u67e5\u770b [<code>Value</code>] \u6587\u6863\u53ef\u83b7\u53d6\u5b8c\u6574\u7684\u652f\u6301\u7c7b\u578b\u5217\u8868\u3002</p> <p>[<code>ClassLabel</code>] \u7279\u5f81\u8868\u793a <code>label</code> \u5217\u5305\u542b\u4e24\u4e2a\u7c7b\u522b\uff0c\u540d\u79f0\u5206\u522b\u4e3a <code>not_equivalent</code> \u4e0e <code>equivalent</code>\u3002\u5728\u6570\u636e\u96c6\u4e2d\u6807\u7b7e\u4ee5\u6574\u6570\u5f62\u5f0f\u5b58\u50a8\uff0c\u901a\u8fc7 [<code>ClassLabel.int2str</code>] \u4e0e [<code>ClassLabel.str2int</code>] \u53ef\u4ee5\u5728\u6574\u6570\u4e0e\u6807\u7b7e\u540d\u79f0\u4e4b\u95f4\u4e92\u76f8\u8f6c\u6362\u3002</p> <p>\u5982\u679c\u67d0\u4e2a\u5217\u5b58\u50a8\u5bf9\u8c61\u5217\u8868\uff0c\u5c31\u5e94\u4f7f\u7528 [<code>List</code>] \u7279\u5f81\u3002\u4ecd\u4ee5 SQuAD \u6570\u636e\u96c6\u4e3a\u4f8b\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; dataset = load_dataset('rajpurkar/squad', split='train')\n&gt;&gt;&gt; dataset.features\n{'id': Value('string'),\n 'title': Value('string'),\n 'context': Value('string'),\n 'question': Value('string'),\n 'answers': {'text': List(Value('string')),\n  'answer_start': List(Value('int32'))}}\n</code></pre> <p><code>answers</code> \u5b57\u6bb5\u7531\u5d4c\u5957\u7279\u5f81\u6784\u6210\uff0c\u5305\u542b <code>text</code> \u4e0e <code>answer_start</code> \u4e24\u4e2a\u5b50\u5b57\u6bb5\uff0c\u5206\u522b\u662f <code>string</code> \u4e0e <code>int32</code> \u7684\u5217\u8868\u3002</p> <p>\u63d0\u793a</p> <p>\u53c2\u8003 flatten \u7ae0\u8282\uff0c\u4e86\u89e3\u5982\u4f55\u5c06\u8fd9\u4e9b\u5d4c\u5957\u5b50\u5b57\u6bb5\u5c55\u5f00\u6210\u72ec\u7acb\u5217\u3002</p> <p>\u6570\u7ec4\u578b\u7279\u5f81\u9002\u5408\u521b\u5efa\u4e0d\u540c\u7ef4\u5ea6\u7684\u6570\u7ec4\u3002\u4f8b\u5982\u4f7f\u7528 [<code>Array2D</code>] \u521b\u5efa\u4e8c\u7ef4\u6570\u7ec4\uff0c\u751a\u81f3\u53ef\u4ee5\u7528 [<code>Array5D</code>] \u6784\u9020\u4e94\u7ef4\u6570\u7ec4\uff1a</p> <pre><code>&gt;&gt;&gt; features = Features({'a': Array2D(shape=(1, 3), dtype='int32')})\n</code></pre> <p>\u6570\u7ec4\u7c7b\u578b\u8fd8\u652f\u6301\u9996\u7ef4\u5927\u5c0f\u53ef\u53d8\u3002\u8fd9\u5728\u5904\u7406\u53d8\u957f\u5e8f\u5217\uff08\u5982\u53e5\u5b50\uff09\u65f6\u5341\u5206\u4fbf\u5229\uff0c\u65e0\u9700\u989d\u5916\u7684\u586b\u5145\u6216\u622a\u65ad\uff1a</p> <pre><code>&gt;&gt;&gt; features = Features({'a': Array3D(shape=(None, 5, 2), dtype='int32')})\n</code></pre>"},{"location":"datasets/docs/about_dataset_features/#_1","title":"\u97f3\u9891\u7279\u5f81","text":"<p>\u97f3\u9891\u6570\u636e\u96c6\u7684\u97f3\u9891\u5217\u7c7b\u578b\u4e3a [<code>Audio</code>]\uff0c\u5176\u4e2d\u5305\u542b\u4e09\u9879\u5173\u952e\u4fe1\u606f\uff1a</p> <ul> <li><code>array</code>\uff1a\u89e3\u7801\u540e\u7684\u97f3\u9891\u6ce2\u5f62\uff08\u4e00\u7ef4\u6570\u7ec4\uff09\u3002</li> <li><code>path</code>\uff1a\u97f3\u9891\u6587\u4ef6\u7684\u672c\u5730\u8def\u5f84\u3002</li> <li><code>sampling_rate</code>\uff1a\u97f3\u9891\u7684\u91c7\u6837\u7387\u3002</li> </ul> <p>\u52a0\u8f7d\u97f3\u9891\u6570\u636e\u96c6\u5e76\u8bbf\u95ee\u97f3\u9891\u5217\u65f6\uff0c[<code>Audio</code>] \u4f1a\u81ea\u52a8\u89e3\u7801\u5e76\u6309\u9700\u91cd\u91c7\u6837\u97f3\u9891\u6587\u4ef6\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset, Audio\n\n&gt;&gt;&gt; dataset = load_dataset(\"PolyAI/minds14\", \"en-US\", split=\"train\")\n&gt;&gt;&gt; dataset[0][\"audio\"]\n&lt;datasets.features._torchcodec.AudioDecoder object at 0x11642b6a0&gt;\n</code></pre> <p>\u6ce8\u610f</p> <p>\u7d22\u5f15\u97f3\u9891\u6570\u636e\u96c6\u65f6\u5e94\u5148\u6307\u5b9a\u884c\u53f7\u518d\u53d6 <code>audio</code> \u5217\uff08<code>dataset[0][\"audio\"]</code>\uff09\uff0c\u907f\u514d\u4e00\u6b21\u6027\u89e3\u7801\u4e0e\u91cd\u91c7\u6837\u6574\u4e2a\u6570\u636e\u96c6\u3002\u5bf9\u4e8e\u5927\u578b\u6570\u636e\u96c6\uff0c\u8fd9\u79cd\u64cd\u4f5c\u4f1a\u975e\u5e38\u8017\u65f6\u3002</p> <p>\u82e5\u5c06 <code>decode=False</code> \u4f20\u7ed9 [<code>Audio</code>]\uff0c\u5219\u4e0d\u4f1a\u89e3\u7801\u97f3\u9891\uff0c\u800c\u662f\u76f4\u63a5\u8fd4\u56de\u6587\u4ef6\u8def\u5f84\u6216\u539f\u59cb\u5b57\u8282\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"PolyAI/minds14\", \"en-US\", split=\"train\").cast_column(\"audio\", Audio(decode=False))\n&gt;&gt;&gt; dataset[0]\n{'audio': {'bytes': None,\n  'path': '/root/.cache/huggingface/datasets/downloads/extracted/f14948e0e84be638dd7943ac36518a4cf3324e8b7aa331c5ab11541518e9368c/en-US~JOINT_ACCOUNT/602ba55abb1e6d0fbce92065.wav'},\n 'english_transcription': 'I would like to set up a joint account with my partner',\n 'intent_class': 11,\n 'lang_id': 4,\n 'path': '/root/.cache/huggingface/datasets/downloads/extracted/f14948e0e84be638dd7943ac36518a4cf3324e8b7aa331c5ab11541518e9368c/en-US~JOINT_ACCOUNT/602ba55abb1e6d0fbce92065.wav',\n 'transcription': 'I would like to set up a joint account with my partner'}\n</code></pre>"},{"location":"datasets/docs/about_dataset_features/#_2","title":"\u56fe\u50cf\u7279\u5f81","text":"<p>\u56fe\u50cf\u6570\u636e\u96c6\u7684\u56fe\u50cf\u5217\u7c7b\u578b\u4e3a [<code>Image</code>]\uff0c\u7528\u6765\u4ece\u5b57\u8282\u5185\u5bb9\u4e2d\u52a0\u8f7d <code>PIL.Image</code> \u5bf9\u8c61\u3002\u8bbf\u95ee <code>image</code> \u5217\u65f6\uff0c[<code>Image</code>] \u4f1a\u81ea\u52a8\u89e3\u7801\u6587\u4ef6\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset, Image\n\n&gt;&gt;&gt; dataset = load_dataset(\"AI-Lab-Makerere/beans\", split=\"train\")\n&gt;&gt;&gt; dataset[0][\"image\"]\n&lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=500x500 at 0x125506CF8&gt;\n</code></pre> <p>\u6ce8\u610f</p> <p>\u4e0e\u97f3\u9891\u7c7b\u4f3c\uff0c\u5e94\u4f7f\u7528 <code>dataset[0][\"image\"]</code> \u7684\u65b9\u5f0f\uff0c\u5148\u5b9a\u4f4d\u884c\u518d\u53d6 <code>image</code> \u5217\uff0c\u907f\u514d\u4e00\u6b21\u6027\u89e3\u7801\u6574\u4e2a\u6570\u636e\u96c6\u7684\u56fe\u7247\u3002</p> <p>\u5f53\u8bbe\u7f6e <code>decode=False</code> \u65f6\uff0c[<code>Image</code>] \u8fd4\u56de\u56fe\u50cf\u6587\u4ef6\u7684\u8def\u5f84\u6216\u539f\u59cb\u5b57\u8282\uff0c\u800c\u4e0d\u4f1a\u89e3\u7801\u4e3a <code>PIL.Image</code>\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"AI-Lab-Makerere/beans\", split=\"train\").cast_column(\"image\", Image(decode=False))\n&gt;&gt;&gt; dataset[0][\"image\"]\n{'bytes': None,\n 'path': '/Users/username/.cache/huggingface/datasets/downloads/extracted/772e7c1fba622cff102b85dd74bcce46e8168634df4eaade7bedd3b8d91d3cd7/train/healthy/healthy_train.265.jpg'}\n</code></pre> <p>\u89c6\u6570\u636e\u96c6\u60c5\u51b5\u4e0d\u540c\uff0c\u4f60\u53ef\u80fd\u4f1a\u5f97\u5230\u672c\u5730\u7f13\u5b58\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u6216\u8005\u76f4\u63a5\u5f97\u5230\u5b57\u8282\u5185\u5bb9\u3002</p> <p>\u4f60\u4e5f\u53ef\u4ee5\u4ece Numpy \u6570\u7ec4\u6784\u9020\u56fe\u50cf\u6570\u636e\u96c6\uff1a</p> <pre><code>&gt;&gt;&gt; ds = Dataset.from_dict({\"i\": [np.zeros(shape=(16, 16, 3), dtype=np.uint8)]}, features=Features({\"i\": Image()}))\n</code></pre> <p>\u6b64\u65f6\u6570\u7ec4\u4f1a\u7f16\u7801\u4e3a PNG\uff08\u82e5\u50cf\u7d20\u7cbe\u5ea6\u8981\u6c42\u66f4\u9ad8\u5219\u4f7f\u7528 TIFF\uff09\u3002</p> <p>\u5bf9\u4e8e RGB\u3001RGBA \u7b49\u591a\u901a\u9053\u6570\u7ec4\uff0c\u4ec5\u652f\u6301 <code>uint8</code>\uff1b\u82e5\u4f7f\u7528\u66f4\u9ad8\u7cbe\u5ea6\uff0c\u7cfb\u7edf\u4f1a\u7ed9\u51fa\u8b66\u544a\u5e76\u5c06\u6570\u7ec4\u964d\u7ea7\u4e3a <code>uint8</code>\u3002\u7070\u5ea6\u56fe\u50cf\u53ea\u8981 <code>Pillow</code> \u652f\u6301\u5373\u53ef\u4f7f\u7528\u4efb\u610f\u6574\u6570\u6216\u6d6e\u70b9\u7cbe\u5ea6\uff1b\u82e5\u7cbe\u5ea6\u8fc7\u9ad8\uff0c\u540c\u6837\u4f1a\u89e6\u53d1\u8b66\u544a\uff0c\u5e76\u5c06 <code>int64</code> \u964d\u81f3 <code>int32</code>\u3001<code>float64</code> \u964d\u81f3 <code>float32</code>\u3002</p>"},{"location":"datasets/docs/about_dataset_load/","title":"\u6784\u5efa\u4e0e\u52a0\u8f7d","text":"<p>\u51e0\u4e4e\u6240\u6709\u6df1\u5ea6\u5b66\u4e60\u6d41\u7a0b\u90fd\u4ece\u201c\u52a0\u8f7d\u6570\u636e\u96c6\u201d\u5f00\u59cb\uff0c\u56e0\u6b64\u8fd9\u662f\u6781\u4e3a\u5173\u952e\u7684\u4e00\u6b65\u3002\ud83e\udd17 Datasets \u5df2\u6536\u5f55 900+ \u4e2a\u6570\u636e\u96c6\uff0c\u52a9\u4f60\u5feb\u901f\u542f\u52a8 NLP \u7b49\u4efb\u52a1\u3002\u7b2c\u4e00\u6b65\u53ea\u9700\u8c03\u7528 [<code>load_dataset</code>]\uff1a\u8fd9\u4e2a\u51fd\u6570\u627f\u62c5\u7740\u201c\u6784\u5efa\u5e76\u52a0\u8f7d\u201d\u6bcf\u4e00\u4e2a\u6570\u636e\u96c6\u7684\u5168\u90e8\u5de5\u4f5c\u3002</p>"},{"location":"datasets/docs/about_dataset_load/#eli5load_dataset","title":"ELI5\uff1a<code>load_dataset</code>","text":"<p>\u5148\u7528\u201c\u7ed9\u4e94\u5c81\u5c0f\u5b69\u89e3\u91ca\u201d\u7684\u65b9\u5f0f\u4e86\u89e3\u4e00\u4e0b\u3002</p> <p>\u4e00\u4e2a\u6570\u636e\u96c6\u901a\u5e38\u5305\u542b\uff1a</p> <ul> <li>\u4ee5\u901a\u7528\u683c\u5f0f\u5b58\u50a8\u7684\u6570\u636e\u6587\u4ef6\uff08JSON\u3001CSV\u3001Parquet\u3001\u7eaf\u6587\u672c\u7b49\uff09\u3002</li> <li>\u540d\u4e3a <code>README.md</code> \u7684\u6570\u636e\u96c6\u5361\u7247\uff0c\u5176\u4e2d\u65e2\u6709\u6587\u6863\u8bf4\u660e\uff0c\u4e5f\u5305\u542b\u7528\u4e8e\u6807\u6ce8\u6807\u7b7e\u3001\u914d\u7f6e\u7b49\u4fe1\u606f\u7684 YAML \u5934\u3002</li> </ul> <p>[<code>load_dataset</code>] \u4f1a\u5728\u672c\u5730\u6216 Hugging Face Hub \u4e0a\u83b7\u53d6\u6240\u9700\u7684\u6570\u636e\u96c6\u3002Hub \u662f\u96c6\u4e2d\u6258\u7ba1 Hugging Face \u6a21\u578b\u4e0e\u6570\u636e\u96c6\u7684\u4ed3\u5e93\u3002</p> <p>\u82e5\u6570\u636e\u96c6\u53ea\u6709\u6570\u636e\u6587\u4ef6\uff0c[<code>load_dataset</code>] \u4f1a\u6839\u636e\u6587\u4ef6\u6269\u5c55\u540d\uff08json\u3001csv\u3001parquet\u3001txt \u7b49\uff09\u81ea\u52a8\u63a8\u65ad\u8bfb\u53d6\u65b9\u5f0f\u3002\u5e95\u5c42\u4f1a\u6309\u6587\u4ef6\u7c7b\u578b\u9009\u62e9\u9002\u914d\u7684 [<code>DatasetBuilder</code>]\uff0c\ud83e\udd17 Datasets \u9488\u5bf9\u6bcf\u79cd\u683c\u5f0f\u90fd\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684 Builder\uff1a</p> <ul> <li>\u7eaf\u6587\u672c\uff1a[<code>datasets.packaged_modules.text.Text</code>]</li> <li>CSV / TSV\uff1a[<code>datasets.packaged_modules.csv.Csv</code>]</li> <li>JSON / JSONL\uff1a[<code>datasets.packaged_modules.json.Json</code>]</li> <li>Parquet\uff1a[<code>datasets.packaged_modules.parquet.Parquet</code>]</li> <li>Arrow\uff08\u6d41\u5f0f\u6587\u4ef6\u683c\u5f0f\uff09\uff1a[<code>datasets.packaged_modules.arrow.Arrow</code>]</li> <li>SQL \u6570\u636e\u5e93\uff1a[<code>datasets.packaged_modules.sql.Sql</code>]</li> <li>\u56fe\u50cf\u6587\u4ef6\u5939\uff1a[<code>datasets.packaged_modules.imagefolder.ImageFolder</code>]</li> <li>\u97f3\u9891\u6587\u4ef6\u5939\uff1a[<code>datasets.packaged_modules.audiofolder.AudioFolder</code>]</li> </ul> <p>\u63d0\u793a</p> <p>\u8bbf\u95ee \u5206\u4eab\u6570\u636e\u96c6 \u7ae0\u8282\uff0c\u4e86\u89e3\u5982\u4f55\u5c06\u6570\u636e\u96c6\u53d1\u5e03\u5230 Hub\u3002</p> <p>\ud83e\udd17 Datasets \u4f1a\u4ece\u539f\u59cb URL \u4e0b\u8f7d\u6587\u4ef6\uff0c\u751f\u6210\u6570\u636e\u96c6\u540e\u7f13\u5b58\u4e3a\u672c\u5730 Arrow \u8868\u3002\u82e5\u4f60\u4e4b\u524d\u5df2\u4e0b\u8f7d\u8fc7\uff0c\ud83e\udd17 Datasets \u4f1a\u76f4\u63a5\u4ece\u7f13\u5b58\u52a0\u8f7d\uff0c\u4e0d\u5fc5\u91cd\u65b0\u4e0b\u8f7d\u3002</p> <p>\u5bf9\u6574\u4f53\u6d41\u7a0b\u6709\u4e86\u9ad8\u5c42\u8ba4\u8bc6\u540e\uff0c\u6211\u4eec\u518d\u6df1\u5165\u4e86\u89e3\u6784\u5efa\u7ec6\u8282\u3002</p>"},{"location":"datasets/docs/about_dataset_load/#_2","title":"\u6784\u5efa\u6570\u636e\u96c6","text":"<p>\u9996\u6b21\u52a0\u8f7d\u6570\u636e\u96c6\u65f6\uff0c\ud83e\udd17 Datasets \u4f1a\u8bfb\u53d6\u539f\u59cb\u6587\u4ef6\u5e76\u6784\u5efa\u5e26\u6709\u7c7b\u578b\u4fe1\u606f\u7684\u8868\u683c\u3002\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u7684\u6838\u5fc3\u7c7b\u662f [<code>BuilderConfig</code>] \u4e0e [<code>DatasetBuilder</code>]\u3002</p>"},{"location":"datasets/docs/about_dataset_load/#datasets-builderconfig","title":"BuilderConfig","text":"<p>[<code>BuilderConfig</code>] \u662f [<code>DatasetBuilder</code>] \u7684\u914d\u7f6e\u7c7b\uff0c\u5305\u542b\u4ee5\u4e0b\u57fa\u7840\u5c5e\u6027\uff1a</p> \u5c5e\u6027 \u8bf4\u660e <code>name</code> \u6570\u636e\u96c6\u7684\u7b80\u79f0\u3002 <code>version</code> \u6570\u636e\u96c6\u7684\u7248\u672c\u53f7\u3002 <code>data_dir</code> \u672c\u5730\u6570\u636e\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u3002 <code>data_files</code> \u672c\u5730\u6570\u636e\u6587\u4ef6\u7684\u8def\u5f84\u3002 <code>description</code> \u6570\u636e\u96c6\u8bf4\u660e\u3002 <p>\u82e5\u60f3\u6dfb\u52a0\u8bf8\u5982\u7c7b\u522b\u6807\u7b7e\u7b49\u989d\u5916\u4fe1\u606f\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5b50\u7c7b\u7ee7\u627f [<code>BuilderConfig</code>]\u3002\u7ed9\u914d\u7f6e\u8d4b\u503c\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li>\u5728\u6570\u636e\u96c6\u7684 [<code>DatasetBuilder.BUILDER_CONFIGS</code>] \u4e2d\u63d0\u4f9b [<code>BuilderConfig</code>]\uff08\u6216\u5b50\u7c7b\uff09\u5b9e\u4f8b\u5217\u8868\u3002</li> <li>\u8c03\u7528 [<code>load_dataset</code>] \u65f6\uff0c\u4f20\u5165\u9664\u65b9\u6cd5\u81ea\u8eab\u53c2\u6570\u5916\u7684\u5176\u5b83\u5173\u952e\u5b57\u53c2\u6570\uff0c\u8fd9\u4e9b\u53c2\u6570\u4f1a\u5199\u5165 [<code>BuilderConfig</code>] \u5b9e\u4f8b\u3002\u82e5\u9009\u62e9\u4e86\u5177\u4f53\u914d\u7f6e\uff0c\u4f20\u5165\u7684\u503c\u4f1a\u8986\u76d6\u9884\u5b9a\u4e49\u5c5e\u6027\u3002</li> </ul> <p>\u6b64\u5916\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 [<code>DatasetBuilder.BUILDER_CONFIG_CLASS</code>] \u6307\u5b9a\u81ea\u5b9a\u4e49\u7684 [<code>BuilderConfig</code>] \u5b50\u7c7b\u3002</p>"},{"location":"datasets/docs/about_dataset_load/#datasets-datasetbuilder","title":"DatasetBuilder","text":"<p>[<code>DatasetBuilder</code>] \u4f1a\u8bfb\u53d6 [<code>BuilderConfig</code>] \u4e2d\u7684\u5c5e\u6027\u5e76\u636e\u6b64\u6784\u5efa\u6570\u636e\u96c6\u3002</p> <p>[<code>DatasetBuilder</code>] \u4e2d\u6700\u91cd\u8981\u7684\u4e09\u4e2a\u65b9\u6cd5\u5982\u4e0b\uff1a</p> <ol> <li>[<code>DatasetBuilder._info</code>] \u8d1f\u8d23\u5b9a\u4e49\u6570\u636e\u96c6\u7684\u5143\u4fe1\u606f\u3002\u5f53\u4f60\u8bbf\u95ee <code>dataset.info</code> \u65f6\uff0c\u8fd4\u56de\u7684\u6b63\u662f\u8fd9\u91cc\u586b\u5145\u7684\u5185\u5bb9\uff0c\u540c\u65f6\u4e5f\u5728\u6b64\u5904\u6307\u5b9a [<code>Features</code>]\uff08\u5373\u5217\u540d\u4e0e\u7c7b\u578b\uff09\u3002</li> <li>[<code>DatasetBuilder._split_generator</code>] \u7528\u4e8e\u4e0b\u8f7d\u6216\u8bfb\u53d6\u6570\u636e\u6587\u4ef6\u3001\u5212\u5206\u6570\u636e\u96c6\u5e76\u4e3a\u540e\u7eed\u751f\u6210\u6d41\u7a0b\u8bbe\u7f6e\u53c2\u6570\u3002\u8be5\u65b9\u6cd5\u5305\u542b [<code>DownloadManager</code>]\uff0c\u8d1f\u8d23\u4ece\u7f51\u7edc\u6216\u672c\u5730\u62c9\u53d6\u6587\u4ef6\u3002\u5176\u5185\u90e8\u7684 [<code>DownloadManager.download_and_extract</code>] \u53ef\u4ee5\u63a5\u6536\u5355\u4e2a\u6216\u591a\u4e2a URL/\u8def\u5f84\uff0c\u5e76\u81ea\u52a8\u4e0b\u8f7d\u3001\u89e3\u538b\uff08\u652f\u6301 TAR\u3001GZIP\u3001ZIP \u7b49\uff09\u3002</li> </ol> <p>\u6587\u4ef6\u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c[<code>SplitGenerator</code>] \u4f1a\u5c06\u5176\u7ec4\u7ec7\u6210\u5404\u4e2a\u5212\u5206\u3002\u6bcf\u4e2a [<code>SplitGenerator</code>] \u8bb0\u5f55\u5212\u5206\u540d\u79f0\u548c\u4f20\u7ed9 [<code>DatasetBuilder._generate_examples</code>] \u7684\u5173\u952e\u5b57\u53c2\u6570\uff0c\u901a\u5e38\u81f3\u5c11\u5305\u542b\u6570\u636e\u6587\u4ef6\u7684\u672c\u5730\u8def\u5f84\u3002</p> <ol> <li>[<code>DatasetBuilder._generate_examples</code>] \u4f1a\u8bfb\u53d6\u5e76\u89e3\u6790\u6307\u5b9a\u5212\u5206\u7684\u6570\u636e\u6587\u4ef6\uff0c\u5e76\u6309\u7167 [<code>DatasetBuilder._info</code>] \u4e2d\u5b9a\u4e49\u7684 <code>features</code> \u4ea7\u51fa\u6837\u672c\u3002\u8be5\u65b9\u6cd5\u7684\u8f93\u5165\u6b63\u662f\u4e0a\u4e00\u65b9\u6cd5\u4f20\u5165\u7684 <code>filepath</code> \u7b49\u53c2\u6570\u3002</li> </ol> <p>\u6570\u636e\u96c6\u751f\u6210\u8fc7\u7a0b\u4f7f\u7528 Python \u751f\u6210\u5668\uff0c\u65e0\u9700\u4e00\u6b21\u6027\u5c06\u5168\u90e8\u6570\u636e\u8f7d\u5165\u5185\u5b58\uff0c\u56e0\u6b64\u53ef\u4ee5\u5904\u7406\u5927\u89c4\u6a21\u6570\u636e\u96c6\u3002\u4e0d\u8fc7\u5728\u5199\u5165\u78c1\u76d8\u524d\uff0c\u751f\u6210\u7684\u6837\u672c\u4f1a\u6682\u5b58\u5728 <code>ArrowWriter</code> \u7f13\u51b2\u533a\uff0c\u610f\u5473\u7740\u6570\u636e\u4f1a\u6309\u6279\u5199\u51fa\u3002\u5982\u679c\u5355\u4e2a\u6837\u672c\u5360\u7528\u5185\u5b58\u8f83\u5927\uff08\u5982\u56fe\u50cf\u6216\u89c6\u9891\uff09\uff0c\u5efa\u8bae\u964d\u4f4e [<code>DatasetBuilder</code>] \u4e2d <code>DEFAULT_WRITER_BATCH_SIZE</code> \u7684\u6570\u503c\uff0c\u4e00\u822c\u4e0d\u8d85\u8fc7 200 MB\u3002</p>"},{"location":"datasets/docs/about_dataset_load/#_3","title":"\u5b8c\u6574\u6027\u6821\u9a8c","text":"<p>\u4e3a\u786e\u4fdd\u4e0b\u8f7d\u7684\u6570\u636e\u5b8c\u6574\uff0c[<code>load_dataset</code>] \u4f1a\u5728\u751f\u6210\u524d\u6267\u884c\u4e00\u7cfb\u5217\u68c0\u67e5\uff0c\u907f\u514d\u9047\u5230\u6587\u4ef6\u7f3a\u5931\u7b49\u95ee\u9898\u3002\u68c0\u67e5\u5185\u5bb9\u5305\u62ec\uff1a</p> <ul> <li>\u751f\u6210\u540e\u7684 <code>DatasetDict</code> \u4e2d\u5212\u5206\u7684\u6570\u91cf\u3002</li> <li>\u6bcf\u4e2a\u5212\u5206\u4e2d\u7684\u6837\u672c\u6570\u91cf\u3002</li> <li>\u4e0b\u8f7d\u6587\u4ef6\u7684\u5217\u8868\u3002</li> <li>\u4e0b\u8f7d\u6587\u4ef6\u7684 SHA256 \u6821\u9a8c\uff08\u9ed8\u8ba4\u5173\u95ed\uff09\u3002</li> </ul> <p>\u82e5\u9a8c\u8bc1\u5931\u8d25\uff0c\u901a\u5e38\u610f\u5473\u7740\u6570\u636e\u96c6\u4f5c\u8005\u66f4\u65b0\u4e86\u539f\u59cb\u6587\u4ef6\u3002</p> <p>\u6b64\u65f6\u4f1a\u629b\u51fa\u9519\u8bef\u63d0\u793a\u6570\u636e\u96c6\u5df2\u53d1\u751f\u53d8\u66f4\u3002\u82e5\u8981\u5ffd\u7565\uff0c\u53ef\u5728 [<code>load_dataset</code>] \u4e2d\u8bbe\u7f6e <code>verification_mode=\"no_checks\"</code>\u3002\u9047\u5230\u9a8c\u8bc1\u9519\u8bef\u65f6\uff0c\u6b22\u8fce\u5728\u8be5\u6570\u636e\u96c6\u7684 \u201cCommunity\u201d \u6807\u7b7e\u9875\u53d1\u8d77\u8ba8\u8bba\u6216 PR\uff0c\u4ee5\u4fbf\u66f4\u65b0\u6821\u9a8c\u4fe1\u606f\u3002</p>"},{"location":"datasets/docs/about_dataset_load/#_4","title":"\u5b89\u5168\u6027","text":"<p>Hub \u4e0a\u7684\u6570\u636e\u96c6\u4ed3\u5e93\u4f1a\u8fdb\u884c\u6076\u610f\u8f6f\u4ef6\u626b\u63cf\uff0c\u8be6\u60c5\u89c1\u5b89\u5168\u6587\u6863\u3002</p>"},{"location":"datasets/docs/about_map_batch/","title":"\u6279\u91cf\u6620\u5c04","text":"<p>\u7ed3\u5408 [<code>Dataset.map</code>] \u4e0e\u6279\u91cf\u6a21\u5f0f\u5341\u5206\u5f3a\u5927\uff1a\u65e2\u80fd\u52a0\u901f\u5904\u7406\uff0c\u53c8\u80fd\u7075\u6d3b\u63a7\u5236\u751f\u6210\u6570\u636e\u96c6\u7684\u89c4\u6a21\u3002</p>"},{"location":"datasets/docs/about_map_batch/#_2","title":"\u901f\u5ea6\u9700\u6c42","text":"<p>\u6279\u91cf\u6620\u5c04\u7684\u9996\u8981\u76ee\u6807\u662f\u63d0\u901f\u3002\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u76f8\u6bd4\u6309\u6837\u672c\u9010\u4e2a\u5904\u7406\uff0c\u6309\u6279\u5904\u7406\u6548\u7387\u66f4\u9ad8\u3002\u4f8b\u5982 \ud83e\udd17 Tokenizers \u5e93\u5728\u5904\u7406\u6279\u91cf\u8f93\u5165\u65f6\u80fd\u5e76\u884c\u5206\u8bcd\uff0c\u4ece\u800c\u663e\u8457\u63d0\u901f\u3002</p>"},{"location":"datasets/docs/about_map_batch/#_3","title":"\u8f93\u5165\u5927\u5c0f \u2260 \u8f93\u51fa\u5927\u5c0f","text":"<p>\u501f\u52a9\u6279\u91cf\u6620\u5c04\u63a7\u5236\u8f93\u51fa\u89c4\u6a21\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8bb8\u591a\u6709\u8da3\u7684\u7528\u4f8b\u3002\u5728 How-to map \u7ae0\u8282\u4e2d\uff0c\u4f60\u4f1a\u770b\u5230\u5982\u4e0b\u793a\u4f8b\uff1a</p> <ul> <li>\u5c06\u957f\u53e5\u62c6\u6210\u591a\u4e2a\u77ed\u53e5\u3002</li> <li>\u4e3a\u6570\u636e\u96c6\u6dfb\u52a0\u989d\u5916\u7684\u6807\u8bb0\uff0c\u5b9e\u73b0\u589e\u5e7f\u3002</li> </ul> <p>\u7406\u89e3\u5176\u539f\u7406\u540e\uff0c\u4f60\u5c31\u80fd\u8bbe\u8ba1\u51fa\u66f4\u591a\u73a9\u6cd5\u3002\u5173\u952e\u70b9\u5728\u4e8e\uff1a\u6620\u5c04\u51fd\u6570\u7684\u8f93\u51fa\u6279\u6b21\u5927\u5c0f\u53ef\u4ee5\u4e0d\u540c\u4e8e\u8f93\u5165\u6279\u6b21\u3002</p> <p>\u6362\u8a00\u4e4b\uff0c\u6620\u5c04\u51fd\u6570\u53ef\u4ee5\u63a5\u6536\u5927\u5c0f\u4e3a <code>N</code> \u7684\u6279\u6b21\uff0c\u8fd4\u56de\u5927\u5c0f\u4e3a <code>M</code> \u7684\u6279\u6b21\u3002<code>M</code> \u53ef\u4ee5\u5927\u4e8e\u4e5f\u53ef\u4ee5\u5c0f\u4e8e <code>N</code>\u3002\u56e0\u6b64\u4f60\u53ef\u4ee5\u62fc\u63a5\u6837\u672c\u3001\u62c6\u5206\u6837\u672c\uff0c\u751a\u81f3\u751f\u6210\u66f4\u591a\u6837\u672c\u3002</p> <p>\u4f46\u8bf7\u8bb0\u4f4f\uff0c\u8f93\u51fa\u5b57\u5178\u4e2d\u5404\u5b57\u6bb5\u7684\u503c\u5fc5\u987b\u62e5\u6709\u76f8\u540c\u7684\u5143\u7d20\u6570\u91cf\u3002\u5426\u5219\u65e0\u6cd5\u786e\u5b9a\u6620\u5c04\u51fd\u6570\u8fd4\u56de\u7684\u6837\u672c\u6570\u3002\u867d\u7136\u4e0d\u540c\u6279\u6b21\u8fd4\u56de\u7684\u5143\u7d20\u6570\u53ef\u4ee5\u4e0d\u540c\uff0c\u4f46\u5355\u4e2a\u6279\u6b21\u5185\u5404\u5b57\u6bb5\u5fc5\u987b\u7b49\u957f\u3002</p> <p>\u4e3e\u4f8b\u6765\u8bf4\uff1a\u539f\u59cb\u6570\u636e\u96c6\u53ea\u6709 1 \u5217 3 \u884c\uff0c\u5982\u679c\u901a\u8fc7 <code>map</code> \u8fd4\u56de\u4e00\u4e2a\u62e5\u6709 6 \u884c\u7684\u65b0\u5217\uff0c\u5c31\u4f1a\u62a5\u9519\u3002\u6b64\u65f6\u4f1a\u5f97\u5230\u4e00\u4e2a 3 \u884c\u7684\u539f\u5217\u4e0e\u4e00\u4e2a 6 \u884c\u7684\u65b0\u5217\uff0c\u8868\u7ed3\u6784\u4e0d\u518d\u6709\u6548\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import Dataset\n&gt;&gt;&gt; dataset = Dataset.from_dict({\"a\": [0, 1, 2]})\n&gt;&gt;&gt; dataset.map(lambda batch: {\"b\": batch[\"a\"] * 2}, batched=True)  # \u65b0\u5217\u5305\u542b 6 \u4e2a\u5143\u7d20\n'ArrowInvalid: Column 1 named b expected length 3 but got length 6'\n</code></pre> <p>\u82e5\u60f3\u901a\u8fc7\u500d\u589e\u83b7\u5f97\u5408\u6cd5\u7ed3\u679c\uff0c\u9700\u8981\u79fb\u9664\u539f\u6709\u5217\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import Dataset\n&gt;&gt;&gt; dataset = Dataset.from_dict({\"a\": [0, 1, 2]})\n&gt;&gt;&gt; dataset_with_duplicates = dataset.map(lambda batch: {\"b\": batch[\"a\"] * 2}, remove_columns=[\"a\"], batched=True)\n&gt;&gt;&gt; len(dataset_with_duplicates)\n6\n</code></pre> <p>\u53e6\u4e00\u79cd\u505a\u6cd5\u662f\u76f4\u63a5\u8986\u76d6\u539f\u5217\u3002\u4f8b\u5982\uff0c\u4e0b\u5217\u4ee3\u7801\u901a\u8fc7\u91cd\u5199 <code>\"a\"</code> \u5217\uff0c\u4f7f\u6570\u636e\u96c6\u4e2d\u6bcf\u884c\u51fa\u73b0\u4e24\u6b21\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import Dataset\n&gt;&gt;&gt; dataset = Dataset.from_dict({\"a\": [0, 1, 2]})\n# \u7528\u91cd\u590d\u503c\u8986\u76d6\u73b0\u6709\u7684 \"a\" \u5217\n&gt;&gt;&gt; duplicated_dataset = dataset.map(\n...     lambda batch: {\"a\": [x for x in batch[\"a\"] for _ in range(2)]},\n...     batched=True\n... )\n&gt;&gt;&gt; duplicated_dataset\nDataset({\n    features: ['a'],\n    num_rows: 6\n})\n&gt;&gt;&gt; duplicated_dataset[\"a\"]\n[0, 0, 1, 1, 2, 2]\n</code></pre>"},{"location":"datasets/docs/about_mapstyle_vs_iterable/","title":"<code>Dataset</code> \u4e0e <code>IterableDataset</code> \u7684\u533a\u522b","text":"<p>\ud83e\udd17 Datasets \u4e2d\u6709\u4e24\u7c7b\u6570\u636e\u96c6\u5bf9\u8c61\uff1a[<code>Dataset</code>] \u4e0e [<code>IterableDataset</code>]\u3002\u9009\u62e9\u54ea\u4e00\u79cd\u53d6\u51b3\u4e8e\u6570\u636e\u89c4\u6a21\u3002\u4e00\u822c\u800c\u8a00\uff0c\u82e5\u6570\u636e\u91cf\u5de8\u5927\uff08\u52a8\u8f84\u6570\u767e GB\uff09\uff0c\u5177\u6709\u60f0\u6027\u52a0\u8f7d\u548c\u901f\u5ea6\u4f18\u52bf\u7684 [<code>IterableDataset</code>] \u66f4\u5408\u9002\uff1b\u5176\u4f59\u573a\u666f\u4f7f\u7528\u5e38\u89c4\u7684 [<code>Dataset</code>] \u5373\u53ef\u3002\u672c\u9875\u5c06\u6bd4\u8f83\u4e24\u8005\u7684\u5dee\u5f02\uff0c\u5e2e\u52a9\u4f60\u5224\u65ad\u8be5\u7528\u54ea\u79cd\u7c7b\u578b\u3002</p>"},{"location":"datasets/docs/about_mapstyle_vs_iterable/#_1","title":"\u4e0b\u8f7d\u4e0e\u6d41\u5f0f\u8bfb\u53d6","text":"<p>\u5e38\u89c4 [<code>Dataset</code>] \u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c\u4f8b\u5982 <code>my_dataset[0]</code>\u3002\u8fd9\u7c7b\u6570\u636e\u96c6\u4e5f\u88ab\u79f0\u4e3a \u201cmap-style\u201d \u6570\u636e\u96c6\u3002\u4f60\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u4e0b\u8f7d ImageNet-1k \u5e76\u8bfb\u53d6\u4efb\u610f\u4e00\u884c\uff1a</p> <pre><code>from datasets import load_dataset\n\nimagenet = load_dataset(\"timm/imagenet-1k-wds\", split=\"train\")  # \u4e0b\u8f7d\u5b8c\u6574\u6570\u636e\u96c6\nprint(imagenet[0])\n</code></pre> <p>\u4f46\u8fd9\u9700\u8981\u5c06\u6574\u4e2a\u6570\u636e\u96c6\u5b58\u50a8\u5728\u78c1\u76d8\u6216\u5185\u5b58\u4e2d\uff0c\u5bf9\u8d85\u5927\u6570\u636e\u96c6\u5c31\u4e0d\u73b0\u5b9e\u4e86\u3002\u4e3a\u6b64\u53ef\u4ee5\u4f7f\u7528 [<code>IterableDataset</code>]\u3002\u8fd9\u7c7b\u6570\u636e\u96c6\u901a\u8fc7 <code>for</code> \u5faa\u73af\u6309\u9700\u52a0\u8f7d\u6570\u636e\uff0c\u53ea\u4f1a\u5728\u5185\u5b58\u4e2d\u4fdd\u7559\u5f88\u5c0f\u4e00\u90e8\u5206\u6837\u672c\uff0c\u4e5f\u4e0d\u4f1a\u5728\u78c1\u76d8\u5199\u5165\u4e34\u65f6\u6587\u4ef6\u3002</p> <p>\u4f8b\u5982\uff0c\u53ef\u4ee5\u76f4\u63a5\u6d41\u5f0f\u8bfb\u53d6 ImageNet-1k\uff0c\u800c\u65e0\u9700\u5148\u4e0b\u8f7d\uff1a</p> <pre><code>from datasets import load_dataset\n\nimagenet = load_dataset(\"timm/imagenet-1k-wds\", split=\"train\", streaming=True)  # \u8fed\u4ee3\u65f6\u518d\u62c9\u53d6\u6570\u636e\nfor example in imagenet:\n    print(example)\n    break\n</code></pre> <p>\u6d41\u5f0f\u6a21\u5f0f\u53ef\u76f4\u63a5\u8bfb\u53d6\u5728\u7ebf\u6570\u636e\uff0c\u4e0d\u843d\u5730\u5230\u78c1\u76d8\u3002\u5bf9\u4e8e\u7531\u591a\u4e2a\u8d85\u5927\u5206\u7247\u7ec4\u6210\u7684\u6570\u636e\u96c6\uff08\u5982 C4 \u6216 LAION-2B\uff09\uff0c\u5c24\u5176\u9002\u7528\u3002\u66f4\u591a\u8bf4\u660e\u89c1\u6570\u636e\u96c6\u6d41\u5f0f\u6307\u5357\u3002</p> <p>\u6b64\u5916\uff0c<code>IterableDataset</code> \u7684\u201c\u60f0\u6027\u201d\u7279\u6027\u4e5f\u4f53\u73b0\u5728\u6784\u5efa\u4e0e\u5904\u7406\u9636\u6bb5\u3002</p>"},{"location":"datasets/docs/about_mapstyle_vs_iterable/#map-style-iterable","title":"\u6784\u5efa map-style \u4e0e iterable \u6570\u636e\u96c6","text":"<p><code>Dataset</code> \u53ef\u4ee5\u7531\u5217\u8868\u6216\u5b57\u5178\u521b\u5efa\uff0c\u6570\u636e\u4f1a\u6574\u4f53\u8f6c\u6362\u4e3a Arrow \u8868\uff0c\u4fbf\u4e8e\u968f\u673a\u8bbf\u95ee\uff1a</p> <pre><code>my_dataset = Dataset.from_dict({\"col_1\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]})\nprint(my_dataset[0])\n</code></pre> <p>\u76f8\u5bf9\u5730\uff0c<code>IterableDataset</code> \u9700\u8981\u4ee5\u60f0\u6027\u65b9\u5f0f\u63d0\u4f9b\u6570\u636e\uff0c\u901a\u5e38\u901a\u8fc7\u751f\u6210\u5668\u51fd\u6570\u6309\u5e8f <code>yield</code> \u6837\u672c\uff0c\u56e0\u6b64\u65e0\u6cd5\u50cf <code>Dataset</code> \u90a3\u6837\u5207\u7247\u8bbf\u95ee\uff1a</p> <pre><code>def my_generator(n):\n    for i in range(n):\n        yield {\"col_1\": i}\n\nmy_iterable_dataset = IterableDataset.from_generator(my_generator, gen_kwargs={\"n\": 10})\nfor example in my_iterable_dataset:\n    print(example)\n    break\n</code></pre>"},{"location":"datasets/docs/about_mapstyle_vs_iterable/#_2","title":"\u672c\u5730\u6587\u4ef6\u7684\u5168\u91cf\u52a0\u8f7d\u4e0e\u6e10\u8fdb\u52a0\u8f7d","text":"<p>\u53ef\u4ee5\u4f7f\u7528 [<code>load_dataset</code>] \u5c06\u672c\u5730\u6216\u8fdc\u7a0b\u6570\u636e\u6587\u4ef6\u4e00\u6b21\u6027\u8f6c\u6362\u4e3a Arrow [<code>Dataset</code>]\uff1a</p> <pre><code>data_files = {\"train\": [\"path/to/data.csv\"]}\nmy_dataset = load_dataset(\"csv\", data_files=data_files, split=\"train\")\nprint(my_dataset[0])\n</code></pre> <p>\u4e0d\u8fc7\uff0c\u8fd9\u9700\u8981\u989d\u5916\u7684\u8f6c\u6362\u6b65\u9aa4\uff0c\u6570\u636e\u96c6\u8d8a\u5927\u8017\u65f6\u548c\u78c1\u76d8\u5360\u7528\u8d8a\u591a\u3002\u4e3a\u8282\u7701\u7a7a\u95f4\uff0c\u53ef\u76f4\u63a5\u6d41\u5f0f\u8bfb\u53d6\u672c\u5730\u6587\u4ef6\uff0c\u5b9a\u4e49\u6210 <code>IterableDataset</code>\uff1a</p> <pre><code>data_files = {\"train\": [\"path/to/data.csv\"]}\nmy_iterable_dataset = load_dataset(\"csv\", data_files=data_files, split=\"train\", streaming=True)\nfor example in my_iterable_dataset:  # \u8fed\u4ee3\u65f6\u6309\u9700\u8bfb\u53d6 CSV\n    print(example)\n    break\n</code></pre> <p>\u652f\u6301\u591a\u79cd\u683c\u5f0f\uff0c\u5982 CSV\u3001JSONL\u3001Parquet\uff0c\u4ee5\u53ca\u56fe\u50cf\u4e0e\u97f3\u9891\u6587\u4ef6\u3002\u66f4\u591a\u793a\u4f8b\u8bf7\u53c2\u8003\u52a0\u8f7d\u8868\u683c\u3001\u6587\u672c\u3001\u89c6\u89c9\u4e0e\u97f3\u9891\u6570\u636e\u96c6\u7684\u6307\u5357\u3002</p>"},{"location":"datasets/docs/about_mapstyle_vs_iterable/#vs","title":"\u7acb\u5373\u5904\u7406 vs. \u60f0\u6027\u5904\u7406","text":"<p>\u5bf9 [<code>Dataset</code>] \u8c03\u7528 [<code>Dataset.map</code>] \u65f6\uff0c\u6574\u4e2a\u6570\u636e\u96c6\u4f1a\u7acb\u5373\u88ab\u5904\u7406\u5e76\u8fd4\u56de\uff0c\u7c7b\u4f3c <code>pandas</code> \u7684\u884c\u4e3a\uff1a</p> <pre><code>my_dataset = my_dataset.map(process_fn)  # process_fn \u4f1a\u5e94\u7528\u5230\u5168\u90e8\u6837\u672c\nprint(my_dataset[0])\n</code></pre> <p>\u800c <code>IterableDataset</code> \u7684\u60f0\u6027\u7279\u6027\u4f1a\u8ba9 [<code>IterableDataset.map</code>] \u5728\u8fed\u4ee3\u65f6\u624d\u6267\u884c\u6620\u5c04\u51fd\u6570\u3002\u4f60\u53ef\u4ee5\u4e32\u8054\u591a\u4e2a\u5904\u7406\u6b65\u9aa4\uff0c\u5728\u771f\u6b63\u904d\u5386\u6570\u636e\u65f6\u4e00\u6b21\u6027\u751f\u6548\uff1a</p> <pre><code>my_iterable_dataset = my_iterable_dataset.map(process_fn_1)\nmy_iterable_dataset = my_iterable_dataset.filter(filter_fn)\nmy_iterable_dataset = my_iterable_dataset.map(process_fn_2)\n\n# \u8fed\u4ee3\u65f6\u6309\u987a\u5e8f\u6267\u884c process_fn_1\u3001filter_fn\u3001process_fn_2\nfor example in my_iterable_dataset:\n    print(example)\n    break\n</code></pre>"},{"location":"datasets/docs/about_mapstyle_vs_iterable/#_3","title":"\u7cbe\u786e\u6d17\u724c\u4e0e\u5feb\u901f\u8fd1\u4f3c\u6d17\u724c","text":"<p>\u5bf9 [<code>Dataset</code>] \u8c03\u7528 [<code>Dataset.shuffle</code>] \u4f1a\u6267\u884c\u7cbe\u786e\u6d17\u724c\uff1a\u5148\u751f\u6210\u7d22\u5f15\u5217\u8868 <code>[0, 1, 2, \u2026, len(my_dataset) - 1]</code> \u5e76\u6253\u4e71\uff0c\u518d\u6839\u636e\u6620\u5c04\u7d22\u5f15\u8fd4\u56de\u5bf9\u5e94\u884c\uff1a</p> <pre><code>my_dataset = my_dataset.shuffle(seed=42)\nprint(my_dataset[0])\n</code></pre> <p><code>IterableDataset</code> \u6ca1\u6709\u968f\u673a\u8bbf\u95ee\u80fd\u529b\uff0c\u65e0\u6cd5\u901a\u8fc7\u7d22\u5f15\u6620\u5c04\u5b9e\u73b0\u7cbe\u786e\u6d17\u724c\uff0c\u56e0\u6b64\u91c7\u7528\u5feb\u901f\u8fd1\u4f3c\u65b9\u6848 [<code>IterableDataset.shuffle</code>]\u3002\u5b83\u4f1a\u7ef4\u62a4\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u4ece\u4e2d\u8fed\u4ee3\u62bd\u53d6\u968f\u673a\u6837\u672c\uff0c\u540c\u65f6\u4fdd\u6301\u9ad8\u541e\u5410\uff1a</p> <pre><code>my_iterable_dataset = my_iterable_dataset.shuffle(seed=42, buffer_size=100)\nfor example in my_iterable_dataset:\n    print(example)\n    break\n</code></pre> <p>\u4e3a\u4e86\u4fdd\u8bc1\u8bad\u7ec3\u6548\u679c\uff0c[<code>IterableDataset.shuffle</code>] \u8fd8\u4f1a\u5728\u6570\u636e\u96c6\u7531\u591a\u4e2a\u6587\u4ef6\u6216\u6765\u6e90\u7ec4\u6210\u65f6\u6253\u4e71\u5206\u7247\u987a\u5e8f\uff1a</p> <pre><code># \u5728\u7ebf\u6d41\u5f0f\nmy_iterable_dataset = load_dataset(\"deepmind/code_contests\", split=\"train\", streaming=True)\nmy_iterable_dataset.num_shards  # 39\n\n# \u672c\u5730\u6587\u4ef6\ndata_files = {\"train\": [f\"path/to/data_{i}.csv\" for i in range(1024)]}\nmy_iterable_dataset = load_dataset(\"csv\", data_files=data_files, split=\"train\", streaming=True)\nmy_iterable_dataset.num_shards  # 1024\n\n# \u751f\u6210\u5668\ndef my_generator(n, sources):\n    for source in sources:\n        for example_id_for_current_source in range(n):\n            yield {\"example_id\": f\\\"{source}_{example_id_for_current_source}\\\"}\n\ngen_kwargs = {\"n\": 10, \"sources\": [f\"path/to/data_{i}\" for i in range(1024)]}\nmy_iterable_dataset = IterableDataset.from_generator(my_generator, gen_kwargs=gen_kwargs)\nmy_iterable_dataset.num_shards  # 1024\n</code></pre>"},{"location":"datasets/docs/about_mapstyle_vs_iterable/#_4","title":"\u6027\u80fd\u5dee\u5f02","text":"<p>\u5e38\u89c4 [<code>Dataset</code>] \u57fa\u4e8e Arrow\uff0c\u53ef\u5feb\u901f\u968f\u673a\u8bbf\u95ee\u884c\u6570\u636e\u3002\u5f97\u76ca\u4e8e\u5185\u5b58\u6620\u5c04\u548c Arrow \u7684\u5185\u5b58\u683c\u5f0f\uff0c\u8bfb\u53d6\u78c1\u76d8\u6570\u636e\u65f6\u65e0\u9700\u6602\u8d35\u7684\u7cfb\u7edf\u8c03\u7528\u6216\u53cd\u5e8f\u5217\u5316\uff0c\u6309\u6279\u904d\u5386\u65f6\u4e5f\u80fd\u5145\u5206\u5229\u7528\u8fde\u7eed\u7684\u8bb0\u5f55\u5757\u3002</p> <p>\u4f46\u4e00\u65e6\u6570\u636e\u96c6\u62e5\u6709\u7d22\u5f15\u6620\u5c04\uff08\u4f8b\u5982\u8c03\u7528\u8fc7 [<code>Dataset.shuffle</code>]\uff09\uff0c\u8bbf\u95ee\u901f\u5ea6\u53ef\u80fd\u4f1a\u964d\u81f3\u539f\u6765\u7684 1/10\u3002\u8fd9\u662f\u56e0\u4e3a\u9700\u8981\u989d\u5916\u4f9d\u636e\u6620\u5c04\u8ba1\u7b97\u884c\u53f7\uff0c\u800c\u4e14\u6570\u636e\u4e0d\u518d\u8fde\u7eed\u3002\u8981\u6062\u590d\u901f\u5ea6\uff0c\u9700\u8981\u4f7f\u7528 [<code>Dataset.flatten_indices</code>] \u5c06\u6570\u636e\u96c6\u91cd\u65b0\u5199\u6210\u8fde\u7eed\u5757\uff0c\u4e0d\u8fc7\u8fd9\u53ef\u80fd\u8f83\u8017\u65f6\uff1a</p> <pre><code>my_dataset[0]  # \u5feb\u901f\nmy_dataset = my_dataset.shuffle(seed=42)\nmy_dataset[0]  # \u53ef\u80fd\u6162 10 \u500d\nmy_dataset = my_dataset.flatten_indices()  # \u5c06\u6253\u4e71\u540e\u7684\u6570\u636e\u91cd\u65b0\u5199\u4e3a\u8fde\u7eed\u5757\nmy_dataset[0]  # \u518d\u6b21\u5feb\u901f\n</code></pre> <p>\u6b64\u65f6\u63a8\u8350\u6539\u7528 [<code>IterableDataset</code>]\uff0c\u5e76\u5229\u7528\u5176\u5feb\u901f\u8fd1\u4f3c\u6d17\u724c [<code>IterableDataset.shuffle</code>]\u3002\u5b83\u4ec5\u6253\u4e71\u5206\u7247\u987a\u5e8f\u5e76\u6dfb\u52a0\u7f13\u51b2\uff0c\u80fd\u4fdd\u6301\u6700\u4f73\u901f\u5ea6\uff0c\u4e5f\u65b9\u4fbf\u91cd\u65b0\u6d17\u724c\uff1a</p> <pre><code>for example in enumerate(my_iterable_dataset):  # \u5feb\u901f\n    pass\n\nshuffled_iterable_dataset = my_iterable_dataset.shuffle(seed=42, buffer_size=100)\n\nfor example in enumerate(shuffled_iterable_dataset):  # \u4ecd\u7136\u5feb\u901f\n    pass\n\nshuffled_iterable_dataset = my_iterable_dataset.shuffle(seed=1337, buffer_size=100)  # \u66f4\u6362\u79cd\u5b50\u5373\u65f6\u751f\u6548\n\nfor example in enumerate(shuffled_iterable_dataset):  # \u4f9d\u65e7\u5feb\u901f\n    pass\n</code></pre> <p>\u82e5\u9700\u8981\u591a\u8f6e\uff08epoch\uff09\u8fed\u4ee3\uff0c\u5b9e\u9645\u7528\u4e8e\u6253\u4e71\u5206\u7247\u987a\u5e8f\u7684\u79cd\u5b50\u4e3a <code>seed + epoch</code>\uff0c\u65b9\u4fbf\u5728\u4e0d\u540c epoch \u95f4\u91cd\u65b0\u6d17\u724c\uff1a</p> <pre><code>for epoch in range(n_epochs):\n    my_iterable_dataset.set_epoch(epoch)\n    for example in my_iterable_dataset:  # \u6bcf\u4e2a epoch \u90fd\u4f7f\u7528 effective_seed = seed + epoch\n        pass\n</code></pre> <p>\u8981\u91cd\u65b0\u5f00\u59cb\u904d\u5386 map-style \u6570\u636e\u96c6\uff0c\u53ef\u8df3\u8fc7\u90e8\u5206\u6837\u672c\uff1a</p> <pre><code>my_dataset = my_dataset.select(range(start_index, len(dataset)))\n</code></pre> <p>\u5982\u679c\u4f60\u7ed3\u5408 <code>DataLoader</code> \u4e0e\u81ea\u5b9a\u4e49 <code>Sampler</code>\uff0c\u66f4\u63a8\u8350\u4fdd\u5b58\u91c7\u6837\u5668\u72b6\u6001\u4ee5\u4fbf\u6062\u590d\u3002</p> <p>\u5bf9\u4e8e iterable \u6570\u636e\u96c6\uff0c\u867d\u7136\u65e0\u6cd5\u6309\u7d22\u5f15\u56de\u5230\u7279\u5b9a\u6837\u672c\uff0c\u4f46\u53ef\u4ee5\u50cf\u6a21\u578b\u6216\u4f18\u5316\u5668\u4e00\u6837\u4f7f\u7528 [<code>IterableDataset.state_dict</code>] \u4e0e [<code>IterableDataset.load_state_dict</code>] \u4ece\u68c0\u67e5\u70b9\u6062\u590d\uff1a</p> <pre><code>&gt;&gt;&gt; iterable_dataset = Dataset.from_dict({\"a\": range(6)}).to_iterable_dataset(num_shards=3)\n&gt;&gt;&gt; # \u5728\u8bad\u7ec3\u4e2d\u9014\u4fdd\u5b58\n&gt;&gt;&gt; state_dict = iterable_dataset.state_dict()\n&gt;&gt;&gt; # \u4e4b\u540e\u6062\u590d\n&gt;&gt;&gt; iterable_dataset.load_state_dict(state_dict)\n</code></pre> <p>\u5e95\u5c42\u4f1a\u8bb0\u5f55\u5f53\u524d\u5206\u7247\u53ca\u5176\u5185\u90e8\u7d22\u5f15\u3002\u6062\u590d\u65f6\uff0c\u6570\u636e\u96c6\u4f1a\u8df3\u8fc7\u5df2\u8bfb\u53d6\u7684\u5206\u7247\uff0c\u518d\u4ece\u5f53\u524d\u5206\u7247\u5f00\u5934\u8bfb\u53d6\u5e76\u8df3\u8fc7\u6837\u672c\uff0c\u76f4\u5230\u5230\u8fbe\u68c0\u67e5\u70b9\u4f4d\u7f6e\u3002\u6574\u4f53\u6062\u590d\u901f\u5ea6\u5f88\u5feb\uff0c\u4f46\u82e5\u5206\u7247\u8f83\u5927\uff0c\u4ecd\u9700\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4\u3002</p> <p>\u4f60\u4e5f\u53ef\u4ee5\u914d\u5408 <code>torchdata</code> \u4e2d\u7684 <code>StatefulDataLoader</code> \u4f7f\u7528\uff0c\u8be6\u89c1\u4e0e PyTorch DataLoader \u7684\u6d41\u5f0f\u5bf9\u63a5\u3002</p>"},{"location":"datasets/docs/about_mapstyle_vs_iterable/#map-style-iterable_1","title":"\u4ece map-style \u5207\u6362\u5230 iterable","text":"<p>\u5982\u679c\u60f3\u5229\u7528 [<code>IterableDataset</code>] \u7684\u60f0\u6027\u7279\u6027\u6216\u901f\u5ea6\u4f18\u52bf\uff0c\u53ef\u4ee5\u5c06 map-style [<code>Dataset</code>] \u8f6c\u6362\u4e3a [<code>IterableDataset</code>]\uff1a</p> <pre><code>my_iterable_dataset = my_dataset.to_iterable_dataset()\n</code></pre> <p>\u82e5\u9700\u8981\u6d17\u724c\u6216\u7ed3\u5408 PyTorch DataLoader\uff0c\u5efa\u8bae\u751f\u6210\u5177\u5907\u5206\u7247\u7684 [<code>IterableDataset</code>]\uff1a</p> <pre><code>my_iterable_dataset = my_dataset.to_iterable_dataset(num_shards=1024)\nmy_iterable_dataset.num_shards  # 1024\n</code></pre>"},{"location":"datasets/docs/access/","title":"\u4e86\u89e3\u4f60\u7684\u6570\u636e\u96c6","text":"<p>\ud83e\udd17 Datasets \u63d0\u4f9b\u4e24\u79cd\u6570\u636e\u96c6\u5bf9\u8c61\uff1a\u5e38\u89c4 [<code>Dataset</code>] \u4e0e \u2728 [<code>IterableDataset</code>] \u2728\u3002<code>Dataset</code> \u652f\u6301\u5feb\u901f\u968f\u673a\u8bbf\u95ee\u884c\u6570\u636e\uff0c\u5e76\u901a\u8fc7\u5185\u5b58\u6620\u5c04\u8ba9\u5927\u578b\u6570\u636e\u96c6\u7684\u5185\u5b58\u5360\u7528\u4fdd\u6301\u53ef\u63a7\uff1b\u82e5\u6570\u636e\u5927\u5230\u65e0\u6cd5\u5b8c\u6574\u4e0b\u8f7d\u5230\u672c\u5730\u6216\u5185\u5b58\u4e2d\uff0c<code>IterableDataset</code> \u5219\u5141\u8bb8\u4f60\u5728\u4e0b\u8f7d\u8fc7\u7a0b\u4e2d\u7acb\u5373\u6d88\u8d39\u6570\u636e\u3002</p> <p>\u672c\u6559\u7a0b\u5c06\u6f14\u793a\u5982\u4f55\u52a0\u8f7d\u5e76\u8bbf\u95ee\u8fd9\u4e24\u79cd\u7c7b\u578b\u7684\u6570\u636e\u96c6\u3002</p>"},{"location":"datasets/docs/access/#dataset","title":"Dataset","text":"<p>\u52a0\u8f7d\u67d0\u4e2a\u5212\u5206\u65f6\u4f1a\u5f97\u5230 [<code>Dataset</code>] \u5bf9\u8c61\u3002\u638c\u63e1\u5176\u64cd\u4f5c\u65b9\u5f0f\u975e\u5e38\u91cd\u8981\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u5bf9 <code>Dataset</code> \u505a\u5f88\u591a\u4e8b\u3002</p> <p>\u6211\u4eec\u4ee5 rotten_tomatoes \u6570\u636e\u96c6\u4e3a\u4f8b\uff0c\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u5176\u4ed6\u6570\u636e\u96c6\u8ddf\u7740\u7ec3\u4e60\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"cornell-movie-review-data/rotten_tomatoes\", split=\"train\")\n</code></pre>"},{"location":"datasets/docs/access/#_2","title":"\u7d22\u5f15","text":"<p>[<code>Dataset</code>] \u7531\u591a\u5217\u7ec4\u6210\uff0c\u4e0d\u540c\u5217\u53ef\u4ee5\u6709\u4e0d\u540c\u7c7b\u578b\u3002\u7d22\u5f15\uff08\u6216\u8f74\u6807\u7b7e\uff09\u53ef\u7528\u4e8e\u8bbf\u95ee\u6570\u636e\u96c6\u4e2d\u7684\u6837\u672c\u3002\u4f8b\u5982\uff0c\u6309\u884c\u7d22\u5f15\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u8868\u793a\u5355\u6761\u6837\u672c\uff1a</p> <pre><code># \u53d6\u7b2c\u4e00\u884c\n&gt;&gt;&gt; dataset[0]\n{'label': 1,\n 'text': 'the rock is destined to be the 21st century\\'s new \" conan \" and that he\\'s going to make a splash even greater than arnold schwarzenegger , jean-claud van damme or steven segal .'}\n</code></pre> <p>\u4f7f\u7528\u8d1f\u7d22\u5f15\u53ef\u4ee5\u4ece\u6570\u636e\u96c6\u672b\u5c3e\u5f00\u59cb\uff1a</p> <pre><code># \u53d6\u6700\u540e\u4e00\u884c\n&gt;&gt;&gt; dataset[-1]\n{'label': 0,\n 'text': 'things really get weird , though not particularly scary : the movie is all portent and no content .'}\n</code></pre> <p>\u6309\u5217\u540d\u7d22\u5f15\u4f1a\u8fd4\u56de\u8be5\u5217\u7684\u6240\u6709\u503c\u5217\u8868\uff1a</p> <pre><code>&gt;&gt;&gt; dataset[\"text\"]\n['the rock is destined to be the 21st century\\'s new \" conan \" and that he\\'s going to make a splash even greater than arnold schwarzenegger , jean-claud van damme or steven segal .',\n 'the gorgeously elaborate continuation of \" the lord of the rings \" trilogy is so huge that a column of words cannot adequately describe co-writer/director peter jackson\\'s expanded vision of j . r . r . tolkien\\'s middle-earth .',\n 'effective but too-tepid biopic',\n ...,\n 'things really get weird , though not particularly scary : the movie is all portent and no content .']\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u7ec4\u5408\u884c\u7d22\u5f15\u4e0e\u5217\u540d\u7d22\u5f15\u6765\u8fd4\u56de\u7279\u5b9a\u4f4d\u7f6e\u7684\u503c\uff1a</p> <pre><code>&gt;&gt;&gt; dataset[0][\"text\"]\n'the rock is destined to be the 21st century\\'s new \" conan \" and that he\\'s going to make a splash even greater than arnold schwarzenegger , jean-claud van damme or steven segal .'\n</code></pre> <p>\u7d22\u5f15\u987a\u5e8f\u5e76\u4e0d\u91cd\u8981\u3002\u5148\u6309\u5217\u540d\u7d22\u5f15\u4f1a\u5f97\u5230 [<code>Column</code>] \u5bf9\u8c61\uff0c\u518d\u6309\u884c\u7d22\u5f15\u5373\u53ef\uff1a</p> <pre><code>&gt;&gt;&gt; import time\n\n&gt;&gt;&gt; start_time = time.time()\n&gt;&gt;&gt; text = dataset[0][\"text\"]\n&gt;&gt;&gt; end_time = time.time()\n&gt;&gt;&gt; print(f\"Elapsed time: {end_time - start_time:.4f} seconds\")\nElapsed time: 0.0031 seconds\n\n&gt;&gt;&gt; start_time = time.time()\n&gt;&gt;&gt; text = dataset[\"text\"][0]\n&gt;&gt;&gt; end_time = time.time()\n&gt;&gt;&gt; print(f\"Elapsed time: {end_time - start_time:.4f} seconds\")\nElapsed time: 0.0042 seconds\n</code></pre>"},{"location":"datasets/docs/access/#_3","title":"\u5207\u7247","text":"<p>\u5207\u7247\u8fd4\u56de\u6570\u636e\u96c6\u7684\u5b50\u96c6\uff0c\u4fbf\u4e8e\u4e00\u6b21\u67e5\u770b\u591a\u884c\u3002\u4f7f\u7528 <code>:</code> \u6307\u5b9a\u8303\u56f4\u5373\u53ef\uff1a</p> <pre><code># \u524d\u4e09\u884c\n&gt;&gt;&gt; dataset[:3]\n{'label': [1, 1, 1],\n 'text': ['the rock is destined to be the 21st century\\'s new \" conan \" and that he\\'s going to make a splash even greater than arnold schwarzenegger , jean-claud van damme or steven segal .',\n  'the gorgeously elaborate continuation of \" the lord of the rings \" trilogy is so huge that a column of words cannot adequately describe co-writer/director peter jackson\\'s expanded vision of j . r . r . tolkien\\'s middle-earth .',\n  'effective but too-tepid biopic']}\n\n# \u7b2c 3~5 \u884c\n&gt;&gt;&gt; dataset[3:6]\n{'label': [1, 1, 1],\n 'text': ['if you sometimes like to go to the movies to have fun , wasabi is a good place to start .',\n  \"emerges as something rare , an issue movie that's so honest and keenly observed that it doesn't feel like one .\",\n  'the film provides some great insight into the neurotic mindset of all comics -- even those who have reached the absolute top of the game .']}\n</code></pre>"},{"location":"datasets/docs/access/#iterabledataset","title":"IterableDataset","text":"<p>\u5728 [<code>~datasets.load_dataset</code>] \u4e2d\u5c06 <code>streaming=True</code>\uff0c\u5373\u53ef\u52a0\u8f7d [<code>IterableDataset</code>]\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; iterable_dataset = load_dataset(\"ethz/food101\", split=\"train\", streaming=True)\n&gt;&gt;&gt; for example in iterable_dataset:\n...     print(example)\n...     break\n{'image': &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=384x512 at 0x7F0681F5C520&gt;, 'label': 6}\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u4ece\u5df2\u6709\u7684 [<code>Dataset</code>] \u521b\u5efa [<code>IterableDataset</code>]\uff0c\u6b64\u65f6\u4f1a\u76f4\u63a5\u4f7f\u7528\u672c\u5730\u7f13\u5b58\uff0c\u901f\u5ea6\u6bd4\u6d41\u5f0f\u6a21\u5f0f\u66f4\u5feb\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"cornell-movie-review-data/rotten_tomatoes\", split=\"train\")\n&gt;&gt;&gt; iterable_dataset = dataset.to_iterable_dataset()\n</code></pre> <p>[<code>IterableDataset</code>] \u4f1a\u9010\u4e2a\u6837\u672c\u5730\u8fed\u4ee3\u6570\u636e\u96c6\uff0c\u56e0\u6b64\u65e0\u9700\u7b49\u5f85\u5b8c\u6574\u4e0b\u8f7d\u5373\u53ef\u5f00\u59cb\u4f7f\u7528\uff0c\u5bf9\u8d85\u5927\u6570\u636e\u96c6\u5c24\u4e3a\u5b9e\u7528\u3002</p>"},{"location":"datasets/docs/access/#_4","title":"\u7d22\u5f15","text":"<p>[<code>IterableDataset</code>] \u7684\u884c\u4e3a\u4e0d\u540c\u4e8e\u5e38\u89c4 [<code>Dataset</code>]\uff1a\u5b83\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee\uff0c\u800c\u662f\u901a\u8fc7 <code>next(iter())</code> \u6216 <code>for</code> \u5faa\u73af\u6309\u5e8f\u8fd4\u56de\u6837\u672c\uff1a</p> <pre><code>&gt;&gt;&gt; next(iter(iterable_dataset))\n{'image': &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=384x512 at 0x7F0681F59B50&gt;,\n 'label': 6}\n\n&gt;&gt;&gt; for example in iterable_dataset:\n...     print(example)\n...     break\n{'image': &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=384x512 at 0x7F7479DE82B0&gt;, 'label': 6}\n</code></pre> <p>\u4e0d\u8fc7\u5b83\u4ecd\u652f\u6301\u6309\u5217\u7d22\u5f15\uff0c\u8fd4\u56de\u8be5\u5217\u503c\u7684\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff1a</p> <pre><code>&gt;&gt;&gt; next(iter(iterable_dataset[\"label\"]))\n6\n</code></pre>"},{"location":"datasets/docs/access/#_5","title":"\u521b\u5efa\u5b50\u96c6","text":"<p>\u4f7f\u7528 [<code>IterableDataset.take</code>] \u53ef\u4ee5\u8fd4\u56de\u7279\u5b9a\u6570\u91cf\u6837\u672c\u7ec4\u6210\u7684\u5b50\u96c6\uff1a</p> <pre><code># \u53d6\u524d\u4e09\u4e2a\u6837\u672c\n&gt;&gt;&gt; list(iterable_dataset.take(3))\n[{'image': &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=384x512 at 0x7F7479DEE9D0&gt;,\n  'label': 6},\n {'image': &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=512x512 at 0x7F7479DE8190&gt;,\n  'label': 6},\n {'image': &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=512x383 at 0x7F7479DE8310&gt;,\n  'label': 6}]\n</code></pre> <p>\u4e0e\u5207\u7247\u4e0d\u540c\uff0c[<code>IterableDataset.take</code>] \u4f1a\u8fd4\u56de\u4e00\u4e2a\u5168\u65b0\u7684 [<code>IterableDataset</code>]\u3002</p>"},{"location":"datasets/docs/access/#_6","title":"\u63a5\u4e0b\u6765\uff1f","text":"<p>\u60f3\u8981\u66f4\u6df1\u5165\u4e86\u89e3\u4e24\u79cd\u6570\u636e\u96c6\u7684\u5dee\u5f02\uff0c\u8bf7\u9605\u8bfb\u300a<code>Dataset</code> \u4e0e <code>IterableDataset</code> \u7684\u533a\u522b\u300b\u3002</p> <p>\u82e5\u5e0c\u671b\u4eb2\u624b\u5b9e\u8df5\u6570\u636e\u9884\u5904\u7406\uff0c\u53ef\u67e5\u770b Process \u6307\u5357\u5b66\u4e60\u5982\u4f55\u5904\u7406 [<code>Dataset</code>]\uff0c\u6216\u9605\u8bfb Stream \u6307\u5357\u638c\u63e1 [<code>IterableDataset</code>] \u7684\u9884\u5904\u7406\u65b9\u6cd5\u3002</p>"},{"location":"datasets/docs/audio_dataset/","title":"\u521b\u5efa\u97f3\u9891\u6570\u636e\u96c6","text":"<p>\u4f60\u53ef\u4ee5\u5728 Hugging Face Hub \u4e0a\u521b\u5efa\u6570\u636e\u96c6\u4ed3\u5e93\uff0c\u4e0e\u56e2\u961f\u6216\u793e\u533a\u5171\u4eab\u97f3\u9891\u6570\u636e\u96c6\uff1a</p> <pre><code>from datasets import load_dataset\n\ndataset = load_dataset(\"&lt;username&gt;/my_dataset\")\n</code></pre> <p>\u6784\u5efa\u5e76\u5206\u4eab\u97f3\u9891\u6570\u636e\u96c6\u5e38\u7528\u7684\u51e0\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li>\u4f7f\u7528\u672c\u5730\u6587\u4ef6\u5e76\u501f\u52a9 [<code>Dataset.push_to_hub</code>] \u4e0a\u4f20\u3002\u8fd9\u5728 Python \u4e2d\u53ea\u9700\u51e0\u4e2a\u6b65\u9aa4\u3002</li> <li>\u4f7f\u7528 <code>AudioFolder</code> \u6784\u5efa\u5668\u521b\u5efa\u97f3\u9891\u6570\u636e\u96c6\u3002\u65e0\u9700\u7f16\u5199\u4ee3\u7801\uff0c\u9002\u5408\u5feb\u901f\u5904\u7406\u6210\u5343\u4e0a\u4e07\u6761\u97f3\u9891\u3002</li> </ul> <p>\u63d0\u793a</p> <p>\u4f60\u53ef\u4ee5\u5728\u542f\u7528\u8bbf\u95ee\u63a7\u5236\u524d\u5148\u6536\u96c6\u7528\u6237\u7684\u8054\u7cfb\u65b9\u5f0f\u3002\u53c2\u8003 Gated datasets \u6307\u5357\u4e86\u89e3\u5982\u4f55\u5728 Hub \u4e0a\u5f00\u542f\u8be5\u529f\u80fd\u3002</p>"},{"location":"datasets/docs/audio_dataset/#_2","title":"\u672c\u5730\u6587\u4ef6","text":"<p>\u53ef\u901a\u8fc7\u97f3\u9891\u6587\u4ef6\u7684\u8def\u5f84\u52a0\u8f7d\u81ea\u6709\u6570\u636e\u96c6\u3002\u501f\u52a9 [<code>~Dataset.cast_column</code>] \u5c06\u5b58\u653e\u8def\u5f84\u7684\u5217\u8f6c\u6362\u4e3a [<code>Audio</code>] \u7279\u5f81\uff1a</p> <pre><code>&gt;&gt;&gt; audio_dataset = Dataset.from_dict({\"audio\": [\"path/to/audio_1\", \"path/to/audio_2\", ..., \"path/to/audio_n\"]}).cast_column(\"audio\", Audio())\n&gt;&gt;&gt; audio_dataset[0][\"audio\"]\n&lt;datasets.features._torchcodec.AudioDecoder object at 0x11642b6a0&gt;\n</code></pre> <p>\u7136\u540e\u8c03\u7528 [<code>Dataset.push_to_hub</code>] \u5c06\u6570\u636e\u96c6\u4e0a\u4f20\u81f3 Hugging Face Hub\uff1a</p> <pre><code>audio_dataset.push_to_hub(\"&lt;username&gt;/my_dataset\")\n</code></pre> <p>\u8fd9\u4f1a\u521b\u5efa\u5982\u4e0b\u7ed3\u6784\u7684\u6570\u636e\u96c6\u4ed3\u5e93\uff1a</p> <pre><code>my_dataset/\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 data/\n    \u2514\u2500\u2500 train-00000-of-00001.parquet\n</code></pre>"},{"location":"datasets/docs/audio_dataset/#audiofolder","title":"AudioFolder","text":"<p><code>AudioFolder</code> \u662f\u4e13\u4e3a\u5feb\u901f\u52a0\u8f7d\u5927\u89c4\u6a21\u97f3\u9891\u6570\u636e\u96c6\u800c\u8bbe\u8ba1\u7684\u6784\u5efa\u5668\uff0c\u65e0\u9700\u5199\u4ee3\u7801\u3002</p> <p>\u63d0\u793a</p> <p>\u8bbf\u95ee\u62c6\u5206\u6a21\u5f0f\u5c42\u7ea7\u4e86\u89e3 <code>AudioFolder</code> \u5982\u4f55\u4f9d\u636e\u76ee\u5f55\u5c42\u7ea7\u81ea\u52a8\u521b\u5efa\u6570\u636e\u96c6\u62c6\u5206\u3002</p> <p><code>AudioFolder</code> \u4f1a\u6839\u636e\u76ee\u5f55\u540d\u81ea\u52a8\u63a8\u65ad\u7c7b\u522b\u6807\u7b7e\u3002\u8bf7\u6309\u4ee5\u4e0b\u7ed3\u6784\u5b58\u653e\u6570\u636e\uff1a</p> <pre><code>folder/train/dog/golden_retriever.mp3\nfolder/train/dog/german_shepherd.mp3\nfolder/train/dog/chihuahua.mp3\n\nfolder/train/cat/maine_coon.mp3\nfolder/train/cat/bengal.mp3\nfolder/train/cat/birman.mp3\n</code></pre> <p>\u82e5\u76ee\u5f55\u7b26\u5408 <code>AudioFolder</code> \u7ea6\u5b9a\uff0c\u53ef\u76f4\u63a5\u901a\u8fc7 [<code>load_dataset</code>] \u52a0\u8f7d\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"username/dataset_name\")\n</code></pre> <p>\u7b49\u4ef7\u4e8e\u624b\u52a8\u4f20\u5165 <code>audiofolder</code> \u4ee5\u53ca\u6570\u636e\u76ee\u5f55\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"audiofolder\", data_dir=\"/path/to/folder\")\n</code></pre> <p>\u82e5\u6570\u636e\u96c6\u4e2d\u5305\u542b\u591a\u4e2a\u5212\u5206\uff0c\u53ef\u6309\u4ee5\u4e0b\u7ed3\u6784\u7ec4\u7ec7\uff1a</p> <pre><code>folder/train/dog/golden_retriever.mp3\nfolder/train/cat/maine_coon.mp3\nfolder/test/dog/german_shepherd.mp3\nfolder/test/cat/bengal.mp3\n</code></pre> <p>\u6ce8\u610f</p> <p>\u5982\u679c\u6240\u6709\u97f3\u9891\u90fd\u5728\u540c\u4e00\u76ee\u5f55\u6216\u5c42\u7ea7\u4e0d\u4e00\u81f4\uff0c\u5c06\u4e0d\u4f1a\u81ea\u52a8\u751f\u6210 <code>label</code> \u5217\u3002\u5982\u9700\u6807\u7b7e\uff0c\u8bf7\u663e\u5f0f\u8bbe\u7f6e <code>drop_labels=False</code>\u3002</p> <p>\u82e5\u60f3\u8865\u5145\u6587\u672c\u63cf\u8ff0\u3001\u8fb9\u754c\u6846\u7b49\u989d\u5916\u4fe1\u606f\uff0c\u53ef\u5728\u76ee\u5f55\u4e2d\u6dfb\u52a0 <code>metadata.csv</code>\u3002\u8fd9\u6709\u52a9\u4e8e\u5feb\u901f\u6784\u5efa\u5b57\u5e55\u3001\u76ee\u6807\u68c0\u6d4b\u7b49\u4efb\u52a1\u7684\u6570\u636e\u96c6\u3002\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>metadata.jsonl</code> \u6216 <code>metadata.parquet</code>\u3002</p> <pre><code>folder/train/metadata.csv\nfolder/train/0001.mp3\nfolder/train/0002.mp3\nfolder/train/0003.mp3\n</code></pre> <p>\u97f3\u9891\u53ef\u653e\u5165\u538b\u7f29\u5305\u4e2d\uff0c\u6bcf\u4e2a\u538b\u7f29\u5305\u9700\u540c\u65f6\u5305\u542b\u97f3\u9891\u4e0e\u5143\u6570\u636e\u6587\u4ef6\uff1a</p> <pre><code>folder/train.zip\nfolder/test.zip\nfolder/validation.zip\n</code></pre> <p><code>metadata.csv</code> \u4e2d\u5fc5\u987b\u5305\u542b <code>file_name</code> \u6216 <code>*_file_name</code> \u5b57\u6bb5\uff0c\u7528\u4e8e\u5c06\u97f3\u9891\u4e0e\u5143\u6570\u636e\u5173\u8054\uff1a</p> <pre><code>file_name,additional_feature\n0001.mp3,This is a first value of a text feature you added to your audio files\n0002.mp3,This is a second value of a text feature you added to your audio files\n0003.mp3,This is a third value of a text feature you added to your audio files\n</code></pre> <p>\u6216\u4f7f\u7528 <code>metadata.jsonl</code>\uff1a</p> <pre><code>{\"file_name\": \"0001.mp3\", \"additional_feature\": \"This is a first value of a text feature you added to your audio files\"}\n{\"file_name\": \"0002.mp3\", \"additional_feature\": \"This is a second value of a text feature you added to your audio files\"}\n{\"file_name\": \"0003.mp3\", \"additional_feature\": \"This is a third value of a text feature you added to your audio files\"}\n</code></pre> <p>\u5176\u4e2d <code>file_name</code> \u9700\u4e3a\u4e0e\u5143\u6570\u636e\u6587\u4ef6\u540c\u76ee\u5f55\u4e0b\u97f3\u9891\u6587\u4ef6\u7684\u540d\u79f0\uff0c\u6216\u76f8\u5bf9\u4e8e\u5143\u6570\u636e\u6240\u5728\u76ee\u5f55\u7684\u8def\u5f84\u3002</p> <p>\u82e5\u6bcf\u6761\u6837\u672c\u5305\u542b\u591a\u4e2a\u97f3\u9891\uff08\u5982\u8f93\u5165\u8f93\u51fa\u5747\u4e3a\u97f3\u9891\uff09\uff0c\u53ef\u4ee5\u5728\u4e00\u884c\u4e2d\u6307\u5b9a\u591a\u4e2a\u6587\u4ef6\uff1a</p> <pre><code>{\"input_file_name\": \"0001.mp3\", \"output_file_name\": \"0001_output.mp3\"}\n{\"input_file_name\": \"0002.mp3\", \"output_file_name\": \"0002_output.mp3\"}\n{\"input_file_name\": \"0003.mp3\", \"output_file_name\": \"0003_output.mp3\"}\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u97f3\u9891\u5217\u8868\u5b57\u6bb5\uff0c\u547d\u540d\u4e3a <code>file_names</code> \u6216 <code>*_file_names</code>\uff1a</p> <pre><code>{\"recordings_file_names\": [\"0001_r0.mp3\", \"0001_r1.mp3\"], \"label\": \"same_person\"}\n{\"recordings_file_names\": [\"0002_r0.mp3\", \"0002_r1.mp3\"], \"label\": \"same_person\"}\n{\"recordings_file_names\": [\"0003_r0.mp3\", \"0003_r1.mp3\"], \"label\": \"different_person\"}\n</code></pre>"},{"location":"datasets/docs/audio_dataset/#webdataset","title":"WebDataset","text":"<p>WebDataset \u57fa\u4e8e TAR \u5f52\u6863\u683c\u5f0f\uff0c\u975e\u5e38\u9002\u5408\u8d85\u5927\u97f3\u9891\u6570\u636e\u96c6\u3002\u53ef\u4ee5\u5c06\u97f3\u9891\u6587\u4ef6\u6309 TAR \u5206\u7ec4\uff08\u4f8b\u5982\u6bcf\u4e2a TAR \u5b58\u653e 1GB \u97f3\u9891\uff09\uff0c\u6784\u6210\u6570\u5343\u4e2a\u5f52\u6863\uff1a</p> <pre><code>folder/train/00000.tar\nfolder/train/00001.tar\nfolder/train/00002.tar\n...\n</code></pre> <p>\u5728\u5f52\u6863\u4e2d\uff0c\u6bcf\u4e2a\u6837\u672c\u4f1a\u5305\u542b\u540c\u540d\u524d\u7f00\u7684\u591a\u4e2a\u6587\u4ef6\uff1a</p> <pre><code>e39871fd9fd74f55.mp3\ne39871fd9fd74f55.json\nf18b91585c4d3f3e.mp3\nf18b91585c4d3f3e.json\n...\n</code></pre> <p>\u53ef\u4ee5\u5c06\u97f3\u9891\u6807\u7b7e\u3001\u63cf\u8ff0\u6216\u8fb9\u754c\u6846\u7b49\u4fe1\u606f\u5b58\u50a8\u4e3a JSON\u3001\u6587\u672c\u7b49\u5f62\u5f0f\u3002</p> <p>\u52a0\u8f7d WebDataset \u65f6\uff0c\u4f1a\u6839\u636e\u6587\u4ef6\u540e\u7f00\u521b\u5efa\u5bf9\u5e94\u7684\u5217\uff08\u5982 <code>mp3</code>\u3001<code>json</code>\uff09\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"webdataset\", data_dir=\"/path/to/folder\", split=\"train\")\n&gt;&gt;&gt; dataset[0][\"json\"]\n{\"transcript\": \"Hello there !\", \"speaker\": \"Obi-Wan Kenobi\"}\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u6837\u672c\u51c6\u5907\u591a\u4e2a\u97f3\u9891\u6587\u4ef6\uff0c\u4f8b\u5982\uff1a</p> <pre><code>e39871fd9fd74f55.input.mp3\ne39871fd9fd74f55.output.mp3\ne39871fd9fd74f55.json\n...\n</code></pre> <p>\u66f4\u591a\u6709\u5173 WebDataset \u683c\u5f0f\u53ca\u5176 Python \u5e93\u7684\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605 WebDataset \u5b98\u65b9\u6587\u6863\u3002</p>"},{"location":"datasets/docs/audio_load/","title":"\u52a0\u8f7d\u97f3\u9891\u6570\u636e","text":"<p>\u4f7f\u7528 [<code>Audio</code>] \u7279\u5f81\u5373\u53ef\u52a0\u8f7d\u97f3\u9891\u6570\u636e\u96c6\uff0c\u8bbf\u95ee\u6837\u672c\u65f6\u4f1a\u81ea\u52a8\u89e3\u7801\u5e76\u6309\u9700\u91cd\u91c7\u6837\u3002\u97f3\u9891\u89e3\u7801\u57fa\u4e8e <code>torchcodec</code> Python \u5305\uff0c\u5176\u5e95\u5c42\u4f7f\u7528 <code>FFmpeg</code> C \u5e93\u3002</p>"},{"location":"datasets/docs/audio_load/#_2","title":"\u5b89\u88c5\u4f9d\u8d56","text":"<p>\u82e5\u8981\u5904\u7406\u97f3\u9891\u6570\u636e\u96c6\uff0c\u9700\u8981\u5b89\u88c5 <code>audio</code> \u989d\u5916\u4f9d\u8d56\u3002\u53c2\u9605\u5b89\u88c5\u6307\u5357\u4e86\u89e3\u5b89\u88c5\u6b65\u9aa4\u3002</p>"},{"location":"datasets/docs/audio_load/#_3","title":"\u672c\u5730\u6587\u4ef6","text":"<p>\u53ef\u901a\u8fc7\u97f3\u9891\u6587\u4ef6\u8def\u5f84\u52a0\u8f7d\u672c\u5730\u6570\u636e\u96c6\uff0c\u5229\u7528 [<code>~Dataset.cast_column</code>] \u5c06\u8def\u5f84\u5217\u8f6c\u6362\u4e3a [<code>Audio</code>] \u7279\u5f81\uff1a</p> <pre><code>&gt;&gt;&gt; audio_dataset = Dataset.from_dict({\"audio\": [\"path/to/audio_1\", \"path/to/audio_2\", ..., \"path/to/audio_n\"]}).cast_column(\"audio\", Audio())\n&gt;&gt;&gt; audio_dataset[0][\"audio\"]\n&lt;datasets.features._torchcodec.AudioDecoder object at 0x11642b6a0&gt;\n</code></pre>"},{"location":"datasets/docs/audio_load/#audiofolder","title":"AudioFolder","text":"<p>\u4e5f\u53ef\u501f\u52a9 <code>AudioFolder</code> \u6784\u5efa\u5668\u52a0\u8f7d\u6570\u636e\u96c6\u3002\u65e0\u9700\u7f16\u5199\u81ea\u5b9a\u4e49 dataloader\uff0c\u9002\u5408\u5feb\u901f\u5904\u7406\u6210\u5343\u4e0a\u4e07\u6761\u97f3\u9891\u3002</p>"},{"location":"datasets/docs/audio_load/#audiofolder_1","title":"\u5e26\u5143\u6570\u636e\u7684 AudioFolder","text":"<p>\u82e5\u8981\u5c06\u97f3\u9891\u6587\u4ef6\u4e0e\u5143\u6570\u636e\u5173\u8054\uff0c\u8bf7\u5728\u6570\u636e\u96c6\u4e2d\u653e\u7f6e <code>metadata.csv</code>\u3002\u76ee\u5f55\u7ed3\u6784\u793a\u4f8b\uff1a</p> <pre><code>folder/train/metadata.csv\nfolder/train/first_audio_file.mp3\nfolder/train/second_audio_file.mp3\nfolder/train/third_audio_file.mp3\n</code></pre> <p><code>metadata.csv</code> \u5fc5\u987b\u5305\u542b <code>file_name</code> \u5217\uff0c\u4ee5\u94fe\u63a5\u97f3\u9891\u4e0e\u5143\u6570\u636e\u3002\u4f8b\u5982\uff1a</p> <pre><code>file_name,transcription\nfirst_audio_file.mp3,znowu si\u0119 duch z cia\u0142em zro\u015bnie w m\u0142odocianej wstaniesz wiosnie i mo\u017cesz skutkiem tych lek\u00f3w umiera\u0107 wstawa\u0107 wiek wiek\u00f3w dalej tam by\u0142y przestrogi jak sieka\u0107 g\u0142ow\u0119 jak nogi\nsecond_audio_file.mp3,ju\u017c u \u017awierzy\u0144ca podwoj\u00f3w kr\u00f3l zasiada przy nim ksi\u0105\u017c\u0119ta i panowie rada a gdzie wznios\u0142y kr\u0105\u017cy\u0142 ganek rycerze obok kochanek kr\u00f3l skin\u0105\u0142 palcem zacz\u0119to igrzysko\nthird_audio_file.mp3,pewnie k\u0119dy\u015b w ob\u0142\u0119dzie ubite min\u0119\u0142y szlaki zaczekajmy dzie\u0144 jaki po\u015blemy szuka\u0107 wsz\u0119dzie dzi\u015b jutro pewnie b\u0119dzie pos\u0142ali wsz\u0119dzie s\u0142ugi czekali dzie\u0144 i drugi gdy nic nie doczekali z p\u0142aczem chc\u0105 jecha\u0107 dali\n</code></pre> <p><code>AudioFolder</code> \u4f1a\u52a0\u8f7d\u97f3\u9891\u5e76\u6839\u636e <code>metadata.csv</code> \u751f\u6210 <code>transcription</code> \u5217\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"username/dataset_name\")\n&gt;&gt;&gt; # \u6216\u672c\u5730\uff1a\n&gt;&gt;&gt; dataset = load_dataset(\"/path/to/folder\")\n</code></pre> <p>\u5bf9\u4e8e\u672c\u5730\u6570\u636e\u96c6\uff0c\u4e0a\u8ff0\u5199\u6cd5\u7b49\u4ef7\u4e8e\u663e\u5f0f\u4f20\u5165 <code>audiofolder</code> \u5e76\u8bbe\u7f6e <code>data_dir</code>\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"audiofolder\", data_dir=\"/path/to/folder\")\n</code></pre> <p>\u5143\u6570\u636e\u4e5f\u53ef\u4ee5\u91c7\u7528 JSON Lines \u683c\u5f0f\uff0c\u53ea\u9700\u5c06\u6587\u4ef6\u547d\u540d\u4e3a <code>metadata.jsonl</code>\u3002\u5f53\u67d0\u5217\u8f83\u4e3a\u590d\u6742\uff08\u4f8b\u5982\u6d6e\u70b9\u6570\u7ec4\uff09\u65f6\uff0c\u8be5\u683c\u5f0f\u53ef\u4ee5\u907f\u514d\u89e3\u6790\u9519\u8bef\u6216\u88ab\u8bfb\u53d6\u4e3a\u5b57\u7b26\u4e32\u3002</p> <p>\u82e5\u5e0c\u671b\u5ffd\u7565\u5143\u6570\u636e\u4fe1\u606f\uff0c\u53ef\u5728 [<code>load_dataset</code>] \u4e2d\u8bbe\u5b9a <code>drop_metadata=True</code>\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"username/dataset_with_metadata\", drop_metadata=True)\n</code></pre> <p>\u82e5\u6ca1\u6709\u5143\u6570\u636e\u6587\u4ef6\uff0c<code>AudioFolder</code> \u4f1a\u4f9d\u636e\u76ee\u5f55\u540d\u81ea\u52a8\u63a8\u65ad\u6807\u7b7e\u3002\u82e5\u60f3\u79fb\u9664\u81ea\u52a8\u751f\u6210\u7684\u6807\u7b7e\uff0c\u8bf7\u5c06 <code>drop_labels=True</code>\uff0c\u6b64\u65f6\u6570\u636e\u96c6\u4e2d\u53ea\u5305\u542b\u97f3\u9891\u5217\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"username/dataset_without_metadata\", drop_labels=True)\n</code></pre> <p><code>filters</code> \u53c2\u6570\u53ef\u6839\u636e\u6807\u7b7e\u6216\u5143\u6570\u636e\u6761\u4ef6\u52a0\u8f7d\u6570\u636e\u5b50\u96c6\u3002\u5bf9\u4e8e Parquet \u5143\u6570\u636e\u5c24\u5176\u9ad8\u6548\uff0c\u4e14\u63a8\u8350\u914d\u5408 <code>streaming=True</code> \u4f7f\u7528\uff0c\u5426\u5219\u9ed8\u8ba4\u4f1a\u5148\u5b8c\u6574\u4e0b\u8f7d\u540e\u518d\u8fc7\u6ee4\uff1a</p> <pre><code>&gt;&gt;&gt; filters = [(\"label\", \"=\", 0)]\n&gt;&gt;&gt; dataset = load_dataset(\"username/dataset_name\", streaming=True, filters=filters)\n</code></pre> <p>\u63d0\u793a</p> <p>\u60f3\u4e86\u89e3\u5982\u4f55\u6784\u5efa <code>AudioFolder</code> \u6570\u636e\u96c6\uff0c\u8bf7\u53c2\u9605\u300a\u521b\u5efa\u97f3\u9891\u6570\u636e\u96c6\u300b\u3002</p> <p>\u5982\u4f55\u52a0\u8f7d\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\u96c6\uff0c\u8bf7\u67e5\u770b\u901a\u7528\u52a0\u8f7d\u6307\u5357\u3002</p>"},{"location":"datasets/docs/audio_load/#_4","title":"\u97f3\u9891\u89e3\u7801","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u904d\u5386\u6570\u636e\u96c6\u65f6\u4f1a\u987a\u5e8f\u5c06\u97f3\u9891\u89e3\u7801\u4e3a torchcodec \u7684 <code>AudioDecoder</code> \u5bf9\u8c61\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u591a\u7ebf\u7a0b\u89e3\u7801\u663e\u8457\u63d0\u901f\uff1a</p> <pre><code>&gt;&gt;&gt; import os\n&gt;&gt;&gt; num_threads = num_threads = min(32, (os.cpu_count() or 1) + 4)\n&gt;&gt;&gt; dataset = dataset.decode(num_threads=num_threads)\n&gt;&gt;&gt; for example in dataset:  # \u6700\u9ad8\u53ef\u5feb 20 \u500d\n...     ...\n</code></pre> <p>\u8bbe\u7f6e <code>num_threads</code> \u5373\u53ef\u542f\u7528\u591a\u7ebf\u7a0b\uff0c\u5c24\u5176\u9002\u5408\u63d0\u5347\u8fdc\u7a0b\u6d41\u5f0f\u52a0\u8f7d\u901f\u5ea6\u3002\u4f46\u5728\u672c\u5730\u5feb\u901f\u78c1\u76d8\u4e0a\uff0c\u591a\u7ebf\u7a0b\u53ef\u80fd\u4e0d\u5982 <code>num_threads=0</code>\u3002</p> <p>\u5982\u679c\u65e0\u9700\u5c06\u97f3\u9891\u89e3\u7801\u4e3a NumPy \u6570\u7ec4\uff0c\u53ea\u60f3\u83b7\u53d6\u8def\u5f84\u6216\u5b57\u8282\uff0c\u53ef\u7981\u7528\u89e3\u7801\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = dataset.decode(False)\n</code></pre> <p>\u8bf4\u660e</p> <p>[<code>IterableDataset.decode</code>] \u76ee\u524d\u4ec5\u5bf9\u6d41\u5f0f\u6570\u636e\u96c6\u751f\u6548\u3002</p>"},{"location":"datasets/docs/audio_process/","title":"\u5904\u7406\u97f3\u9891\u6570\u636e","text":"<p>\u672c\u6307\u5357\u4ecb\u7ecd\u97f3\u9891\u6570\u636e\u96c6\u7684\u5e38\u7528\u5904\u7406\u65b9\u6cd5\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u91cd\u91c7\u6837\u97f3\u9891\u3002</li> <li>\u7ed3\u5408 [<code>~Dataset.map</code>] \u8fdb\u884c\u6279\u91cf\u9884\u5904\u7406\u3002</li> </ul> <p>\u5982\u9700\u4e86\u89e3\u9002\u7528\u4e8e\u6240\u6709\u6570\u636e\u7c7b\u578b\u7684\u901a\u7528\u6d41\u7a0b\uff0c\u8bf7\u67e5\u9605\u901a\u7528\u5904\u7406\u6307\u5357\u3002</p>"},{"location":"datasets/docs/audio_process/#_2","title":"\u5217\u7c7b\u578b\u8f6c\u6362","text":"<p>[<code>~Dataset.cast_column</code>] \u53ef\u5c06\u67d0\u5217\u8f6c\u6362\u4e3a\u5f85\u89e3\u7801\u7684\u7279\u5f81\u3002\u5f53\u4e0e [<code>Audio</code>] \u642d\u914d\u4f7f\u7528\u65f6\uff0c\u53ef\u4ee5\u540c\u65f6\u5b8c\u6210\u91cd\u91c7\u6837\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset, Audio\n\n&gt;&gt;&gt; dataset = load_dataset(\"PolyAI/minds14\", \"en-US\", split=\"train\")\n&gt;&gt;&gt; dataset = dataset.cast_column(\"audio\", Audio(sampling_rate=16000))\n</code></pre> <p>\u97f3\u9891\u4f1a\u5728\u8bbf\u95ee\u65f6\u5373\u65f6\u89e3\u7801\u5e76\u91cd\u91c7\u6837\u81f3 16kHz\uff1a</p> <pre><code>&gt;&gt;&gt; audio = dataset[0][\"audio\"]\n&gt;&gt;&gt; samples = audio.get_all_samples()\n&gt;&gt;&gt; samples.data\ntensor([[ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  2.3447e-06,\n         -1.9127e-04, -5.3330e-05]]\n&gt;&gt;&gt; samples.sample_rate\n16000\n</code></pre>"},{"location":"datasets/docs/audio_process/#map","title":"Map","text":"<p>[<code>~Dataset.map</code>] \u80fd\u4e00\u6b21\u6027\u9884\u5904\u7406\u6574\u4e2a\u6570\u636e\u96c6\u3002\u6839\u636e\u6240\u7528\u6a21\u578b\u7c7b\u578b\uff0c\u9700\u8981\u51c6\u5907\u7279\u5f81\u63d0\u53d6\u5668\u6216\u5904\u7406\u5668\uff1a</p> <ul> <li>\u5bf9\u4e8e\u9884\u8bad\u7ec3\u8bed\u97f3\u8bc6\u522b\u6a21\u578b\uff0c\u52a0\u8f7d\u7279\u5f81\u63d0\u53d6\u5668\u4e0e\u5206\u8bcd\u5668\uff0c\u5e76\u5c06\u5b83\u4eec\u7ec4\u5408\u6210 <code>processor</code>\uff1a</li> </ul> <pre><code>&gt;&gt;&gt; from transformers import AutoTokenizer, AutoFeatureExtractor, AutoProcessor\n\n&gt;&gt;&gt; model_checkpoint = \"facebook/wav2vec2-large-xlsr-53\"\n# \u5b9a\u4e49 vocab.json \u540e\u5373\u53ef\u5b9e\u4f8b\u5316\u5206\u8bcd\u5668\uff1a\n&gt;&gt;&gt; tokenizer = AutoTokenizer(\"./vocab.json\", unk_token=\"[UNK]\", pad_token=\"[PAD]\", word_delimiter_token=\"|\")\n&gt;&gt;&gt; feature_extractor = AutoFeatureExtractor.from_pretrained(model_checkpoint)\n&gt;&gt;&gt; processor = AutoProcessor.from_pretrained(feature_extractor=feature_extractor, tokenizer=tokenizer)\n</code></pre> <ul> <li>\u5bf9\u4e8e\u5df2\u5fae\u8c03\u7684\u8bed\u97f3\u8bc6\u522b\u6a21\u578b\uff0c\u4ec5\u9700\u52a0\u8f7d <code>processor</code>\uff1a</li> </ul> <pre><code>&gt;&gt;&gt; from transformers import AutoProcessor\n\n&gt;&gt;&gt; processor = AutoProcessor.from_pretrained(\"facebook/wav2vec2-base-960h\")\n</code></pre> <p>\u5728\u9884\u5904\u7406\u51fd\u6570\u4e2d\u7ed3\u5408 [<code>~Dataset.map</code>] \u65f6\uff0c\u52a1\u5fc5\u5305\u542b <code>audio</code> \u5217\uff0c\u786e\u4fdd\u771f\u6b63\u5bf9\u97f3\u9891\u6570\u636e\u6267\u884c\u91cd\u91c7\u6837\uff1a</p> <pre><code>&gt;&gt;&gt; def prepare_dataset(batch):\n...     audio = batch[\"audio\"]\n...     batch[\"input_values\"] = processor(audio.get_all_samples().data, sampling_rate=audio[\"sampling_rate\"]).input_values[0]\n...     batch[\"input_length\"] = len(batch[\"input_values\"])\n...     with processor.as_target_processor():\n...         batch[\"labels\"] = processor(batch[\"sentence\"]).input_ids\n...     return batch\n&gt;&gt;&gt; dataset = dataset.map(prepare_dataset, remove_columns=dataset.column_names)\n</code></pre>"},{"location":"datasets/docs/cache/","title":"\u7f13\u5b58\u7ba1\u7406","text":"<p>\u4ece Hugging Face \u4e0b\u8f7d\u6570\u636e\u96c6\u65f6\uff0c\u6587\u4ef6\u4f1a\u7f13\u5b58\u5728\u672c\u5730\u3002Hub \u6587\u4ef6\u9ed8\u8ba4\u5b58\u653e\u5728 <code>~/.cache/huggingface/hub</code>\uff0c\u8be6\u60c5\u53ca\u4fee\u6539\u65b9\u6cd5\u53c2\u89c1Hub \u7f13\u5b58\u6587\u6863\u3002</p> <p>\u8be5\u7f13\u5b58\u53ef\u907f\u514d\u6bcf\u6b21\u4f7f\u7528\u6570\u636e\u96c6\u90fd\u91cd\u65b0\u4e0b\u8f7d\u3002\u9664\u6b64\u4e4b\u5916\uff0c\ud83e\udd17 Datasets \u8fd8\u4f1a\u5c06\u8f6c\u6362\u540e\u7684 Arrow \u6570\u636e\uff08[<code>Dataset</code>] \u4f7f\u7528\u7684\u683c\u5f0f\uff09\u5199\u5165\u81ea\u5df1\u7684\u7f13\u5b58\u3002</p> <p>\u672c\u6307\u5357\u805a\u7126 \ud83e\udd17 Datasets \u7f13\u5b58\uff0c\u5e76\u4ecb\u7ecd\u5982\u4f55\uff1a</p> <ul> <li>\u66f4\u6539\u7f13\u5b58\u76ee\u5f55\u3002</li> <li>\u63a7\u5236\u6570\u636e\u96c6\u4ece\u7f13\u5b58\u52a0\u8f7d\u7684\u65b9\u5f0f\u3002</li> <li>\u6e05\u7406\u7f13\u5b58\u6587\u4ef6\u3002</li> <li>\u542f\u7528\u6216\u7981\u7528\u7f13\u5b58\u3002</li> </ul>"},{"location":"datasets/docs/cache/#_2","title":"\u7f13\u5b58\u76ee\u5f55","text":"<p>\ud83e\udd17 Datasets \u9ed8\u8ba4\u7f13\u5b58\u76ee\u5f55\u4e3a <code>~/.cache/huggingface/datasets</code>\u3002\u53ef\u901a\u8fc7\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf <code>HF_HOME</code> \u6307\u5411\u5176\u4ed6\u8def\u5f84\uff1a</p> <pre><code>$ export HF_HOME=\"/path/to/another/directory/datasets\"\n</code></pre> <p>\u82e5\u4ec5\u60f3\u4fee\u6539\u6570\u636e\u96c6\u7f13\u5b58\u76ee\u5f55\uff0c\u4e5f\u53ef\u4ee5\u8bbe\u7f6e <code>HF_DATASETS_CACHE</code>\uff1a</p> <pre><code>$ export HF_DATASETS_CACHE=\"/path/to/datasets_cache\"\n</code></pre> <p>\u26a0\ufe0f \u4ee5\u4e0a\u8bbe\u7f6e\u4ec5\u5f71\u54cd <code>datasets</code> \u5e93\u5199\u5165\u7684\u6587\u4ef6\uff08\u5982 Arrow \u4e0e\u7d22\u5f15\uff09\u3002 \u4e0d\u4f1a\u5f71\u54cd\u4ece Hugging Face Hub \u4e0b\u8f7d\u7684\u6a21\u578b\u3001\u5206\u8bcd\u5668\u6216\u539f\u59cb\u6570\u636e\u6587\u4ef6\uff0c\u5b83\u4eec\u9ed8\u8ba4\u4f4d\u4e8e <code>~/.cache/huggingface/hub</code>\uff0c\u53ef\u7528 <code>HF_HUB_CACHE</code> \u5355\u72ec\u63a7\u5236\uff1a</p> <pre><code>$ export HF_HUB_CACHE=\"/path/to/hub_cache\"\n</code></pre> <p>\ud83d\udca1 \u82e5\u5e0c\u671b\u4e00\u6b21\u6027\u8fc1\u79fb\u6240\u6709 Hugging Face \u7f13\u5b58\uff08\u5305\u62ec\u6570\u636e\u96c6\u4e0e Hub \u4e0b\u8f7d\uff09\uff0c\u8bf7\u4f7f\u7528 <code>HF_HOME</code>\uff1a</p> <pre><code>$ export HF_HOME=\"/path/to/cache_root\"\n</code></pre> <p>\u8fd9\u6837\u5c06\u5f97\u5230\uff1a - \u6570\u636e\u96c6\u7f13\u5b58 \u2192 <code>/path/to/cache_root/datasets</code> - Hub \u7f13\u5b58 \u2192 <code>/path/to/cache_root/hub</code></p> <p>\u5728\u5171\u4eab\u73af\u5883\u6216\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\uff08\u5982 NFS\uff09\u4e2d\uff0c\u8fd9\u4e9b\u533a\u5206\u5c24\u4e3a\u6709\u7528\u3002\u53c2\u9605 issue #7480 \u4e86\u89e3\u672a\u540c\u65f6\u8bbe\u7f6e <code>HF_HUB_CACHE</code> \u4e0e <code>HF_DATASETS_CACHE</code> \u65f6\u53ef\u80fd\u51fa\u73b0\u7684\u610f\u5916\u60c5\u51b5\u3002</p> <p>\u52a0\u8f7d\u6570\u636e\u96c6\u65f6\u4e5f\u53ef\u4ee5\u901a\u8fc7 <code>cache_dir</code> \u53c2\u6570\u6307\u5b9a\u7f13\u5b58\u4f4d\u7f6e\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; dataset = load_dataset(\"username/dataset\", cache_dir=\"/path/to/another/directory/datasets\")\n</code></pre>"},{"location":"datasets/docs/cache/#_3","title":"\u4e0b\u8f7d\u6a21\u5f0f","text":"<p>\u4e0b\u8f7d\u540e\u53ef\u501f\u52a9 [<code>load_dataset</code>] \u7684 <code>download_mode</code> \u53c2\u6570\u63a7\u5236\u52a0\u8f7d\u884c\u4e3a\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u7f13\u5b58\u5b58\u5728\u4f1a\u76f4\u63a5\u590d\u7528\uff1b\u82e5\u9700\u8981\u539f\u59cb\u6570\u636e\uff08\u672a\u5e94\u7528\u4efb\u4f55\u5904\u7406\uff09\uff0c\u53ef\u4ee5\u5f3a\u5236\u91cd\u65b0\u4e0b\u8f7d\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; dataset = load_dataset(\"rajpurkar/squad\", download_mode=\"force_redownload\")\n</code></pre> <p>\u5b8c\u6574\u6a21\u5f0f\u5217\u8868\u8bf7\u53c2\u8003 [<code>DownloadMode</code>] \u6587\u6863\u3002</p>"},{"location":"datasets/docs/cache/#_4","title":"\u7f13\u5b58\u6587\u4ef6","text":"<p>\u4f7f\u7528 [<code>Dataset.cleanup_cache_files</code>] \u6e05\u7406\u76ee\u5f55\u4e2d\u7684 Arrow \u7f13\u5b58\u6587\u4ef6\uff1a</p> <pre><code># \u8fd4\u56de\u5220\u9664\u7684\u7f13\u5b58\u6587\u4ef6\u6570\u91cf\n&gt;&gt;&gt; dataset.cleanup_cache_files()\n2\n</code></pre>"},{"location":"datasets/docs/cache/#_5","title":"\u542f\u7528\u6216\u7981\u7528\u7f13\u5b58","text":"<p>\u672c\u5730\u7f13\u5b58\u7684\u6587\u4ef6\u4f1a\u4fdd\u7559\u4f60\u4e4b\u524d\u5bf9\u6570\u636e\u96c6\u5e94\u7528\u7684\u53d8\u6362\u3002\u82e5\u4e0d\u5e0c\u671b\u81ea\u52a8\u590d\u7528\uff0c\u53ef\u5728 [<code>Dataset.map</code>] \u4e2d\u8bbe\u7f6e <code>load_from_cache_file=False</code>\uff1a</p> <pre><code>&gt;&gt;&gt; updated_dataset = small_dataset.map(add_prefix, load_from_cache_file=False)\n</code></pre> <p>\u4e0a\u8ff0\u8bbe\u7f6e\u4f1a\u91cd\u65b0\u6267\u884c <code>add_prefix</code>\uff0c\u800c\u4e0d\u662f\u52a0\u8f7d\u65e7\u72b6\u6001\u3002</p> <p>\u82e5\u9700\u5168\u5c40\u7981\u7528\u7f13\u5b58\uff0c\u53ef\u8c03\u7528 [<code>disable_caching</code>]\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import disable_caching\n&gt;&gt;&gt; disable_caching()\n</code></pre> <p>\u7981\u7528\u540e\uff0c\ud83e\udd17 Datasets \u5728\u5e94\u7528\u53d8\u6362\u65f6\u5c06\u4e0d\u518d\u8bfb\u53d6\u7f13\u5b58\uff0c\u6240\u6709\u53d8\u6362\u90fd\u9700\u8981\u91cd\u65b0\u8ba1\u7b97\u3002</p> <p>\u63d0\u793a</p> <p>\u82e5\u60f3\u4ece\u5934\u590d\u7528\u6570\u636e\u96c6\uff0c\u4e5f\u53ef\u4ee5\u5728 [<code>load_dataset</code>] \u4e2d\u8c03\u6574 <code>download_mode</code>\u3002</p> <p></p>"},{"location":"datasets/docs/cache/#_6","title":"\u6027\u80fd\u4f18\u5316","text":"<p>\u5173\u95ed\u7f13\u5b58\u5e76\u5c06\u6570\u636e\u96c6\u590d\u5236\u5230\u5185\u5b58\u4e2d\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u52a0\u5feb\u64cd\u4f5c\u3002\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <ol> <li>\u5c06 <code>datasets.config.IN_MEMORY_MAX_SIZE</code> \u8bbe\u4e3a\u975e\u96f6\u503c\uff08\u5b57\u8282\u6570\uff09\uff0c\u5927\u5c0f\u9700\u6ee1\u8db3\u5185\u5b58\u9650\u5236\u3002</li> <li>\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf <code>HF_DATASETS_IN_MEMORY_MAX_SIZE</code> \u4e3a\u975e\u96f6\u503c\uff08\u4f18\u5148\u7ea7\u4f4e\u4e8e\u65b9\u6cd5\u4e00\uff09\u3002</li> </ol>"},{"location":"datasets/docs/cli/","title":"\u547d\u4ee4\u884c\u63a5\u53e3\uff08CLI\uff09","text":"<p>\ud83e\udd17 Datasets \u63d0\u4f9b\u4e00\u7ec4\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u4fbf\u4e8e\u5728\u7ec8\u7aef\u4e2d\u4e0e\u6570\u636e\u96c6\u4ea4\u4e92\u3002</p> <p>\u67e5\u770b\u53ef\u7528\u547d\u4ee4\uff1a</p> <pre><code>&gt;&gt;&gt; datasets-cli --help\nusage: datasets-cli &lt;command&gt; [&lt;args&gt;]\n\npositional arguments:\n  {env,test,delete_from_hub}\n                        datasets-cli command helpers\n    env                 Print relevant system environment info.\n    test                Test dataset loading.\n    delete_from_hub     Delete dataset config from the Hub\n\noptional arguments:\n  -h, --help            show this help message and exit\n</code></pre>"},{"location":"datasets/docs/cli/#hub","title":"\u4ece Hub \u5220\u9664\u914d\u7f6e","text":"<p>\u53ef\u7528\u4e8e\u5220\u9664 Hub \u4e0a\u53d7\u652f\u6301\u6570\u636e\u96c6\u7684\u67d0\u4e2a\u914d\u7f6e\uff1a</p> <pre><code>&gt;&gt;&gt; datasets-cli delete_from_hub --help\nusage: datasets-cli &lt;command&gt; [&lt;args&gt;] delete_from_hub [-h] [--token TOKEN] [--revision REVISION] dataset_id config_name\n\npositional arguments:\n  dataset_id           source dataset ID, e.g. USERNAME/DATASET_NAME or ORGANIZATION/DATASET_NAME\n  config_name          config name to delete\n\noptional arguments:\n  -h, --help           show this help message and exit\n  --token TOKEN        access token to the Hugging Face Hub\n  --revision REVISION  source revision\n</code></pre> <p>\u793a\u4f8b\uff1a</p> <pre><code>&gt;&gt;&gt; datasets-cli delete_from_hub USERNAME/DATASET_NAME CONFIG_NAME\n</code></pre> <p>\u63d0\u793a</p> <p>\u8fd0\u884c\u524d\u8bf7\u786e\u4fdd\u5df2\u767b\u5f55 Hugging Face \u8d26\u53f7\uff1a</p> <pre><code>&gt;&gt;&gt; hf auth login\n</code></pre>"},{"location":"datasets/docs/create_dataset/","title":"\u521b\u5efa\u6570\u636e\u96c6","text":"<p>\u5f53\u4f60\u9700\u8981\u5904\u7406\u81ea\u6709\u6570\u636e\u65f6\uff0c\u5f80\u5f80\u9700\u8981\u5148\u6784\u5efa\u6570\u636e\u96c6\u3002\u501f\u52a9 \ud83e\udd17 Datasets\uff0c\u53ef\u4ee5\u4eab\u53d7\u8be5\u5e93\u5e26\u6765\u7684\u5168\u90e8\u4f18\u52bf\uff1a\u9ad8\u901f\u52a0\u8f7d\u4e0e\u5904\u7406\u3001\u6d41\u5f0f\u5904\u7406\u8d85\u5927\u6570\u636e\u96c6\u3001\u5185\u5b58\u6620\u5c04 \u7b49\u3002\u4f4e\u4ee3\u7801\u65b9\u5f0f\u8fd8\u80fd\u5927\u5e45\u7f29\u77ed\u51c6\u5907\u6570\u636e\u7684\u65f6\u95f4\uff0c\u8bb8\u591a\u573a\u666f\u751a\u81f3\u53ea\u9700\u5c06\u6587\u4ef6\u62d6\u62fd\u4e0a\u4f20\u5230 Hub \u4ed3\u5e93\u5373\u53ef\u3002</p> <p>\u672c\u6559\u7a0b\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b\u4f4e\u4ee3\u7801\u65b9\u5f0f\u521b\u5efa\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u96c6\uff1a</p> <ul> <li>\u57fa\u4e8e\u6587\u4ef6\u5939\u7684\u6784\u5efa\u5668\uff0c\u5feb\u901f\u751f\u6210\u56fe\u50cf\u6216\u97f3\u9891\u6570\u636e\u96c6\u3002</li> <li><code>from_</code> \u65b9\u6cd5\uff0c\u4ece\u672c\u5730\u6587\u4ef6\u521b\u5efa\u6570\u636e\u96c6\u3002</li> </ul>"},{"location":"datasets/docs/create_dataset/#_2","title":"\u57fa\u4e8e\u6587\u4ef6\u7684\u6784\u5efa\u5668","text":"<p>\ud83e\udd17 Datasets \u652f\u6301\u591a\u79cd\u5e38\u89c1\u683c\u5f0f\uff0c\u5982 <code>csv</code>\u3001<code>json/jsonl</code>\u3001<code>parquet</code>\u3001<code>txt</code> \u7b49\u3002\u6bd4\u5982\uff0c\u53ef\u76f4\u63a5\u8bfb\u53d6\u5355\u4e2a\u6216\u591a\u4e2a CSV \u6587\u4ef6\uff08\u4f20\u5165\u5217\u8868\u5373\u53ef\uff09\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; dataset = load_dataset(\"csv\", data_files=\"my_file.csv\")\n</code></pre> <p>\u5173\u4e8e\u652f\u6301\u7684\u683c\u5f0f\u4e0e\u793a\u4f8b\uff0c\u8bf7\u53c2\u8003\u672c\u6307\u5357\u3002</p>"},{"location":"datasets/docs/create_dataset/#_3","title":"\u57fa\u4e8e\u6587\u4ef6\u5939\u7684\u6784\u5efa\u5668","text":"<p>[<code>ImageFolder</code>] \u4e0e [<code>AudioFolder</code>] \u662f\u4e24\u79cd\u57fa\u4e8e\u76ee\u5f55\u7ed3\u6784\u7684\u4f4e\u4ee3\u7801\u6784\u5efa\u5668\uff0c\u53ef\u5728\u6570\u5343\u6761\u6837\u672c\u89c4\u6a21\u4e0b\u5feb\u901f\u642d\u5efa\u56fe\u50cf\u6216\u8bed\u97f3\u6570\u636e\u96c6\u3002\u5b83\u4eec\u4f1a\u81ea\u52a8\u751f\u6210\u6570\u636e\u96c6\u7684\u7279\u5f81\u3001\u5212\u5206\u4e0e\u6807\u7b7e\uff0c\u9002\u5408\u5728\u6269\u5c55\u5230\u5927\u578b\u6570\u636e\u96c6\u4e4b\u524d\u8fdb\u884c\u5feb\u901f\u539f\u578b\u9a8c\u8bc1\u3002</p> <ul> <li>[<code>ImageFolder</code>] \u4f7f\u7528 [<code>~datasets.Image</code>] \u7279\u5f81\u89e3\u7801\u56fe\u50cf\u6587\u4ef6\uff0c\u652f\u6301 jpg\u3001png \u7b49\u591a\u79cd\u683c\u5f0f\uff08\u5b8c\u6574\u5217\u8868\u89c1\u4ee3\u7801\uff09\u3002</li> <li>[<code>AudioFolder</code>] \u4f7f\u7528 [<code>~datasets.Audio</code>] \u7279\u5f81\u89e3\u7801\u97f3\u9891\u6587\u4ef6\uff0c\u652f\u6301 wav\u3001mp3\u3001mp4 \u7b49\u683c\u5f0f\uff08\u8be6\u89c1 FFmpeg \u652f\u6301\u5217\u8868\uff09\uff0c\u5e95\u5c42\u901a\u8fc7 ffmpeg \u89e3\u7801\u3002</li> </ul> <p>\u5212\u5206\u4f9d\u636e\u76ee\u5f55\u7ed3\u6784\u81ea\u52a8\u751f\u6210\uff0c\u6807\u7b7e\u540d\u79f0\u6765\u6e90\u4e8e\u5b50\u76ee\u5f55\u3002</p> <p>\u5047\u8bbe\u56fe\u50cf\uff08\u97f3\u9891\u540c\u7406\uff09\u76ee\u5f55\u5982\u4e0b\uff1a</p> <pre><code>pokemon/train/grass/bulbasaur.png\npokemon/train/fire/charmander.png\npokemon/train/water/squirtle.png\n\npokemon/test/grass/ivysaur.png\npokemon/test/fire/charmeleon.png\npokemon/test/water/wartortle.png\n</code></pre> <p>\u6784\u5efa\u5668\u5c06\u636e\u6b64\u751f\u6210\u6837\u672c\uff1a</p> <p>\u901a\u8fc7\u5728 [<code>load_dataset</code>] \u4e2d\u6307\u5b9a <code>imagefolder</code> \u5373\u53ef\u521b\u5efa\u56fe\u50cf\u6570\u636e\u96c6\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"imagefolder\", data_dir=\"/path/to/pokemon\")\n</code></pre> <p>\u97f3\u9891\u6570\u636e\u96c6\u7684\u5199\u6cd5\u7c7b\u4f3c\uff0c\u53ea\u9700\u5c06 <code>imagefolder</code> \u66ff\u6362\u4e3a <code>audiofolder</code>\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"audiofolder\", data_dir=\"/path/to/folder\")\n</code></pre> <p>\u5982\u679c\u9700\u8981\u9644\u52a0\u6587\u672c\u63cf\u8ff0\u3001\u8f6c\u5f55\u7b49\uff0c\u53ef\u5728\u76ee\u5f55\u4e2d\u6dfb\u52a0 <code>metadata.csv</code>\uff0c\u5176\u4e2d <code>file_name</code> \u5217\u7528\u4e8e\u5173\u8054\u56fe\u50cf\u6216\u97f3\u9891\u6587\u4ef6\uff1a</p> <pre><code>file_name,text\nbulbasaur.png,There is a plant seed on its back right from the day this Pok\u00e9mon is born.\ncharmander.png,It has a preference for hot things.\nsquirtle.png,When it retracts its long neck into its shell, it squirts out water with vigorous force.\n</code></pre> <p>\u60f3\u8981\u4e86\u89e3\u66f4\u591a\u7ec6\u8282\uff0c\u53ef\u67e5\u770b ImageFolder \u6307\u5357\u4e0e AudioFolder \u6307\u5357\u3002</p>"},{"location":"datasets/docs/create_dataset/#python","title":"\u57fa\u4e8e Python \u5b57\u5178","text":"<p>\u4e5f\u53ef\u4ee5\u901a\u8fc7 <code>from_</code> \u65b9\u6cd5\u4ece Python \u5b57\u5178\u521b\u5efa\u6570\u636e\u96c6\uff1a</p> <ul> <li>[<code>~Dataset.from_generator</code>]\uff1a\u5229\u7528\u751f\u6210\u5668\u6309\u9700\u751f\u6210\u6570\u636e\uff0c\u662f\u6700\u8282\u7701\u5185\u5b58\u7684\u65b9\u6cd5\uff0c\u7279\u522b\u9002\u5408\u8d85\u5927\u6570\u636e\u96c6\uff0c\u4f1a\u9010\u6b65\u5199\u5165\u78c1\u76d8\u5e76\u4f7f\u7528\u5185\u5b58\u6620\u5c04\u3002</li> </ul> <pre><code>&gt;&gt;&gt; from datasets import Dataset\n&gt;&gt;&gt; def gen():\n...     yield {\"pokemon\": \"bulbasaur\", \"type\": \"grass\"}\n...     yield {\"pokemon\": \"squirtle\", \"type\": \"water\"}\n&gt;&gt;&gt; ds = Dataset.from_generator(gen)\n&gt;&gt;&gt; ds[0]\n{\"pokemon\": \"bulbasaur\", \"type\": \"grass\"}\n</code></pre> <p>\u57fa\u4e8e\u751f\u6210\u5668\u7684 [<code>IterableDataset</code>] \u9700\u8981\u901a\u8fc7 <code>for</code> \u5faa\u73af\u7b49\u65b9\u5f0f\u8fed\u4ee3\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import IterableDataset\n&gt;&gt;&gt; ds = IterableDataset.from_generator(gen)\n&gt;&gt;&gt; for example in ds:\n...     print(example)\n{\"pokemon\": \"bulbasaur\", \"type\": \"grass\"}\n{\"pokemon\": \"squirtle\", \"type\": \"water\"}\n</code></pre> <ul> <li>[<code>~Dataset.from_dict</code>]\uff1a\u6700\u76f4\u63a5\u7684\u65b9\u5f0f\uff0c\u6839\u636e\u5b57\u5178\u521b\u5efa\u6570\u636e\u96c6\uff1a</li> </ul> <pre><code>&gt;&gt;&gt; from datasets import Dataset\n&gt;&gt;&gt; ds = Dataset.from_dict({\"pokemon\": [\"bulbasaur\", \"squirtle\"], \"type\": [\"grass\", \"water\"]})\n&gt;&gt;&gt; ds[0]\n{\"pokemon\": \"bulbasaur\", \"type\": \"grass\"}\n</code></pre> <p>\u82e5\u8981\u521b\u5efa\u56fe\u50cf\u6216\u97f3\u9891\u6570\u636e\u96c6\uff0c\u53ef\u5728 [<code>~Dataset.from_dict</code>] \u540e\u94fe\u5f0f\u8c03\u7528 [<code>~Dataset.cast_column</code>] \u6307\u5b9a\u5217\u4e0e\u7279\u5f81\u7c7b\u578b\u3002\u4f8b\u5982\uff0c\u521b\u5efa\u97f3\u9891\u6570\u636e\u96c6\uff1a</p> <pre><code>&gt;&gt;&gt; audio_dataset = Dataset.from_dict({\"audio\": [\"path/to/audio_1\", ..., \"path/to/audio_n\"]}).cast_column(\"audio\", Audio())\n</code></pre> <p>\u73b0\u5728\u4f60\u5df2\u7ecf\u638c\u63e1\u4e86\u5982\u4f55\u521b\u5efa\u6570\u636e\u96c6\uff0c\u522b\u5fd8\u4e86\u5c06\u6210\u679c\u5206\u4eab\u5230 Hub\uff0c\u4e0e\u793e\u533a\u5171\u4eab\u4f60\u7684\u5de5\u4f5c\uff01</p>"},{"location":"datasets/docs/dataset_card/","title":"\u521b\u5efa\u6570\u636e\u96c6\u5361\u7247","text":"<p>\u6bcf\u4e2a\u6570\u636e\u96c6\u90fd\u5e94\u914d\u5907\u4e00\u4efd\u5361\u7247\uff0c\u7528\u4e8e\u63d0\u793a\u8d1f\u8d23\u4efb\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u5e76\u544a\u77e5\u6f5c\u5728\u7684\u504f\u5dee\u3002\u8fd9\u4e2a\u7406\u5ff5\u501f\u9274\u81ea Mitchell \u7b49\u4eba\u5728 2018 \u5e74\u63d0\u51fa\u7684 Model Cards\u3002\u6570\u636e\u96c6\u5361\u7247\u80fd\u591f\u5e2e\u52a9\u4f7f\u7528\u8005\u4e86\u89e3\u6570\u636e\u96c6\u7684\u5185\u5bb9\u3001\u9002\u7528\u573a\u666f\u3001\u521b\u5efa\u65b9\u5f0f\u4ee5\u53ca\u9700\u8981\u6ce8\u610f\u7684\u4e8b\u9879\u3002</p> <p>\u5236\u4f5c\u6570\u636e\u96c6\u5361\u7247\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u51e0\u6b65\uff1a</p> <ol> <li> <p>\u6253\u5f00\u4f60\u5728 Hub \u4e0a\u7684\u6570\u636e\u96c6\u4ed3\u5e93\uff0c\u70b9\u51fb Create Dataset Card \u521b\u5efa\u4ed3\u5e93\u4e2d\u7684 <code>README.md</code> \u6587\u4ef6\u3002</p> </li> <li> <p>\u4f7f\u7528 Metadata UI \u9009\u62e9\u63cf\u8ff0\u6570\u636e\u96c6\u7684\u6807\u7b7e\uff0c\u4f8b\u5982\u8bb8\u53ef\u8bc1\u3001\u8bed\u8a00\u3001<code>pretty_name</code>\u3001<code>task_categories</code>\u3001<code>size_categories</code> \u7b49\u3002\u8fd9\u4e9b\u6807\u7b7e\u6709\u52a9\u4e8e\u7528\u6237\u5728 Hub \u4e0a\u5feb\u901f\u627e\u5230\u4f60\u7684\u6570\u636e\u96c6\u3002</p> </li> </ol> <p>\u63d0\u793a</p> <p>\u82e5\u60f3\u53c2\u8003\u66f4\u5b8c\u6574\uff08\u4f46\u975e\u5fc5\u987b\uff09\u7684\u6807\u7b7e\u9009\u9879\uff0c\u53ef\u67e5\u770b Dataset Card \u89c4\u8303\uff0c\u5176\u4e2d\u5305\u542b <code>multilinguality</code>\u3001<code>language_creators</code> \u7b49\u6709\u7528\u6807\u7b7e\u3002</p> <ol> <li> <p>\u70b9\u51fb Import dataset card template \u81ea\u52a8\u751f\u6210\u6a21\u677f\uff0c\u5e76\u5c3d\u53ef\u80fd\u586b\u5199\u5404\u90e8\u5206\u5185\u5bb9\u3002\u53ef\u53c2\u9605 Dataset Card Creation Guide\uff0c\u4e86\u89e3\u6bcf\u4e2a\u7ae0\u8282\u5efa\u8bae\u586b\u5199\u7684\u5185\u5bb9\u3002\u82e5\u6682\u65f6\u7f3a\u5c11\u4fe1\u606f\uff0c\u53ef\u5199\u4e0a [More Information Needed]\u3002</p> </li> <li> <p>\u5b8c\u6210\u540e\u63d0\u4ea4 <code>README.md</code> \u7684\u4fee\u6539\uff0c\u4ed3\u5e93\u9875\u9762\u5c06\u5c55\u793a\u5b8c\u6574\u7684\u6570\u636e\u96c6\u5361\u7247\u3002</p> </li> </ol> <p>\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7 YAML \u5b9a\u4e49\u62c6\u5206\u6216\u914d\u7f6e\uff0c\u65e0\u9700\u7f16\u5199\u4ee3\u7801\u5373\u53ef\u5b9a\u5236\u6570\u636e\u96c6\u7684\u52a0\u8f7d\u65b9\u5f0f\u3002</p> <p>\u9700\u8981\u7075\u611f\u65f6\uff0c\u53ef\u4ee5\u770b\u770b SNLI\u3001CNN/DailyMail \u4e0e Allocin\u00e9 \u7684\u5361\u7247\u793a\u4f8b\u3002</p>"},{"location":"datasets/docs/depth_estimation/","title":"\u6df1\u5ea6\u4f30\u8ba1","text":"<p>\u6df1\u5ea6\u4f30\u8ba1\u6570\u636e\u96c6\u7528\u4e8e\u8bad\u7ec3\u6a21\u578b\u63a8\u65ad\u56fe\u50cf\u4e2d\u6bcf\u4e2a\u50cf\u7d20\u5230\u6444\u50cf\u5934\u7684\u76f8\u5bf9\u8ddd\u79bb\u3002\u6b64\u7c7b\u6570\u636e\u96c6\u4e3b\u8981\u5e94\u7528\u4e8e\u89c6\u89c9\u611f\u77e5\u4e0e\u673a\u5668\u4eba\u611f\u77e5\uff0c\u4f8b\u5982\u4e3a\u81ea\u52a8\u9a7e\u9a76\u7ed8\u5236\u9053\u8def\u5730\u56fe\u3002\u672c\u6307\u5357\u6f14\u793a\u5982\u4f55\u5bf9\u6df1\u5ea6\u4f30\u8ba1\u6570\u636e\u96c6\u6267\u884c\u53d8\u6362\u3002</p> <p>\u5f00\u59cb\u524d\uff0c\u8bf7\u786e\u4fdd\u5df2\u5b89\u88c5\u6700\u65b0\u7248 <code>albumentations</code>\uff1a</p> <pre><code>pip install -U albumentations\n</code></pre> <p>Albumentations \u662f\u4e13\u4e3a\u8ba1\u7b97\u673a\u89c6\u89c9\u8bbe\u8ba1\u7684\u6570\u636e\u589e\u5f3a\u5e93\uff0c\u652f\u6301\u56fe\u50cf\u5206\u7c7b\u3001\u76ee\u6807\u68c0\u6d4b\u3001\u5206\u5272\u3001\u5173\u952e\u70b9\u4f30\u8ba1\u7b49\u4efb\u52a1\u3002</p> <p>\u672c\u6587\u4f7f\u7528 NYU Depth V2 \u6570\u636e\u96c6\uff0c\u8be5\u6570\u636e\u96c6\u5305\u542b\u7531 RGB \u4e0e\u6df1\u5ea6\u6444\u50cf\u5934\u62cd\u6444\u7684\u5ba4\u5185\u89c6\u9891\u5e8f\u5217\uff0c\u8986\u76d6 3 \u5ea7\u57ce\u5e02\u7684\u573a\u666f\uff0c\u5e76\u540c\u65f6\u63d0\u4f9b\u56fe\u50cf\u4e0e\u6df1\u5ea6\u56fe\u4f5c\u4e3a\u6807\u7b7e\u3002</p> <p>\u52a0\u8f7d <code>train</code> \u5212\u5206\u5e76\u67e5\u770b\u793a\u4f8b\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; train_dataset = load_dataset(\"sayakpaul/nyu_depth_v2\", split=\"train\")\n&gt;&gt;&gt; index = 17\n&gt;&gt;&gt; example = train_dataset[index]\n&gt;&gt;&gt; example\n{'image': &lt;PIL.PngImagePlugin.PngImageFile image mode=RGB size=640x480&gt;,\n 'depth_map': &lt;PIL.TiffImagePlugin.TiffImageFile image mode=F size=640x480&gt;}\n</code></pre> <p>\u6570\u636e\u96c6\u4e2d\u5305\u542b\u4e24\u5217\uff1a</p> <ul> <li><code>image</code>\uff1aPIL PNG \u56fe\u50cf\u5bf9\u8c61\uff0c\u6570\u636e\u7c7b\u578b\u4e3a <code>uint8</code>\u3002</li> <li><code>depth_map</code>\uff1aPIL TIFF \u56fe\u50cf\u5bf9\u8c61\uff0c\u6570\u636e\u7c7b\u578b\u4e3a <code>float32</code>\uff0c\u5373\u5bf9\u5e94\u7684\u6df1\u5ea6\u56fe\u3002</li> </ul> <p>\u6df1\u5ea6\u56fe\u4f7f\u7528 TIFF \u683c\u5f0f\u662f\u56e0\u4e3a\u5b83\u652f\u6301\u5305\u62ec <code>float32</code> \u5728\u5185\u7684\u591a\u79cd\u6570\u636e\u7c7b\u578b\uff1b\u800c JPEG/PNG \u53ea\u652f\u6301 <code>uint8</code> \u6216 <code>uint16</code>\u3002\u5982\u679c\u4f60\u7684\u6df1\u5ea6\u56fe\u4fdd\u5b58\u4e3a JPEG/PNG\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>Image(mode=\"F\")</code> \u5c06\u5176\u8bfb\u53d6\u4e3a\u5355\u901a\u9053\u7684 <code>float32</code>\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import Image\n\n&gt;&gt;&gt; train_dataset = train_dataset.cast_column(\"depth_map\", Image(mode=\"F\"))\n</code></pre> <p>\u67e5\u770b\u539f\u59cb\u56fe\u50cf\uff1a</p> <pre><code>&gt;&gt;&gt; example[\"image\"]\n</code></pre> <p>\u7531\u4e8e PIL \u65e0\u6cd5\u76f4\u63a5\u663e\u793a <code>float32</code> \u56fe\u50cf\uff0c\u53ef\u5148\u8c03\u7528 <code>.convert(\"RGB\")</code> \u8f6c\u4e3a <code>uint8</code> \u540e\u67e5\u770b\u6df1\u5ea6\u56fe\uff1a</p> <pre><code>&gt;&gt;&gt; example[\"depth_map\"].convert(\"RGB\")\n</code></pre> <p>\u7ed3\u679c\u51e0\u4e4e\u5168\u9ed1\uff0c\u9700\u8981\u5bf9\u6df1\u5ea6\u56fe\u8fdb\u884c\u7740\u8272\u624d\u80fd\u76f4\u89c2\u5c55\u793a\u3002\u6211\u4eec\u53ef\u4ee5\u5728\u663e\u793a\u65f6\u4f7f\u7528 <code>plt.imshow()</code> \u81ea\u52a8\u7740\u8272\uff0c\u6216\u501f\u52a9 <code>plt.cm</code> \u751f\u6210\u5f69\u8272\u6df1\u5ea6\u56fe\u518d\u663e\u793a\u3002\u4e0b\u9762\u793a\u4f8b\u91c7\u7528\u540e\u8005\uff0c\u4fbf\u4e8e\u540e\u7eed\u4fdd\u5b58\uff08\u5de5\u5177\u51fd\u6570\u6765\u81ea FastDepth \u4ed3\u5e93\uff09\uff1a</p> <pre><code>&gt;&gt;&gt; import numpy as np\n&gt;&gt;&gt; import matplotlib.pyplot as plt\n\n&gt;&gt;&gt; cmap = plt.cm.viridis\n\n&gt;&gt;&gt; def colored_depthmap(depth, d_min=None, d_max=None):\n...     if d_min is None:\n...         d_min = np.min(depth)\n...     if d_max is None:\n...         d_max = np.max(depth)\n...     depth_relative = (depth - d_min) / (d_max - d_min)\n...     return 255 * cmap(depth_relative)[:, :, :3]\n\n&gt;&gt;&gt; def show_depthmap(depth_map):\n...     if not isinstance(depth_map, np.ndarray):\n...         depth_map = np.array(depth_map)\n...     if depth_map.ndim == 3:\n...         depth_map = depth_map.squeeze()\n...\n...     d_min = np.min(depth_map)\n...     d_max = np.max(depth_map)\n...     depth_map = colored_depthmap(depth_map, d_min, d_max)\n...\n...     plt.imshow(depth_map.astype(\"uint8\"))\n...     plt.axis(\"off\")\n...     plt.show()\n\n&gt;&gt;&gt; show_depthmap(example[\"depth_map\"])\n</code></pre> <p>\u8fd8\u53ef\u4ee5\u540c\u65f6\u53ef\u89c6\u5316\u591a\u7ec4\u56fe\u50cf\u53ca\u5bf9\u5e94\u6df1\u5ea6\u56fe\uff1a</p> <pre><code>&gt;&gt;&gt; def merge_into_row(input_image, depth_target):\n...     if not isinstance(input_image, np.ndarray):\n...         input_image = np.array(input_image)\n...\n...     d_min = np.min(depth_target)\n...     d_max = np.max(depth_target)\n...     depth_target_col = colored_depthmap(depth_target, d_min, d_max)\n...     img_merge = np.hstack([input_image, depth_target_col])\n...\n...     return img_merge\n\n&gt;&gt;&gt; random_indices = np.random.choice(len(train_dataset), 9).tolist()\n&gt;&gt;&gt; plt.figure(figsize=(15, 6))\n&gt;&gt;&gt; for i, idx in enumerate(random_indices):\n...     example = train_dataset[idx]\n...     ax = plt.subplot(3, 3, i + 1)\n...     image_viz = merge_into_row(example[\"image\"], example[\"depth_map\"])\n...     plt.imshow(image_viz.astype(\"uint8\"))\n...     plt.axis(\"off\")\n</code></pre> <p>\u63a5\u4e0b\u6765\u4f7f\u7528 <code>albumentations</code> \u5e94\u7528\u6570\u636e\u589e\u5f3a\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u968f\u673a\u6c34\u5e73\u7ffb\u8f6c</li> <li>\u968f\u673a\u88c1\u526a</li> <li>\u968f\u673a\u4eae\u5ea6\u5bf9\u6bd4\u5ea6</li> <li>\u968f\u673a Gamma</li> <li>\u968f\u673a\u8272\u8c03\u9971\u548c\u5ea6</li> </ul> <pre><code>&gt;&gt;&gt; import albumentations as A\n\n&gt;&gt;&gt; crop_size = (448, 576)\n&gt;&gt;&gt; transforms = [\n...     A.HorizontalFlip(p=0.5),\n...     A.RandomCrop(crop_size[0], crop_size[1]),\n...     A.RandomBrightnessContrast(),\n...     A.RandomGamma(),\n...     A.HueSaturationValue()\n... ]\n</code></pre> <p>\u901a\u8fc7 <code>additional_targets</code> \u5c06\u76ee\u6807\u952e\u540d\u6620\u5c04\u5f97\u66f4\u76f4\u89c2\uff1a</p> <pre><code>&gt;&gt;&gt; additional_targets = {\"depth\": \"mask\"}\n&gt;&gt;&gt; aug = A.Compose(transforms=transforms, additional_targets=additional_targets)\n</code></pre> <p>\u8fd9\u6837\u5373\u53ef\u5c06\u6df1\u5ea6\u56fe\u4f20\u7ed9 <code>depth</code> \u53c2\u6570\uff0c\u800c\u975e\u9ed8\u8ba4\u7684 <code>mask</code>\uff0c\u4e0b\u65b9\u7684 <code>apply_transforms()</code> \u51fd\u6570\u5373\u4f53\u73b0\u4e86\u8fd9\u4e00\u70b9\u3002</p> <p>\u5b9a\u4e49\u51fd\u6570\u540c\u65f6\u53d8\u6362\u56fe\u50cf\u4e0e\u6df1\u5ea6\u56fe\uff1a</p> <pre><code>&gt;&gt;&gt; def apply_transforms(examples):\n...     transformed_images, transformed_maps = [], []\n...     for image, depth_map in zip(examples[\"image\"], examples[\"depth_map\"]):\n...         image, depth_map = np.array(image), np.array(depth_map)\n...         transformed = aug(image=image, depth=depth_map)\n...         transformed_images.append(transformed[\"image\"])\n...         transformed_maps.append(transformed[\"depth\"])\n...\n...     examples[\"pixel_values\"] = transformed_images\n...     examples[\"labels\"] = transformed_maps\n...     return examples\n</code></pre> <p>\u4f7f\u7528 [<code>~Dataset.set_transform</code>] \u5728\u6279\u91cf\u52a0\u8f7d\u65f6\u6309\u9700\u5e94\u7528\u8f6c\u6362\uff0c\u8282\u7701\u78c1\u76d8\u7a7a\u95f4\uff1a</p> <pre><code>&gt;&gt;&gt; train_dataset.set_transform(apply_transforms)\n</code></pre> <p>\u901a\u8fc7\u7d22\u5f15 <code>pixel_values</code> \u4e0e <code>labels</code> \u9a8c\u8bc1\u8f6c\u6362\u7ed3\u679c\uff1a</p> <pre><code>&gt;&gt;&gt; example = train_dataset[index]\n\n&gt;&gt;&gt; plt.imshow(example[\"pixel_values\"])\n&gt;&gt;&gt; plt.axis(\"off\")\n&gt;&gt;&gt; plt.show()\n</code></pre> <p>\u518d\u67e5\u770b\u5bf9\u5e94\u7684\u6df1\u5ea6\u56fe\uff1a</p> <pre><code>&gt;&gt;&gt; show_depthmap(example[\"labels\"])\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u4e4b\u524d\u7684 <code>random_indices</code>\uff0c\u53ef\u89c6\u5316\u591a\u7ec4\u589e\u5e7f\u6837\u672c\uff1a</p> <pre><code>&gt;&gt;&gt; plt.figure(figsize=(15, 6))\n\n&gt;&gt;&gt; for i, idx in enumerate(random_indices):\n...     ax = plt.subplot(3, 3, i + 1)\n...     example = train_dataset[idx]\n...     image_viz = merge_into_row(example[\"pixel_values\"], example[\"labels\"])\n...     plt.imshow(image_viz.astype(\"uint8\"))\n...     plt.axis(\"off\")\n</code></pre>"},{"location":"datasets/docs/document_dataset/","title":"\u521b\u5efa\u6587\u6863\u6570\u636e\u96c6","text":"<p>\u672c\u6307\u5357\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 <code>PdfFolder</code> \u642d\u914d\u5143\u6570\u636e\u6784\u5efa\u6587\u6863\u6570\u636e\u96c6\u3002\u8fd9\u662f\u4e00\u79cd\u65e0\u9700\u7f16\u5199\u4ee3\u7801\u5373\u53ef\u5feb\u901f\u5904\u7406\u4e0a\u5343\u4e2a PDF \u7684\u65b9\u6848\u3002</p> <p>\u63d0\u793a</p> <p>\u53ef\u901a\u8fc7\u8bbf\u95ee\u63a7\u5236\u5148\u6536\u96c6\u7528\u6237\u8054\u7cfb\u65b9\u5f0f\u3002\u8be6\u60c5\u53c2\u9605 Gated datasets \u6307\u5357\u3002</p>"},{"location":"datasets/docs/document_dataset/#pdffolder","title":"PdfFolder","text":"<p><code>PdfFolder</code> \u6784\u5efa\u5668\u4e13\u4e3a\u5feb\u901f\u52a0\u8f7d\u5927\u89c4\u6a21 PDF \u6587\u6863\u800c\u8bbe\u8ba1\uff0c\u65e0\u9700\u989d\u5916\u7f16\u7801\u3002</p> <p>\u63d0\u793a</p> <p>\u8bbf\u95ee\u62c6\u5206\u6a21\u5f0f\u5c42\u7ea7\u4e86\u89e3 <code>PdfFolder</code> \u5982\u4f55\u4f9d\u636e\u76ee\u5f55\u7ed3\u6784\u751f\u6210\u6570\u636e\u96c6\u5212\u5206\u3002</p> <p><code>PdfFolder</code> \u4f1a\u6839\u636e\u76ee\u5f55\u540d\u79f0\u81ea\u52a8\u63a8\u65ad\u7c7b\u522b\u6807\u7b7e\u3002\u8bf7\u6309\u5982\u4e0b\u7ed3\u6784\u7ec4\u7ec7\u6570\u636e\uff1a</p> <pre><code>folder/train/resume/0001.pdf\nfolder/train/resume/0002.pdf\nfolder/train/resume/0003.pdf\n\nfolder/train/invoice/0001.pdf\nfolder/train/invoice/0002.pdf\nfolder/train/invoice/0003.pdf\n</code></pre> <p>\u76ee\u5f55\u7b26\u5408\u8981\u6c42\u540e\uff0c\u5373\u53ef\u76f4\u63a5\u4f7f\u7528 [<code>load_dataset</code>] \u52a0\u8f7d\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"path/to/folder\")\n</code></pre> <p>\u4e0a\u8ff0\u5199\u6cd5\u7b49\u4ef7\u4e8e\u663e\u5f0f\u6307\u5b9a <code>pdffolder</code> \u5e76\u4f20\u5165\u76ee\u5f55\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"pdffolder\", data_dir=\"/path/to/folder\")\n</code></pre> <p>\u82e5\u5305\u542b\u591a\u4e2a\u5212\u5206\uff0c\u53ef\u4f7f\u7528\u4ee5\u4e0b\u76ee\u5f55\u7ed3\u6784\uff1a</p> <pre><code>folder/train/resume/0001.pdf\nfolder/train/resume/0002.pdf\nfolder/test/invoice/0001.pdf\nfolder/test/invoice/0002.pdf\n</code></pre> <p>\u6ce8\u610f</p> <p>\u5982\u679c\u6240\u6709 PDF \u4f4d\u4e8e\u540c\u4e00\u76ee\u5f55\u6216\u5c42\u7ea7\u4e0d\u4e00\u81f4\uff0c\u5c06\u4e0d\u4f1a\u81ea\u52a8\u751f\u6210 <code>label</code> \u5217\u3002\u5982\u9700\u6807\u7b7e\uff0c\u8bf7\u663e\u5f0f\u8bbe\u7f6e <code>drop_labels=False</code>\u3002</p> <p>\u5982\u9700\u8865\u5145\u6587\u672c\u63cf\u8ff0\u3001\u8fb9\u754c\u6846\u7b49\u4fe1\u606f\uff0c\u53ef\u5728\u76ee\u5f55\u4e2d\u6dfb\u52a0 <code>metadata.csv</code>\uff0c\u4e5f\u53ef\u4f7f\u7528 <code>metadata.jsonl</code> \u6216 <code>metadata.parquet</code>\uff1a</p> <pre><code>folder/train/metadata.csv\nfolder/train/0001.pdf\nfolder/train/0002.pdf\nfolder/train/0003.pdf\n</code></pre> <p><code>metadata.csv</code> \u5fc5\u987b\u5305\u542b <code>file_name</code> \u6216 <code>*_file_name</code> \u5b57\u6bb5\uff0c\u7528\u4e8e\u5173\u8054 PDF \u4e0e\u5143\u6570\u636e\uff1a</p> <pre><code>file_name,additional_feature\n0001.pdf,This is a first value of a text feature you added to your pdfs\n0002.pdf,This is a second value of a text feature you added to your pdfs\n0003.pdf,This is a third value of a text feature you added to your pdfs\n</code></pre> <p>\u6216\u4f7f\u7528 <code>metadata.jsonl</code>\uff1a</p> <pre><code>{\"file_name\": \"0001.pdf\", \"additional_feature\": \"This is a first value of a text feature you added to your pdfs\"}\n{\"file_name\": \"0002.pdf\", \"additional_feature\": \"This is a second value of a text feature you added to your pdfs\"}\n{\"file_name\": \"0003.pdf\", \"additional_feature\": \"This is a third value of a text feature you added to your pdfs\"}\n</code></pre> <p>\u5176\u4e2d <code>file_name</code> \u5fc5\u987b\u662f\u4e0e\u5143\u6570\u636e\u540c\u76ee\u5f55\u4e0b PDF \u7684\u540d\u79f0\uff0c\u6216\u76f8\u5bf9\u8def\u5f84\u3002</p> <p>\u5982\u679c\u6bcf\u884c\u9700\u8981\u5173\u8054\u591a\u4e2a PDF\uff08\u4f8b\u5982\u8f93\u5165\u4e0e\u8f93\u51fa\u90fd\u662f\u6587\u6863\uff09\uff0c\u53ef\u8bbe\u7f6e\u591a\u4e2a\u5b57\u6bb5\uff1a</p> <pre><code>{\"input_file_name\": \"0001.pdf\", \"output_file_name\": \"0001_output.pdf\"}\n{\"input_file_name\": \"0002.pdf\", \"output_file_name\": \"0002_output.pdf\"}\n{\"input_file_name\": \"0003.pdf\", \"output_file_name\": \"0003_output.pdf\"}\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u5b57\u6bb5\uff0c\u547d\u540d\u4e3a <code>file_names</code> \u6216 <code>*_file_names</code>\uff1a</p> <pre><code>{\"pdfs_file_names\": [\"0001_part1.pdf\", \"0001_part2.pdf\"], \"label\": \"urgent\"}\n{\"pdfs_file_names\": [\"0002_part1.pdf\", \"0002_part2.pdf\"], \"label\": \"urgent\"}\n{\"pdfs_file_names\": [\"0003_part1.pdf\", \"0002_part2.pdf\"], \"label\": \"normal\"}\n</code></pre>"},{"location":"datasets/docs/document_dataset/#ocr","title":"OCR\uff08\u5149\u5b66\u5b57\u7b26\u8bc6\u522b\uff09","text":"<p>OCR \u6570\u636e\u96c6\u5e38\u5728\u5143\u6570\u636e\u4e2d\u5b58\u653e PDF \u5185\u7684\u6587\u672c\u3002\u4f8b\u5982\uff1a</p> <pre><code>file_name,text\n0001.pdf,Invoice 1234 from 01/01/1970...\n0002.pdf,Software Engineer Resume. Education: ...\n0003.pdf,Attention is all you need. Abstract. The ...\n</code></pre> <p>\u901a\u8fc7 <code>PdfFolder</code> \u52a0\u8f7d\u540e\u5373\u53ef\u5f97\u5230 <code>text</code> \u5217\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"pdffolder\", data_dir=\"/path/to/folder\", split=\"train\")\n&gt;&gt;&gt; dataset[0][\"text\"]\n\"Invoice 1234 from 01/01/1970...\"\n</code></pre>"},{"location":"datasets/docs/document_dataset/#hub","title":"\u4e0a\u4f20\u5230 Hub","text":"<p>\u6784\u5efa\u5b8c\u6210\u540e\uff0c\u53ef\u4f7f\u7528 <code>huggingface_hub</code> \u5c06\u6570\u636e\u96c6\u5206\u4eab\u81f3 Hub\u3002\u786e\u4fdd\u5df2\u5b89\u88c5 huggingface_hub \u5e76\u5b8c\u6210\u767b\u5f55\uff08\u8be6\u89c1Python \u4e0a\u4f20\u6559\u7a0b\uff09\u3002</p> <p>\u4f7f\u7528 <code>huggingface_hub.HfApi.upload_folder</code> \u4e0a\u4f20\uff1a</p> <pre><code>from huggingface_hub import HfApi\napi = HfApi()\n\napi.upload_folder(\n    folder_path=\"/path/to/local/dataset\",\n    repo_id=\"username/my-cool-dataset\",\n    repo_type=\"dataset\",\n)\n</code></pre>"},{"location":"datasets/docs/document_load/","title":"\u52a0\u8f7d PDF \u6570\u636e","text":"<p>\u6ce8\u610f</p> <p>PDF \u652f\u6301\u4ecd\u5904\u4e8e\u5b9e\u9a8c\u9636\u6bb5\uff0c\u672a\u6765\u53ef\u80fd\u8c03\u6574\u3002</p> <p>PDF \u6570\u636e\u96c6\u7684\u5217\u7c7b\u578b\u4e3a [<code>Pdf</code>]\uff0c\u5176\u4e2d\u5305\u542b <code>pdfplumber</code> \u5bf9\u8c61\u3002</p> <p>\u63d0\u793a</p> <p>\u4f7f\u7528 PDF \u6570\u636e\u96c6\u524d\u8bf7\u5148\u5b89\u88c5 <code>pdfplumber</code>\uff0c\u5b89\u88c5\u6b65\u9aa4\u89c1\u6307\u5357\u3002</p> <p>\u52a0\u8f7d\u6570\u636e\u96c6\u5e76\u8bbf\u95ee <code>pdf</code> \u5217\u65f6\uff0c\u4f1a\u5f97\u5230 <code>pdfplumber</code> \u7684 <code>PDF</code> \u5bf9\u8c61\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset, Pdf\n\n&gt;&gt;&gt; dataset = load_dataset(\"path/to/pdf/folder\", split=\"train\")\n&gt;&gt;&gt; dataset[0][\"pdf\"]\n&lt;pdfplumber.pdf.PDF at 0x1075bc320&gt;\n</code></pre> <p>\u6ce8\u610f</p> <p>\u8bbf\u95ee\u6837\u672c\u65f6\u8bf7\u4f7f\u7528 <code>dataset[0][\"pdf\"]</code> \u7684\u5199\u6cd5\uff0c\u4ee5\u514d\u4e00\u6b21\u6027\u521b\u5efa\u5168\u90e8 PDF \u5bf9\u8c61\uff0c\u5c24\u5176\u662f\u5927\u6570\u636e\u96c6\u65f6\u4f1a\u975e\u5e38\u8017\u65f6\u3002</p> <p>\u5982\u4f55\u52a0\u8f7d\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\u96c6\uff0c\u8bf7\u53c2\u8003\u901a\u7528\u52a0\u8f7d\u6307\u5357\u3002</p>"},{"location":"datasets/docs/document_load/#_1","title":"\u8bfb\u53d6\u9875\u9762","text":"<p>\u53ef\u4ee5\u901a\u8fc7 <code>.pages</code> \u5c5e\u6027\u76f4\u63a5\u8bbf\u95ee PDF \u7684\u9875\u9762\uff0c\u7136\u540e\u4f7f\u7528 <code>pdfplumber</code> \u7684\u65b9\u6cd5\u8bfb\u53d6\u6587\u672c\u3001\u8868\u683c\u6216\u56fe\u7247\uff1a</p> <pre><code>&gt;&gt;&gt; pdf = dataset[0][\"pdf\"]\n&gt;&gt;&gt; first_page = pdf.pages[0]\n&gt;&gt;&gt; first_page\n&lt;Page:1&gt;\n&gt;&gt;&gt; first_page.extract_text()\nDocling Technical Report\nVersion1.0\nChristophAuer MaksymLysak AhmedNassar MicheleDolfi NikolaosLivathinos\n...\n&gt;&gt;&gt; first_page.images\n[{'x0': 256.5, 'y0': 621.0, ...}]\n&gt;&gt;&gt; first_page.extract_tables()\n[]\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5c06\u6bcf\u9875\u8f6c\u6362\u4e3a <code>PIL.Image</code>\uff1a</p> <pre><code>&gt;&gt;&gt; import PIL.Image\n&gt;&gt;&gt; import io\n&gt;&gt;&gt; first_page.to_image()\n&lt;pdfplumber.display.PageImage at 0x107d68dd0&gt;\n&gt;&gt;&gt; buffer = io.BytesIO()\n&gt;&gt;&gt; first_page.to_image().save(buffer)\n&gt;&gt;&gt; img = PIL.Image.open(buffer)\n&gt;&gt;&gt; img\n&lt;PIL.PngImagePlugin.PngImageFile image mode=P size=612x792&gt;\n</code></pre> <p>\u53ef\u901a\u8fc7 <code>resolution=</code> \u53c2\u6570\u8c03\u6574 <code>.to_image()</code> \u7684\u6e32\u67d3\u5206\u8fa8\u7387\uff08\u9ed8\u8ba4 72 ppi\uff09\u3002</p>"},{"location":"datasets/docs/document_load/#_2","title":"\u672c\u5730\u6587\u4ef6","text":"<p>\u53ef\u4ee5\u76f4\u63a5\u4ece PDF \u8def\u5f84\u6784\u5efa\u6570\u636e\u96c6\u3002\u501f\u52a9 [<code>~Dataset.cast_column</code>] \u5c06\u8def\u5f84\u5217\u8f6c\u6362\u4e3a [<code>Pdf</code>] \u7279\u5f81\uff0c\u5373\u53ef\u751f\u6210 <code>pdfplumber</code> \u5bf9\u8c61\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import Dataset, Pdf\n\n&gt;&gt;&gt; dataset = Dataset.from_dict({\"pdf\": [\"path/to/pdf_1\", \"path/to/pdf_2\", ..., \"path/to/pdf_n\"]}).cast_column(\"pdf\", Pdf())\n&gt;&gt;&gt; dataset[0][\"pdf\"]\n&lt;pdfplumber.pdf.PDF at 0x1657d0280&gt;\n</code></pre> <p>\u5982\u679c\u53ea\u9700\u8bbf\u95ee\u6587\u4ef6\u8def\u5f84\u6216\u5b57\u8282\u800c\u4e0d\u89e3\u7801 PDF\uff0c\u53ef\u8bbe\u7f6e <code>decode=False</code>\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = dataset.cast_column(\"pdf\", Pdf(decode=False))\n&gt;&gt;&gt; dataset[0][\"pdf\"]\n{'bytes': None,\n 'path': 'path/to/pdf/folder/pdf0.pdf'}\n</code></pre>"},{"location":"datasets/docs/document_load/#pdffolder","title":"PdfFolder","text":"<p>\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>PdfFolder</code> \u6784\u5efa\u5668\uff08\u65e0\u9700\u81ea\u5b9a\u4e49 dataloader\uff09\u5feb\u901f\u52a0\u8f7d\u4e0a\u5343\u4e2a PDF\uff0c\u9002\u5408\u5404\u79cd\u89c6\u89c9\u4efb\u52a1\u3002\u76ee\u5f55\u7ed3\u6784\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>folder/train/resume/0001.pdf\nfolder/train/resume/0002.pdf\nfolder/train/resume/0003.pdf\n\nfolder/train/invoice/0001.pdf\nfolder/train/invoice/0002.pdf\nfolder/train/invoice/0003.pdf\n</code></pre> <p>\u82e5\u76ee\u5f55\u7b26\u5408\u8981\u6c42\uff0c\u53ef\u76f4\u63a5\u901a\u8fc7 [<code>load_dataset</code>] \u52a0\u8f7d\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"username/dataset_name\")\n&gt;&gt;&gt; # \u6216\u672c\u5730\uff1a\n&gt;&gt;&gt; dataset = load_dataset(\"/path/to/folder\")\n</code></pre> <p>\u5bf9\u4e8e\u672c\u5730\u6570\u636e\uff0c\u7b49\u4ef7\u4e8e\u624b\u52a8\u4f20\u5165 <code>pdffolder</code> \u4e0e <code>data_dir</code>\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"pdffolder\", data_dir=\"/path/to/folder\")\n</code></pre> <p>\u6b64\u65f6\u5373\u53ef\u6309\u5982\u4e0b\u65b9\u5f0f\u8bbf\u95ee <code>pdfplumber.pdf.PDF</code> \u5bf9\u8c61\uff1a</p> <pre><code>&gt;&gt;&gt; dataset[\"train\"][0]\n{\"pdf\": &lt;pdfplumber.pdf.PDF at 0x161715e50&gt;, \"label\": 0}\n\n&gt;&gt;&gt; dataset[\"train\"][-1]\n{\"pdf\": &lt;pdfplumber.pdf.PDF at 0x16170bd90&gt;, \"label\": 1}\n</code></pre> <p>\u82e5\u5e0c\u671b\u5ffd\u7565\u5143\u6570\u636e\u6587\u4ef6\uff0c\u53ef\u8bbe\u7f6e <code>drop_metadata=True</code>\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"username/dataset_with_metadata\", drop_metadata=True)\n</code></pre> <p>\u82e5\u76ee\u5f55\u540d\u4e2d\u5305\u542b\u6807\u7b7e\u800c\u4f60\u4e0d\u60f3\u4fdd\u7559\uff0c\u8bbe\u7f6e <code>drop_labels=True</code>\uff0c\u6b64\u65f6\u6570\u636e\u96c6\u4e2d\u53ea\u5305\u62ec <code>pdf</code> \u5217\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"username/dataset_without_metadata\", drop_labels=True)\n</code></pre> <p><code>filters</code> \u53c2\u6570\u5141\u8bb8\u57fa\u4e8e\u6807\u7b7e\u6216\u5143\u6570\u636e\u52a0\u8f7d\u6570\u636e\u5b50\u96c6\u3002\u82e5\u5143\u6570\u636e\u4e3a Parquet \u683c\u5f0f\uff0c\u5c06\u83b7\u5f97\u8f83\u9ad8\u7684\u8fc7\u6ee4\u6548\u7387\u3002\u5efa\u8bae\u7ed3\u5408 <code>streaming=True</code> \u4f7f\u7528\uff0c\u5426\u5219\u9ed8\u8ba4\u4f1a\u5148\u5b8c\u6574\u4e0b\u8f7d\u540e\u518d\u8fc7\u6ee4\uff1a</p> <pre><code>&gt;&gt;&gt; filters = [(\"label\", \"=\", 0)]\n&gt;&gt;&gt; dataset = load_dataset(\"username/dataset_name\", streaming=True, filters=filters)\n</code></pre> <p>\u63d0\u793a</p> <p>\u60f3\u4e86\u89e3\u5982\u4f55\u521b\u5efa <code>PdfFolder</code> \u6570\u636e\u96c6\uff0c\u8bf7\u53c2\u9605\u300a\u521b\u5efa\u6587\u6863\u6570\u636e\u96c6\u300b\u3002</p>"},{"location":"datasets/docs/document_load/#pdf_1","title":"PDF \u89e3\u7801","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u904d\u5386\u6570\u636e\u96c6\u65f6\u4f1a\u987a\u5e8f\u89e3\u7801 <code>pdfplumber</code> <code>PDF</code> \u5bf9\u8c61\uff0c\u4ec5\u5728\u8bbf\u95ee\u9875\u9762\u65f6\u624d\u8bfb\u53d6\u5185\u5bb9\u3002</p> <p>\u53ef\u4ee5\u901a\u8fc7\u591a\u7ebf\u7a0b\u52a0\u901f\u89e3\u7801\uff1a</p> <pre><code>&gt;&gt;&gt; import os\n&gt;&gt;&gt; num_threads = num_threads = min(32, (os.cpu_count() or 1) + 4)\n&gt;&gt;&gt; dataset = dataset.decode(num_threads=num_threads)\n&gt;&gt;&gt; for example in dataset:  # \u6700\u9ad8\u53ef\u5feb 20 \u500d\n...     ...\n</code></pre> <p><code>num_threads</code> \u53ef\u5f00\u542f\u591a\u7ebf\u7a0b\uff0c\u7279\u522b\u9002\u5408\u63d0\u5347\u8fdc\u7a0b\u6d41\u5f0f\u52a0\u8f7d\u901f\u5ea6\uff1b\u4f46\u5728\u672c\u5730\u5feb\u901f\u78c1\u76d8\u4e0a\uff0c\u591a\u7ebf\u7a0b\u53ef\u80fd\u4e0d\u5982 <code>num_threads=0</code>\u3002</p> <p>\u82e5\u53ea\u9700\u8bbf\u95ee\u8def\u5f84\u6216\u5b57\u8282\uff0c\u53ef\u7981\u7528\u89e3\u7801\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = dataset.decode(False)\n</code></pre> <p>\u8bf4\u660e</p> <p>[<code>IterableDataset.decode</code>] \u76ee\u524d\u4ec5\u9002\u7528\u4e8e\u6d41\u5f0f\u6570\u636e\u96c6\u3002</p>"},{"location":"datasets/docs/faiss_es/","title":"\u641c\u7d22\u7d22\u5f15","text":"<p>FAISS \u4e0e Elasticsearch \u53ef\u7528\u4e8e\u5728\u6570\u636e\u96c6\u4e2d\u68c0\u7d22\u76f8\u5173\u6837\u672c\u3002\u8fd9\u5bf9\u9700\u8981\u67e5\u627e\u7279\u5b9a\u793a\u4f8b\u7684 NLP \u4efb\u52a1\u5c24\u4e3a\u6709\u7528\uff0c\u4f8b\u5982\u5f00\u653e\u57df\u95ee\u7b54\u3002\u4e0b\u9762\u4ecb\u7ecd\u5982\u4f55\u4e3a\u6570\u636e\u96c6\u6784\u5efa\u7d22\u5f15\u3002</p>"},{"location":"datasets/docs/faiss_es/#faiss","title":"FAISS","text":"<p>FAISS \u901a\u8fc7\u5411\u91cf\u8868\u793a\u7684\u76f8\u4f3c\u5ea6\u68c0\u7d22\u6587\u6863\u3002\u672c\u793a\u4f8b\u4f7f\u7528 DPR \u6a21\u578b\u751f\u6210\u5411\u91cf\u3002</p> <ol> <li> <p>\u4e0b\u8f7d DPR \u6a21\u578b\uff1a</p> <pre><code>&gt;&gt;&gt; from transformers import DPRContextEncoder, DPRContextEncoderTokenizer\n&gt;&gt;&gt; import torch\n&gt;&gt;&gt; torch.set_grad_enabled(False)\n&gt;&gt;&gt; ctx_encoder = DPRContextEncoder.from_pretrained(\"facebook/dpr-ctx_encoder-single-nq-base\")\n&gt;&gt;&gt; ctx_tokenizer = DPRContextEncoderTokenizer.from_pretrained(\"facebook/dpr-ctx_encoder-single-nq-base\")\n</code></pre> </li> <li> <p>\u52a0\u8f7d\u6570\u636e\u96c6\u5e76\u8ba1\u7b97\u5411\u91cf\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; ds = load_dataset(\"crime_and_punish\", split=\"train[:100]\")\n&gt;&gt;&gt; ds_with_embeddings = ds.map(\n...     lambda example: {\n...         \"embeddings\": ctx_encoder(**ctx_tokenizer(example[\"line\"], return_tensors=\"pt\"))[0][0].numpy()\n...     }\n... )\n</code></pre> </li> <li> <p>\u4f7f\u7528 [<code>Dataset.add_faiss_index</code>] \u521b\u5efa\u7d22\u5f15\uff1a</p> <pre><code>&gt;&gt;&gt; ds_with_embeddings.add_faiss_index(column=\"embeddings\")\n</code></pre> </li> <li> <p>\u52a0\u8f7d DPR \u95ee\u9898\u7f16\u7801\u5668\uff0c\u5e76\u901a\u8fc7 [<code>Dataset.get_nearest_examples</code>] \u67e5\u8be2\uff1a</p> <pre><code>&gt;&gt;&gt; from transformers import DPRQuestionEncoder, DPRQuestionEncoderTokenizer\n&gt;&gt;&gt; q_encoder = DPRQuestionEncoder.from_pretrained(\"facebook/dpr-question_encoder-single-nq-base\")\n&gt;&gt;&gt; q_tokenizer = DPRQuestionEncoderTokenizer.from_pretrained(\"facebook/dpr-question_encoder-single-nq-base\")\n\n&gt;&gt;&gt; question = \"Is it serious ?\"\n&gt;&gt;&gt; question_embedding = q_encoder(**q_tokenizer(question, return_tensors=\"pt\"))[0][0].numpy()\n&gt;&gt;&gt; scores, retrieved_examples = ds_with_embeddings.get_nearest_examples(\"embeddings\", question_embedding, k=10)\n&gt;&gt;&gt; retrieved_examples[\"line\"][0]\n'_that_ serious? It is not serious at all. It\u2019s simply a fantasy to amuse\\r\\n'\n</code></pre> </li> <li> <p>\u53ef\u901a\u8fc7 [<code>Dataset.get_index</code>] \u8bbf\u95ee\u5e95\u5c42\u7d22\u5f15\uff0c\u4f8b\u5982\u6267\u884c <code>range_search</code>\uff1a</p> <pre><code>&gt;&gt;&gt; faiss_index = ds_with_embeddings.get_index(\"embeddings\").faiss_index\n&gt;&gt;&gt; limits, distances, indices = faiss_index.range_search(x=question_embedding.reshape(1, -1), thresh=0.95)\n</code></pre> </li> <li> <p>\u67e5\u8be2\u5b8c\u6210\u540e\uff0c\u5c06\u7d22\u5f15\u4fdd\u5b58\u5230\u78c1\u76d8\uff1a</p> <pre><code>&gt;&gt;&gt; ds_with_embeddings.save_faiss_index(\"embeddings\", \"my_index.faiss\")\n</code></pre> </li> <li> <p>\u9700\u8981\u65f6\u518d\u91cd\u65b0\u52a0\u8f7d\uff1a</p> <pre><code>&gt;&gt;&gt; ds = load_dataset(\"crime_and_punish\", split=\"train[:100]\")\n&gt;&gt;&gt; ds.load_faiss_index(\"embeddings\", \"my_index.faiss\")\n</code></pre> </li> </ol>"},{"location":"datasets/docs/faiss_es/#elasticsearch","title":"Elasticsearch","text":"<p>\u4e0e FAISS \u4e0d\u540c\uff0cElasticsearch \u57fa\u4e8e\u7cbe\u786e\u5339\u914d\u8fdb\u884c\u68c0\u7d22\u3002</p> <p>\u5148\u5728\u672c\u5730\u542f\u52a8 Elasticsearch\uff0c\u6216\u53c2\u8003\u5b98\u65b9\u5b89\u88c5\u6307\u5357\u3002</p> <ol> <li> <p>\u52a0\u8f7d\u9700\u8981\u5efa\u7acb\u7d22\u5f15\u7684\u6570\u636e\u96c6\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; squad = load_dataset(\"rajpurkar/squad\", split=\"validation\")\n</code></pre> </li> <li> <p>\u4f7f\u7528 [<code>Dataset.add_elasticsearch_index</code>] \u6784\u5efa\u7d22\u5f15\uff1a</p> <pre><code>&gt;&gt;&gt; squad.add_elasticsearch_index(\"context\", host=\"localhost\", port=\"9200\")\n</code></pre> </li> <li> <p>\u901a\u8fc7 [<code>Dataset.get_nearest_examples</code>] \u67e5\u8be2 <code>context</code> \u7d22\u5f15\uff1a</p> <pre><code>&gt;&gt;&gt; query = \"machine\"\n&gt;&gt;&gt; scores, retrieved_examples = squad.get_nearest_examples(\"context\", query, k=10)\n&gt;&gt;&gt; retrieved_examples[\"title\"][0]\n'Computational_complexity_theory'\n</code></pre> </li> <li> <p>\u82e5\u5e0c\u671b\u590d\u7528\u7d22\u5f15\uff0c\u53ef\u5728\u6784\u5efa\u65f6\u6307\u5b9a <code>es_index_name</code>\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; squad = load_dataset(\"rajpurkar/squad\", split=\"validation\")\n&gt;&gt;&gt; squad.add_elasticsearch_index(\"context\", host=\"localhost\", port=\"9200\", es_index_name=\"hf_squad_val_context\")\n&gt;&gt;&gt; squad.get_index(\"context\").es_index_name\nhf_squad_val_context\n</code></pre> </li> <li> <p>\u4e4b\u540e\u53ef\u901a\u8fc7\u540c\u540d\u7d22\u5f15\u91cd\u65b0\u52a0\u8f7d\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; squad = load_dataset(\"rajpurkar/squad\", split=\"validation\")\n&gt;&gt;&gt; squad.load_elasticsearch_index(\"context\", host=\"localhost\", port=\"9200\", es_index_name=\"hf_squad_val_context\")\n&gt;&gt;&gt; query = \"machine\"\n&gt;&gt;&gt; scores, retrieved_examples = squad.get_nearest_examples(\"context\", query, k=10)\n</code></pre> </li> </ol> <p>\u5982\u9700\u66f4\u9ad8\u7ea7\u7684\u914d\u7f6e\uff0c\u53ef\u81ea\u5b9a\u4e49\u5ba2\u6237\u7aef\u4e0e\u7d22\u5f15\u8bbe\u7f6e\uff1a</p> <pre><code>&gt;&gt;&gt; import elasticsearch as es\n&gt;&gt;&gt; import elasticsearch.helpers\n&gt;&gt;&gt; from elasticsearch import Elasticsearch\n&gt;&gt;&gt; es_client = Elasticsearch([{\"host\": \"localhost\", \"port\": \"9200\"}])  # \u9ed8\u8ba4\u5ba2\u6237\u7aef\n&gt;&gt;&gt; es_config = {\n...     \"settings\": {\n...         \"number_of_shards\": 1,\n...         \"analysis\": {\"analyzer\": {\"stop_standard\": {\"type\": \"standard\", \" stopwords\": \"_english_\"}}},\n...     },\n...     \"mappings\": {\"properties\": {\"text\": {\"type\": \"text\", \"analyzer\": \"standard\", \"similarity\": \"BM25\"}}},\n... }  # \u9ed8\u8ba4\u914d\u7f6e\n&gt;&gt;&gt; es_index_name = \"hf_squad_context\"\n&gt;&gt;&gt; squad.add_elasticsearch_index(\"context\", es_client=es_client, es_config=es_config, es_index_name=es_index_name)\n</code></pre>"},{"location":"datasets/docs/filesystems/","title":"\u4e91\u7aef\u5b58\u50a8","text":""},{"location":"datasets/docs/filesystems/#hugging-face-datasets","title":"Hugging Face Datasets","text":"<p>Hugging Face \u6570\u636e\u96c6 Hub \u6c47\u96c6\u4e86\u6570\u91cf\u4e0d\u65ad\u589e\u957f\u7684\u8de8\u9886\u57df\u3001\u8de8\u4efb\u52a1\u6570\u636e\u96c6\u3002\u5b83\u4e0d\u4ec5\u63d0\u4f9b\u4e91\u5b58\u50a8\uff0c\u8fd8\u4f9d\u6258 git \u5b9e\u73b0\u7248\u672c\u7ba1\u7406\uff0c\u5e76\u5185\u7f6e Dataset Viewer \u65b9\u4fbf\u6d4f\u89c8\uff0c\u662f\u5b58\u653e AI \u6570\u636e\u7684\u7406\u60f3\u5e73\u53f0\u3002</p> <p>\u672c\u6307\u5357\u5c55\u793a\u5982\u4f55\u501f\u52a9 <code>fsspec</code> \u7684\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0\u4ece\u5176\u4ed6\u4e91\u5b58\u50a8\u5bfc\u5165\u6570\u636e\u3002</p>"},{"location":"datasets/docs/filesystems/#_2","title":"\u4ece\u4e91\u5b58\u50a8\u5bfc\u5165\u6570\u636e","text":"<p>\u5927\u591a\u6570\u4e91\u5b58\u50a8\u63d0\u4f9b <code>fsspec</code> \u517c\u5bb9\u7684 FileSystem \u5b9e\u73b0\uff0c\u53ef\u4f7f\u7528\u7edf\u4e00\u4ee3\u7801\u5bfc\u5165\u5e76\u53d1\u5e03\u5230 Hugging Face\u3002\u5e38\u89c1\u4e91\u5382\u5546\u53ca\u5bf9\u5e94\u5b9e\u73b0\u5982\u4e0b\uff1a</p> \u5b58\u50a8\u670d\u52a1 \u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0 Amazon S3 s3fs Google Cloud Storage gcsfs Azure Blob/DataLake adlfs Oracle Cloud Storage ocifs <p>\u4ee5\u4e0b\u793a\u4f8b\u6f14\u793a\u5982\u4f55\u4ece\u4e91\u5b58\u50a8\u5bfc\u5165 Parquet \u6587\u4ef6\uff0c\u5e76\u5728 Hugging Face \u53d1\u5e03\u6570\u636e\u96c6\u3002</p> <p>\u9996\u5148\u5b9e\u4f8b\u5316\u5bf9\u5e94\u6587\u4ef6\u7cfb\u7edf\u5e76\u5217\u51fa\u9700\u5bfc\u5165\u7684\u6587\u4ef6\uff1a</p> <pre><code>&gt;&gt;&gt; import fsspec\n&gt;&gt;&gt; fs = fsspec.filesystem(\"...\")  # s3 / gcs / abfs / adl / oci / ...\n&gt;&gt;&gt; data_dir = \"path/to/my/data/\"\n&gt;&gt;&gt; pattern = \"*.parquet\"\n&gt;&gt;&gt; data_files = fs.glob(data_dir + pattern)\n[\"path/to/my/data/0001.parquet\", \"path/to/my/data/0002.parquet\", ...]\n</code></pre> <p>\u63a5\u7740\u5728 Hugging Face \u521b\u5efa\u6570\u636e\u96c6\u4ed3\u5e93\u5e76\u4e0a\u4f20\u6587\u4ef6\uff1a</p> <pre><code>&gt;&gt;&gt; from huggingface_hub import create_repo, upload_file\n&gt;&gt;&gt; from tqdm.auto import tqdm\n&gt;&gt;&gt; destination_dataset = \"username/my-dataset\"\n&gt;&gt;&gt; create_repo(destination_dataset, repo_type=\"dataset\")\n&gt;&gt;&gt; for data_file in tqdm(fs.glob(data_dir + pattern)):\n...     with fs.open(data_file) as fileobj:\n...         path_in_repo = data_file[len(data_dir):]\n...         upload_file(\n...             path_or_fileobj=fileobj,\n...             path_in_repo=path_in_repo,\n...             repo_id=destination_dataset,\n...             repo_type=\"dataset\",\n...         )\n</code></pre> <p>\u66f4\u591a\u4e0a\u4f20\u65b9\u5f0f\u53ef\u53c2\u8003 huggingface_hub \u6587\u6863\u3002</p> <p>\u6700\u540e\u5373\u53ef\u4f7f\u7528 \ud83e\udd17 Datasets \u52a0\u8f7d\u6570\u636e\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; ds = load_dataset(\"username/my-dataset\")\n</code></pre>"},{"location":"datasets/docs/how_to/","title":"\u6982\u89c8","text":"<p>\u672c\u7cfb\u5217\u64cd\u4f5c\u6307\u5357\u7cfb\u7edf\u4ecb\u7ecd\u4e86 \ud83e\udd17 Datasets \u63d0\u4f9b\u7684\u5de5\u5177\u53ca\u5176\u4f7f\u7528\u65b9\u5f0f\uff0c\u5e2e\u52a9\u4f60\u5904\u7406\u66f4\u590d\u6742\u7684\u771f\u5b9e\u4e16\u754c\u6570\u636e\u96c6\uff0c\u5305\u62ec\u5728\u8bad\u7ec3\u524d\u5bf9\u6570\u636e\u7ed3\u6784\u6216\u5185\u5bb9\u8fdb\u884c\u5fc5\u8981\u7684\u8c03\u6574\u3002</p> <p>\u64cd\u4f5c\u6307\u5357\u9ed8\u8ba4\u4f60\u5df2\u7ecf\u719f\u6089 \ud83e\udd17 Datasets \u7684\u57fa\u7840\u3002\u5982\u679c\u4f60\u8fd8\u662f\u65b0\u624b\uff0c\u5efa\u8bae\u5148\u9605\u8bfb\u6211\u4eec\u7684\u6559\u7a0b\u3002</p> <p>\u63d0\u793a</p> <p>\u60f3\u4e86\u89e3\u66f4\u591a\uff1f\u6b22\u8fce\u67e5\u9605 Hugging Face \u8bfe\u7a0b\u7684\u7b2c 5 \u7ae0\u3002</p> <p>\u6307\u5357\u4e3b\u8981\u5206\u4e3a\u516d\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>\u901a\u7528\u7528\u6cd5\uff1a\u6db5\u76d6\u6570\u636e\u96c6\u52a0\u8f7d\u4e0e\u5904\u7406\u7684\u5e38\u89c1\u51fd\u6570\uff0c\u9002\u7528\u4e8e\u6240\u6709\u6a21\u6001\u3002</li> <li>\u97f3\u9891\uff1a\u5982\u4f55\u52a0\u8f7d\u3001\u5904\u7406\u4e0e\u5206\u4eab\u97f3\u9891\u6570\u636e\u96c6\u3002</li> <li>\u89c6\u89c9\uff1a\u5982\u4f55\u52a0\u8f7d\u3001\u5904\u7406\u4e0e\u5206\u4eab\u56fe\u50cf\u548c\u89c6\u9891\u6570\u636e\u96c6\u3002</li> <li>\u6587\u672c\uff1a\u5982\u4f55\u52a0\u8f7d\u3001\u5904\u7406\u4e0e\u5206\u4eab\u6587\u672c\u6570\u636e\u96c6\u3002</li> <li>\u8868\u683c\uff1a\u5982\u4f55\u52a0\u8f7d\u3001\u5904\u7406\u4e0e\u5206\u4eab\u8868\u683c\u6570\u636e\u96c6\u3002</li> <li>\u6570\u636e\u96c6\u4ed3\u5e93\uff1a\u5982\u4f55\u5728 Hub \u4e0a\u5206\u4eab\u4e0e\u4e0a\u4f20\u6570\u636e\u96c6\u3002</li> </ul> <p>\u82e5\u5728\u4f7f\u7528 \ud83e\udd17 Datasets \u65f6\u6709\u7591\u95ee\uff0c\u6b22\u8fce\u52a0\u5165\u6211\u4eec\u7684 \u8bba\u575b\u4e0e\u793e\u533a\u4ea4\u6d41\u3002</p>"},{"location":"datasets/docs/image_classification/","title":"\u56fe\u50cf\u5206\u7c7b","text":"<p>\u56fe\u50cf\u5206\u7c7b\u6570\u636e\u96c6\u7528\u4e8e\u8bad\u7ec3\u6a21\u578b\u5224\u65ad\u6574\u5f20\u56fe\u50cf\u6240\u5c5e\u7c7b\u522b\uff0c\u53ef\u5e94\u7528\u4e8e\u8bc6\u522b\u6fd2\u5371\u7269\u79cd\u3001\u533b\u5b66\u56fe\u50cf\u7b5b\u67e5\u7b49\u573a\u666f\u3002\u672c\u6307\u5357\u6f14\u793a\u5982\u4f55\u5bf9\u56fe\u50cf\u5206\u7c7b\u6570\u636e\u96c6\u6267\u884c\u6570\u636e\u589e\u5f3a\u3002</p> <p>\u5f00\u59cb\u524d\uff0c\u8bf7\u786e\u4fdd\u5df2\u5b89\u88c5\u6700\u65b0\u7248 <code>albumentations</code> \u4e0e <code>cv2</code>\uff1a</p> <pre><code>pip install -U albumentations opencv-python\n</code></pre> <p>\u793a\u4f8b\u6570\u636e\u96c6\u4e3a Beans\uff0c\u7528\u4e8e\u8bc6\u522b\u8c46\u7c7b\u690d\u7269\u7684\u53f6\u7247\u75c5\u5bb3\u3002</p> <p>\u52a0\u8f7d\u6570\u636e\u96c6\u5e76\u67e5\u770b\u793a\u4f8b\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"AI-Lab-Makerere/beans\")\n&gt;&gt;&gt; dataset[\"train\"][10]\n{'image': &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=500x500 at 0x7F8D2F4D7A10&gt;,\n 'image_file_path': '/root/.cache/huggingface/datasets/downloads/extracted/b0a21163f78769a2cf11f58dfc767fb458fc7cea5c05dccc0144a2c0f0bc1292/train/angular_leaf_spot/angular_leaf_spot_train.204.jpg',\n 'labels': 0}\n</code></pre> <p>\u6570\u636e\u96c6\u4e2d\u5305\u542b\u4e09\u5217\uff1a</p> <ul> <li><code>image</code>\uff1aPIL \u56fe\u50cf\u5bf9\u8c61\u3002</li> <li><code>image_file_path</code>\uff1a\u56fe\u50cf\u6587\u4ef6\u8def\u5f84\u3002</li> <li><code>labels</code>\uff1a\u56fe\u50cf\u7c7b\u522b\u3002</li> </ul> <p>\u5148\u67e5\u770b\u539f\u59cb\u56fe\u50cf\uff1a</p> <p>\u63a5\u7740\u4f7f\u7528 <code>albumentations</code> \u8fdb\u884c\u968f\u673a\u88c1\u526a\u3001\u6c34\u5e73\u7ffb\u8f6c\u4e0e\u4eae\u5ea6\u589e\u5f3a\uff1a</p> <pre><code>&gt;&gt;&gt; import cv2\n&gt;&gt;&gt; import albumentations\n&gt;&gt;&gt; import numpy as np\n\n&gt;&gt;&gt; transform = albumentations.Compose([\n...     albumentations.RandomCrop(width=256, height=256),\n...     albumentations.HorizontalFlip(p=0.5),\n...     albumentations.RandomBrightnessContrast(p=0.2),\n... ])\n</code></pre> <p>\u5b9a\u4e49\u51fd\u6570\u5bf9\u56fe\u50cf\u5e94\u7528\u8fd9\u4e9b\u53d8\u6362\uff1a</p> <pre><code>&gt;&gt;&gt; def transforms(examples):\n...     examples[\"pixel_values\"] = [\n...         transform(image=np.array(image))[\"image\"] for image in examples[\"image\"]\n...     ]\n...     return examples\n</code></pre> <p>\u4f7f\u7528 [<code>~Dataset.set_transform</code>] \u53ef\u5728\u8bfb\u53d6\u6279\u6b21\u65f6\u6309\u9700\u8f6c\u6362\uff0c\u907f\u514d\u989d\u5916\u78c1\u76d8\u5360\u7528\uff1a</p> <pre><code>&gt;&gt;&gt; dataset.set_transform(transforms)\n</code></pre> <p>\u901a\u8fc7\u8bbf\u95ee <code>pixel_values</code> \u9a8c\u8bc1\u8f6c\u6362\u7ed3\u679c\uff1a</p> <pre><code>&gt;&gt;&gt; import numpy as np\n&gt;&gt;&gt; import matplotlib.pyplot as plt\n\n&gt;&gt;&gt; img = dataset[\"train\"][0][\"pixel_values\"]\n&gt;&gt;&gt; plt.imshow(img)\n</code></pre> <p>\u63d0\u793a</p> <p>\u4e86\u89e3\u4e86\u6570\u636e\u9884\u5904\u7406\u540e\uff0c\u7ee7\u7eed\u5b66\u4e60\u5982\u4f55\u8bad\u7ec3\u56fe\u50cf\u5206\u7c7b\u6a21\u578b\u5e76\u6267\u884c\u63a8\u7406\u3002</p>"},{"location":"datasets/docs/image_dataset/","title":"\u521b\u5efa\u56fe\u50cf\u6570\u636e\u96c6","text":"<p>\u521b\u5efa\u548c\u5206\u4eab\u56fe\u50cf\u6570\u636e\u96c6\u5e38\u89c1\u7684\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li>\u4f7f\u7528 [<code>Dataset.push_to_hub</code>] \u5728 Python \u4e2d\u4e0a\u4f20\u672c\u5730\u56fe\u50cf\uff0c\u6b65\u9aa4\u7b80\u5355\u3002</li> <li>\u501f\u52a9 <code>ImageFolder</code> \u642d\u914d\u5143\u6570\u636e\uff0c\u65e0\u9700\u7f16\u7801\u5373\u53ef\u5feb\u901f\u5904\u7406\u4e0a\u5343\u5f20\u56fe\u50cf\u3002</li> </ul> <p>\u63d0\u793a</p> <p>\u53ef\u901a\u8fc7\u8bbf\u95ee\u63a7\u5236\u5148\u6536\u96c6\u7528\u6237\u8054\u7cfb\u65b9\u5f0f\uff0c\u8be6\u60c5\u53c2\u9605 Gated datasets\u3002</p>"},{"location":"datasets/docs/image_dataset/#imagefolder","title":"ImageFolder","text":"<p><code>ImageFolder</code> \u6784\u5efa\u5668\u4e13\u4e3a\u5feb\u901f\u52a0\u8f7d\u5927\u89c4\u6a21\u56fe\u50cf\u6570\u636e\u96c6\u8bbe\u8ba1\uff0c\u65e0\u9700\u989d\u5916\u4ee3\u7801\u3002</p> <p>\u63d0\u793a</p> <p>\u67e5\u770b\u62c6\u5206\u6a21\u5f0f\u5c42\u7ea7\uff0c\u4e86\u89e3 <code>ImageFolder</code> \u5982\u4f55\u4f9d\u636e\u76ee\u5f55\u7ed3\u6784\u751f\u6210\u6570\u636e\u96c6\u5212\u5206\u3002</p> <p><code>ImageFolder</code> \u4f1a\u6839\u636e\u76ee\u5f55\u540d\u79f0\u81ea\u52a8\u63a8\u65ad\u6807\u7b7e\u3002\u793a\u4f8b\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>folder/train/dog/golden_retriever.png\nfolder/train/dog/german_shepherd.png\nfolder/train/dog/chihuahua.png\n\nfolder/train/cat/maine_coon.png\nfolder/train/cat/bengal.png\nfolder/train/cat/birman.png\n</code></pre> <p>\u82e5\u7ed3\u6784\u7b26\u5408\u8981\u6c42\uff0c\u53ef\u76f4\u63a5\u4f7f\u7528 [<code>load_dataset</code>] \u52a0\u8f7d\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"path/to/folder\")\n</code></pre> <p>\u4e0a\u8ff0\u5199\u6cd5\u7b49\u4ef7\u4e8e\u663e\u5f0f\u6307\u5b9a <code>imagefolder</code> \u4e0e <code>data_dir</code>\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"imagefolder\", data_dir=\"/path/to/folder\")\n</code></pre> <p>\u5982\u9700\u591a\u4e2a\u5212\u5206\uff0c\u53ef\u4f7f\u7528\u5982\u4e0b\u7ed3\u6784\uff1a</p> <pre><code>folder/train/dog/golden_retriever.png\nfolder/train/cat/maine_coon.png\nfolder/test/dog/german_shepherd.png\nfolder/test/cat/bengal.png\n</code></pre> <p>\u6ce8\u610f</p> <p>\u5982\u679c\u6240\u6709\u56fe\u50cf\u4f4d\u4e8e\u540c\u4e00\u76ee\u5f55\u6216\u5c42\u7ea7\u4e0d\u4e00\u81f4\uff0c\u5c06\u4e0d\u4f1a\u81ea\u52a8\u751f\u6210 <code>label</code> \u5217\u3002\u5982\u9700\u6807\u7b7e\uff0c\u8bf7\u663e\u5f0f\u8bbe\u7f6e <code>drop_labels=False</code>\u3002</p> <p>\u82e5\u60f3\u9644\u52a0\u6587\u672c\u63cf\u8ff0\u3001\u8fb9\u754c\u6846\u7b49\u4fe1\u606f\uff0c\u53ef\u5728\u76ee\u5f55\u4e2d\u6dfb\u52a0 <code>metadata.csv</code>\uff08\u6216 <code>metadata.jsonl</code>\u3001<code>metadata.parquet</code>\uff09\u3002\u538b\u7f29\u5305\u4e5f\u53d7\u652f\u6301\uff0c\u6bcf\u4e2a ZIP \u9700\u5305\u542b\u56fe\u50cf\u53ca\u5143\u6570\u636e\uff1a</p> <pre><code>folder/train.zip\nfolder/test.zip\nfolder/validation.zip\n</code></pre> <p><code>metadata.csv</code> \u4e2d\u5fc5\u987b\u5305\u542b <code>file_name</code> \u6216 <code>*_file_name</code>\uff0c\u7528\u4e8e\u5173\u8054\u56fe\u50cf\u4e0e\u5143\u6570\u636e\uff1a</p> <pre><code>file_name,additional_feature\n0001.png,This is a first value of a text feature you added to your images\n0002.png,This is a second value of a text feature you added to your images\n0003.png,This is a third value of a text feature you added to your images\n</code></pre> <p>\u6216\u4f7f\u7528 <code>metadata.jsonl</code>\uff1a</p> <pre><code>{\"file_name\": \"0001.png\", \"additional_feature\": \"This is a first value of a text feature you added to your images\"}\n{\"file_name\": \"0002.png\", \"additional_feature\": \"This is a second value of a text feature you added to your images\"}\n{\"file_name\": \"0003.png\", \"additional_feature\": \"This is a third value of a text feature you added to your images\"}\n</code></pre> <p>\u82e5\u6bcf\u6761\u6837\u672c\u9700\u8981\u591a\u4e2a\u56fe\u50cf\uff08\u5982\u8f93\u5165\u8f93\u51fa\u5747\u4e3a\u56fe\u50cf\uff09\uff0c\u53ef\u6307\u5b9a\u591a\u4e2a\u5b57\u6bb5\uff1a</p> <pre><code>{\"input_file_name\": \"0001.png\", \"output_file_name\": \"0001_output.png\"}\n{\"input_file_name\": \"0002.png\", \"output_file_name\": \"0002_output.png\"}\n{\"input_file_name\": \"0003.png\", \"output_file_name\": \"0003_output.png\"}\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5217\u8868\u5b57\u6bb5 <code>file_names</code> \u6216 <code>*_file_names</code>\uff1a</p> <pre><code>{\"frames_file_names\": [\"0001_t0.png\", \"0001_t1.png\"], \"label\": \"moving_up\"}\n{\"frames_file_names\": [\"0002_t0.png\", \"0002_t1.png\"], \"label\": \"moving_down\"}\n{\"frames_file_names\": [\"0003_t0.png\", \"0003_t1.png\"], \"label\": \"moving_right\"}\n</code></pre>"},{"location":"datasets/docs/image_dataset/#_2","title":"\u56fe\u50cf\u63cf\u8ff0","text":"<p>\u56fe\u50cf\u63cf\u8ff0\u6570\u636e\u96c6\u4f1a\u5728\u5143\u6570\u636e\u4e2d\u63d0\u4f9b\u6587\u672c\u3002\u4f8b\u5982\uff1a</p> <pre><code>file_name,text\n0001.png,This is a golden retriever playing with a ball\n0002.png,A german shepherd\n0003.png,One chihuahua\n</code></pre> <p>\u901a\u8fc7 <code>ImageFolder</code> \u52a0\u8f7d\u540e\uff0c\u5373\u53ef\u83b7\u5f97 <code>text</code> \u5217\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"imagefolder\", data_dir=\"/path/to/folder\", split=\"train\")\n&gt;&gt;&gt; dataset[0][\"text\"]\n\"This is a golden retriever playing with a ball\"\n</code></pre>"},{"location":"datasets/docs/image_dataset/#_3","title":"\u76ee\u6807\u68c0\u6d4b","text":"<p>\u76ee\u6807\u68c0\u6d4b\u6570\u636e\u96c6\u7684\u5143\u6570\u636e\u5305\u542b\u8fb9\u754c\u6846\u4e0e\u7c7b\u522b\u3002\u4f8b\u5982\uff1a</p> <pre><code>{\"file_name\": \"0001.png\", \"objects\": {\"bbox\": [[302.0, 109.0, 73.0, 52.0]], \"categories\": [0]}}\n{\"file_name\": \"0002.png\", \"objects\": {\"bbox\": [[810.0, 100.0, 57.0, 28.0]], \"categories\": [1]}}\n{\"file_name\": \"0003.png\", \"objects\": {\"bbox\": [[160.0, 31.0, 248.0, 616.0], [741.0, 68.0, 202.0, 401.0]], \"categories\": [2, 2]}}\n</code></pre> <p>\u52a0\u8f7d\u540e\u5373\u53ef\u5728 <code>objects</code> \u5217\u4e2d\u83b7\u53d6\u8fb9\u754c\u6846\u548c\u7c7b\u522b\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"imagefolder\", data_dir=\"/path/to/folder\", split=\"train\")\n&gt;&gt;&gt; dataset[0][\"objects\"]\n{\"bbox\": [[302.0, 109.0, 73.0, 52.0]], \"categories\": [0]}\n</code></pre>"},{"location":"datasets/docs/image_dataset/#hub","title":"\u4e0a\u4f20\u5230 Hub","text":"<p>\u6784\u5efa\u5b8c\u6210\u540e\uff0c\u53ef\u4f7f\u7528 [<code>~datasets.DatasetDict.push_to_hub</code>] \u5206\u4eab\u5230 Hub\u3002\u786e\u4fdd\u5df2\u5b89\u88c5 huggingface_hub \u5e76\u5b8c\u6210\u767b\u5f55\uff08\u8be6\u89c1Python \u4e0a\u4f20\u6559\u7a0b\uff09\u3002</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"imagefolder\", data_dir=\"/path/to/folder\", split=\"train\")\n&gt;&gt;&gt; dataset.push_to_hub(\"stevhliu/my-image-captioning-dataset\")\n</code></pre>"},{"location":"datasets/docs/image_dataset/#webdataset","title":"WebDataset","text":"<p>WebDataset \u57fa\u4e8e TAR \u5f52\u6863\u683c\u5f0f\uff0c\u9002\u5408\u5927\u89c4\u6a21\u56fe\u50cf\u6570\u636e\u96c6\u3002\u53ef\u5c06\u56fe\u50cf\u6309 TAR \u5206\u7ec4\uff08\u4f8b\u5982\u6bcf\u4e2a TAR \u5b58\u653e 1GB \u56fe\u50cf\uff09\uff1a</p> <pre><code>folder/train/00000.tar\nfolder/train/00001.tar\nfolder/train/00002.tar\n...\n</code></pre> <p>\u6bcf\u4e2a\u6837\u672c\u7531\u540c\u540d\u524d\u7f00\u7684\u591a\u4e2a\u6587\u4ef6\u7ec4\u6210\uff1a</p> <pre><code>e39871fd9fd74f55.jpg\ne39871fd9fd74f55.json\n...\n</code></pre> <p>\u53ef\u5728 JSON \u6216\u6587\u672c\u6587\u4ef6\u4e2d\u5b58\u50a8\u6807\u7b7e\u3001\u63cf\u8ff0\u6216\u8fb9\u754c\u6846\u3002</p> <p>\u52a0\u8f7d WebDataset \u65f6\u4f1a\u6839\u636e\u6587\u4ef6\u540e\u7f00\u751f\u6210\u5bf9\u5e94\u7684\u5217\uff08\u5982 <code>jpg</code>\u3001<code>json</code>\uff09\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"webdataset\", data_dir=\"/path/to/folder\", split=\"train\")\n&gt;&gt;&gt; dataset[0][\"json\"]\n{\"bbox\": [[302.0, 109.0, 73.0, 52.0]], \"categories\": [0]}\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u4e3a\u5355\u4e2a\u6837\u672c\u63d0\u4f9b\u591a\u5f20\u56fe\u50cf\uff0c\u4f8b\u5982\uff1a</p> <pre><code>e39871fd9fd74f55.input.jpg\ne39871fd9fd74f55.output.jpg\ne39871fd9fd74f55.json\n...\n</code></pre> <p>\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u9605 WebDataset \u5b98\u65b9\u6587\u6863\u3002</p>"},{"location":"datasets/docs/image_load/","title":"\u52a0\u8f7d\u56fe\u50cf\u6570\u636e","text":"<p>\u56fe\u50cf\u6570\u636e\u96c6\u7684\u5217\u7c7b\u578b\u4e3a [<code>Image</code>]\uff0c\u5176\u4e2d\u5b58\u653e PIL \u56fe\u50cf\u5bf9\u8c61\u3002</p> <p>\u63d0\u793a</p> <p>\u5904\u7406\u56fe\u50cf\u6570\u636e\u96c6\u9700\u5b89\u88c5 <code>vision</code> \u4f9d\u8d56\u3002\u5b89\u88c5\u6b65\u9aa4\u89c1\u6307\u5357\u3002</p> <p>\u52a0\u8f7d\u6570\u636e\u96c6\u5e76\u8bbf\u95ee <code>image</code> \u5217\u65f6\uff0c\u4f1a\u81ea\u52a8\u89e3\u7801\u4e3a PIL \u56fe\u50cf\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset, Image\n\n&gt;&gt;&gt; dataset = load_dataset(\"beans\", split=\"train\")\n&gt;&gt;&gt; dataset[0][\"image\"]\n</code></pre> <p>\u6ce8\u610f</p> <p>\u8bf7\u4f7f\u7528 <code>dataset[0][\"image\"]</code> \u7684\u65b9\u5f0f\u8bbf\u95ee\u6837\u672c\uff0c\u907f\u514d\u4e00\u6b21\u6027\u89e3\u7801\u6574\u4e2a\u6570\u636e\u96c6\uff0c\u5c24\u5176\u5728\u6570\u636e\u91cf\u5927\u65f6\u53ef\u663e\u8457\u8282\u7701\u65f6\u95f4\u3002</p> <p>\u5982\u4f55\u52a0\u8f7d\u4efb\u610f\u7c7b\u578b\u7684\u6570\u636e\u96c6\uff0c\u8bf7\u53c2\u8003\u901a\u7528\u52a0\u8f7d\u6307\u5357\u3002</p>"},{"location":"datasets/docs/image_load/#_2","title":"\u672c\u5730\u6587\u4ef6","text":"<p>\u53ef\u901a\u8fc7\u56fe\u50cf\u8def\u5f84\u6784\u5efa\u6570\u636e\u96c6\u3002\u4f7f\u7528 [<code>~Dataset.cast_column</code>] \u5c06\u8def\u5f84\u5217\u8f6c\u6362\u4e3a [<code>Image</code>] \u7279\u5f81\uff0c\u5373\u53ef\u5f97\u5230 PIL \u56fe\u50cf\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import Dataset, Image\n\n&gt;&gt;&gt; dataset = Dataset.from_dict({\"image\": [\"path/to/image_1\", \"path/to/image_2\", ..., \"path/to/image_n\"]}).cast_column(\"image\", Image())\n&gt;&gt;&gt; dataset[0][\"image\"]\n&lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=1200x215 at 0x15E6D7160&gt;\n</code></pre> <p>\u82e5\u4ec5\u9700\u8bbf\u95ee\u8def\u5f84\u6216\u5b57\u8282\uff0c\u53ef\u5728 [<code>Image</code>] \u4e2d\u8bbe\u7f6e <code>decode=False</code>\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"beans\", split=\"train\").cast_column(\"image\", Image(decode=False))\n&gt;&gt;&gt; dataset[0][\"image\"]\n{'bytes': None,\n 'path': '/root/.cache/huggingface/datasets/downloads/extracted/.../train/bean_rust/bean_rust_train.29.jpg'}\n</code></pre>"},{"location":"datasets/docs/image_load/#imagefolder","title":"ImageFolder","text":"<p>\u4e5f\u53ef\u4f7f\u7528 <code>ImageFolder</code> \u6784\u5efa\u5668\u5feb\u901f\u52a0\u8f7d\u6570\u5343\u5f20\u56fe\u50cf\u3002\u5178\u578b\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>folder/train/dog/golden_retriever.png\nfolder/train/dog/german_shepherd.png\nfolder/train/dog/chihuahua.png\n\nfolder/train/cat/maine_coon.png\nfolder/train/cat/bengal.png\nfolder/train/cat/birman.png\n</code></pre> <p>\u6216\u5305\u542b\u5143\u6570\u636e\u6587\u4ef6\uff1a</p> <pre><code>folder/train/metadata.csv\nfolder/train/0001.png\nfolder/train/0002.png\nfolder/train/0003.png\n</code></pre> <p>\u7b26\u5408\u4e0a\u8ff0\u7ed3\u6784\u5373\u53ef\u76f4\u63a5\u4f7f\u7528 [<code>load_dataset</code>]\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"username/dataset_name\")\n&gt;&gt;&gt; # \u6216\u672c\u5730\uff1a\n&gt;&gt;&gt; dataset = load_dataset(\"/path/to/folder\")\n</code></pre> <p>\u5bf9\u4e8e\u672c\u5730\u6570\u636e\uff0c\u7b49\u4ef7\u4e8e\u663e\u5f0f\u6307\u5b9a <code>imagefolder</code> \u4e0e <code>data_dir</code>\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"imagefolder\", data_dir=\"/path/to/folder\")\n</code></pre> <p>\u6b64\u65f6\u8bbf\u95ee\u5230\u7684\u5373\u662f <code>PIL.Image</code> \u5bf9\u8c61\uff1a</p> <pre><code>&gt;&gt;&gt; dataset[\"train\"][0]\n{\"image\": &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=1200x215 at 0x15E6D7160&gt;, \"label\": 0}\n\n&gt;&gt;&gt; dataset[\"train\"][-1]\n{\"image\": &lt;PIL.PngImagePlugin.PngImageFile image mode=RGBA size=1200x215 at 0x15E8DAD30&gt;, \"label\": 1}\n</code></pre> <p>\u82e5\u60f3\u5ffd\u7565\u5143\u6570\u636e\u6587\u4ef6\uff0c\u53ef\u8bbe\u7f6e <code>drop_metadata=True</code>\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"username/dataset_with_metadata\", drop_metadata=True)\n</code></pre> <p>\u5982\u679c\u76ee\u5f55\u540d\u8868\u793a\u7c7b\u522b\uff0c\u800c\u4f60\u4e0d\u60f3\u4fdd\u7559\uff0c\u53ef\u4f7f\u7528 <code>drop_labels=True</code>\uff0c\u6b64\u65f6\u4ec5\u5305\u542b\u56fe\u50cf\u5217\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"username/dataset_without_metadata\", drop_labels=True)\n</code></pre> <p><code>filters</code> \u53c2\u6570\u5141\u8bb8\u57fa\u4e8e\u6807\u7b7e\u6216\u5143\u6570\u636e\u52a0\u8f7d\u5b50\u96c6\u3002\u82e5\u5143\u6570\u636e\u4e3a Parquet\uff0c\u8fc7\u6ee4\u4f1a\u66f4\u9ad8\u6548\u3002\u5efa\u8bae\u914d\u5408 <code>streaming=True</code> \u4f7f\u7528\uff1a</p> <pre><code>&gt;&gt;&gt; filters = [(\"label\", \"=\", 0)]\n&gt;&gt;&gt; dataset = load_dataset(\"username/dataset_name\", streaming=True, filters=filters)\n</code></pre> <p>\u63d0\u793a</p> <p>\u60f3\u4e86\u89e3\u5982\u4f55\u6784\u5efa <code>ImageFolder</code> \u6570\u636e\u96c6\uff0c\u8bf7\u53c2\u9605\u300a\u521b\u5efa\u56fe\u50cf\u6570\u636e\u96c6\u300b\u3002</p>"},{"location":"datasets/docs/image_load/#webdataset","title":"WebDataset","text":"<p>WebDataset \u57fa\u4e8e TAR \u5f52\u6863\uff0c\u9002\u5408\u5927\u578b\u56fe\u50cf\u6570\u636e\u96c6\u3002\u901a\u5e38\u4f1a\u7ed3\u5408 <code>streaming=True</code> \u4ee5\u6d41\u5f0f\u65b9\u5f0f\u52a0\u8f7d\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"webdataset\", data_dir=\"/path/to/folder\", streaming=True)\n</code></pre>"},{"location":"datasets/docs/image_load/#_3","title":"\u56fe\u50cf\u89e3\u7801","text":"<p>\u9ed8\u8ba4\u904d\u5386\u6570\u636e\u96c6\u65f6\u4f1a\u987a\u5e8f\u89e3\u7801\u4e3a <code>PIL.Image</code>\u3002\u53ef\u901a\u8fc7\u591a\u7ebf\u7a0b\u89e3\u7801\u663e\u8457\u63d0\u901f\uff1a</p> <pre><code>&gt;&gt;&gt; import os\n&gt;&gt;&gt; num_threads = num_threads = min(32, (os.cpu_count() or 1) + 4)\n&gt;&gt;&gt; dataset = dataset.decode(num_threads=num_threads)\n&gt;&gt;&gt; for example in dataset:  # \u6700\u9ad8\u53ef\u5feb 20 \u500d\n...     ...\n</code></pre> <p>\u591a\u7ebf\u7a0b\u5bf9\u8fdc\u7a0b\u6d41\u5f0f\u52a0\u8f7d\u5c24\u4e3a\u6709\u7528\uff1b\u4f46\u5728\u672c\u5730\u5feb\u901f\u78c1\u76d8\u4e0a\uff0c<code>num_threads=0</code> \u53ef\u80fd\u66f4\u5feb\u3002</p> <p>\u82e5\u53ea\u9700\u8bbf\u95ee\u8def\u5f84\u6216\u5b57\u8282\uff0c\u53ef\u7981\u7528\u89e3\u7801\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = dataset.decode(False)\n</code></pre> <p>\u8bf4\u660e</p> <p>[<code>IterableDataset.decode</code>] \u76ee\u524d\u4ec5\u9002\u7528\u4e8e\u6d41\u5f0f\u6570\u636e\u96c6\u3002</p>"},{"location":"datasets/docs/image_process/","title":"\u5904\u7406\u56fe\u50cf\u6570\u636e","text":"<p>\u672c\u6307\u5357\u4ecb\u7ecd\u56fe\u50cf\u6570\u636e\u96c6\u7684\u5e38\u89c1\u5904\u7406\u65b9\u6cd5\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u4f7f\u7528 [<code>~Dataset.map</code>] \u5bf9\u6574\u5957\u6570\u636e\u5e94\u7528\u53d8\u6362\u3002</li> <li>\u901a\u8fc7 [<code>~Dataset.set_transform</code>] \u5728\u8bfb\u53d6\u65f6\u6267\u884c\u6570\u636e\u589e\u5f3a\u3002</li> </ul> <p>\u82e5\u9700\u4e86\u89e3\u901a\u7528\u6d41\u7a0b\uff0c\u8bf7\u67e5\u770b\u901a\u7528\u5904\u7406\u6307\u5357\u3002</p>"},{"location":"datasets/docs/image_process/#map","title":"Map","text":"<p>[<code>~Dataset.map</code>] \u53ef\u5bf9\u6574\u4e2a\u6570\u636e\u96c6\u6267\u884c\u53d8\u6362\u3002\u4f8b\u5982\uff0c\u5b9a\u4e49\u4e00\u4e2a\u57fa\u7840\u7684 <code>Resize</code> \u64cd\u4f5c\uff1a</p> <pre><code>&gt;&gt;&gt; def transforms(examples):\n...     examples[\"pixel_values\"] = [image.convert(\"RGB\").resize((100, 100)) for image in examples[\"image\"]]\n...     return examples\n</code></pre> <p>\u4f7f\u7528 [<code>~Dataset.map</code>] \u5bf9\u6570\u636e\u96c6\u6267\u884c\u8c03\u6574\uff0c\u5e76\u8bbe\u7f6e <code>batched=True</code> \u4ee5\u6279\u91cf\u5904\u7406\u6837\u672c\u3002\u8f6c\u6362\u540e\u7684 <code>pixel_values</code> \u4f1a\u4ee5\u53ef\u7f13\u5b58\u7684 <code>PIL.Image</code> \u4fdd\u5b58\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = dataset.map(transforms, remove_columns=[\"image\"], batched=True)\n&gt;&gt;&gt; dataset[0]\n{'label': 6,\n 'pixel_values': &lt;PIL.PngImagePlugin.PngImageFile image mode=RGB size=100x100 at 0x7F058237BB10&gt;}\n</code></pre> <p>\u7f13\u5b58\u80fd\u591f\u907f\u514d\u91cd\u590d\u6267\u884c\u540c\u4e00\u53d8\u6362\u3002\u56e0\u6b64 [<code>~Dataset.map</code>] \u66f4\u9002\u5408\u6bcf\u6b21\u8bad\u7ec3\u53ea\u9700\u8fd0\u884c\u4e00\u6b21\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u8c03\u6574\u5927\u5c0f\uff1b\u800c\u4e0d\u662f\u6bcf\u4e2a epoch \u90fd\u6267\u884c\u7684\u6570\u636e\u589e\u5f3a\u3002</p> <p>[<code>~Dataset.map</code>] \u4f1a\u5360\u7528\u4e00\u5b9a\u5185\u5b58\uff0c\u53ef\u901a\u8fc7\u4ee5\u4e0b\u53c2\u6570\u63a7\u5236\uff1a</p> <ul> <li><code>batch_size</code>\uff1a\u6bcf\u6b21\u4f20\u5165\u53d8\u6362\u51fd\u6570\u7684\u6837\u672c\u6570\u91cf\u3002</li> <li><code>writer_batch_size</code>\uff1a\u5199\u5165\u78c1\u76d8\u524d\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u7684\u5904\u7406\u7ed3\u679c\u6570\u91cf\u3002</li> </ul> <p>\u9ed8\u8ba4\u503c\u5747\u4e3a 1000\uff0c\u82e5\u5b58\u50a8\u56fe\u50cf\u4f1a\u5360\u7528\u4e0d\u5c11\u7a7a\u95f4\uff0c\u53ef\u9002\u5f53\u8c03\u4f4e\u3002</p>"},{"location":"datasets/docs/image_process/#_2","title":"\u5e94\u7528\u6570\u636e\u589e\u5f3a","text":"<p>\ud83e\udd17 Datasets \u652f\u6301\u7ed3\u5408\u4efb\u610f\u5e93\u8fdb\u884c\u589e\u5f3a\uff0c\u53ef\u501f\u52a9 [<code>~Dataset.set_transform</code>] \u5728\u6279\u91cf\u52a0\u8f7d\u65f6\u6309\u9700\u6267\u884c\uff0c\u4ece\u800c\u8282\u7701\u78c1\u76d8\u7a7a\u95f4\u3002</p> <p>\u63d0\u793a</p> <p>\u4e0b\u4f8b\u4f7f\u7528 torchvision\uff1b\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9 Albumentations\u3001Kornia\u3001imgaug \u7b49\u5e93\u3002</p> <p>\u4f8b\u5982\uff0c\u968f\u673a\u8c03\u6574\u56fe\u50cf\u7684\u989c\u8272\u5c5e\u6027\uff1a</p> <pre><code>&gt;&gt;&gt; from torchvision.transforms import Compose, ColorJitter, ToTensor\n\n&gt;&gt;&gt; jitter = Compose(\n...     [\n...         ColorJitter(brightness=0.25, contrast=0.25, saturation=0.25, hue=0.7),\n...         ToTensor(),\n...     ]\n... )\n</code></pre> <p>\u5b9a\u4e49\u51fd\u6570\u5e94\u7528 <code>ColorJitter</code>\uff1a</p> <pre><code>&gt;&gt;&gt; def transforms(examples):\n...     examples[\"pixel_values\"] = [jitter(image.convert(\"RGB\")) for image in examples[\"image\"]]\n...     return examples\n</code></pre> <p>\u901a\u8fc7 [<code>~Dataset.set_transform</code>] \u542f\u7528\u8be5\u589e\u5f3a\uff1a</p> <pre><code>&gt;&gt;&gt; dataset.set_transform(transforms)\n</code></pre>"},{"location":"datasets/docs/installation/","title":"\u5b89\u88c5","text":"<p>\u5728\u52a8\u624b\u4e4b\u524d\uff0c\u9700\u8981\u51c6\u5907\u597d\u8fd0\u884c\u73af\u5883\u5e76\u5b89\u88c5\u76f8\u5173\u4f9d\u8d56\u3002\ud83e\udd17 Datasets \u652f\u6301 Python 3.9 \u53ca\u66f4\u9ad8\u7248\u672c\u3002</p> <p>\u63d0\u793a</p> <p>\u82e5\u4f60\u8ba1\u5212\u7ed3\u5408 TensorFlow \u6216 PyTorch \u4f7f\u7528 \ud83e\udd17 Datasets\uff0c\u8bf7\u5206\u522b\u5b89\u88c5\u5bf9\u5e94\u6846\u67b6\u3002\u5177\u4f53\u5b89\u88c5\u547d\u4ee4\u8bf7\u53c2\u8003 TensorFlow \u5b98\u65b9\u6307\u5357\u6216 PyTorch \u5b98\u7f51\u3002</p>"},{"location":"datasets/docs/installation/#_2","title":"\u865a\u62df\u73af\u5883","text":"<p>\u5efa\u8bae\u5728\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5 \ud83e\udd17 Datasets\uff0c\u4ee5\u4fbf\u9694\u79bb\u4f9d\u8d56\u3001\u4fdd\u6301\u5de5\u4f5c\u533a\u6574\u6d01\u3002</p> <ol> <li>\u521b\u5efa\u9879\u76ee\u76ee\u5f55\u5e76\u5207\u6362\u81f3\u8be5\u76ee\u5f55\uff1a</li> </ol> <pre><code>mkdir ~/my-project\ncd ~/my-project\n</code></pre> <ol> <li>\u5728\u76ee\u5f55\u5185\u521b\u5efa\u865a\u62df\u73af\u5883\uff1a</li> </ol> <pre><code>python -m venv .env\n</code></pre> <ol> <li>\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u6fc0\u6d3b\u6216\u9000\u51fa\u865a\u62df\u73af\u5883\uff1a</li> </ol> <pre><code># \u6fc0\u6d3b\u865a\u62df\u73af\u5883\nsource .env/bin/activate\n\n# \u9000\u51fa\u865a\u62df\u73af\u5883\nsource .env/bin/deactivate\n</code></pre> <p>\u5b8c\u6210\u865a\u62df\u73af\u5883\u521b\u5efa\u540e\uff0c\u5c31\u53ef\u4ee5\u5728\u5176\u4e2d\u5b89\u88c5 \ud83e\udd17 Datasets \u4e86\u3002</p>"},{"location":"datasets/docs/installation/#pip","title":"pip","text":"<p>\u6700\u7b80\u5355\u7684\u5b89\u88c5\u65b9\u5f0f\u662f\u4f7f\u7528 pip\uff1a</p> <pre><code>pip install datasets\n</code></pre> <p>\u6267\u884c\u4e0b\u5217\u547d\u4ee4\u786e\u8ba4\u5b89\u88c5\u662f\u5426\u6210\u529f\uff1a</p> <pre><code>python -c \"from datasets import load_dataset; print(load_dataset('rajpurkar/squad', split='train')[0])\"\n</code></pre> <p>\u4e0a\u8ff0\u547d\u4ee4\u4f1a\u4e0b\u8f7d Stanford Question Answering Dataset (SQuAD) \u7248\u672c 1\uff0c\u52a0\u8f7d\u8bad\u7ec3\u96c6\u5e76\u6253\u5370\u9996\u6761\u6837\u672c\u3002\u8f93\u51fa\u7c7b\u4f3c\uff1a</p> <pre><code>{'answers': {'answer_start': [515], 'text': ['Saint Bernadette Soubirous']}, 'context': 'Architecturally, the school has a Catholic character. Atop the Main Building\\'s gold dome is a golden statue of the Virgin Mary. Immediately in front of the Main Building and facing it, is a copper statue of Christ with arms upraised with the legend \"Venite Ad Me Omnes\". Next to the Main Building is the Basilica of the Sacred Heart. Immediately behind the basilica is the Grotto, a Marian place of prayer and reflection. It is a replica of the grotto at Lourdes, France where the Virgin Mary reputedly appeared to Saint Bernadette Soubirous in 1858. At the end of the main drive (and in a direct line that connects through 3 statues and the Gold Dome), is a simple, modern stone statue of Mary.', 'id': '5733be284776f41900661182', 'question': 'To whom did the Virgin Mary allegedly appear in 1858 in Lourdes France?', 'title': 'University_of_Notre_Dame'}\n</code></pre>"},{"location":"datasets/docs/installation/#_3","title":"\u97f3\u9891","text":"<p>\u82e5\u8981\u5904\u7406\u97f3\u9891\u6570\u636e\u96c6\uff0c\u8bf7\u989d\u5916\u5b89\u88c5 [<code>Audio</code>] \u7279\u6027\uff1a</p> <pre><code>pip install datasets[audio]\n</code></pre>"},{"location":"datasets/docs/installation/#_4","title":"\u89c6\u89c9","text":"<p>\u82e5\u8981\u5904\u7406\u56fe\u50cf\u6570\u636e\u96c6\uff0c\u8bf7\u989d\u5916\u5b89\u88c5 [<code>Image</code>] \u7279\u6027\uff1a</p> <pre><code>pip install datasets[vision]\n</code></pre>"},{"location":"datasets/docs/installation/#_5","title":"\u6e90\u7801\u5b89\u88c5","text":"<p>\u5982\u679c\u4f60\u5e0c\u671b\u81ea\u5b9a\u4e49\u6216\u4fee\u6539 \ud83e\udd17 Datasets \u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u4ece\u6e90\u7801\u6784\u5efa\u3002\u514b\u9686\u4ed3\u5e93\u5e76\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>git clone https://github.com/huggingface/datasets.git\ncd datasets\npip install -e .\n</code></pre> <p>\u540c\u6837\u53ef\u901a\u8fc7\u524d\u6587\u7684 Python \u5355\u884c\u547d\u4ee4\u9a8c\u8bc1\u5b89\u88c5\u662f\u5426\u6210\u529f\uff1a</p> <pre><code>python -c \"from datasets import load_dataset; print(load_dataset('rajpurkar/squad', split='train')[0])\"\n</code></pre>"},{"location":"datasets/docs/installation/#conda","title":"conda","text":"<p>\ud83e\udd17 Datasets \u4e5f\u53ef\u4ee5\u901a\u8fc7 conda \u5b89\u88c5\uff1a</p> <pre><code>conda install -c huggingface -c conda-forge datasets\n</code></pre>"},{"location":"datasets/docs/load_hub/","title":"\u4ece Hub \u52a0\u8f7d\u6570\u636e\u96c6","text":"<p>\u5bfb\u627e\u53ef\u590d\u73b0\u3001\u6613\u83b7\u53d6\u7684\u9ad8\u8d28\u91cf\u6570\u636e\u96c6\u5e76\u4e0d\u8f7b\u677e\u3002\ud83e\udd17 Datasets \u7684\u76ee\u6807\u4e4b\u4e00\uff0c\u5c31\u662f\u63d0\u4f9b\u7edf\u4e00\u3001\u7b80\u5355\u7684\u52a0\u8f7d\u65b9\u5f0f\u3002\u6700\u4fbf\u6377\u7684\u8d77\u70b9\uff0c\u662f\u5728 Hugging Face Hub \u4e0a\u53d1\u73b0\u5df2\u6709\u6570\u636e\u96c6\uff0c\u5e76\u7528 \ud83e\udd17 Datasets \u4e0b\u8f7d\u4e0e\u6784\u5efa\u3002\u672c\u6559\u7a0b\u4ee5 rotten_tomatoes \u4e0e MInDS-14 \u4e3a\u4f8b\uff0c\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u5176\u4ed6\u4efb\u52a1\u7684\u6570\u636e\u96c6\u7ec3\u4e60\u3002</p>"},{"location":"datasets/docs/load_hub/#_1","title":"\u52a0\u8f7d\u6570\u636e\u96c6","text":"<p>\u5728\u4e0b\u8f7d\u524d\uff0c\u4e86\u89e3\u6570\u636e\u96c6\u7684\u5927\u81f4\u4fe1\u606f\u5341\u5206\u6709\u7528\u3002\u6570\u636e\u96c6\u7684\u5143\u4fe1\u606f\u4fdd\u5b58\u5728 [<code>DatasetInfo</code>] \u4e2d\uff0c\u5305\u62ec\u63cf\u8ff0\u3001\u7279\u5f81\u548c\u5927\u5c0f\u7b49\u3002\u53ef\u4ee5\u4f7f\u7528 [<code>load_dataset_builder</code>] \u83b7\u53d6\u6570\u636e\u96c6\u6784\u5efa\u5668\uff0c\u5728\u771f\u6b63\u4e0b\u8f7d\u524d\u5148\u67e5\u770b\u5c5e\u6027\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset_builder\n&gt;&gt;&gt; ds_builder = load_dataset_builder(\"cornell-movie-review-data/rotten_tomatoes\")\n\n# \u67e5\u770b\u63cf\u8ff0\n&gt;&gt;&gt; ds_builder.info.description\nMovie Review Dataset. ...\n\n# \u67e5\u770b\u7279\u5f81\n&gt;&gt;&gt; ds_builder.info.features\n{'label': ClassLabel(names=['neg', 'pos']),\n 'text': Value('string')}\n</code></pre> <p>\u6ee1\u610f\u540e\u5373\u53ef\u8c03\u7528 [<code>load_dataset</code>] \u4e0b\u8f7d\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"cornell-movie-review-data/rotten_tomatoes\", split=\"train\")\n</code></pre>"},{"location":"datasets/docs/load_hub/#splits","title":"\u6570\u636e\u5212\u5206\uff08Splits\uff09","text":"<p>\u6570\u636e\u96c6\u901a\u5e38\u5305\u542b <code>train</code>\u3001<code>test</code> \u7b49\u5212\u5206\u3002\u901a\u8fc7 [<code>get_dataset_split_names</code>] \u5217\u51fa\u6240\u6709\u5212\u5206\u540d\u79f0\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import get_dataset_split_names\n\n&gt;&gt;&gt; get_dataset_split_names(\"cornell-movie-review-data/rotten_tomatoes\")\n['train', 'validation', 'test']\n</code></pre> <p>\u5728 <code>load_dataset</code> \u4e2d\u6307\u5b9a <code>split</code> \u53ef\u52a0\u8f7d\u5bf9\u5e94\u90e8\u5206\uff0c\u8fd4\u56de [<code>Dataset</code>] \u5bf9\u8c61\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"cornell-movie-review-data/rotten_tomatoes\", split=\"train\")\n&gt;&gt;&gt; dataset\nDataset({\n    features: ['text', 'label'],\n    num_rows: 8530\n})\n</code></pre> <p>\u82e5\u672a\u6307\u5b9a <code>split</code>\uff0c\u5c06\u5f97\u5230 [<code>DatasetDict</code>]\uff0c\u5305\u542b\u6240\u6709\u5212\u5206\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"cornell-movie-review-data/rotten_tomatoes\")\nDatasetDict({\n    train: Dataset(...),\n    validation: Dataset(...),\n    test: Dataset(...)\n})\n</code></pre>"},{"location":"datasets/docs/load_hub/#configurations","title":"\u914d\u7f6e\uff08Configurations\uff09","text":"<p>\u90e8\u5206\u6570\u636e\u96c6\u5305\u542b\u591a\u4e2a\u5b50\u96c6\u3002\u4f8b\u5982 MInDS-14 \u6309\u8bed\u8a00\u5212\u5206\u591a\u4e2a\u5b50\u6570\u636e\u96c6\uff0c\u9700\u663e\u5f0f\u9009\u62e9\u914d\u7f6e\u3002\u82e5\u672a\u63d0\u4f9b\u914d\u7f6e\u540d\u79f0\uff0c\ud83e\udd17 Datasets \u5c06\u629b\u51fa <code>ValueError</code> \u63d0\u9192\u3002</p> <p>\u4f7f\u7528 [<code>get_dataset_config_names</code>] \u83b7\u53d6\u6240\u6709\u53ef\u7528\u914d\u7f6e\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import get_dataset_config_names\n\n&gt;&gt;&gt; configs = get_dataset_config_names(\"PolyAI/minds14\")\n&gt;&gt;&gt; print(configs)\n['cs-CZ', 'de-DE', 'en-AU', 'en-GB', 'en-US', 'es-ES', 'fr-FR', 'it-IT', 'ko-KR', 'nl-NL', 'pl-PL', 'pt-PT', 'ru-RU', 'zh-CN', 'all']\n</code></pre> <p>\u7136\u540e\u52a0\u8f7d\u6240\u9700\u914d\u7f6e\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; mindsFR = load_dataset(\"PolyAI/minds14\", \"fr-FR\", split=\"train\")\n</code></pre>"},{"location":"datasets/docs/loading/","title":"\u52a0\u8f7d\u6570\u636e","text":"<p>\u6570\u636e\u53ef\u80fd\u5b58\u653e\u5728\u672c\u5730\u78c1\u76d8\u3001GitHub \u4ed3\u5e93\uff0c\u6216 Python \u5b57\u5178\u3001Pandas DataFrame \u7b49\u5185\u5b58\u7ed3\u6784\u4e2d\u3002\u65e0\u8bba\u6570\u636e\u96c6\u4f4d\u4e8e\u4f55\u5904\uff0c\ud83e\udd17 Datasets \u90fd\u80fd\u5e2e\u52a9\u4f60\u52a0\u8f7d\u3002</p> <p>\u672c\u6307\u5357\u4ecb\u7ecd\u5982\u4f55\u4ece\u4ee5\u4e0b\u6765\u6e90\u52a0\u8f7d\u6570\u636e\u96c6\uff1a</p> <ul> <li>Hugging Face Hub</li> <li>\u672c\u5730\u6587\u4ef6</li> <li>\u5185\u5b58\u5bf9\u8c61</li> <li>\u79bb\u7ebf\u7f13\u5b58</li> <li>\u5212\u5206\u7684\u7279\u5b9a\u7247\u6bb5</li> </ul> <p>\u5982\u9700\u4e86\u89e3\u7279\u5b9a\u6a21\u6001\u7684\u52a0\u8f7d\u65b9\u5f0f\uff0c\u8bf7\u53c2\u9605\u97f3\u9891\u52a0\u8f7d\u3001\u56fe\u50cf\u52a0\u8f7d\u3001\u89c6\u9891\u52a0\u8f7d\u6216\u6587\u672c\u52a0\u8f7d\u6307\u5357\u3002</p> <p></p>"},{"location":"datasets/docs/loading/#hugging-face-hub","title":"Hugging Face Hub","text":"<p>\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4ece Hub \u7684\u4efb\u610f\u6570\u636e\u96c6\u4ed3\u5e93\u52a0\u8f7d\u6570\u636e\u3002\u5148\u521b\u5efa\u6570\u636e\u96c6\u4ed3\u5e93\u5e76\u4e0a\u4f20\u6587\u4ef6\uff0c\u7136\u540e\u901a\u8fc7 [<code>load_dataset</code>] \u8bfb\u53d6\u3002</p> <p>\u4f8b\u5982\uff0c\u4ece demo \u4ed3\u5e93 \u52a0\u8f7d CSV \u6570\u636e\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; dataset = load_dataset(\"lhoestq/demo1\")\n</code></pre> <p>\u67d0\u4e9b\u6570\u636e\u96c6\u6839\u636e Git \u6807\u7b7e\u3001\u5206\u652f\u6216\u63d0\u4ea4\u62e5\u6709\u591a\u4e2a\u7248\u672c\uff0c\u53ef\u901a\u8fc7 <code>revision</code> \u6307\u5b9a\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\n...   \"lhoestq/custom_squad\",\n...   revision=\"main\",  # \u6807\u7b7e\u3001\u5206\u652f\u6216\u63d0\u4ea4\u54c8\u5e0c\n... )\n</code></pre> <p>\u63d0\u793a</p> <p>\u67e5\u770b\u4e0a\u4f20\u6570\u636e\u96c6\u6559\u7a0b\u4e86\u89e3\u5982\u4f55\u5728 Hub \u521b\u5efa\u4ed3\u5e93\u5e76\u4e0a\u4f20\u6587\u4ef6\u3002</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u4f1a\u5168\u90e8\u8f7d\u5165 <code>train</code> \u5212\u5206\uff0c\u6216\u6839\u636e\u6587\u4ef6\u540d\u4e2d\u7684\u5173\u952e\u5b57\uff08\u5982 <code>train</code>\u3001<code>test</code>\u3001<code>validation</code>\uff09\u81ea\u52a8\u5206\u914d\u3002\u901a\u8fc7 <code>data_files</code> \u53c2\u6570\u53ef\u624b\u52a8\u6620\u5c04\u6587\u4ef6\u4e0e\u5212\u5206\uff1a</p> <pre><code>&gt;&gt;&gt; data_files = {\"train\": \"train.csv\", \"test\": \"test.csv\"}\n&gt;&gt;&gt; dataset = load_dataset(\"namespace/your_dataset_name\", data_files=data_files)\n</code></pre> <p>\u6ce8\u610f</p> <p>\u82e5\u672a\u6307\u5b9a <code>data_files</code>\uff0c[<code>load_dataset</code>] \u4f1a\u52a0\u8f7d\u4ed3\u5e93\u4e2d\u6240\u6709\u6570\u636e\u6587\u4ef6\u3002\u5bf9\u4e8e\u5982 C4\uff08\u7ea6 13TB\uff09\u8fd9\u6837\u7684\u5927\u578b\u6570\u636e\u96c6\uff0c\u53ef\u80fd\u8017\u65f6\u5f88\u957f\u3002</p> <p>\u540c\u6837\u53ef\u4ee5\u501f\u52a9 <code>data_files</code> \u6216 <code>data_dir</code> \u9009\u62e9\u90e8\u5206\u6587\u4ef6\uff0c\u652f\u6301\u76f8\u5bf9\u8def\u5f84\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n# \u6309\u6a21\u5f0f\u5339\u914d\u6587\u4ef6\n&gt;&gt;&gt; c4_subset = load_dataset(\"allenai/c4\", data_files=\"en/c4-train.0000*-of-01024.json.gz\")\n\n# \u4ec5\u52a0\u8f7d Hub \u4e2d en \u5b50\u76ee\u5f55\n&gt;&gt;&gt; c4_subset = load_dataset(\"allenai/c4\", data_dir=\"en\")\n</code></pre> <p>\u4e5f\u53ef\u501f\u52a9 <code>split</code> \u53c2\u6570\u5c06\u6587\u4ef6\u6620\u5c04\u5230\u7279\u5b9a\u5212\u5206\uff1a</p> <pre><code>&gt;&gt;&gt; data_files = {\"validation\": \"en/c4-validation.*.json.gz\"}\n&gt;&gt;&gt; c4_validation = load_dataset(\"allenai/c4\", data_files=data_files, split=\"validation\")\n</code></pre>"},{"location":"datasets/docs/loading/#_2","title":"\u672c\u5730\u4e0e\u8fdc\u7a0b\u6587\u4ef6","text":"<p>\u6570\u636e\u96c6\u5e38\u4ee5 <code>csv</code>\u3001<code>json</code>\u3001<code>txt</code>\u3001<code>parquet</code> \u7b49\u683c\u5f0f\u5b58\u50a8\uff0c\u65e2\u53ef\u6765\u81ea\u672c\u5730\uff0c\u4e5f\u53ef\u901a\u8fc7 HTTP \u8fdc\u7a0b\u52a0\u8f7d\u3002[<code>load_dataset</code>] \u652f\u6301\u4ee5\u4e0b\u7c7b\u578b\uff1a</p>"},{"location":"datasets/docs/loading/#csv","title":"CSV","text":"<pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; dataset = load_dataset(\"csv\", data_files=\"my_file.csv\")\n</code></pre> <p>\u63d0\u793a</p> <p>\u8be6\u89c1CSV \u8868\u683c\u52a0\u8f7d\u6307\u5357\u3002</p>"},{"location":"datasets/docs/loading/#json","title":"JSON","text":"<pre><code>&gt;&gt;&gt; dataset = load_dataset(\"json\", data_files=\"my_file.json\")\n</code></pre> <p>\u63a8\u8350\u4f7f\u7528\u4e00\u884c\u4e00\u4e2a\u5bf9\u8c61\u7684 JSONL \u683c\u5f0f\uff1a</p> <pre><code>{\"a\": 1, \"b\": 2.0, \"c\": \"foo\", \"d\": false}\n{\"a\": 4, \"b\": -5.5, \"c\": null, \"d\": true}\n</code></pre> <p>\u82e5 JSON \u4e2d\u5305\u542b\u5d4c\u5957\u5b57\u6bb5\uff0c\u53ef\u901a\u8fc7 <code>field</code> \u6307\u5b9a\uff1a</p> <pre><code>{\"version\": \"0.1.0\",\n \"data\": [{\"a\": 1, \"b\": 2.0, \"c\": \"foo\", \"d\": false},\n          {\"a\": 4, \"b\": -5.5, \"c\": null, \"d\": true}]\n}\n\n&gt;&gt;&gt; dataset = load_dataset(\"json\", data_files=\"my_file.json\", field=\"data\")\n</code></pre> <p>\u8fdc\u7a0b JSON \u4e5f\u53ef\u76f4\u63a5\u901a\u8fc7 URL \u52a0\u8f7d\uff1a</p> <pre><code>&gt;&gt;&gt; base_url = \"https://rajpurkar.github.io/SQuAD-explorer/dataset/\"\n&gt;&gt;&gt; dataset = load_dataset(\n...     \"json\",\n...     data_files={\"train\": base_url + \"train-v1.1.json\", \"validation\": base_url + \"dev-v1.1.json\"},\n...     field=\"data\",\n... )\n</code></pre>"},{"location":"datasets/docs/loading/#parquet","title":"Parquet","text":"<p>\u5217\u5f0f\u5b58\u50a8\u683c\u5f0f\uff0c\u67e5\u8be2\u6548\u7387\u9ad8\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"parquet\", data_files={\"train\": \"train.parquet\", \"test\": \"test.parquet\"})\n</code></pre> <p>\u652f\u6301 HTTP \u8fdc\u7a0b\u52a0\u8f7d\uff1a</p> <pre><code>&gt;&gt;&gt; base_url = \"https://huggingface.co/datasets/wikimedia/wikipedia/resolve/main/20231101.ab/\"\n&gt;&gt;&gt; data_files = {\"train\": base_url + \"train-00000-of-00001.parquet\"}\n&gt;&gt;&gt; wiki = load_dataset(\"parquet\", data_files=data_files, split=\"train\")\n</code></pre>"},{"location":"datasets/docs/loading/#arrow","title":"Arrow","text":"<p>Arrow \u662f \ud83e\udd17 Datasets \u5e95\u5c42\u4f7f\u7528\u7684\u683c\u5f0f\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"arrow\", data_files={\"train\": \"train.arrow\", \"test\": \"test.arrow\"})\n</code></pre> <p>\u8fdc\u7a0b\u52a0\u8f7d\u793a\u4f8b\uff1a</p> <pre><code>&gt;&gt;&gt; base_url = \"https://huggingface.co/datasets/croissantllm/croissant_dataset/resolve/main/english_660B_11/\"\n&gt;&gt;&gt; data_files = {\"train\": base_url + \"train/data-00000-of-00080.arrow\"}\n&gt;&gt;&gt; wiki = load_dataset(\"arrow\", data_files=data_files, split=\"train\")\n</code></pre> <p>\u4e5f\u53ef\u76f4\u63a5\u4f7f\u7528 [<code>Dataset.from_file</code>] \u5185\u5b58\u6620\u5c04\u672c\u5730 Arrow \u6587\u4ef6\uff0c\u65e0\u9700\u5199\u5165\u7f13\u5b58\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import Dataset\n&gt;&gt;&gt; dataset = Dataset.from_file(\"data.arrow\")\n</code></pre> <p>\u76ee\u524d\u4ec5\u652f\u6301 Arrow \u6d41\u5f0f\u683c\u5f0f\uff0c\u5c1a\u4e0d\u652f\u6301 Arrow IPC\uff08Feather V2\uff09\u3002</p>"},{"location":"datasets/docs/loading/#hdf5","title":"HDF5","text":"<pre><code>&gt;&gt;&gt; dataset = load_dataset(\"hdf5\", data_files=\"data.h5\")\n</code></pre> <p>\u6ce8\u610f\uff1a\u52a0\u8f7d\u5668\u5047\u8bbe\u6587\u4ef6\u5177\u6709\u201c\u8868\u683c\u201d\u7ed3\u6784\uff0c\u5373\u5404\u6570\u636e\u96c6\u9996\u7ef4\u957f\u5ea6\u4e00\u81f4\u3002</p>"},{"location":"datasets/docs/loading/#sql","title":"SQL","text":"<p>\u4f7f\u7528 [<code>~datasets.Dataset.from_sql</code>] \u8bfb\u53d6\u6570\u636e\u5e93\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = Dataset.from_sql(\"data_table_name\", con=\"sqlite:///sqlite_file.db\")\n&gt;&gt;&gt; dataset = Dataset.from_sql(\"SELECT text FROM table WHERE length(text) &gt; 100 LIMIT 10\", con=\"sqlite:///sqlite_file.db\")\n</code></pre> <p>\u63d0\u793a</p> <p>\u8be6\u89c1 SQL \u8868\u683c\u52a0\u8f7d\u6307\u5357\u3002</p>"},{"location":"datasets/docs/loading/#webdataset","title":"WebDataset","text":"<p>WebDataset \u57fa\u4e8e TAR \u5f52\u6863\uff0c\u9002\u5408\u5927\u89c4\u6a21\u56fe\u50cf\u6570\u636e\uff0c\u901a\u5e38\u7ed3\u5408 <code>streaming=True</code> \u6d41\u5f0f\u52a0\u8f7d\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; path = \"path/to/train/*.tar\"\n&gt;&gt;&gt; dataset = load_dataset(\"webdataset\", data_files={\"train\": path}, split=\"train\", streaming=True)\n</code></pre> <p>\u540c\u6837\u652f\u6301 HTTP\uff1a</p> <pre><code>&gt;&gt;&gt; base_url = \"https://huggingface.co/datasets/lhoestq/small-publaynet-wds/resolve/main/publaynet-train-{i:06d}.tar\"\n&gt;&gt;&gt; urls = [base_url.format(i=i) for i in range(4)]\n&gt;&gt;&gt; dataset = load_dataset(\"webdataset\", data_files={\"train\": urls}, split=\"train\", streaming=True)\n</code></pre>"},{"location":"datasets/docs/loading/#_3","title":"\u591a\u8fdb\u7a0b","text":"<p>\u5f53\u6570\u636e\u96c6\u7531\u591a\u4e2a\u6587\u4ef6\uff08\u5373\u5206\u7247\uff09\u7ec4\u6210\u65f6\uff0c\u53ef\u901a\u8fc7 <code>num_proc</code> \u5e76\u884c\u5904\u7406\u4ee5\u663e\u8457\u63d0\u901f\uff1a</p> <pre><code>from datasets import load_dataset\n\nimagenet = load_dataset(\"timm/imagenet-1k-wds\", num_proc=8)\nml_librispeech_spanish = load_dataset(\"facebook/multilingual_librispeech\", \"spanish\", num_proc=8)\n</code></pre>"},{"location":"datasets/docs/loading/#_4","title":"\u5185\u5b58\u6570\u636e","text":"<p>\ud83e\udd17 Datasets \u4e5f\u652f\u6301\u4ece\u5185\u5b58\u7ed3\u6784\u521b\u5efa [<code>Dataset</code>]\u3002</p>"},{"location":"datasets/docs/loading/#python","title":"Python \u5b57\u5178","text":"<pre><code>&gt;&gt;&gt; from datasets import Dataset\n&gt;&gt;&gt; dataset = Dataset.from_dict({\"a\": [1, 2, 3]})\n</code></pre>"},{"location":"datasets/docs/loading/#_5","title":"\u5b57\u5178\u5217\u8868","text":"<pre><code>&gt;&gt;&gt; from datasets import Dataset\n&gt;&gt;&gt; dataset = Dataset.from_list([{\"a\": 1}, {\"a\": 2}, {\"a\": 3}])\n</code></pre>"},{"location":"datasets/docs/loading/#_6","title":"\u751f\u6210\u5668","text":"<pre><code>&gt;&gt;&gt; from datasets import Dataset\n&gt;&gt;&gt; def my_gen():\n...     for i in range(1, 4):\n...         yield {\"a\": i}\n...\n&gt;&gt;&gt; dataset = Dataset.from_generator(my_gen)\n</code></pre> <p>\u9002\u5408\u5927\u4e8e\u5185\u5b58\u7684\u6570\u636e\u3002\u53ef\u901a\u8fc7 <code>gen_kwargs</code> \u6307\u5b9a\u5206\u7247\uff0c\u5e76\u8f6c\u6362\u4e3a [<code>IterableDataset</code>]\uff1a</p> <pre><code>&gt;&gt;&gt; def gen(shards):\n...     for shard in shards:\n...         with open(shard) as f:\n...             for line in f:\n...                 yield {\"line\": line}\n...\n&gt;&gt;&gt; shards = [f\"data{i}.txt\" for i in range(32)]\n&gt;&gt;&gt; ds = IterableDataset.from_generator(gen, gen_kwargs={\"shards\": shards})\n&gt;&gt;&gt; ds = ds.shuffle(seed=42, buffer_size=10_000)\n&gt;&gt;&gt; from torch.utils.data import DataLoader\n&gt;&gt;&gt; dataloader = DataLoader(ds.with_format(\"torch\"), num_workers=4)\n</code></pre>"},{"location":"datasets/docs/loading/#pandas-dataframe","title":"Pandas DataFrame","text":"<pre><code>&gt;&gt;&gt; from datasets import Dataset\n&gt;&gt;&gt; import pandas as pd\n&gt;&gt;&gt; df = pd.DataFrame({\"a\": [1, 2, 3]})\n&gt;&gt;&gt; dataset = Dataset.from_pandas(df)\n</code></pre> <p>\u63d0\u793a</p> <p>\u8be6\u89c1 Pandas \u8868\u683c\u52a0\u8f7d\u6307\u5357\u3002</p>"},{"location":"datasets/docs/loading/#_7","title":"\u79bb\u7ebf\u6a21\u5f0f","text":"<p>\u5373\u4fbf\u6ca1\u6709\u7f51\u7edc\uff0c\u53ea\u8981\u6b64\u524d\u4e0b\u8f7d\u8fc7\u6570\u636e\u96c6\uff0c\u5b83\u5c31\u4f1a\u7f13\u5b58\u4e8e\u672c\u5730\uff0c\u53ef\u76f4\u63a5\u79bb\u7ebf\u52a0\u8f7d\u3002\u82e5\u63d0\u524d\u77e5\u9053\u65e0\u6cd5\u8054\u7f51\uff0c\u53ef\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf <code>HF_HUB_OFFLINE=1</code> \u542f\u7528\u79bb\u7ebf\u6a21\u5f0f\uff0c\u907f\u514d\u7b49\u5f85\u4e0b\u8f7d\u8d85\u65f6\u3002</p>"},{"location":"datasets/docs/loading/#_8","title":"\u5207\u7247\u52a0\u8f7d","text":"<p>\u53ef\u4ee5\u53ea\u52a0\u8f7d\u5212\u5206\u4e2d\u7684\u7279\u5b9a\u7247\u6bb5\u3002\u53ef\u4f7f\u7528\u5b57\u7b26\u4e32\u8bed\u6cd5\u6216 [<code>ReadInstruction</code>] API\uff1b\u7b80\u5355\u573a\u666f\u5b57\u7b26\u4e32\u66f4\u76f4\u89c2\uff0c\u590d\u6742\u573a\u666f <code>ReadInstruction</code> \u66f4\u7075\u6d3b\u3002</p> <p>\u5c06 <code>train</code> \u4e0e <code>test</code> \u62fc\u63a5\uff1a</p> <pre><code>&gt;&gt;&gt; train_test_ds = datasets.load_dataset(\"ajibawa-2023/General-Stories-Collection\", split=\"train+test\")\n===STRINGAPI-READINSTRUCTION-SPLIT===\n&gt;&gt;&gt; ri = datasets.ReadInstruction(\"train\") + datasets.ReadInstruction(\"test\")\n&gt;&gt;&gt; train_test_ds = datasets.load_dataset(\"ajibawa-2023/General-Stories-Collection\", split=ri)\n</code></pre> <p>\u9009\u62e9 <code>train</code> \u5212\u5206\u7684\u90e8\u5206\u884c\uff1a</p> <pre><code>&gt;&gt;&gt; train_10_20_ds = datasets.load_dataset(\"ajibawa-2023/General-Stories-Collection\", split=\"train[10:20]\")\n===STRINGAPI-READINSTRUCTION-SPLIT===\n&gt;&gt;&gt; train_10_20_ds = datasets.load_dataset(\"bookcorpu\", split=datasets.ReadInstruction(\"train\", from_=10, to=20, unit=\"abs\"))\n</code></pre> <p>\u6309\u767e\u5206\u6bd4\u53d6\u6837\uff1a</p> <pre><code>&gt;&gt;&gt; train_10pct_ds = datasets.load_dataset(\"ajibawa-2023/General-Stories-Collection\", split=\"train[:10%]\")\n===STRINGAPI-READINSTRUCTION-SPLIT===\n&gt;&gt;&gt; train_10pct_ds = datasets.load_dataset(\"ajibawa-2023/General-Stories-Collection\", split=datasets.ReadInstruction(\"train\", to=10, unit=\"%\"))\n</code></pre> <p>\u7ec4\u5408\u591a\u4e2a\u767e\u5206\u6bd4\uff1a</p> <pre><code>&gt;&gt;&gt; train_10_80pct_ds = datasets.load_dataset(\"ajibawa-2023/General-Stories-Collection\", split=\"train[:10%]+train[-80%:]\")\n===STRINGAPI-READINSTRUCTION-SPLIT===\n&gt;&gt;&gt; ri = (datasets.ReadInstruction(\"train\", to=10, unit=\"%\") + datasets.ReadInstruction(\"train\", from_=-80, unit=\"%\"))\n&gt;&gt;&gt; train_10_80pct_ds = datasets.load_dataset(\"ajibawa-2023/General-Stories-Collection\", split=ri)\n</code></pre> <p>\u8fd8\u53ef\u4ee5\u751f\u6210\u4ea4\u53c9\u9a8c\u8bc1\u5212\u5206\uff1a</p> <pre><code>&gt;&gt;&gt; val_ds = datasets.load_dataset(\"ajibawa-2023/General-Stories-Collection\", split=[f\"train[{k}%:{k+10}%]\" for k in range(0, 100, 10)])\n&gt;&gt;&gt; train_ds = datasets.load_dataset(\"ajibawa-2023/General-Stories-Collection\", split=[f\"train[:{k}%]+train[{k+10}%:]\" for k in range(0, 100, 10)])\n===STRINGAPI-READINSTRUCTION-SPLIT===\n&gt;&gt;&gt; val_ds = datasets.load_dataset(\"ajibawa-2023/General-Stories-Collection\", [datasets.ReadInstruction(\"train\", from_=k, to=k+10, unit=\"%\") for k in range(0, 100, 10)])\n&gt;&gt;&gt; train_ds = datasets.load_dataset(\"ajibawa-2023/General-Stories-Collection\", [(datasets.ReadInstruction(\"train\", to=k, unit=\"%\") + datasets.ReadInstruction(\"train\", from_=k+10, unit=\"%\")) for k in range(0, 100, 10)])\n</code></pre>"},{"location":"datasets/docs/loading/#_9","title":"\u767e\u5206\u6bd4\u5207\u7247\u4e0e\u820d\u5165","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fb9\u754c\u4f1a\u56db\u820d\u4e94\u5165\u5230\u6700\u63a5\u8fd1\u7684\u6574\u6570\uff0c\u56e0\u800c\u5404\u5207\u7247\u6837\u672c\u6570\u53ef\u80fd\u7565\u6709\u5dee\u5f02\u3002\u4f8b\u5982\u6570\u636e\u96c6\u4e2d\u5171\u6709 999 \u6761\u8bb0\u5f55\uff1a</p> <pre><code># \u8bb0\u5f55\u6570\uff1a19\uff08\u542b 500\uff0c\u4e0d\u542b 519\uff09\n&gt;&gt;&gt; train_50_52_ds = datasets.load_dataset(\"ajibawa-2023/General-Stories-Collection\", split=\"train[50%:52%]\")\n# \u8bb0\u5f55\u6570\uff1a20\uff08\u542b 519\uff0c\u4e0d\u542b 539\uff09\n&gt;&gt;&gt; train_52_54_ds = datasets.load_dataset(\"ajibawa-2023/General-Stories-Collection\", split=\"train[52%:54%]\")\n</code></pre> <p>\u82e5\u5e0c\u671b\u5207\u7247\u7b49\u957f\uff0c\u53ef\u4f7f\u7528 <code>pct1_dropremainder</code> \u820d\u5165\u7b56\u7565\uff0c\u5c06\u8fb9\u754c\u89c6\u4e3a 1% \u7684\u500d\u6570\uff1a</p> <pre><code># 18 \u6761\u8bb0\u5f55\n&gt;&gt;&gt; train_50_52pct1_ds = datasets.load_dataset(\"ajibawa-2023/General-Stories-Collection\", split=\"train[50%:52%](pct1_dropremainder)\")\n# 18 \u6761\u8bb0\u5f55\n&gt;&gt;&gt; train_52_54pct1_ds = datasets.load_dataset(\"ajibawa-2023/General-Stories-Collection\", split=\"train[52%:54%](pct1_dropremainder)\")\n</code></pre> <p>\u6ce8\u610f</p> <p><code>pct1_dropremainder</code> \u4f1a\u4e22\u5f03\u672b\u5c3e\u65e0\u6cd5\u6574\u9664\u7684\u6837\u672c\uff0c\u5982\u679c\u6837\u672c\u6570\u4e0d\u80fd\u88ab 100 \u6574\u9664\uff0c\u5c3e\u90e8\u6837\u672c\u53ef\u80fd\u88ab\u622a\u65ad\u3002</p> <p></p>"},{"location":"datasets/docs/loading/#_10","title":"\u6545\u969c\u6392\u67e5","text":"<p>\u52a0\u8f7d\u6570\u636e\u96c6\u65f6\u5076\u5c14\u4f1a\u9047\u5230\u95ee\u9898\uff0c\u5e38\u89c1\u60c5\u51b5\u5305\u62ec\uff1a\u624b\u52a8\u4e0b\u8f7d\u6587\u4ef6\u540e\u81ea\u5b9a\u4e49\u7279\u5f81\u3002</p>"},{"location":"datasets/docs/loading/#_11","title":"\u81ea\u5b9a\u4e49\u7279\u5f81","text":"<p>\u4ece\u672c\u5730\u6587\u4ef6\u521b\u5efa\u6570\u636e\u96c6\u65f6\uff0c\u5b57\u6bb5\u7c7b\u578b\u7531 Apache Arrow \u81ea\u52a8\u63a8\u65ad\u3002\u4f46\u6709\u65f6\u4f60\u53ef\u80fd\u5e0c\u671b\u81ea\u5b9a\u4e49\u7279\u5f81\u3002\u4f8b\u5982\u5b9a\u4e49\u6807\u7b7e\u540d\u79f0\uff1a</p> <pre><code>&gt;&gt;&gt; class_names = [\"sadness\", \"joy\", \"love\", \"anger\", \"fear\", \"surprise\"]\n&gt;&gt;&gt; emotion_features = Features({'text': Value('string'), 'label': ClassLabel(names=class_names)})\n</code></pre> <p>\u5728 [<code>load_dataset</code>] \u4e2d\u901a\u8fc7 <code>features</code> \u6307\u5b9a\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset('csv', data_files=file_dict, delimiter=';', column_names=['text', 'label'], features=emotion_features)\n</code></pre> <p>\u6b64\u65f6\u6570\u636e\u96c6\u7684 <code>label</code> \u5217\u5373\u4f7f\u7528\u81ea\u5b9a\u4e49\u6807\u7b7e\uff1a</p> <pre><code>&gt;&gt;&gt; dataset['train'].features\n{'text': Value('string'),\n 'label': ClassLabel(names=['sadness', 'joy', 'love', 'anger', 'fear', 'surprise'])}\n</code></pre>"},{"location":"datasets/docs/nlp_load/","title":"\u52a0\u8f7d\u6587\u672c\u6570\u636e","text":"<p>\u672c\u6307\u5357\u4ecb\u7ecd\u5982\u4f55\u52a0\u8f7d\u6587\u672c\u6570\u636e\u96c6\u3002\u82e5\u60f3\u4e86\u89e3\u901a\u7528\u52a0\u8f7d\u65b9\u5f0f\uff0c\u8bf7\u53c2\u9605\u901a\u7528\u52a0\u8f7d\u6307\u5357\u3002</p> <p>\u6587\u672c\u6587\u4ef6\u662f\u6700\u5e38\u89c1\u7684\u6570\u636e\u5b58\u50a8\u5f62\u5f0f\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\ud83e\udd17 Datasets \u4f1a\u6309\u884c\u91c7\u6837\u751f\u6210\u6570\u636e\u96c6\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; dataset = load_dataset(\"text\", data_files={\"train\": [\"my_text_1.txt\", \"my_text_2.txt\"], \"test\": \"my_test_file.txt\"})\n\n# \u4ece\u76ee\u5f55\u52a0\u8f7d\n&gt;&gt;&gt; dataset = load_dataset(\"text\", data_dir=\"path/to/text/dataset\")\n</code></pre> <p>\u82e5\u5e0c\u671b\u6309\u6bb5\u843d\u6216\u6587\u6863\u91c7\u6837\uff0c\u53ef\u8bbe\u7f6e <code>sample_by</code>\uff1a</p> <pre><code># \u6309\u6bb5\u843d\n&gt;&gt;&gt; dataset = load_dataset(\"text\", data_files={\"train\": \"my_train_file.txt\", \"test\": \"my_test_file.txt\"}, sample_by=\"paragraph\")\n\n# \u6309\u6587\u6863\n&gt;&gt;&gt; dataset = load_dataset(\"text\", data_files={\"train\": \"my_train_file.txt\", \"test\": \"my_test_file.txt\"}, sample_by=\"document\")\n</code></pre> <p>\u4e5f\u53ef\u4f7f\u7528\u901a\u914d\u7b26\u5339\u914d\u6587\u4ef6\uff1a</p> <pre><code>&gt;&gt;&gt; c4_subset = load_dataset(\"allenai/c4\", data_files=\"en/c4-train.0000*-of-01024.json.gz\")\n</code></pre> <p>\u52a0\u8f7d\u8fdc\u7a0b\u6587\u672c\u6587\u4ef6\u65f6\u4f20\u5165 URL \u5373\u53ef\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"text\", data_files=\"https://huggingface.co/datasets/hf-internal-testing/dataset_with_data_files/resolve/main/data/train.txt\")\n</code></pre> <p>\u5bf9\u4e8e XML\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>xml</code> \u52a0\u8f7d\u5668\uff0c\u6548\u679c\u7b49\u540c\u4e8e <code>text</code> \u4e14 <code>sample_by=\"document\"</code>\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; dataset = load_dataset(\"xml\", data_files={\"train\": [\"my_xml_1.xml\", \"my_xml_2.xml\"], \"test\": \"my_xml_file.xml\"})\n\n# \u4ece\u76ee\u5f55\u52a0\u8f7d\n&gt;&gt;&gt; dataset = load_dataset(\"xml\", data_dir=\"path/to/xml/dataset\")\n</code></pre>"},{"location":"datasets/docs/nlp_process/","title":"\u5904\u7406\u6587\u672c\u6570\u636e","text":"<p>\u672c\u6307\u5357\u4ecb\u7ecd\u6587\u672c\u6570\u636e\u96c6\u7684\u5e38\u89c1\u5904\u7406\u65b9\u5f0f\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u4f7f\u7528 [<code>~Dataset.map</code>] \u5bf9\u6570\u636e\u96c6\u6267\u884c\u5206\u8bcd\u3002</li> <li>\u4e3a NLI \u6570\u636e\u96c6\u5bf9\u9f50\u6807\u7b7e\u4e0e\u6807\u7b7e ID\u3002</li> </ul> <p>\u5982\u9700\u4e86\u89e3\u901a\u7528\u6d41\u7a0b\uff0c\u8bf7\u53c2\u9605\u901a\u7528\u5904\u7406\u6307\u5357\u3002</p>"},{"location":"datasets/docs/nlp_process/#map","title":"Map","text":"<p>[<code>~Dataset.map</code>] \u652f\u6301\u6279\u91cf\u5904\u7406\uff0c\u80fd\u663e\u8457\u52a0\u901f\u5206\u8bcd\u3002</p> <p>\u9996\u5148\u4ece \ud83e\udd17 Transformers \u52a0\u8f7d\u5206\u8bcd\u5668\uff1a</p> <pre><code>&gt;&gt;&gt; from transformers import AutoTokenizer\n\n&gt;&gt;&gt; tokenizer = AutoTokenizer.from_pretrained(\"bert-base-cased\")\n</code></pre> <p>\u5c06 <code>batched=True</code> \u4f20\u7ed9 [<code>~Dataset.map</code>] \u4ee5\u6279\u91cf\u5206\u8bcd\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = dataset.map(lambda examples: tokenizer(examples[\"text\"]), batched=True)\n&gt;&gt;&gt; dataset[0]\n{'text': 'the rock is destined ...', 'label': 1, 'input_ids': [...], 'token_type_ids': [...], 'attention_mask': [...]}\n</code></pre> <p>[<code>~Dataset.map</code>] \u4f1a\u5c06\u8fd4\u56de\u503c\u8f6c\u6362\u4e3a PyArrow \u652f\u6301\u7684\u683c\u5f0f\u3002\u82e5\u663e\u5f0f\u8fd4\u56de NumPy \u6570\u7ec4\uff08<code>return_tensors=\"np\"</code>\uff09\uff0c\u901f\u5ea6\u66f4\u5feb\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = dataset.map(lambda examples: tokenizer(examples[\"text\"], return_tensors=\"np\"), batched=True)\n</code></pre>"},{"location":"datasets/docs/nlp_process/#_2","title":"\u5bf9\u9f50\u6807\u7b7e","text":"<p>[<code>~Dataset.align_labels_with_mapping</code>] \u53ef\u5c06\u6570\u636e\u96c6\u4e2d\u7684\u6807\u7b7e ID \u5bf9\u9f50\u5230\u7279\u5b9a\u6620\u5c04\u3002\u5e76\u975e\u6240\u6709 \ud83e\udd17 Transformers \u6a21\u578b\u90fd\u6cbf\u7528\u539f\u59cb\u6570\u636e\u96c6\u7684\u6807\u7b7e\u987a\u5e8f\uff0c\u5c24\u5176\u662f NLI \u6570\u636e\u96c6\u3002\u4f8b\u5982 MNLI \u9ed8\u8ba4\u6620\u5c04\u4e3a\uff1a</p> <pre><code>&gt;&gt;&gt; label2id = {\"entailment\": 0, \"neutral\": 1, \"contradiction\": 2}\n</code></pre> <p>\u82e5\u6a21\u578b\u91c7\u7528\u4e0d\u540c\u6620\u5c04\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u6620\u5c04\u5b57\u5178\uff1a</p> <pre><code>&gt;&gt;&gt; label2id = {\"contradiction\": 0, \"neutral\": 1, \"entailment\": 2}\n</code></pre> <p>\u5c06\u6620\u5c04\u5b57\u5178\u4e0e\u9700\u8981\u5bf9\u9f50\u7684\u5217\u4f20\u5165 [<code>~Dataset.align_labels_with_mapping</code>]\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; mnli = load_dataset(\"nyu-mll/glue\", \"mnli\", split=\"train\")\n&gt;&gt;&gt; mnli_aligned = mnli.align_labels_with_mapping(label2id, \"label\")\n</code></pre> <p>\u8be5\u51fd\u6570\u540c\u6837\u53ef\u7528\u4e8e\u4e3a\u81ea\u5b9a\u4e49\u6807\u7b7e\u6307\u5b9a ID\u3002</p>"},{"location":"datasets/docs/object_detection/","title":"\u76ee\u6807\u68c0\u6d4b","text":"<p>\u76ee\u6807\u68c0\u6d4b\u6a21\u578b\u7528\u4e8e\u8bc6\u522b\u56fe\u50cf\u4e2d\u7684\u76ee\u6807\uff0c\u5e38\u89c1\u5e94\u7528\u5305\u62ec\u81ea\u52a8\u9a7e\u9a76\u3001\u81ea\u7136\u707e\u5bb3\u76d1\u6d4b\u7b49\u3002\u672c\u6307\u5357\u53c2\u8003 Albumentations \u793a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\u5bf9\u76ee\u6807\u68c0\u6d4b\u6570\u636e\u96c6\u6267\u884c\u53d8\u6362\u3002</p> <p>\u5f00\u59cb\u524d\uff0c\u8bf7\u786e\u4fdd\u5df2\u5b89\u88c5\u6700\u65b0\u7248 albumentations \u4e0e cv2\uff1a</p> <pre><code>pip install -U albumentations opencv-python\n</code></pre> <p>\u793a\u4f8b\u4f7f\u7528 <code>cppe-5</code> \u6570\u636e\u96c6\uff0c\u65e8\u5728\u8bc6\u522b\u75ab\u60c5\u80cc\u666f\u4e0b\u7684\u533b\u7528\u9632\u62a4\u88c5\u5907\uff08PPE\uff09\u3002</p> <p>\u52a0\u8f7d\u6570\u636e\u96c6\u5e76\u67e5\u770b\u793a\u4f8b\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; ds = load_dataset(\"cppe-5\")\n&gt;&gt;&gt; example = ds[\"train\"][0]\n&gt;&gt;&gt; example\n{'height': 663,\n 'image': &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=943x663 at 0x7FC3DC756250&gt;,\n 'image_id': 15,\n 'objects': {'area': [...],\n  'bbox': [...],\n  'category': [4, 4, 0, 0],\n  'id': [114, 115, 116, 117]},\n 'width': 943}\n</code></pre> <p>\u5b57\u6bb5\u8bf4\u660e\uff1a</p> <ul> <li><code>image</code>\uff1aPIL \u56fe\u50cf\u3002</li> <li><code>image_id</code>\uff1a\u56fe\u50cf ID\u3002</li> <li><code>height</code>\u3001<code>width</code>\uff1a\u56fe\u50cf\u5c3a\u5bf8\u3002</li> <li><code>objects</code>\uff1a\u5305\u542b\u76ee\u6807\u7684\u8fb9\u754c\u6846\u4fe1\u606f\uff1a</li> <li><code>id</code>\uff1a\u6807\u6ce8 ID\u3002</li> <li><code>area</code>\uff1a\u8fb9\u754c\u6846\u9762\u79ef\u3002</li> <li><code>bbox</code>\uff1aCOCO \u683c\u5f0f\u7684\u8fb9\u754c\u6846\u3002</li> <li><code>category</code>\uff1a\u7c7b\u522b\uff0c\u6570\u503c\u542b\u4e49\u5305\u62ec <code>Coverall (0)</code>\u3001<code>Face_Shield (1)</code>\u3001<code>Gloves (2)</code>\u3001<code>Goggles (3)</code>\u3001<code>Mask (4)</code>\u3002</li> </ul> <p>\u53ef\u4ee5\u901a\u8fc7 PyTorch \u5de5\u5177\u7ed8\u5236\u8fb9\u754c\u6846\u3002\u9700\u5148\u83b7\u53d6\u7c7b\u522b\u7279\u5f81\u4ee5\u4fbf\u5c06 ID \u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u6807\u7b7e\uff1a</p> <pre><code>&gt;&gt;&gt; import torch\n&gt;&gt;&gt; from torchvision.ops import box_convert\n&gt;&gt;&gt; from torchvision.utils import draw_bounding_boxes\n&gt;&gt;&gt; from torchvision.transforms.functional import pil_to_tensor, to_pil_image\n\n&gt;&gt;&gt; categories = ds[\"train\"].features[\"objects\"].feature[\"category\"]\n\n&gt;&gt;&gt; boxes_xywh = torch.tensor(example[\"objects\"][\"bbox\"])\n&gt;&gt;&gt; boxes_xyxy = box_convert(boxes_xywh, \"xywh\", \"xyxy\")\n&gt;&gt;&gt; labels = [categories.int2str(x) for x in example[\"objects\"][\"category\"]]\n&gt;&gt;&gt; to_pil_image(\n...     draw_bounding_boxes(\n...         pil_to_tensor(example[\"image\"]),\n...         boxes_xyxy,\n...         colors=\"red\",\n...         labels=labels,\n...     )\n... )\n</code></pre> <p>\u501f\u52a9 <code>albumentations</code> \u53ef\u5728\u53d8\u6362\u56fe\u50cf\u7684\u540c\u65f6\u66f4\u65b0 <code>bboxes</code>\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c06\u56fe\u50cf\u7f29\u653e\u81f3 (480, 480)\u3001\u6c34\u5e73\u7ffb\u8f6c\u5e76\u8c03\u6574\u4eae\u5ea6\uff1a</p> <pre><code>&gt;&gt;&gt; import albumentations\n&gt;&gt;&gt; import numpy as np\n\n&gt;&gt;&gt; transform = albumentations.Compose(\n...     [\n...         albumentations.Resize(480, 480),\n...         albumentations.HorizontalFlip(p=1.0),\n...         albumentations.RandomBrightnessContrast(p=1.0),\n...     ],\n...     bbox_params=albumentations.BboxParams(format=\"coco\", label_fields=[\"category\"]),\n... )\n\n&gt;&gt;&gt; image = np.array(example[\"image\"])\n&gt;&gt;&gt; out = transform(\n...     image=image,\n...     bboxes=example[\"objects\"][\"bbox\"],\n...    category=example[\"objects\"][\"category\"],\n... )\n</code></pre> <p>\u53ef\u89c6\u5316\u7ed3\u679c\uff0c\u56fe\u50cf\u5e94\u88ab\u7ffb\u8f6c\uff0c\u8fb9\u754c\u6846\u4ecd\u4e0e\u76ee\u6807\u5bf9\u5e94\uff1a</p> <pre><code>&gt;&gt;&gt; image = torch.tensor(out[\"image\"]).permute(2, 0, 1)\n&gt;&gt;&gt; boxes_xywh = torch.stack([torch.tensor(x) for x in out[\"bboxes\"]])\n&gt;&gt;&gt; boxes_xyxy = box_convert(boxes_xywh, \"xywh\", \"xyxy\")\n&gt;&gt;&gt; labels = [categories.int2str(x) for x in out[\"category\"]]\n&gt;&gt;&gt; to_pil_image(\n...     draw_bounding_boxes(image, boxes_xyxy, colors=\"red\", labels=labels)\n... )\n</code></pre> <p>\u521b\u5efa\u51fd\u6570\u4ee5\u6279\u91cf\u5e94\u7528\u53d8\u6362\uff1a</p> <pre><code>&gt;&gt;&gt; def transforms(examples):\n...     images, bboxes, categories = [], [], []\n...     for image, objects in zip(examples[\"image\"], examples[\"objects\"]):\n...         image = np.array(image.convert(\"RGB\"))\n...         out = transform(\n...             image=image,\n...             bboxes=objects[\"bbox\"],\n...             category=objects[\"category\"],\n...         )\n...         images.append(torch.tensor(out[\"image\"]).permute(2, 0, 1))\n...         bboxes.append(torch.tensor(out[\"bboxes\"]))\n...         categories.append(out[\"category\"])\n...     return {\"image\": images, \"bbox\": bboxes, \"category\": categories}\n</code></pre> <p>\u4f7f\u7528 [<code>~Dataset.set_transform</code>] \u6309\u9700\u6267\u884c\u53d8\u6362\uff0c\u65e2\u7701\u78c1\u76d8\u53c8\u80fd\u5728\u591a\u8f6e\u8bad\u7ec3\u4e2d\u5f97\u5230\u4e0d\u540c\u589e\u5e7f\u7ed3\u679c\uff1a</p> <pre><code>&gt;&gt;&gt; ds[\"train\"].set_transform(transforms)\n</code></pre> <p>\u9a8c\u8bc1\u7b2c 10 \u4e2a\u6837\u672c\u7684\u53d8\u6362\u6548\u679c\uff1a</p> <pre><code>&gt;&gt;&gt; example = ds[\"train\"][10]\n&gt;&gt;&gt; to_pil_image(\n...     draw_bounding_boxes(\n...         example[\"image\"],\n...         box_convert(example[\"bbox\"], \"xywh\", \"xyxy\"),\n...         colors=\"red\",\n...         labels=[categories.int2str(x) for x in example[\"category\"]],\n...     )\n... )\n</code></pre> <p>\u63d0\u793a</p> <p>\u4e86\u89e3\u6570\u636e\u9884\u5904\u7406\u540e\uff0c\u7ee7\u7eed\u5b66\u4e60\u5982\u4f55\u8bad\u7ec3\u76ee\u6807\u68c0\u6d4b\u6a21\u578b\u5e76\u6267\u884c\u63a8\u7406\u3002</p>"},{"location":"datasets/docs/process/","title":"\u6570\u636e\u5904\u7406","text":"<p>\ud83e\udd17 Datasets \u63d0\u4f9b\u5927\u91cf\u5de5\u5177\u7528\u4e8e\u8c03\u6574\u6570\u636e\u96c6\u7684\u7ed3\u6784\u4e0e\u5185\u5bb9\uff0c\u4f8b\u5982\u6e05\u6d17\u6570\u636e\u3001\u521b\u5efa\u65b0\u5217\u3001\u5728\u4e0d\u540c\u7279\u5f81\u6216\u683c\u5f0f\u4e4b\u95f4\u8f6c\u6362\u7b49\u3002</p> <p>\u672c\u6307\u5357\u5c06\u4ecb\u7ecd\u5982\u4f55\uff1a</p> <ul> <li>\u91cd\u6392\u884c\u987a\u5e8f\u5e76\u5212\u5206\u6570\u636e\u96c6\u3002</li> <li>\u91cd\u547d\u540d\u3001\u5220\u9664\u5217\u4ee5\u53ca\u5e38\u89c1\u5217\u64cd\u4f5c\u3002</li> <li>\u5bf9\u6bcf\u6761\u6837\u672c\u6267\u884c\u5904\u7406\u51fd\u6570\u3002</li> <li>\u62fc\u63a5\u591a\u4e2a\u6570\u636e\u96c6\u3002</li> <li>\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u8f93\u51fa\u683c\u5f0f\u3002</li> <li>\u4fdd\u5b58\u4e0e\u5bfc\u51fa\u5904\u7406\u540e\u7684\u6570\u636e\u3002</li> </ul> <p>\u82e5\u60f3\u4e86\u89e3\u7279\u5b9a\u6a21\u6001\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u8bf7\u53c2\u8003\u97f3\u9891\u5904\u7406\u3001\u56fe\u50cf\u5904\u7406\u4e0e\u6587\u672c\u5904\u7406\u6307\u5357\u3002</p> <p>\u793a\u4f8b\u4f7f\u7528 MRPC \u6570\u636e\u96c6\uff0c\u4f60\u4e5f\u53ef\u4ee5\u66ff\u6362\u4e3a\u5176\u4ed6\u6570\u636e\u96c6\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; dataset = load_dataset(\"nyu-mll/glue\", \"mrpc\", split=\"train\")\n</code></pre> <p>\u6ce8\u610f</p> <p>\u4ee5\u4e0b\u5904\u7406\u65b9\u6cd5\u90fd\u4f1a\u8fd4\u56de\u65b0\u7684 [<code>Dataset</code>] \u5bf9\u8c61\uff0c\u4e0d\u4f1a\u5728\u539f\u5730\u4fee\u6539\u3002\u8bf7\u6ce8\u610f\u4e0d\u8981\u8986\u76d6\u539f\u59cb\u6570\u636e\u3002</p>"},{"location":"datasets/docs/process/#_2","title":"\u6392\u5e8f\u3001\u6253\u4e71\u3001\u7b5b\u9009\u3001\u5212\u5206\u4e0e\u5206\u7247","text":"<p>\u8fd9\u4e9b\u51fd\u6570\u53ef\u5e2e\u52a9\u4f60\u6311\u9009\u6240\u9700\u884c\u3001\u521b\u5efa\u8bad\u7ec3/\u6d4b\u8bd5\u5212\u5206\uff0c\u6216\u5c06\u8d85\u5927\u6570\u636e\u96c6\u62c6\u5206\u4e3a\u5c0f\u5757\u3002</p>"},{"location":"datasets/docs/process/#_3","title":"\u6392\u5e8f","text":"<p>[<code>~Dataset.sort</code>] \u4f1a\u6839\u636e\u5217\u7684\u6570\u503c\u6392\u5e8f\uff0c\u8be5\u5217\u9700\u517c\u5bb9 NumPy\uff1a</p> <pre><code>&gt;&gt;&gt; sorted_dataset = dataset.sort(\"label\")\n</code></pre> <p>\u5e95\u5c42\u901a\u8fc7\u91cd\u6392\u7d22\u5f15\u5217\u8868\u5b9e\u73b0\u3002</p>"},{"location":"datasets/docs/process/#_4","title":"\u6253\u4e71","text":"<p>[<code>~Dataset.shuffle</code>] \u968f\u673a\u6253\u4e71\u884c\u987a\u5e8f\uff0c\u53ef\u901a\u8fc7 <code>generator</code> \u81ea\u5b9a\u4e49\u968f\u673a\u6570\u751f\u6210\u5668\uff1a</p> <pre><code>&gt;&gt;&gt; shuffled_dataset = sorted_dataset.shuffle(seed=42)\n</code></pre> <p>\u6ce8\u610f\uff1a\u4e00\u65e6\u6570\u636e\u96c6\u62e5\u6709\u7d22\u5f15\u6620\u5c04\uff08\u5982\u6267\u884c\u4e86 <code>sort</code> \u6216 <code>shuffle</code>\uff09\uff0c\u8bfb\u53d6\u901f\u5ea6\u53ef\u80fd\u4e0b\u964d\uff0c\u56e0\u4e3a\u9700\u8981\u989d\u5916\u6b65\u9aa4\u5b9a\u4f4d\u884c\u4e14\u4e0d\u518d\u662f\u8fde\u7eed\u5757\u3002\u53ef\u901a\u8fc7 [<code>Dataset.flatten_indices</code>] \u91cd\u5199\u6570\u636e\u6062\u590d\u901f\u5ea6\uff0c\u6216\u8f6c\u4e3a [<code>IterableDataset</code>] \u5e76\u4f7f\u7528\u5176\u5feb\u901f\u8fd1\u4f3c\u6253\u4e71 [<code>IterableDataset.shuffle</code>]\uff1a</p> <pre><code>&gt;&gt;&gt; iterable_dataset = dataset.to_iterable_dataset(num_shards=128)\n&gt;&gt;&gt; shuffled_iterable_dataset = iterable_dataset.shuffle(seed=42, buffer_size=1000)\n</code></pre>"},{"location":"datasets/docs/process/#_5","title":"\u9009\u62e9\u4e0e\u8fc7\u6ee4","text":"<p>[<code>~Dataset.select</code>] \u6839\u636e\u7d22\u5f15\u9009\u62e9\u884c\uff1a</p> <pre><code>&gt;&gt;&gt; small_dataset = dataset.select([0, 10, 20, 30, 40, 50])\n</code></pre> <p>[<code>~Dataset.filter</code>] \u6839\u636e\u6761\u4ef6\u7b5b\u9009\u884c\uff1a</p> <pre><code>&gt;&gt;&gt; start_with_ar = dataset.filter(lambda example: example[\"sentence1\"].startswith(\"Ar\"))\n</code></pre> <p>\u8bbe\u7f6e <code>with_indices=True</code> \u53ef\u5728\u8fc7\u6ee4\u65f6\u4f7f\u7528\u7d22\u5f15\uff1a</p> <pre><code>&gt;&gt;&gt; even_dataset = dataset.filter(lambda example, idx: idx % 2 == 0, with_indices=True)\n</code></pre>"},{"location":"datasets/docs/process/#_6","title":"\u5212\u5206","text":"<p>[<code>~Dataset.train_test_split</code>] \u53ef\u5feb\u901f\u751f\u6210\u8bad\u7ec3/\u6d4b\u8bd5\u5212\u5206\uff0c\u5e76\u6307\u5b9a\u6bd4\u4f8b\u6216\u6837\u672c\u6570\u91cf\uff1a</p> <pre><code>&gt;&gt;&gt; dataset.train_test_split(test_size=0.1)\n</code></pre> <p>\u9ed8\u8ba4\u4f1a\u5148\u6253\u4e71\uff0c\u53ef\u901a\u8fc7 <code>shuffle=False</code> \u5173\u95ed\u3002</p>"},{"location":"datasets/docs/process/#_7","title":"\u5206\u7247","text":"<p>[<code>~Dataset.shard</code>] \u652f\u6301\u5c06\u5927\u6570\u636e\u96c6\u62c6\u5206\u4e3a\u82e5\u5e72\u4efd\uff0c\u9700\u6307\u5b9a <code>num_shards</code> \u4e0e\u8fd4\u56de\u7684 <code>index</code>\uff1a</p> <pre><code>&gt;&gt;&gt; dataset.shard(num_shards=4, index=0)\n</code></pre>"},{"location":"datasets/docs/process/#_8","title":"\u91cd\u547d\u540d\u3001\u5220\u9664\u3001\u8f6c\u6362\u4e0e\u5c55\u5f00\u5217","text":""},{"location":"datasets/docs/process/#_9","title":"\u91cd\u547d\u540d","text":"<p>\u4f7f\u7528 [<code>~Dataset.rename_column</code>] \u4fee\u6539\u5217\u540d\uff0c\u539f\u5217\u7684\u7279\u5f81\u4f1a\u79fb\u52a8\u81f3\u65b0\u5217\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = dataset.rename_column(\"sentence1\", \"sentenceA\")\n</code></pre>"},{"location":"datasets/docs/process/#_10","title":"\u5220\u9664","text":"<p>[<code>~Dataset.remove_columns</code>] \u5220\u9664\u4e00\u4e2a\u6216\u591a\u4e2a\u5217\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = dataset.remove_columns([\"sentence1\", \"sentence2\"])\n</code></pre> <p>[<code>~Dataset.select_columns</code>] \u4e0e\u4e4b\u76f8\u53cd\uff1a\u4fdd\u7559\u6307\u5b9a\u5217\u5e76\u79fb\u9664\u5176\u4ed6\u5217\u3002</p>"},{"location":"datasets/docs/process/#_11","title":"\u7c7b\u578b\u8f6c\u6362","text":"<p>[<code>~Dataset.cast</code>] \u53ef\u4e00\u6b21\u6027\u8f6c\u6362\u591a\u5217\u7684\u7279\u5f81\u7c7b\u578b\uff0c\u9700\u8981\u63d0\u4f9b\u65b0\u7684 [<code>Features</code>]\uff1a</p> <pre><code>&gt;&gt;&gt; new_features = dataset.features.copy()\n&gt;&gt;&gt; new_features[\"label\"] = ClassLabel(names=[\"negative\", \"positive\"])\n&gt;&gt;&gt; dataset = dataset.cast(new_features)\n</code></pre> <p>\u63d0\u793a</p> <p>\u4ec5\u5f53\u539f\u59cb\u7c7b\u578b\u4e0e\u76ee\u6807\u7c7b\u578b\u517c\u5bb9\u65f6\u624d\u53ef\u8f6c\u6362\uff0c\u4f8b\u5982\u7531 <code>Value(\"int32\")</code> \u8f6c\u4e3a <code>Value(\"bool\")</code> \u9700\u4fdd\u8bc1\u539f\u5217\u4ec5\u5305\u542b 0 \u4e0e 1\u3002</p> <p>\u82e5\u53ea\u9700\u8f6c\u6362\u5355\u5217\uff0c\u53ef\u4f7f\u7528 [<code>~Dataset.cast_column</code>]\u3002</p>"},{"location":"datasets/docs/process/#_12","title":"\u5c55\u5f00\u5d4c\u5957","text":"<p>\u5bf9\u4e8e\u5d4c\u5957\u5b57\u6bb5\uff0c\u53ef\u4f7f\u7528 [<code>~Dataset.flatten</code>] \u5c06\u5b50\u5b57\u6bb5\u5c55\u5f00\u4e3a\u72ec\u7acb\u5217\u3002\u4f8b\u5982 SQuAD \u6570\u636e\u96c6\u4e2d\u7684 <code>answers</code> \u5b57\u6bb5\uff1a</p> <pre><code>&gt;&gt;&gt; flat_dataset = dataset.flatten()\n</code></pre>"},{"location":"datasets/docs/process/#map","title":"map\uff1a\u9010\u6837\u672c\u6216\u6279\u91cf\u5904\u7406","text":"<p>[<code>~Dataset.map</code>] \u662f\u6700\u5f3a\u5927\u7684\u5de5\u5177\u4e4b\u4e00\uff0c\u53ef\u5728\u5355\u6761\u6216\u6279\u91cf\u6837\u672c\u4e0a\u6267\u884c\u51fd\u6570\uff0c\u751a\u81f3\u751f\u6210\u65b0\u5217\u6216\u65b0\u884c\u3002</p>"},{"location":"datasets/docs/process/#_13","title":"\u57fa\u672c\u793a\u4f8b","text":"<p>\u4e3a <code>sentence1</code> \u6dfb\u52a0\u524d\u7f00\uff1a</p> <pre><code>&gt;&gt;&gt; def add_prefix(example):\n...     example[\"sentence1\"] = \"My sentence: \" + example[\"sentence1\"]\n...     return example\n&gt;&gt;&gt; updated_dataset = dataset.map(add_prefix)\n</code></pre> <p>\u53ef\u901a\u8fc7 <code>remove_columns</code> \u5220\u9664\u5217\uff1b\u8bbe\u7f6e <code>with_indices=True</code> \u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u7d22\u5f15\u3002</p>"},{"location":"datasets/docs/process/#_14","title":"\u591a\u8fdb\u7a0b","text":"<p>\u901a\u8fc7 <code>num_proc</code> \u5e76\u884c\u5904\u7406\u53ef\u663e\u8457\u63d0\u901f\uff1a</p> <pre><code>&gt;&gt;&gt; updated_dataset = dataset.map(func, num_proc=4)\n</code></pre> <p><code>with_rank=True</code> \u53ef\u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\u4f7f\u7528\u8fdb\u7a0b rank\uff0c\u5e38\u7528\u4e8e\u591a GPU \u5e76\u884c\u3002\u6ce8\u610f\u4f7f\u7528 <code>multiprocess.set_start_method(\"spawn\")</code>\uff0c\u5426\u5219\u4f1a\u51fa\u73b0 CUDA \u9519\u8bef\u3002</p>"},{"location":"datasets/docs/process/#_15","title":"\u5206\u6279\u5904\u7406","text":"<p>\u8bbe\u7f6e <code>batched=True</code> \u53ef\u4ee5\u6309\u6279\u5904\u7406\uff0c\u9ed8\u8ba4\u6279\u5927\u5c0f\u4e3a 1000\uff0c\u53ef\u901a\u8fc7 <code>batch_size</code> \u8c03\u6574\u3002</p>"},{"location":"datasets/docs/process/#_16","title":"\u62c6\u5206\u957f\u6587\u672c","text":"<pre><code>&gt;&gt;&gt; def chunk_examples(examples):\n...     chunks = []\n...     for sentence in examples[\"sentence1\"]:\n...         chunks += [sentence[i:i + 50] for i in range(0, len(sentence), 50)]\n...     return {\"chunks\": chunks}\n&gt;&gt;&gt; chunked_dataset = dataset.map(chunk_examples, batched=True, remove_columns=dataset.column_names)\n</code></pre>"},{"location":"datasets/docs/process/#_17","title":"\u6570\u636e\u589e\u5f3a","text":"<p>\u7ed3\u5408\u6a21\u578b\u751f\u6210\u66ff\u6362\u8bcd\u8fdb\u884c\u589e\u5e7f\uff1a</p> <pre><code>&gt;&gt;&gt; from transformers import pipeline\n&gt;&gt;&gt; fillmask = pipeline(\"fill-mask\", model=\"roberta-base\")\n&gt;&gt;&gt; def augment_data(examples):\n...     outputs = []\n...     for sentence in examples[\"sentence1\"]:\n...         # ...\u7565\n...     return {\"data\": outputs}\n&gt;&gt;&gt; augmented_dataset = smaller_dataset.map(augment_data, batched=True, remove_columns=dataset.column_names, batch_size=8)\n</code></pre>"},{"location":"datasets/docs/process/#_18","title":"\u5f02\u6b65\u5904\u7406","text":"<p>\u53ef\u5b9a\u4e49 <code>async</code>/<code>await</code> \u51fd\u6570\u5e76\u5728 <code>map</code> \u4e2d\u8c03\u7528\uff0c\u4ee5\u5e76\u884c\u8bbf\u95ee API\uff08\u6b64\u5904\u7565\uff0c\u903b\u8f91\u540c\u82f1\u6587\u793a\u4f8b\uff09\u3002</p>"},{"location":"datasets/docs/process/#_19","title":"\u62fc\u63a5\u6570\u636e\u96c6","text":"<p>\u4f7f\u7528 [<code>datasets.concatenate_datasets</code>] \u7eb5\u5411\u62fc\u63a5\u3001[<code>datasets.interleave_datasets</code>] \u4ea4\u9519\u5408\u5e76\uff0c\u6216\u76f4\u63a5\u6784\u5efa [<code>DatasetDict</code>]\u3002</p>"},{"location":"datasets/docs/process/#_20","title":"\u683c\u5f0f\u5316\u8f93\u51fa","text":""},{"location":"datasets/docs/process/#set_format-with_format","title":"set_format / with_format","text":"<p>[<code>~Dataset.set_format</code>] \u4f1a\u5c31\u5730\u8bbe\u5b9a\u8f93\u51fa\u683c\u5f0f\uff1b[<code>~Dataset.with_format</code>] \u8fd4\u56de\u5e94\u7528\u683c\u5f0f\u540e\u7684\u65b0\u6570\u636e\u96c6\u3002</p> <p>\u652f\u6301\u683c\u5f0f\u5305\u62ec\uff1a</p> <ul> <li>\u5f20\u91cf/\u6570\u7ec4\uff1a<code>\"numpy\"</code>\u3001<code>\"torch\"</code>\u3001<code>\"tensorflow\"</code>\u3001<code>\"jax\"</code></li> <li>\u8868\u683c\uff1a<code>\"pandas\"</code>\u3001<code>\"polars\"</code>\u3001<code>\"arrow\"</code></li> </ul> <p>\u793a\u4f8b\uff1a</p> <pre><code>&gt;&gt;&gt; ds = Dataset.from_dict({\"text\": [\"foo\", \"bar\"], \"tokens\": [[0,1,2],[3,4,5]]})\n&gt;&gt;&gt; ds = ds.with_format(\"torch\")\n&gt;&gt;&gt; ds[0]\n{'text': 'foo', 'tokens': tensor([0, 1, 2])}\n</code></pre> <p>\u4f7f\u7528\u8868\u683c\u683c\u5f0f\u53ef\u907f\u514d\u6570\u636e\u590d\u5236\uff0c\u5e76\u5728 <code>map</code>/<code>filter</code> \u4e2d\u63d0\u5347\u6027\u80fd\uff1a</p> <pre><code>&gt;&gt;&gt; ds = ds.with_format(\"pandas\")\n&gt;&gt;&gt; ds = ds.map(lambda df: df.assign(upper_text=df.text.str.upper()), batched=True)\n</code></pre>"},{"location":"datasets/docs/process/#_21","title":"\u81ea\u5b9a\u4e49\u683c\u5f0f","text":"<p>[<code>~Dataset.with_transform</code>] \u53ef\u5728\u8bbf\u95ee\u6837\u672c\u65f6\u5373\u65f6\u6267\u884c\u8f6c\u6362\uff0c\u4f8b\u5982\u52a8\u6001\u5206\u8bcd\u4e0e\u586b\u5145\uff1a</p> <pre><code>&gt;&gt;&gt; tokenizer = AutoTokenizer.from_pretrained(\"bert-base-uncased\")\n&gt;&gt;&gt; def encode(batch):\n...     return tokenizer(batch[\"sentence1\"], batch[\"sentence2\"], padding=\"longest\", truncation=True, max_length=512, return_tensors=\"pt\")\n&gt;&gt;&gt; dataset = dataset.with_transform(encode)\n</code></pre> <p>\u4e5f\u53ef\u7528\u4e8e\u81ea\u5b9a\u4e49\u89e3\u7801\u3002\u4f8b\u5982\u4ee5\u4e0b\u4ee3\u7801\u4f7f\u7528 <code>pydub</code> \u8bfb\u53d6\u97f3\u9891\uff08\u53c2\u89c1\u82f1\u6587\u793a\u4f8b\uff09\u3002</p>"},{"location":"datasets/docs/process/#_22","title":"\u4fdd\u5b58\u4e0e\u5bfc\u51fa","text":"<p>\u5904\u7406\u5b8c\u6210\u540e\uff0c\u53ef\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u4fdd\u5b58\uff1a</p> <ul> <li>[<code>~Dataset.save_to_disk</code>] / [<code>~Dataset.load_from_disk</code>]</li> <li>\u5bfc\u51fa\u4e3a CSV/JSON/Parquet/SQL\uff08<code>to_csv</code>\u3001<code>to_json</code> \u7b49\uff09</li> <li>[<code>~Dataset.push_to_hub</code>] \u4e0a\u4f20\u5230 Hub</li> </ul> <p>\u4e5f\u53ef\u4ee5\u4f7f\u7528 [<code>~Dataset.save_faiss_index</code>]\u3001[<code>~Dataset.save_elasticsearch_index</code>] \u7b49\u4fdd\u5b58\u7d22\u5f15\u3002</p>"},{"location":"datasets/docs/quickstart/","title":"\u5feb\u901f\u4e0a\u624b","text":""},{"location":"datasets/docs/quickstart/#_1","title":"\u5feb\u901f\u4e0a\u624b","text":"<ul> <li>:material-rocket-launch: \u5728\u7ebf\u4f53\u9a8c\u5feb\u901f\u4e0a\u624b\u793a\u4f8b     ---     \u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u5b8c\u6574 Notebook\uff0c\u7acb\u5373\u719f\u6089 \ud83e\udd17 Datasets \u7684\u6838\u5fc3\u7528\u6cd5\u3002 :material-launch: \u6253\u5f00 Google Colab</li> </ul> <p>\u672c\u5feb\u901f\u4e0a\u624b\u6307\u5357\u9762\u5411\u5df2\u7ecf\u51c6\u5907\u76f4\u63a5\u52a8\u624b\u7f16\u7801\u7684\u5f00\u53d1\u8005\uff0c\u5c55\u793a\u5982\u4f55\u5c06 \ud83e\udd17 Datasets \u96c6\u6210\u5230\u6a21\u578b\u8bad\u7ec3\u6d41\u7a0b\u4e2d\u3002\u5982\u679c\u4f60\u521a\u521a\u63a5\u89e6\u8fd9\u4e2a\u5e93\uff0c\u5efa\u8bae\u5148\u9605\u8bfb\u6211\u4eec\u7684\u7cfb\u5217\u6559\u7a0b\uff0c\u90a3\u91cc\u63d0\u4f9b\u4e86\u66f4\u7cfb\u7edf\u7684\u80cc\u666f\u4ecb\u7ecd\u3002</p> <p>\u6bcf\u4e2a\u6570\u636e\u96c6\u90fd\u6709\u81ea\u5df1\u7684\u7279\u70b9\uff0c\u6839\u636e\u4efb\u52a1\u7c7b\u578b\u7684\u4e0d\u540c\uff0c\u8bad\u7ec3\u524d\u53ef\u80fd\u9700\u8981\u989d\u5916\u7684\u6570\u636e\u51c6\u5907\u6b65\u9aa4\u3002\u4f46\u65e0\u8bba\u5982\u4f55\uff0c\u4f60\u90fd\u53ef\u4ee5\u4f9d\u6258 \ud83e\udd17 Datasets \u63d0\u4f9b\u7684\u5de5\u5177\u6765\u52a0\u8f7d\u5e76\u5904\u7406\u6570\u636e\u3002\u542f\u52a8\u6700\u5feb\u7684\u65b9\u5f0f\uff0c\u662f\u76f4\u63a5\u4ece Hugging Face Hub \u52a0\u8f7d\u5df2\u6709\u7684\u6570\u636e\u96c6\u3002Hub \u4e0a\u63d0\u4f9b\u4e86\u8986\u76d6\u591a\u79cd\u4efb\u52a1\u7684\u6210\u5343\u4e0a\u4e07\u4e2a\u6570\u636e\u96c6\uff0c\u9009\u5b9a\u4f60\u60f3\u8981\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6211\u4eec\u5c31\u5f00\u59cb\u5427\uff01</p> <ul> <li>\u97f3\u9891\uff1a\u5bf9\u97f3\u9891\u6570\u636e\u96c6\u8fdb\u884c\u91cd\u91c7\u6837\uff0c\u8ba9\u6a21\u578b\u80fd\u591f\u8bc6\u522b\u6765\u7535\u8005\u6240\u63cf\u8ff0\u7684\u94f6\u884c\u95ee\u9898\u3002</li> <li>\u89c6\u89c9\uff1a\u5bf9\u56fe\u50cf\u6570\u636e\u6267\u884c\u589e\u5f3a\uff0c\u5e2e\u52a9\u6a21\u578b\u8bca\u65ad\u8c46\u53f6\u75c5\u5bb3\u3002</li> <li>NLP\uff1a\u5bf9\u6587\u672c\u6570\u636e\u8fdb\u884c\u5206\u8bcd\uff0c\u5224\u65ad\u53e5\u5b50\u5bf9\u662f\u5426\u8868\u8fbe\u76f8\u540c\u542b\u4e49\u3002</li> </ul> <p>\u63d0\u793a</p> <p>\u5efa\u8bae\u9605\u8bfb Hugging Face \u8bfe\u7a0b\u7684\u7b2c 5 \u7ae0\uff0c\u4e86\u89e3\u66f4\u591a\u4e3b\u9898\uff0c\u4f8b\u5982\u52a0\u8f7d\u8fdc\u7a0b\u6216\u672c\u5730\u6570\u636e\u96c6\u3001\u6e05\u7406\u6570\u636e\u96c6\u7684\u5de5\u5177\u53ca\u5982\u4f55\u521b\u5efa\u81ea\u5b9a\u4e49\u6570\u636e\u96c6\u3002</p> <p>\u9996\u5148\u5b89\u88c5 \ud83e\udd17 Datasets\uff1a</p> <pre><code>pip install datasets\n</code></pre> <p>\ud83e\udd17 Datasets \u540c\u6837\u652f\u6301\u97f3\u9891\u4e0e\u56fe\u50cf\u683c\u5f0f\uff1a</p> <ul> <li>\u82e5\u8981\u5904\u7406\u97f3\u9891\u6570\u636e\u96c6\uff0c\u8bf7\u5b89\u88c5 [<code>Audio</code>] \u7279\u6027\uff1a</li> </ul> <pre><code>pip install datasets[audio]\n</code></pre> <ul> <li>\u82e5\u8981\u5904\u7406\u56fe\u50cf\u6570\u636e\u96c6\uff0c\u8bf7\u5b89\u88c5 [<code>Image</code>] \u7279\u6027\uff1a</li> </ul> <pre><code>pip install datasets[vision]\n</code></pre> <p>\u9664\u4e86 \ud83e\udd17 Datasets\uff0c\u8fd8\u9700\u8981\u5b89\u88c5\u4f60\u504f\u597d\u7684\u673a\u5668\u5b66\u4e60\u6846\u67b6\uff1a</p> <p> <code>bash pip install torch</code> <code>bash pip install tensorflow</code> </p>"},{"location":"datasets/docs/quickstart/#audio","title":"\u97f3\u9891","text":"<p>\u97f3\u9891\u6570\u636e\u96c6\u7684\u52a0\u8f7d\u65b9\u5f0f\u4e0e\u6587\u672c\u6570\u636e\u96c6\u7c7b\u4f3c\uff0c\u4f46\u9884\u5904\u7406\u65b9\u5f0f\u6709\u6240\u4e0d\u540c\u3002\u4f60\u9700\u8981\u4f7f\u7528\u7279\u5f81\u63d0\u53d6\u5668\u800c\u4e0d\u662f\u5206\u8bcd\u5668\u3002\u6839\u636e\u9884\u8bad\u7ec3\u6a21\u578b\u7684\u8981\u6c42\uff0c\u97f3\u9891\u8f93\u5165\u53ef\u80fd\u8fd8\u9700\u8981\u91cd\u91c7\u6837\uff0c\u4ee5\u5339\u914d\u6a21\u578b\u7684\u91c7\u6837\u7387\u3002\u672c\u8282\u793a\u4f8b\u5c06\u51c6\u5907 MInDS-14 \u6570\u636e\u96c6\uff0c\u4ee5\u8bad\u7ec3\u4e00\u4e2a\u5206\u7c7b\u6a21\u578b\u6765\u5224\u65ad\u7528\u6237\u9047\u5230\u7684\u94f6\u884c\u95ee\u9898\u3002</p> <p>1. \u901a\u8fc7 [<code>load_dataset</code>] \u51fd\u6570\u63d0\u4f9b\u6570\u636e\u96c6\u540d\u79f0\u3001\u914d\u7f6e\uff08\u5e76\u975e\u6240\u6709\u6570\u636e\u96c6\u90fd\u6709\u914d\u7f6e\uff09\u4ee5\u53ca\u6570\u636e\u5212\u5206\u6765\u52a0\u8f7d MInDS-14\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset, Audio\n\n&gt;&gt;&gt; dataset = load_dataset(\"PolyAI/minds14\", \"en-US\", split=\"train\")\n</code></pre> <p>2. \u4f7f\u7528 \ud83e\udd17 Transformers \u5e93\u52a0\u8f7d\u4e00\u4e2a\u9884\u8bad\u7ec3\u7684 Wav2Vec2 \u6a21\u578b\u53ca\u5176\u5bf9\u5e94\u7684\u7279\u5f81\u63d0\u53d6\u5668\u3002\u52a0\u8f7d\u540e\u82e5\u770b\u5230\u6743\u91cd\u672a\u521d\u59cb\u5316\u7684\u8b66\u544a\u662f\u6b63\u5e38\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u4f1a\u5c06\u8be5\u68c0\u67e5\u70b9\u7528\u4e8e\u53e6\u4e00\u4e2a\u4efb\u52a1\u8fdb\u884c\u8bad\u7ec3\u3002</p> <pre><code>&gt;&gt;&gt; from transformers import AutoModelForAudioClassification, AutoFeatureExtractor\n\n&gt;&gt;&gt; model = AutoModelForAudioClassification.from_pretrained(\"facebook/wav2vec2-base\")\n&gt;&gt;&gt; feature_extractor = AutoFeatureExtractor.from_pretrained(\"facebook/wav2vec2-base\")\n</code></pre> <p>3. MInDS-14 \u7684\u6570\u636e\u5361\u6307\u51fa\u5176\u91c7\u6837\u7387\u4e3a 8kHz\uff0c\u800c Wav2Vec2 \u6a21\u578b\u662f\u5728 16kHz \u7684\u91c7\u6837\u7387\u4e0b\u9884\u8bad\u7ec3\u7684\u3002\u9700\u8981\u7ed3\u5408 [<code>~Dataset.cast_column</code>] \u51fd\u6570\u4e0e [<code>Audio</code>] \u7279\u6027\uff0c\u5c06 <code>audio</code> \u5217\u4e0a\u91c7\u6837\u81f3\u6a21\u578b\u8981\u6c42\u7684\u91c7\u6837\u7387\u3002</p> <pre><code>&gt;&gt;&gt; dataset = dataset.cast_column(\"audio\", Audio(sampling_rate=16000))\n&gt;&gt;&gt; dataset[0][\"audio\"]\n&lt;datasets.features._torchcodec.AudioDecoder object at 0x11642b6a0&gt;\n</code></pre> <p>4. \u7f16\u5199\u4e00\u4e2a\u9884\u5904\u7406\u51fd\u6570\uff0c\u4f7f\u7528\u7279\u5f81\u63d0\u53d6\u5668\u5904\u7406\u97f3\u9891 <code>array</code>\uff0c\u5e76\u901a\u8fc7\u622a\u65ad\u4e0e\u586b\u5145\u751f\u6210\u7b49\u957f\u7684\u5f20\u91cf\u3002\u52a1\u5fc5\u8bb0\u5f97\u5c06\u97f3\u9891 <code>array</code> \u4f20\u7ed9\u7279\u5f81\u63d0\u53d6\u5668\uff0c\u56e0\u4e3a <code>array</code>\uff08\u4e5f\u5c31\u662f\u8bed\u97f3\u4fe1\u53f7\u672c\u8eab\uff09\u624d\u662f\u6a21\u578b\u7684\u8f93\u5165\u3002</p> <p>\u51c6\u5907\u597d\u9884\u5904\u7406\u51fd\u6570\u540e\uff0c\u8c03\u7528 [<code>~Dataset.map</code>] \u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u6279\u91cf\u5904\u7406\uff0c\u52a0\u901f\u8f6c\u6362\u6d41\u7a0b\u3002</p> <pre><code>&gt;&gt;&gt; def preprocess_function(examples):\n...     audio_arrays = [x.get_all_samples().data for x in examples[\"audio\"]]\n...     inputs = feature_extractor(\n...         audio_arrays,\n...         sampling_rate=16000,\n...         padding=True,\n...         max_length=100000,\n...         truncation=True,\n...     )\n...     return inputs\n\n&gt;&gt;&gt; dataset = dataset.map(preprocess_function, batched=True)\n</code></pre> <p>5. \u4f7f\u7528 [<code>~Dataset.rename_column</code>] \u5c06 <code>intent_class</code> \u5217\u91cd\u547d\u540d\u4e3a <code>labels</code>\u3002\u5728 Wav2Vec2ForSequenceClassification \u4e2d\uff0c\u6a21\u578b\u671f\u671b\u8f93\u5165\u5217\u540d\u79f0\u4e3a <code>labels</code>\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = dataset.rename_column(\"intent_class\", \"labels\")\n</code></pre> <p>6. \u6839\u636e\u6240\u4f7f\u7528\u7684\u673a\u5668\u5b66\u4e60\u6846\u67b6\u8bbe\u7f6e\u6570\u636e\u96c6\u7684\u683c\u5f0f\u3002</p> <p>  \u501f\u52a9 [<code>~Dataset.set_format</code>] \u5c06\u6570\u636e\u96c6\u683c\u5f0f\u8bbe\u7f6e\u4e3a <code>torch</code>\uff0c\u5e76\u6307\u5b9a\u9700\u8981\u8f6c\u6362\u7684\u5217\u3002\u6b64\u51fd\u6570\u4f1a\u6309\u9700\u6267\u884c\u683c\u5f0f\u8f6c\u6362\u3002\u5b8c\u6210 PyTorch \u5f20\u91cf\u8f6c\u6362\u540e\uff0c\u5c06\u6570\u636e\u96c6\u5c01\u88c5\u5230 <code>torch.utils.data.DataLoader</code> \u4e2d\uff1a <pre><code>&gt;&gt;&gt; from torch.utils.data import DataLoader\n\n&gt;&gt;&gt; dataset.set_format(type=\"torch\", columns=[\"input_values\", \"labels\"])\n&gt;&gt;&gt; dataloader = DataLoader(dataset, batch_size=4)\n</code></pre> <p> <p>\u4f7f\u7528 \ud83e\udd17 Transformers \u63d0\u4f9b\u7684 [<code>~transformers.TFPreTrainedModel.prepare_tf_dataset</code>] \u65b9\u6cd5\uff0c\u5c06\u6570\u636e\u96c6\u5c01\u88c5\u4e3a\u517c\u5bb9 TensorFlow \u7684\u683c\u5f0f\u3002\u8be5\u65b9\u6cd5\u4f1a\u5c06 [<code>~datasets.Dataset</code>] \u8f6c\u4e3a <code>tf.data.Dataset</code>\uff0c\u5e76\u81ea\u52a8\u5904\u7406\u6574\u7406\u4e0e\u6279\u6b21\u5212\u5206\uff0c\u56e0\u6b64\u53ef\u4ee5\u76f4\u63a5\u4f20\u7ed9 Keras \u7684 <code>fit()</code> \u7b49\u65b9\u6cd5\u3002</p> <pre><code>&gt;&gt;&gt; import tensorflow as tf\n\n&gt;&gt;&gt; tf_dataset = model.prepare_tf_dataset(\n...     dataset,\n...     batch_size=4,\n...     shuffle=True,\n... )\n</code></pre> <p> </p> <p>7. \u73b0\u5728\u5c31\u53ef\u4ee5\u5728\u4f60\u504f\u597d\u7684\u6846\u67b6\u4e2d\u5f00\u59cb\u8bad\u7ec3\u4e86\uff01\u60f3\u8981\u83b7\u5f97\u7aef\u5230\u7aef\u793a\u4f8b\uff0c\u8bf7\u9605\u8bfb \ud83e\udd17 Transformers \u7684\u97f3\u9891\u5206\u7c7b\u6307\u5357\u3002</p>"},{"location":"datasets/docs/quickstart/#vision","title":"\u89c6\u89c9","text":"<p>\u56fe\u50cf\u6570\u636e\u96c6\u7684\u52a0\u8f7d\u65b9\u5f0f\u4e0e\u6587\u672c\u6570\u636e\u96c6\u76f8\u540c\uff0c\u53ea\u4e0d\u8fc7\u9884\u5904\u7406\u9636\u6bb5\u9700\u8981\u7528\u5230\u7279\u5f81\u63d0\u53d6\u5668\u3002\u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u4efb\u52a1\u4e2d\uff0c\u5e94\u7528\u6570\u636e\u589e\u5f3a\u6709\u52a9\u4e8e\u7f13\u89e3\u8fc7\u62df\u5408\u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u4efb\u610f\u6570\u636e\u589e\u5f3a\u5e93\uff0c\u5e76\u914d\u5408 \ud83e\udd17 Datasets \u5e94\u7528\u8fd9\u4e9b\u53d8\u6362\u3002\u672c\u793a\u4f8b\u5c06\u52a0\u8f7d Beans \u6570\u636e\u96c6\uff0c\u5e2e\u52a9\u6a21\u578b\u5b66\u4f1a\u8bc6\u522b\u53f6\u7247\u4e0a\u7684\u75c5\u5bb3\u3002</p> <p>1. \u8c03\u7528 [<code>load_dataset</code>] \u5e76\u4f20\u5165\u6570\u636e\u96c6\u540d\u79f0\u4e0e\u5212\u5206\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset, Image\n\n&gt;&gt;&gt; dataset = load_dataset(\"AI-Lab-Makerere/beans\", split=\"train\")\n</code></pre> <p>\u5927\u591a\u6570\u89c6\u89c9\u6a21\u578b\u671f\u671b\u8f93\u5165\u4e3a RGB \u56fe\u50cf\u3002\u5982\u679c\u4f60\u7684\u6570\u636e\u96c6\u4f7f\u7528\u5176\u4ed6\u6a21\u5f0f\uff0c\u53ef\u501f\u52a9 [<code>~Dataset.cast_column</code>] \u5c06\u5176\u8f6c\u6362\u4e3a RGB\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = dataset.cast_column(\"image\", Image(mode=\"RGB\"))\n</code></pre> <p>Beans \u6570\u636e\u96c6\u672c\u8eab\u5c31\u662f RGB \u56fe\u50cf\uff0c\u56e0\u6b64\u8fd9\u91cc\u4ec5\u4f5c\u6f14\u793a\u3002</p> <p>2. \u9009\u62e9\u4f60\u559c\u6b22\u7684\u6570\u636e\u589e\u5f3a\u5e93\uff08\u5982 Albumentations\u3001imgaug\u3001Kornia\uff09\u3002\u672c\u793a\u4f8b\u501f\u52a9 torchvision \u968f\u673a\u8c03\u6574\u56fe\u50cf\u7684\u989c\u8272\u5c5e\u6027\uff1a</p> <pre><code>&gt;&gt;&gt; from torchvision.transforms import Compose, ColorJitter, ToTensor\n\n&gt;&gt;&gt; jitter = Compose(\n...     [ColorJitter(brightness=0.5, hue=0.5), ToTensor()]\n... )\n</code></pre> <p>3. \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u5bf9\u6570\u636e\u96c6\u4e2d\u6bcf\u5f20\u56fe\u50cf\u5e94\u7528\u4e0a\u8ff0\u53d8\u6362\uff0c\u5e76\u751f\u6210\u6a21\u578b\u6240\u9700\u7684 <code>pixel_values</code>\uff1a</p> <pre><code>&gt;&gt;&gt; def transforms(examples):\n...     examples[\"pixel_values\"] = [jitter(image.convert(\"RGB\")) for image in examples[\"image\"]]\n...     return examples\n</code></pre> <p>4. \u4f7f\u7528 [<code>~Dataset.with_transform</code>] \u5728\u52a0\u8f7d\u6837\u672c\u65f6\u6309\u9700\u5e94\u7528\u6570\u636e\u589e\u5f3a\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = dataset.with_transform(transforms)\n</code></pre> <p>5. \u6839\u636e\u4f60\u7684\u8bad\u7ec3\u6846\u67b6\u8bbe\u7f6e\u6570\u636e\u683c\u5f0f\u3002</p> <p>  \u4e3a PyTorch \u521b\u5efa\u4e00\u4e2a\u6574\u7406\u51fd\u6570\uff0c\u5c06\u6837\u672c\u5806\u53e0\u6210\u6279\u6b21\uff0c\u518d\u4ea4\u7ed9 <code>torch.utils.data.DataLoader</code>\uff1a <pre><code>&gt;&gt;&gt; from torch.utils.data import DataLoader\n\n&gt;&gt;&gt; def collate_fn(examples):\n...     images = []\n...     labels = []\n...     for example in examples:\n...         images.append(example[\"pixel_values\"])\n...         labels.append(example[\"labels\"])\n...\n...     pixel_values = torch.stack(images)\n...     labels = torch.tensor(labels)\n...     return {\"pixel_values\": pixel_values, \"labels\": labels}\n&gt;&gt;&gt; dataloader = DataLoader(dataset, collate_fn=collate_fn, batch_size=4)\n</code></pre> <p> <p>\u501f\u52a9 \ud83e\udd17 Transformers \u7684 [<code>~transformers.TFPreTrainedModel.prepare_tf_dataset</code>] \u65b9\u6cd5\uff0c\u5c06\u6570\u636e\u96c6\u5305\u88c5\u6210 <code>tf.data.Dataset</code>\uff0c\u5373\u53ef\u7ed3\u5408 TensorFlow \u8bad\u7ec3\u6216\u5fae\u8c03\u6a21\u578b\u3002\u8fd0\u884c\u524d\u8bf7\u786e\u4fdd\u5df2\u5b89\u88c5\u6700\u65b0\u7248 <code>albumentations</code> \u4e0e <code>cv2</code>\uff1a</p> <pre><code>pip install -U albumentations opencv-python\n</code></pre> <pre><code>&gt;&gt;&gt; import albumentations\n&gt;&gt;&gt; import numpy as np\n\n&gt;&gt;&gt; transform = albumentations.Compose([\n...     albumentations.RandomCrop(width=256, height=256),\n...     albumentations.HorizontalFlip(p=0.5),\n...     albumentations.RandomBrightnessContrast(p=0.2),\n... ])\n\n&gt;&gt;&gt; def transforms(examples):\n...     examples[\"pixel_values\"] = [\n...         transform(image=np.array(image))[\"image\"] for image in examples[\"image\"]\n...     ]\n...     return examples\n\n&gt;&gt;&gt; dataset.set_transform(transforms)\n&gt;&gt;&gt; tf_dataset = model.prepare_tf_dataset(\n...     dataset,\n...     batch_size=4,\n...     shuffle=True,\n... )\n</code></pre> <p> </p> <p>6. \u4e00\u5207\u51c6\u5907\u5c31\u7eea\uff0c\u53ef\u4ee5\u7528\u4f60\u504f\u597d\u7684\u6846\u67b6\u5f00\u59cb\u8bad\u7ec3\u3002\u82e5\u60f3\u67e5\u770b\u7aef\u5230\u7aef\u8303\u4f8b\uff0c\u8bf7\u9605\u8bfb \ud83e\udd17 Transformers \u7684\u56fe\u50cf\u5206\u7c7b\u6307\u5357\u3002</p>"},{"location":"datasets/docs/quickstart/#nlp","title":"NLP","text":"<p>\u6587\u672c\u6570\u636e\u540c\u6837\u9700\u8981\u7ecf\u8fc7\u5206\u8bcd\u5668\u5904\u7406\u6210\u6a21\u578b\u53ef\u63a5\u53d7\u7684 token\u3002\u672c\u8282\u793a\u4f8b\u5c06\u52a0\u8f7d Microsoft Research Paraphrase Corpus (MRPC) \u8bad\u7ec3\u96c6\uff0c\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u6765\u5224\u65ad\u53e5\u5b50\u5bf9\u662f\u5426\u8868\u8fbe\u76f8\u540c\u542b\u4e49\u3002</p> <p>1. \u8c03\u7528 [<code>load_dataset</code>] \u5e76\u63d0\u4f9b\u6570\u636e\u96c6\u540d\u79f0\u3001\u914d\u7f6e\uff08\u5e76\u975e\u6240\u6709\u6570\u636e\u96c6\u90fd\u6709\u914d\u7f6e\uff09\u4ee5\u53ca\u6570\u636e\u5212\u5206\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"nyu-mll/glue\", \"mrpc\", split=\"train\")\n</code></pre> <p>2. \u52a0\u8f7d\u9884\u8bad\u7ec3\u7684 BERT \u6a21\u578b\u53ca\u5bf9\u5e94\u5206\u8bcd\u5668\u3002\u52a0\u8f7d\u65f6\u82e5\u51fa\u73b0\u6743\u91cd\u672a\u521d\u59cb\u5316\u7684\u63d0\u793a\u540c\u6837\u53ef\u4ee5\u5ffd\u7565\uff0c\u56e0\u4e3a\u6211\u4eec\u4f1a\u628a\u8be5\u68c0\u67e5\u70b9\u8fc1\u79fb\u5230\u65b0\u4efb\u52a1\u4e0a\u7ee7\u7eed\u8bad\u7ec3\u3002</p> <pre><code>&gt;&gt;&gt; from transformers import AutoModelForSequenceClassification, AutoTokenizer\n\n&gt;&gt;&gt; model = AutoModelForSequenceClassification.from_pretrained(\"bert-base-uncased\")\n&gt;&gt;&gt; tokenizer = AutoTokenizer.from_pretrained(\"bert-base-uncased\")\n===PT-TF-SPLIT===\n&gt;&gt;&gt; from transformers import TFAutoModelForSequenceClassification, AutoTokenizer\n\n&gt;&gt;&gt; model = TFAutoModelForSequenceClassification.from_pretrained(\"bert-base-uncased\")\n&gt;&gt;&gt; tokenizer = AutoTokenizer.from_pretrained(\"bert-base-uncased\")\n</code></pre> <p>3. \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6267\u884c\u5206\u8bcd\uff0c\u540c\u65f6\u5bf9\u6587\u672c\u8fdb\u884c\u622a\u65ad\u4e0e\u586b\u5145\uff0c\u4ee5\u751f\u6210\u89c4\u5219\u7684\u5f20\u91cf\u3002\u5206\u8bcd\u5668\u4f1a\u5728\u6570\u636e\u96c6\u4e2d\u65b0\u589e <code>input_ids</code>\u3001<code>token_type_ids</code> \u4e0e <code>attention_mask</code> \u4e09\u5217\uff0c\u5206\u522b\u5bf9\u5e94\u6a21\u578b\u8f93\u5165\u3002</p> <p>\u4f7f\u7528 [<code>~Dataset.map</code>] \u5c06\u5206\u8bcd\u51fd\u6570\u5e94\u7528\u5230\u6570\u636e\u96c6\u7684\u6279\u91cf\u6837\u672c\u4e0a\uff0c\u4ee5\u52a0\u901f\u5904\u7406\uff1a</p> <pre><code>&gt;&gt;&gt; def encode(examples):\n...     return tokenizer(\n...         examples[\"sentence1\"],\n...         examples[\"sentence2\"],\n...         truncation=True,\n...         padding=\"max_length\",\n...     )\n\n&gt;&gt;&gt; dataset = dataset.map(encode, batched=True)\n&gt;&gt;&gt; dataset[0]\n{'sentence1': 'Amrozi accused his brother , whom he called \" the witness \" , of deliberately distorting his evidence .',\n'sentence2': 'Referring to him as only \" the witness \" , Amrozi accused his brother of deliberately distorting his evidence .',\n'label': 1,\n'idx': 0,\n'input_ids': [  101,  7277,  2180,  5303,  4806,  1117,  1711,   117,  2292, 1119,  1270,   107,  1103,  7737,   107,   117,  1104,  9938, 4267, 12223, 21811,  1117,  2554,   119,   102, 11336,  6732, 3384,  1106,  1140,  1112,  1178,   107,  1103,  7737,   107, 117,  7277,  2180,  5303,  4806,  1117,  1711,  1104,  9938, 4267, 12223, 21811,  1117,  2554,   119,   102, 0, 0, ...],\n'token_type_ids': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, ...],\n'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, ...]}\n</code></pre> <p>4. \u5c06 <code>label</code> \u5217\u6620\u5c04\u4e3a\u6a21\u578b\u671f\u671b\u7684 <code>labels</code>\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = dataset.map(lambda examples: {\"labels\": examples[\"label\"]}, batched=True)\n</code></pre> <p>5. \u6309\u6240\u7528\u6846\u67b6\u8bbe\u7f6e\u6570\u636e\u683c\u5f0f\u3002</p> <p>  \u501f\u52a9 [<code>~Dataset.with_format</code>] \u5c06\u6570\u636e\u96c6\u8bbe\u7f6e\u4e3a <code>torch</code> \u683c\u5f0f\uff0c\u5e76\u53ea\u4fdd\u7559\u6a21\u578b\u6240\u9700\u7684\u5217\u3002\u968f\u540e\u4f7f\u7528 <code>torch.utils.data.DataLoader</code> \u8fed\u4ee3\u6570\u636e\uff1a <pre><code>&gt;&gt;&gt; import torch\n\n&gt;&gt;&gt; dataset = dataset.select_columns([\"input_ids\", \"token_type_ids\", \"attention_mask\", \"labels\"])\n&gt;&gt;&gt; dataset = dataset.with_format(type=\"torch\")\n&gt;&gt;&gt; dataloader = torch.utils.data.DataLoader(dataset, batch_size=32)\n</code></pre> <p> <p>\u7ee7\u7eed\u4f7f\u7528 [<code>~transformers.TFPreTrainedModel.prepare_tf_dataset</code>] \u51c6\u5907 TensorFlow \u8bad\u7ec3\u6240\u9700\u7684\u6570\u636e\u96c6\uff0c\u5e76\u6309\u9700\u6307\u5b9a\u6279\u5927\u5c0f\u4e0e\u662f\u5426\u6253\u4e71\u6570\u636e\uff1a</p> <pre><code>&gt;&gt;&gt; import tensorflow as tf\n\n&gt;&gt;&gt; tf_dataset = model.prepare_tf_dataset(\n...     dataset,\n...     batch_size=4,\n...     shuffle=True,\n... )\n</code></pre> <p> </p> <p>6. \u4e07\u4e8b\u4ff1\u5907\u3002\u7acb\u523b\u7528\u4f60\u719f\u6089\u7684\u6846\u67b6\u5f00\u59cb\u8bad\u7ec3\u5427\uff01\u5b8c\u6574\u793a\u4f8b\u53ef\u53c2\u8003 \ud83e\udd17 Transformers \u7684\u6587\u672c\u5206\u7c7b\u6307\u5357\u3002</p>"},{"location":"datasets/docs/quickstart/#_2","title":"\u63a5\u4e0b\u6765\uff1f","text":"<p>\u81f3\u6b64\u4f60\u5df2\u7ecf\u5b8c\u6210\u4e86 \ud83e\udd17 Datasets \u7684\u5feb\u901f\u4e0a\u624b\uff01\u53ea\u9700\u4e00\u4e2a\u51fd\u6570\uff0c\u5c31\u80fd\u52a0\u8f7d\u4efb\u610f\u6587\u672c\u3001\u97f3\u9891\u6216\u56fe\u50cf\u6570\u636e\u96c6\uff0c\u5e76\u4e3a\u6a21\u578b\u8bad\u7ec3\u5c31\u7eea\u3002</p> <p>\u63a5\u4e0b\u6765\u53ef\u4ee5\u67e5\u770b\u6211\u4eec\u7684\u64cd\u4f5c\u6307\u5357\uff0c\u5b66\u4e60\u5982\u4f55\u52a0\u8f7d\u4e0d\u540c\u683c\u5f0f\u3001\u5bf9\u9f50\u6807\u7b7e\u4ee5\u53ca\u6d41\u5f0f\u5904\u7406\u8d85\u5927\u6570\u636e\u96c6\u3002\u82e5\u60f3\u8fdb\u4e00\u6b65\u7406\u89e3 \ud83e\udd17 Datasets \u7684\u6838\u5fc3\u6982\u5ff5\uff0c\u4e0d\u59a8\u559d\u676f\u5496\u5561\uff0c\u9605\u8bfb\u6982\u5ff5\u89e3\u6790\u3002</p>"},{"location":"datasets/docs/repository_structure/","title":"\u7ec4\u7ec7\u6570\u636e\u96c6\u4ed3\u5e93","text":"<p>\u5728 Hugging Face Hub \u521b\u5efa\u6570\u636e\u96c6\u4ed3\u5e93\u5e76\u4e0a\u4f20\u6587\u4ef6\uff0c\u5373\u53ef\u6258\u7ba1\u4e0e\u5206\u4eab\u6570\u636e\u96c6\u3002\u672c\u6307\u5357\u4ecb\u7ecd\u4e0a\u4f20\u65f6\u63a8\u8350\u7684\u76ee\u5f55\u7ed3\u6784\u3002\u53ea\u8981\u7ed3\u6784\u4e0e\u6587\u4ef6\u683c\u5f0f\u53d7\u652f\u6301\uff08<code>.txt</code>\u3001<code>.csv</code>\u3001<code>.parquet</code>\u3001<code>.jsonl</code>\u3001<code>.mp3</code>\u3001<code>.jpg</code>\u3001<code>.zip</code> \u7b49\uff09\uff0c\u5373\u53ef\u76f4\u63a5\u4f7f\u7528 [<code>~datasets.load_dataset</code>] \u52a0\u8f7d\uff0c\u5e76\u5728 Hub \u4e0a\u83b7\u5f97\u53ef\u89c6\u5316\u6d4f\u89c8\u5668\u3002</p>"},{"location":"datasets/docs/repository_structure/#_2","title":"\u57fa\u7840\u7528\u4f8b","text":"<p>\u6700\u7b80\u5355\u7684\u7ed3\u6784\u5305\u542b <code>train.csv</code> \u4e0e <code>test.csv</code> \u4e24\u4e2a\u6587\u4ef6\uff08\u4efb\u610f\u53d7\u652f\u6301\u683c\u5f0f\u5747\u53ef\uff09\uff0c\u4ed3\u5e93\u8fd8\u9700\u5305\u542b <code>README.md</code> \u4f5c\u4e3a\u6570\u636e\u96c6\u5361\u7247\uff1a</p> <pre><code>my_dataset_repository/\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 train.csv\n\u2514\u2500\u2500 test.csv\n</code></pre> <p>\u52a0\u8f7d\u65f6\u4f1a\u81ea\u52a8\u5f97\u5230 <code>train</code> \u4e0e <code>test</code> \u4e24\u4e2a\u5212\u5206\u3002</p>"},{"location":"datasets/docs/repository_structure/#yaml","title":"\u5728 YAML \u4e2d\u5b9a\u4e49\u5212\u5206\u4e0e\u5b50\u96c6","text":""},{"location":"datasets/docs/repository_structure/#_3","title":"\u5212\u5206","text":"<p>\u5f53\u5b58\u5728\u591a\u4e2a\u6587\u4ef6\u5e76\u5e0c\u671b\u6307\u5b9a\u5f52\u5c5e\uff0c\u53ef\u5728 <code>README.md</code> \u9876\u90e8\u7684 YAML \u4e2d\u4f7f\u7528 <code>configs</code> \u5b57\u6bb5\uff1a</p> <pre><code>---\nconfigs:\n- config_name: default\n  data_files:\n  - split: train\n    path: \"data.csv\"\n  - split: test\n    path: \"holdout.csv\"\n---\n</code></pre> <p>\u540c\u4e00\u5212\u5206\u53ef\u5bf9\u5e94\u591a\u4e2a\u6587\u4ef6\uff0c\u4e5f\u53ef\u4f7f\u7528 glob \u6a21\u5f0f\u5339\u914d\uff1a</p> <pre><code>---\nconfigs:\n- config_name: default\n  data_files:\n  - split: train\n    path:\n    - \"data/abc.csv\"\n    - \"data/def.csv\"\n  - split: test\n    path: \"holdout/*.csv\"\n---\n</code></pre> <p>\u6ce8\u610f</p> <p>\u5373\u4fbf\u53ea\u6709\u4e00\u4e2a\u914d\u7f6e\uff0c\u4e5f\u5fc5\u987b\u63d0\u4f9b <code>config_name</code>\u3002</p>"},{"location":"datasets/docs/repository_structure/#_4","title":"\u591a\u914d\u7f6e","text":"<p>\u82e5\u5e0c\u671b\u5c06\u4e0d\u540c\u5b50\u96c6\u72ec\u7acb\u52a0\u8f7d\uff0c\u53ef\u5728 <code>configs</code> \u4e2d\u58f0\u660e\u591a\u4e2a\u914d\u7f6e\uff1a</p> <pre><code>---\nconfigs:\n- config_name: main_data\n  data_files: \"main_data.csv\"\n- config_name: additional_data\n  data_files: \"additional_data.csv\"\n---\n</code></pre> <p>\u52a0\u8f7d\u65f6\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u5165\u914d\u7f6e\u540d\u79f0\uff1a</p> <pre><code>main_data = load_dataset(\"my_dataset_repository\", \"main_data\")\n</code></pre>"},{"location":"datasets/docs/repository_structure/#_5","title":"\u6784\u5efa\u5668\u53c2\u6570","text":"<p>\u9664\u4e86 <code>data_files</code>\uff0c\u8fd8\u53ef\u4ee5\u5728 YAML \u4e2d\u6307\u5b9a\u6784\u5efa\u5668\u53c2\u6570\uff0c\u4f8b\u5982\u8bbe\u7f6e CSV \u5206\u9694\u7b26\uff1a</p> <pre><code>---\nconfigs:\n- config_name: tab\n  data_files: \"main_data.csv\"\n  sep: \"\\t\"\n- config_name: comma\n  data_files: \"additional_data.csv\"\n  sep: \",\"\n---\n</code></pre> <p>\u66f4\u591a\u53c2\u6570\u8bf7\u53c2\u8003\u6784\u5efa\u5668\u6587\u6863\u3002</p> <p>\u63d0\u793a</p> <p>\u53ef\u901a\u8fc7 <code>default: true</code> \u6307\u5b9a\u9ed8\u8ba4\u914d\u7f6e\uff0c\u8fd9\u6837\u8c03\u7528 <code>load_dataset(\"my_dataset_repository\")</code> \u65f6\u4f1a\u52a0\u8f7d\u8be5\u914d\u7f6e\u3002</p>"},{"location":"datasets/docs/repository_structure/#_6","title":"\u81ea\u52a8\u5212\u5206\u68c0\u6d4b","text":"<p>\u82e5\u672a\u63d0\u4f9b YAML\uff0c\ud83e\udd17 Datasets \u4f1a\u6839\u636e\u4ed3\u5e93\u4e2d\u7684\u6a21\u5f0f\u81ea\u52a8\u63a8\u65ad\u5212\u5206\u3002\u68c0\u6d4b\u987a\u5e8f\u5982\u4e0b\u3002</p>"},{"location":"datasets/docs/repository_structure/#_7","title":"\u6309\u76ee\u5f55\u547d\u540d","text":"<p>\u5982\u679c\u6587\u4ef6\u4f4d\u4e8e <code>train</code>\u3001<code>test</code>\u3001<code>validation</code> \u7b49\u76ee\u5f55\u4e2d\uff0c\u5c06\u636e\u6b64\u63a8\u65ad\uff1a</p> <pre><code>data/\n\u251c\u2500\u2500 train/\n\u251c\u2500\u2500 test/\n\u2514\u2500\u2500 validation/\n</code></pre>"},{"location":"datasets/docs/repository_structure/#_8","title":"\u6587\u4ef6\u540d\u5305\u542b\u5212\u5206","text":"<p>\u5982\u679c\u6587\u4ef6\u540d\u4e2d\u5305\u542b\u5212\u5206\u5173\u952e\u8bcd\uff08\u9700\u4ee5\u975e\u5b57\u6bcd\u6570\u5b57\u5206\u9694\uff09\uff0c\u4e5f\u4f1a\u81ea\u52a8\u8bc6\u522b\uff0c\u4f8b\u5982 <code>my_train_file.csv</code>\u3002</p> <p>\u652f\u6301\u7684\u7b49\u4ef7\u5173\u952e\u8bcd\uff1a</p> <ul> <li>train, training</li> <li>validation, valid, val, dev</li> <li>test, testing, eval, evaluation</li> </ul>"},{"location":"datasets/docs/repository_structure/#_9","title":"\u81ea\u5b9a\u4e49\u547d\u540d","text":"<p>\u5bf9\u4e8e\u975e\u6807\u51c6\u5212\u5206\uff0c\u53ef\u4f7f\u7528 <code>data/&lt;split&gt;-00000-of-00003.csv</code> \u7684\u5f62\u5f0f\u3002</p>"},{"location":"datasets/docs/repository_structure/#_10","title":"\u5355\u4e00\u5212\u5206","text":"<p>\u82e5\u672a\u5339\u914d\u5230\u4efb\u4f55\u6a21\u5f0f\uff0c\u6240\u6709\u6587\u4ef6\u5c06\u88ab\u89c6\u4e3a <code>train</code> \u5212\u5206\u3002\u82e5\u7ed3\u679c\u4e0e\u9884\u671f\u4e0d\u7b26\uff0c\u8bf7\u68c0\u67e5\u547d\u540d\u662f\u5426\u6b63\u786e\u3002</p>"},{"location":"datasets/docs/repository_structure/#_11","title":"\u591a\u6587\u4ef6\u5212\u5206","text":"<p>\u540c\u4e00\u5212\u5206\u7684\u591a\u4e2a\u6587\u4ef6\u53ea\u9700\u5305\u542b\u76f8\u5e94\u5173\u952e\u8bcd\uff0c\u6216\u5b58\u653e\u5728\u5bf9\u5e94\u76ee\u5f55\u5185\uff0c\u5373\u53ef\u6b63\u786e\u8bc6\u522b\uff1a</p> <pre><code>data/\n\u251c\u2500\u2500 train/\n\u2502   \u251c\u2500\u2500 shard_0.csv\n\u2502   \u2514\u2500\u2500 shard_1.csv\n\u2514\u2500\u2500 test/\n    \u2514\u2500\u2500 shard_0.csv\n</code></pre>"},{"location":"datasets/docs/semantic_segmentation/","title":"\u8bed\u4e49\u5206\u5272","text":"<p>\u8bed\u4e49\u5206\u5272\u6570\u636e\u96c6\u7528\u4e8e\u8bad\u7ec3\u6a21\u578b\u4e3a\u56fe\u50cf\u4e2d\u7684\u6bcf\u4e2a\u50cf\u7d20\u5206\u7c7b\uff0c\u53ef\u5e94\u7528\u4e8e\u80cc\u666f\u79fb\u9664\u3001\u98ce\u683c\u5316\u3001\u81ea\u52a8\u9a7e\u9a76\u573a\u666f\u7406\u89e3\u7b49\u3002\u672c\u6307\u5357\u6f14\u793a\u5982\u4f55\u5bf9\u5206\u5272\u6570\u636e\u96c6\u6267\u884c\u6570\u636e\u589e\u5f3a\u3002</p> <p>\u5f00\u59cb\u524d\uff0c\u8bf7\u786e\u4fdd\u5df2\u5b89\u88c5\u6700\u65b0\u7248 <code>albumentations</code> \u4e0e <code>cv2</code>\uff1a</p> <pre><code>pip install -U albumentations opencv-python\n</code></pre> <p>Albumentations \u662f\u5e38\u7528\u7684\u8ba1\u7b97\u673a\u89c6\u89c9\u589e\u5f3a\u5e93\uff0c\u652f\u6301\u5206\u7c7b\u3001\u68c0\u6d4b\u3001\u5206\u5272\u3001\u5173\u952e\u70b9\u7b49\u4efb\u52a1\u3002\u793a\u4f8b\u4f7f\u7528 Scene Parsing \u6570\u636e\u96c6\uff0c\u5c06\u56fe\u50cf\u5212\u5206\u4e3a\u5929\u7a7a\u3001\u9053\u8def\u3001\u4eba\u7269\u3001\u5e8a\u7b49\u8bed\u4e49\u533a\u57df\u3002</p> <p>\u52a0\u8f7d <code>train</code> \u5212\u5206\u5e76\u67e5\u770b\u793a\u4f8b\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"scene_parse_150\", split=\"train\")\n&gt;&gt;&gt; index = 10\n&gt;&gt;&gt; dataset[index]\n{'image': &lt;PIL.JpegImagePlugin.JpegImageFile image mode=RGB size=683x512 at 0x...&gt;,\n 'annotation': &lt;PIL.PngImagePlugin.PngImageFile image mode=L size=683x512 at 0x...&gt;,\n 'scene_category': 927}\n</code></pre> <p>\u5b57\u6bb5\u8bf4\u660e\uff1a</p> <ul> <li><code>image</code>\uff1aPIL \u56fe\u50cf\u3002</li> <li><code>annotation</code>\uff1a\u5bf9\u5e94\u7684\u5206\u5272\u63a9\u7801\u3002</li> <li><code>scene_category</code>\uff1a\u573a\u666f\u7c7b\u522b\u6807\u7b7e\uff08\u5982\u53a8\u623f\u3001\u529e\u516c\u5ba4\uff09\u3002</li> </ul> <p>\u67e5\u770b\u56fe\u50cf\u4e0e\u5206\u5272\u63a9\u7801\uff1a</p> <pre><code>&gt;&gt;&gt; dataset[index][\"image\"]\n&gt;&gt;&gt; dataset[index][\"annotation\"]\n</code></pre> <p>\u53ef\u4ee5\u4e3a\u63a9\u7801\u6dfb\u52a0\u989c\u8272\u6620\u5c04\uff0c\u5e76\u4e0e\u539f\u56fe\u53e0\u52a0\uff1a</p> <pre><code>&gt;&gt;&gt; import matplotlib.pyplot as plt\n\n&gt;&gt;&gt; def visualize_seg_mask(image: np.ndarray, mask: np.ndarray):\n...     color_seg = np.zeros((mask.shape[0], mask.shape[1], 3), dtype=np.uint8)\n...     palette = np.array(create_ade20k_label_colormap())\n...     for label, color in enumerate(palette):\n...         color_seg[mask == label, :] = color\n...     color_seg = color_seg[..., ::-1]\n...     img = np.array(image) * 0.5 + color_seg * 0.5\n...     img = img.astype(np.uint8)\n...     plt.figure(figsize=(15, 10))\n...     plt.imshow(img)\n...     plt.axis(\"off\")\n...     plt.show()\n\n&gt;&gt;&gt; visualize_seg_mask(np.array(dataset[index][\"image\"]), np.array(dataset[index][\"annotation\"]))\n</code></pre> <p>\u63a5\u4e0b\u6765\u4f7f\u7528 <code>albumentations</code> \u6267\u884c\u7f29\u653e\u4e0e\u4eae\u5ea6\u589e\u5f3a\uff1a</p> <pre><code>&gt;&gt;&gt; import albumentations\n\n&gt;&gt;&gt; transform = albumentations.Compose(\n...     [\n...         albumentations.Resize(256, 256),\n...         albumentations.RandomBrightnessContrast(brightness_limit=0.3, contrast_limit=0.3, p=0.5),\n...     ]\n... )\n</code></pre> <p>\u5b9a\u4e49\u51fd\u6570\u540c\u65f6\u5904\u7406\u56fe\u50cf\u4e0e\u63a9\u7801\uff1a</p> <pre><code>&gt;&gt;&gt; def transforms(examples):\n...     transformed_images, transformed_masks = [], []\n...     for image, seg_mask in zip(examples[\"image\"], examples[\"annotation\"]):\n...         image, seg_mask = np.array(image), np.array(seg_mask)\n...         transformed = transform(image=image, mask=seg_mask)\n...         transformed_images.append(transformed[\"image\"])\n...         transformed_masks.append(transformed[\"mask\"])\n...     examples[\"pixel_values\"] = transformed_images\n...     examples[\"label\"] = transformed_masks\n...     return examples\n</code></pre> <p>\u901a\u8fc7 [<code>~Dataset.set_transform</code>] \u6309\u9700\u6267\u884c\uff1a</p> <pre><code>&gt;&gt;&gt; dataset.set_transform(transforms)\n</code></pre> <p>\u9a8c\u8bc1\u53d8\u6362\u6548\u679c\uff1a</p> <pre><code>&gt;&gt;&gt; image = np.array(dataset[index][\"pixel_values\"])\n&gt;&gt;&gt; mask = np.array(dataset[index][\"label\"])\n&gt;&gt;&gt; visualize_seg_mask(image, mask)\n</code></pre> <p>\u540c\u6837\u53ef\u4ee5\u4f7f\u7528 <code>torchvision</code> \u6784\u5efa\u589e\u5f3a\u94fe\uff1a</p> <pre><code>&gt;&gt;&gt; from torchvision.transforms import Resize, ColorJitter, Compose\n\n&gt;&gt;&gt; transformation_chain = Compose([\n...     Resize((256, 256)),\n...     ColorJitter(brightness=0.25, contrast=0.25, saturation=0.25, hue=0.1)\n... ])\n&gt;&gt;&gt; resize = Resize((256, 256))\n\n&gt;&gt;&gt; def train_transforms(example_batch):\n...     example_batch[\"pixel_values\"] = [transformation_chain(x) for x in example_batch[\"image\"]]\n...     example_batch[\"label\"] = [resize(x) for x in example_batch[\"annotation\"]]\n...     return example_batch\n\n&gt;&gt;&gt; dataset.set_transform(train_transforms)\n</code></pre> <p>\u63d0\u793a</p> <p>\u4e86\u89e3\u6570\u636e\u9884\u5904\u7406\u540e\uff0c\u7ee7\u7eed\u5b66\u4e60\u5982\u4f55\u8bad\u7ec3\u8bed\u4e49\u5206\u5272\u6a21\u578b\u5e76\u8fdb\u884c\u63a8\u7406\u3002</p>"},{"location":"datasets/docs/share/","title":"\u4f7f\u7528 CLI \u5206\u4eab\u6570\u636e\u96c6","text":"<p>Hugging Face \u7684\u4f7f\u547d\u662f\u8ba9\u9ad8\u8d28\u91cf\u7684\u673a\u5668\u5b66\u4e60\u6210\u679c\u4eba\u4eba\u53ef\u53ca\uff0c\u5e76\u575a\u4fe1\u5f00\u6e90\u7684\u4ef7\u503c\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u4e3a \ud83e\udd17 Datasets \u8bbe\u8ba1\u4e86\u4fbf\u4e8e\u4efb\u4f55\u4eba\u5411\u793e\u533a\u5206\u4eab\u6570\u636e\u96c6\u7684\u5de5\u4f5c\u6d41\u3002\u5982\u4eca Hugging Face Hub \u4e0a\u5df2\u7ecf\u6258\u7ba1\u4e86\u4e0a\u5343\u4e2a\u6db5\u76d6 100 \u591a\u79cd\u8bed\u8a00\u7684\u6570\u636e\u96c6\uff0c\u6211\u4eec\u4e5f\u4e00\u76f4\u6b22\u8fce\u65b0\u7684\u8d21\u732e\uff01</p> <p>\u6570\u636e\u96c6\u4ed3\u5e93\u5177\u5907\u4ee5\u4e0b\u80fd\u529b\uff1a</p> <ul> <li>\u514d\u8d39\u6258\u7ba1\u6570\u636e\u96c6</li> <li>\u6570\u636e\u96c6\u7248\u672c\u7ba1\u7406</li> <li>\u63d0\u4ea4\u5386\u53f2\u4e0e\u5dee\u5f02\u5bf9\u6bd4</li> <li>\u4fbf\u4e8e\u68c0\u7d22\u7684\u5143\u6570\u636e</li> <li>\u7528\u4e8e\u8bb0\u5f55\u8bb8\u53ef\u3001\u9650\u5236\u7b49\u4fe1\u606f\u7684\u6570\u636e\u96c6\u5361\u7247</li> <li>Dataset Viewer</li> </ul> <p>\u672c\u6307\u5357\u5c06\u6f14\u793a\u5982\u4f55\u5206\u4eab\u4e00\u4e2a\u6570\u636e\u96c6\u6587\u4ef6\u5939\u6216\u4ed3\u5e93\uff0c\u8ba9\u4efb\u4f55\u4eba\u90fd\u80fd\u65b9\u4fbf\u8bbf\u95ee\u3002</p> <p></p>"},{"location":"datasets/docs/share/#_1","title":"\u65b0\u589e\u6570\u636e\u96c6","text":"<p>\u4f60\u53ef\u4ee5\u5728 Hugging Face Hub \u4e0a\u521b\u5efa\u6570\u636e\u96c6\u4ed3\u5e93\uff0c\u5c06\u6570\u636e\u5206\u4eab\u7ed9\u793e\u533a\u3002\u5982\u679c\u9700\u8981\u63a7\u5236\u8bbf\u95ee\u6743\u9650\uff0c\u4e5f\u53ef\u4ee5\u521b\u5efa\u79c1\u6709\u6570\u636e\u96c6\u3002</p> <p>\u5728\u6570\u636e\u96c6\u4ed3\u5e93\u4e2d\uff0c\u4f60\u53ef\u4ee5\u6258\u7ba1\u6240\u6709\u6570\u636e\u6587\u4ef6\uff0c\u5e76\u901a\u8fc7\u4ed3\u5e93\u7ed3\u6784\u914d\u7f6e\u4e3a\u4e0d\u540c\u62c6\u5206\u6307\u5b9a\u5bf9\u5e94\u6587\u4ef6\u3002\u652f\u6301\u7684\u683c\u5f0f\u5305\u62ec\uff1aCSV\u3001TSV\u3001JSON\u3001JSON Lines\u3001\u7eaf\u6587\u672c\u3001Parquet\u3001Arrow\u3001SQLite\u3001WebDataset\u3002\u5e38\u89c1\u7684\u538b\u7f29\u683c\u5f0f\uff08GZ\u3001BZ2\u3001LZ4\u3001LZMA\u3001ZSTD \u7b49\uff09\u540c\u6837\u53d7\u652f\u6301\uff0c\u4f8b\u5982\u53ef\u4ee5\u4e0a\u4f20 <code>.json.gz</code> \u6587\u4ef6\u3002</p> <p>\u4ece Hub \u52a0\u8f7d\u6570\u636e\u96c6\u65f6\uff0c\ud83e\udd17 Datasets \u4f1a\u6309\u7167\u4ed3\u5e93\u7ed3\u6784\u81ea\u52a8\u8bfb\u53d6\u6240\u6709\u53d7\u652f\u6301\u7684\u6587\u4ef6\u3002</p> <p>\u66f4\u591a\u5173\u4e8e\u4ece Hub \u52a0\u8f7d\u6570\u636e\u96c6\u7684\u5185\u5bb9\uff0c\u8bf7\u67e5\u9605\u4ece Hub \u52a0\u8f7d\u6570\u636e\u96c6\u6559\u7a0b\u3002</p>"},{"location":"datasets/docs/share/#_2","title":"\u521b\u5efa\u4ed3\u5e93","text":"<p>\u5982\u679c\u5c1a\u672a\u62e5\u6709\u8d26\u53f7\uff0c\u9700\u8981\u5148\u5728 hf.co \u6ce8\u518c\u3002\u4f60\u53ef\u4ee5\u76f4\u63a5\u5728\u7f51\u9875\u4e0a\u521b\u5efa\u65b0\u7684\u6570\u636e\u96c6\u4ed3\u5e93\uff0c\u672c\u6307\u5357\u5219\u5c55\u793a\u5982\u4f55\u901a\u8fc7\u7ec8\u7aef\u4e0a\u4f20\u6570\u636e\u3002</p> <ol> <li>\u786e\u4fdd\u5f53\u524d\u865a\u62df\u73af\u5883\u5df2\u7ecf\u5b89\u88c5\u4e86 Datasets\uff0c\u7136\u540e\u8fd0\u884c\uff1a</li> </ol> <pre><code>huggingface-cli login\n</code></pre> <ol> <li>\u4f7f\u7528 Hugging Face Hub \u51ed\u636e\u767b\u5f55\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u96c6\u4ed3\u5e93\uff1a</li> </ol> <pre><code>huggingface-cli repo create my-cool-dataset --type dataset\n</code></pre> <p>\u82e5\u8981\u5728\u67d0\u4e2a\u7ec4\u7ec7\u540d\u4e0b\u521b\u5efa\u4ed3\u5e93\uff0c\u53ef\u6dfb\u52a0 <code>--organization</code> \u53c2\u6570\uff1a</p> <pre><code>huggingface-cli repo create my-cool-dataset --type dataset --organization your-org-name\n</code></pre>"},{"location":"datasets/docs/share/#_3","title":"\u51c6\u5907\u6587\u4ef6","text":"<p>\u68c0\u67e5\u672c\u5730\u76ee\u5f55\uff0c\u786e\u4fdd\u53ea\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <ul> <li>\u6570\u636e\u96c6\u6587\u4ef6</li> <li>\u6570\u636e\u96c6\u5361\u7247 <code>README.md</code></li> </ul>"},{"location":"datasets/docs/share/#huggingface-cli-upload","title":"huggingface-cli upload","text":"<p>\u4f7f\u7528 <code>huggingface-cli upload</code> \u53ef\u4ee5\u76f4\u63a5\u5411 Hub \u4e0a\u4f20\u6587\u4ef6\u3002\u8be5\u547d\u4ee4\u5185\u90e8\u8c03\u7528\u4e86 Upload \u6307\u5357\u4e2d\u4ecb\u7ecd\u7684 [<code>upload_file</code>] \u4e0e [<code>upload_folder</code>] \u8f85\u52a9\u51fd\u6570\u3002\u4e0b\u9762\u793a\u4f8b\u6db5\u76d6\u6700\u5e38\u89c1\u7684\u7528\u6cd5\u3002\u82e5\u8981\u67e5\u770b\u5b8c\u6574\u53c2\u6570\u5217\u8868\uff0c\u53ef\u6267\u884c\uff1a</p> <pre><code>&gt;&gt;&gt; huggingface-cli upload --help\n</code></pre> <p>\u60f3\u4e86\u89e3\u66f4\u591a <code>huggingface-cli</code> \u4fe1\u606f\uff0c\u8bf7\u9605\u8bfbCLI \u6307\u5357\u3002</p>"},{"location":"datasets/docs/share/#_4","title":"\u4e0a\u4f20\u5b8c\u6574\u6587\u4ef6\u5939","text":"<p>\u547d\u4ee4\u7684\u57fa\u672c\u5f62\u5f0f\u5982\u4e0b\uff1a</p> <pre><code># \u7528\u6cd5\uff1ahuggingface-cli upload [dataset_repo_id] [local_path] [path_in_repo] --repo-type dataset\n</code></pre> <p>\u82e5\u8981\u628a\u5f53\u524d\u76ee\u5f55\u4e0a\u4f20\u81f3\u4ed3\u5e93\u6839\u76ee\u5f55\uff1a</p> <pre><code>&gt;&gt;&gt; huggingface-cli upload my-cool-dataset . . --repo-type dataset\nhttps://huggingface.co/datasets/Wauplin/my-cool-dataset/tree/main/\n</code></pre> <p>\u63d0\u793a</p> <p>\u5982\u679c\u4ed3\u5e93\u5c1a\u4e0d\u5b58\u5728\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa\u3002</p> <p>\u4f60\u4e5f\u53ef\u4ee5\u6307\u5b9a\u67d0\u4e2a\u5b50\u76ee\u5f55\u4e0a\u4f20\uff1a</p> <pre><code>&gt;&gt;&gt; huggingface-cli upload my-cool-dataset ./data . --repo-type dataset\nhttps://huggingface.co/datasetsWauplin/my-cool-dataset/tree/main/\n</code></pre> <p>\u6216\u8005\u5c06\u6587\u4ef6\u5939\u4e0a\u4f20\u5230\u4ed3\u5e93\u4e2d\u7684\u7279\u5b9a\u4f4d\u7f6e\uff1a</p> <pre><code>&gt;&gt;&gt; huggingface-cli upload my-cool-dataset ./path/to/curated/data /data/train --repo-type dataset\nhttps://huggingface.co/datasetsWauplin/my-cool-dataset/tree/main/data/train\n</code></pre>"},{"location":"datasets/docs/share/#_5","title":"\u4e0a\u4f20\u5355\u4e2a\u6587\u4ef6","text":"<p>\u53ea\u9700\u5c06 <code>local_path</code> \u6307\u5411\u672c\u5730\u6587\u4ef6\u5373\u53ef\u4e0a\u4f20\u5355\u4e2a\u6587\u4ef6\u3002\u6b64\u65f6 <code>path_in_repo</code> \u53ef\u9009\uff0c\u9ed8\u8ba4\u4f7f\u7528\u672c\u5730\u6587\u4ef6\u540d\uff1a</p> <pre><code>&gt;&gt;&gt; huggingface-cli upload Wauplin/my-cool-dataset ./files/train.csv --repo-type dataset\nhttps://huggingface.co/datasetsWauplin/my-cool-dataset/blob/main/train.csv\n</code></pre> <p>\u82e5\u60f3\u5c06\u6587\u4ef6\u4e0a\u4f20\u5230\u4ed3\u5e93\u4e2d\u7684\u7279\u5b9a\u76ee\u5f55\uff0c\u8bf7\u8bbe\u7f6e <code>path_in_repo</code>\uff1a</p> <pre><code>&gt;&gt;&gt; huggingface-cli upload Wauplin/my-cool-dataset ./files/train.csv /data/train.csv --repo-type dataset\nhttps://huggingface.co/datasetsWauplin/my-cool-dataset/blob/main/data/train.csv\n</code></pre>"},{"location":"datasets/docs/share/#_6","title":"\u4e0a\u4f20\u591a\u4e2a\u6587\u4ef6","text":"<p>\u5982\u679c\u5e0c\u671b\u6279\u91cf\u4e0a\u4f20\u67d0\u4e2a\u6587\u4ef6\u5939\u5185\u7684\u591a\u4e2a\u6587\u4ef6\uff0c\u4f46\u53c8\u4e0d\u60f3\u540c\u6b65\u6574\u4e2a\u6587\u4ef6\u5939\uff0c\u53ef\u4f7f\u7528 <code>--include</code> \u4e0e <code>--exclude</code> \u6a21\u5f0f\u3002\u8fd8\u53ef\u4ee5\u7ed3\u5408 <code>--delete</code> \u9009\u9879\uff0c\u5728\u4e0a\u4f20\u65b0\u6587\u4ef6\u7684\u540c\u65f6\u5220\u9664\u4ed3\u5e93\u4e2d\u7684\u65e7\u6587\u4ef6\u3002\u4e0b\u9762\u793a\u4f8b\u5c55\u793a\u5982\u4f55\u901a\u8fc7\u5220\u9664\u8fdc\u7aef\u6587\u4ef6\u5e76\u4e0a\u4f20\u6240\u6709 CSV\uff0c\u5b9e\u73b0\u672c\u5730\u4e0e Hub \u6570\u636e\u540c\u6b65\uff1a</p> <pre><code># \u5c06\u672c\u5730\u6570\u636e\u4e0e Hub \u540c\u6b65\uff08\u4e0a\u4f20\u65b0\u7684 CSV \u6587\u4ef6\u3001\u79fb\u9664\u5df2\u5220\u9664\u6587\u4ef6\uff09\n&gt;&gt;&gt; huggingface-cli upload Wauplin/my-cool-dataset --repo-type dataset --include=\"/data/*.csv\" --delete=\"*\" --commit-message=\"Sync local dataset with Hub\"\n...\n</code></pre>"},{"location":"datasets/docs/share/#_7","title":"\u4e0a\u4f20\u5230\u7ec4\u7ec7\u4ed3\u5e93","text":"<p>\u82e5\u8981\u5411\u7ec4\u7ec7\u540d\u4e0b\u7684\u4ed3\u5e93\u63a8\u9001\u5185\u5bb9\uff0c\u9700\u8981\u5728 <code>repo_id</code> \u4e2d\u660e\u786e\u6307\u5b9a\u7ec4\u7ec7\u540d\u79f0\uff1a</p> <pre><code>&gt;&gt;&gt; huggingface-cli upload MyCoolOrganization/my-cool-dataset . . --repo-type dataset\nhttps://huggingface.co/datasetsMyCoolOrganization/my-cool-dataset/tree/main/\n</code></pre>"},{"location":"datasets/docs/share/#_8","title":"\u4e0a\u4f20\u5230\u6307\u5b9a\u7248\u672c","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6587\u4ef6\u4f1a\u4e0a\u4f20\u5230 <code>main</code> \u5206\u652f\u3002\u5982\u9700\u4e0a\u4f20\u5230\u5176\u4ed6\u5206\u652f\u6216\u5f15\u7528\uff0c\u8bf7\u4f7f\u7528 <code>--revision</code> \u9009\u9879\uff1a</p> <pre><code># \u5411\u62c9\u53d6\u8bf7\u6c42\u5206\u652f\u4e0a\u4f20\u6587\u4ef6\nhuggingface-cli upload bigcode/the-stack . . --repo-type dataset --revision refs/pr/104\n...\n</code></pre> <p>\u6ce8\u610f\uff1a \u5982\u679c <code>revision</code> \u5c1a\u4e0d\u5b58\u5728\u4e14\u672a\u8bbe\u7f6e <code>--create-pr</code>\uff0c\u5c06\u4f1a\u57fa\u4e8e <code>main</code> \u81ea\u52a8\u521b\u5efa\u65b0\u5206\u652f\u3002</p>"},{"location":"datasets/docs/share/#pr","title":"\u4e0a\u4f20\u5e76\u521b\u5efa PR","text":"<p>\u5f53\u4f60\u6ca1\u6709\u76f4\u63a5\u5411\u4ed3\u5e93\u63a8\u9001\u7684\u6743\u9650\u65f6\uff0c\u9700\u8981\u5148\u521b\u5efa PR\uff0c\u518d\u8bf7\u4ed3\u5e93\u7ef4\u62a4\u8005\u5ba1\u9605\u3002\u53ef\u901a\u8fc7 <code>--create-pr</code> \u9009\u9879\u5b8c\u6210\uff1a</p> <pre><code># \u521b\u5efa PR \u5e76\u5c06\u6587\u4ef6\u4e0a\u4f20\u81f3\u8be5\u5206\u652f\n&gt;&gt;&gt; huggingface-cli upload bigcode/the-stack --repo-type dataset --revision refs/pr/104 --create-pr . .\nhttps://huggingface.co/datasets/bigcode/the-stack/blob/refs%2Fpr%2F104/\n</code></pre>"},{"location":"datasets/docs/share/#_9","title":"\u5b9a\u671f\u4e0a\u4f20","text":"<p>\u67d0\u4e9b\u573a\u666f\u4e0b\u9700\u8981\u5b9a\u671f\u5411\u4ed3\u5e93\u63a8\u9001\u66f4\u65b0\uff0c\u4f8b\u5982\u6570\u636e\u96c6\u6301\u7eed\u589e\u957f\u3001\u5e0c\u671b\u6bcf\u9694 10 \u5206\u949f\u540c\u6b65\u4e00\u6b21\u6570\u636e\u6587\u4ef6\u3002\u53ef\u4ee5\u4f7f\u7528 <code>--every</code> \u9009\u9879\uff1a</p> <pre><code># \u6bcf 10 \u5206\u949f\u4e0a\u4f20\u4e00\u6b21\u6700\u65b0\u65e5\u5fd7\nhuggingface-cli upload my-cool-dynamic-dataset data/ --every=10\n</code></pre>"},{"location":"datasets/docs/share/#_10","title":"\u6307\u5b9a\u63d0\u4ea4\u4fe1\u606f","text":"<p>\u901a\u8fc7 <code>--commit-message</code> \u4e0e <code>--commit-description</code> \u53ef\u4ee5\u81ea\u5b9a\u4e49\u63d0\u4ea4\u8bf4\u660e\uff0c\u800c\u975e\u4f7f\u7528\u9ed8\u8ba4\u4fe1\u606f\uff1a</p> <pre><code>&gt;&gt;&gt; huggingface-cli upload Wauplin/my-cool-dataset ./data . --repo-type dataset --commit-message=\"Version 2\" --commit-description=\"Train size: 4321. Check Dataset Viewer for more details.\"\n...\nhttps://huggingface.co/datasetsWauplin/my-cool-dataset/tree/main\n</code></pre>"},{"location":"datasets/docs/share/#_11","title":"\u6307\u5b9a\u8bbf\u95ee\u4ee4\u724c","text":"<p>\u4e0a\u4f20\u6587\u4ef6\u9700\u8981\u4f7f\u7528\u4ee4\u724c\u3002\u9ed8\u8ba4\u4f1a\u8bfb\u53d6\u672c\u5730\u4fdd\u5b58\u7684\u4ee4\u724c\uff08\u901a\u8fc7 <code>huggingface-cli login</code> \u767b\u5f55\u65f6\u751f\u6210\uff09\u3002\u82e5\u60f3\u663e\u5f0f\u6307\u5b9a\uff0c\u53ef\u4f7f\u7528 <code>--token</code> \u9009\u9879\uff1a</p> <pre><code>&gt;&gt;&gt; huggingface-cli upload Wauplin/my-cool-dataset ./data . --repo-type dataset --token=hf_****\n...\nhttps://huggingface.co/datasetsWauplin/my-cool-data/tree/main\n</code></pre>"},{"location":"datasets/docs/share/#_12","title":"\u9759\u9ed8\u6a21\u5f0f","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>huggingface-cli upload</code> \u4f1a\u8f93\u51fa\u8be6\u7ec6\u4fe1\u606f\uff0c\u5305\u62ec\u8b66\u544a\u3001\u4e0a\u4f20\u6587\u4ef6\u5217\u8868\u4ee5\u53ca\u8fdb\u5ea6\u6761\u7b49\u3002\u5982\u679c\u5e0c\u671b\u5173\u95ed\u8fd9\u4e9b\u8f93\u51fa\uff0c\u53ef\u52a0\u4e0a <code>--quiet</code> \u9009\u9879\u3002\u6b64\u65f6\u4ec5\u4f1a\u6253\u5370\u6700\u540e\u4e00\u884c\uff08\u4e5f\u5c31\u662f\u4e0a\u4f20\u6210\u529f\u540e\u7684\u94fe\u63a5\uff09\uff0c\u9002\u5408\u5728\u811a\u672c\u4e2d\u5c06\u7ed3\u679c\u4f20\u9012\u7ed9\u5176\u4ed6\u547d\u4ee4\uff1a</p> <pre><code>&gt;&gt;&gt; huggingface-cli upload Wauplin/my-cool-dataset ./data . --repo-type dataset --quiet\nhttps://huggingface.co/datasets/Wauplin/my-cool-dataset/tree/main\n</code></pre>"},{"location":"datasets/docs/stream/","title":"\u6d41\u5f0f\u52a0\u8f7d\uff08Streaming\uff09","text":"<p>\u6d41\u5f0f\u52a0\u8f7d\u5141\u8bb8\u5728\u4e0d\u4e0b\u8f7d\u5b8c\u6574\u6570\u636e\u96c6\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528\u6570\u636e\u3002\u8fed\u4ee3\u65f6\u6309\u9700\u62c9\u53d6\u6837\u672c\uff0c\u975e\u5e38\u9002\u5408\uff1a</p> <ul> <li>\u4e0d\u60f3\u7b49\u5f85\u8d85\u5927\u6570\u636e\u96c6\u4e0b\u8f7d\u5b8c\u6210\u3002</li> <li>\u6570\u636e\u96c6\u4f53\u79ef\u8d85\u8fc7\u672c\u5730\u78c1\u76d8\u53ef\u7528\u7a7a\u95f4\u3002</li> <li>\u53ea\u9700\u5feb\u901f\u67e5\u770b\u5c11\u91cf\u6837\u672c\u3002</li> </ul> <p>\u4f8b\u5982 HuggingFaceFW/fineweb \u82f1\u6587\u5212\u5206\u6709 45 TB\uff0c\u4f46\u4f60\u53ef\u4ee5\u7acb\u5373\u5f00\u59cb\u6d41\u5f0f\u4f7f\u7528\u3002\u53ea\u9700\u5728 [<code>load_dataset</code>] \u4e2d\u8bbe\u7f6e <code>streaming=True</code>\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; dataset = load_dataset(\"HuggingFaceFW/fineweb\", split=\"train\", streaming=True)\n&gt;&gt;&gt; next(iter(dataset))\n{'text': 'How AP reported ...', 'language_score': 0.97, 'token_count': 717}\n</code></pre> <p>\u6d41\u5f0f\u6a21\u5f0f\u540c\u6837\u9002\u7528\u4e8e\u672c\u5730\u6587\u4ef6\uff0c\u8fed\u4ee3\u65f6\u76f4\u63a5\u8bfb\u53d6\u539f\u59cb\u6587\u4ef6\uff0c\u65e0\u9700\u8f6c\u6362\u4e3a Arrow\u3002\u4f8b\u5982\u6d41\u5f0f\u8bfb\u53d6\u672c\u5730 JSONL \u538b\u7f29\u6587\u4ef6\uff1a</p> <pre><code>&gt;&gt;&gt; data_files = {'train': 'path/to/OSCAR-2201/compressed/en_meta/*.jsonl.gz'}\n&gt;&gt;&gt; dataset = load_dataset(\"json\", data_files=data_files, split=\"train\", streaming=True)\n&gt;&gt;&gt; next(iter(dataset))\n{'id': 0, 'text': 'Founded in 2015 ...'}\n</code></pre> <p>\u5bf9\u4e8e Parquet\uff0c\u53ef\u901a\u8fc7 <code>columns</code> \u4e0e <code>filters</code> \u53c2\u6570\u9009\u62e9\u5b57\u6bb5\u5e76\u9ad8\u6548\u8fc7\u6ee4\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"HuggingFaceFW/fineweb\", split=\"train\", streaming=True, columns=[\"url\", \"date\"])\n&gt;&gt;&gt; dataset = load_dataset(\"HuggingFaceFW/fineweb\", split=\"train\", streaming=True, filters=[(\"language_score\", \"&gt;=\", 0.99)])\n</code></pre> <p>\u6d41\u5f0f\u52a0\u8f7d\u8fd4\u56de [<code>IterableDataset</code>]\uff0c\u5176\u5904\u7406\u65b9\u6cd5\u4e0e\u5e38\u89c4 [<code>Dataset</code>] \u4e0d\u540c\u3002\u66f4\u591a\u5dee\u5f02\u8bf7\u53c2\u9605\u6bd4\u8f83\u6587\u7ae0\u3002</p>"},{"location":"datasets/docs/stream/#_1","title":"\u5217\u7d22\u5f15","text":"<p>\u53ef\u76f4\u63a5\u8fed\u4ee3\u67d0\u4e00\u5217\uff1a</p> <pre><code>dataset = load_dataset(\"allenai/c4\", \"en\", streaming=True, split=\"train\")\nnext(iter(dataset[\"text\"]))\n</code></pre>"},{"location":"datasets/docs/stream/#dataset","title":"\u4ece Dataset \u8f6c\u6362","text":"<p>\u5df2\u6709\u5e38\u89c4 [<code>Dataset</code>] \u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 [<code>~Dataset.to_iterable_dataset</code>] \u8f6c\u4e3a [<code>IterableDataset</code>]\uff0c\u8fd9\u6bd4 <code>streaming=True</code> \u66f4\u5feb\uff0c\u56e0\u4e3a\u4f1a\u4ece\u672c\u5730\u7f13\u5b58\u6d41\u5f0f\u8bfb\u53d6\uff1a</p> <pre><code>dataset = load_dataset(\"ethz/food101\")\niterable_dataset = dataset.to_iterable_dataset(num_shards=64)\n</code></pre>"},{"location":"datasets/docs/stream/#_2","title":"\u6253\u4e71","text":"<p>\u4f7f\u7528 [<code>IterableDataset.shuffle</code>] \u53ef\u6253\u4e71\u6d41\u5f0f\u6570\u636e\u3002<code>buffer_size</code> \u63a7\u5236\u7f13\u51b2\u533a\u5927\u5c0f\uff0c\u9ed8\u8ba4 1000\uff1a</p> <pre><code>shuffled_dataset = dataset.shuffle(seed=42, buffer_size=10_000)\n</code></pre> <p>\u63d0\u793a</p> <p>\u82e5\u6570\u636e\u96c6\u6309\u591a\u6587\u4ef6\u5206\u7247\uff0c<code>shuffle</code> \u8fd8\u4f1a\u6253\u4e71\u5206\u7247\u987a\u5e8f\u3002</p>"},{"location":"datasets/docs/stream/#_3","title":"\u91cd\u65b0\u6253\u4e71","text":"<p>\u53ef\u5728\u6bcf\u4e2a epoch \u540e\u8c03\u7528 [<code>IterableDataset.set_epoch</code>] \u8bbe\u7f6e\u4e0d\u540c\u79cd\u5b50\uff08\u771f\u5b9e\u79cd\u5b50\u4e3a <code>\u521d\u59cb\u79cd\u5b50 + \u5f53\u524d epoch</code>\uff09\uff1a</p> <pre><code>for epoch in range(epochs):\n    shuffled_dataset.set_epoch(epoch)\n    for example in shuffled_dataset:\n        ...\n</code></pre>"},{"location":"datasets/docs/stream/#_4","title":"\u6570\u636e\u96c6\u5207\u5206","text":"<ul> <li>[<code>IterableDataset.take(n)</code>]\uff1a\u83b7\u53d6\u524d <code>n</code> \u4e2a\u6837\u672c\u3002</li> <li>[<code>IterableDataset.skip(n)</code>]\uff1a\u8df3\u8fc7\u524d <code>n</code> \u4e2a\u6837\u672c\u8fd4\u56de\u5269\u4f59\u6570\u636e\u3002   \u4f7f\u7528\u524d\u6700\u597d\u5148 <code>shuffle</code>\uff0c\u5426\u5219\u987a\u5e8f\u9501\u5b9a\u540e\u65e0\u6cd5\u518d\u6b21\u6253\u4e71\u3002</li> </ul>"},{"location":"datasets/docs/stream/#_5","title":"\u5206\u7247","text":"<p>[<code>~IterableDataset.shard</code>] \u53ef\u5c06\u6570\u636e\u96c6\u5212\u5206\u4e3a\u56fa\u5b9a\u4efd\u6570\u3002</p> <pre><code>dataset.shard(num_shards=2, index=0)\n</code></pre> <p>\u82e5 <code>num_shards == 1</code>\uff0c\u5efa\u8bae\u4f7f\u7528 <code>take</code>/<code>skip</code>\u3002</p>"},{"location":"datasets/docs/stream/#_6","title":"\u4ea4\u9519\u5408\u5e76","text":"<p>[<code>interleave_datasets</code>] \u53ef\u5c06\u591a\u4e2a\u6d41\u5f0f\u6570\u636e\u96c6\u5408\u5e76\uff0c\u4ea4\u66ff\u8f93\u51fa\u6837\u672c\uff1a</p> <pre><code>es = load_dataset(\"allenai/c4\", \"es\", streaming=True, split=\"train\")\nfr = load_dataset(\"allenai/c4\", \"fr\", streaming=True, split=\"train\")\nmultilingual = interleave_datasets([es, fr], probabilities=[0.8, 0.2], seed=42)\n</code></pre> <p><code>stopping_strategy</code> \u63a7\u5236\u505c\u6b62\u6761\u4ef6\uff1a<code>first_exhausted</code>\uff08\u9ed8\u8ba4\uff0c\u9047\u5230\u4efb\u4f55\u6570\u636e\u96c6\u8017\u5c3d\u5373\u505c\u6b62\uff09\uff0c<code>all_exhausted</code>\uff08\u8fc7\u91c7\u6837\uff0c\u76f4\u5230\u6240\u6709\u6570\u636e\u96c6\u8017\u5c3d\uff09\uff0c<code>all_exhausted_without_replacement</code>\uff08\u6bcf\u6761\u6837\u672c\u4ec5\u51fa\u73b0\u4e00\u6b21\uff09\u3002</p>"},{"location":"datasets/docs/stream/#_7","title":"\u91cd\u547d\u540d\u3001\u5220\u9664\u4e0e\u7c7b\u578b\u8f6c\u6362","text":"<p>[<code>IterableDataset.rename_column</code>]\u3001[<code>IterableDataset.remove_columns</code>]\u3001[<code>IterableDataset.cast</code>] \u4e0e\u5e38\u89c4\u6570\u636e\u96c6\u7528\u6cd5\u4e00\u81f4\uff0c\u53ef\u7528\u4e8e\u4fee\u6539\u5217\u540d\u3001\u5220\u9664\u5217\u6216\u8f6c\u6362\u7279\u5f81\u7c7b\u578b\u3002</p> <pre><code>dataset = dataset.rename_column(\"text\", \"content\")\ndataset = dataset.remove_columns(\"timestamp\")\n</code></pre> <p>\u63d0\u793a</p> <p>\u7c7b\u578b\u8f6c\u6362\u9700\u4fdd\u8bc1\u65b0\u65e7\u7c7b\u578b\u517c\u5bb9\uff0c\u6bd4\u5982\u53ea\u6709 0/1 \u65f6\u624d\u80fd\u4ece <code>Value('int32')</code> \u8f6c\u4e3a <code>Value('bool')</code>\u3002</p>"},{"location":"datasets/docs/stream/#map","title":"map\uff08\u9010\u6837\u672c\u6216\u6279\u91cf\u5904\u7406\uff09","text":"<p>[<code>IterableDataset.map</code>] \u4e0e\u5e38\u89c4 <code>map</code> \u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u5904\u7406\u5728\u6d41\u5f0f\u8fed\u4ee3\u65f6\u5373\u65f6\u6267\u884c\uff1a</p> <pre><code>def add_prefix(example):\n    example[\"text\"] = \"My text: \" + example[\"text\"]\n    return example\n\nupdated_dataset = dataset.map(add_prefix, remove_columns=[\"timestamp\", \"url\"])\n</code></pre> <p>\u8bbe\u7f6e <code>batched=True</code> \u53ef\u6309\u6279\u5904\u7406\uff0c\u5982\u5206\u8bcd\uff1a</p> <pre><code>tokenizer = AutoTokenizer.from_pretrained(\"distilbert-base-uncased\")\ndataset = dataset.map(lambda batch: tokenizer(batch[\"text\"], truncation=True, padding=\"max_length\"),\n                      batched=True, remove_columns=[\"text\", \"timestamp\", \"url\"])\n</code></pre> <p>[<code>Dataset.filter</code>] \u540c\u6837\u9002\u7528\u4e8e\u6d41\u5f0f\u6570\u636e\uff0c\u5e76\u652f\u6301 <code>with_indices=True</code>\u3002</p>"},{"location":"datasets/docs/stream/#batch","title":"batch \u65b9\u6cd5","text":"<p>[<code>IterableDataset.batch</code>] \u53ef\u5c06\u6570\u636e\u6309\u6279\u8f93\u51fa\uff1a</p> <pre><code>batched = dataset.batch(batch_size=32, drop_last_batch=True)\nfor batch in batched:\n    ...\n</code></pre>"},{"location":"datasets/docs/stream/#_8","title":"\u8bad\u7ec3\u5faa\u73af\u4e2d\u7684\u6d41\u5f0f\u6570\u636e","text":"<p>\u53ef\u4ee5\u5c06 [<code>IterableDataset</code>] \u4e0e PyTorch <code>DataLoader</code> \u642d\u914d\u4f7f\u7528\u3002\u793a\u4f8b\uff1a</p> <pre><code>dataset = dataset.shuffle(seed=42, buffer_size=10_000)\ndataset = dataset.with_format(\"torch\")\ndataloader = DataLoader(dataset, collate_fn=DataCollatorForLanguageModeling(tokenizer))\nfor epoch in range(3):\n    dataset.set_epoch(epoch)\n    for batch in dataloader:\n        ...\n</code></pre>"},{"location":"datasets/docs/stream/#_9","title":"\u4fdd\u5b58\u4e0e\u6062\u590d","text":"<p>\u901a\u8fc7 [<code>IterableDataset.state_dict</code>] / [<code>IterableDataset.load_state_dict</code>] \u53ef\u4fdd\u5b58\u8bfb\u53d6\u8fdb\u5ea6\uff0c\u5b9e\u73b0\u65ad\u70b9\u7eed\u8bad\uff08\u9700\u914d\u5408 <code>torchdata.StatefulDataLoader</code> \u65f6\u540c\u7406\uff09\u3002</p> <pre><code>state = iterable_dataset.state_dict()\niterable_dataset.load_state_dict(state)\n</code></pre>"},{"location":"datasets/docs/stream/#_10","title":"\u4fdd\u5b58","text":"<p>\u5904\u7406\u5b8c\u6210\u540e\uff0c\u53ef\u4f7f\u7528 [<code>~Dataset.push_to_hub</code>] \u9010\u6b65\u4e0a\u4f20\u5230 Hub\uff0c\u6216\u6307\u5b9a <code>num_proc</code> \u5e76\u884c\u4e0a\u4f20\u5206\u7247\uff1a</p> <pre><code>dataset.push_to_hub(\"username/my_dataset\", num_proc=8)\n</code></pre> <p>\u968f\u540e\u4f7f\u7528 [<code>load_dataset</code>] \u91cd\u65b0\u52a0\u8f7d\u3002</p>"},{"location":"datasets/docs/stream/#_11","title":"\u5bfc\u51fa","text":"<p>\u652f\u6301\u5bfc\u51fa\u4e3a\u591a\u79cd\u683c\u5f0f\uff1a</p> \u683c\u5f0f \u65b9\u6cd5 CSV [<code>IterableDataset.to_csv</code>] JSON [<code>IterableDataset.to_json</code>] Parquet [<code>IterableDataset.to_parquet</code>] SQL [<code>IterableDataset.to_sql</code>] Pandas/Polars/Dict [<code>IterableDataset.to_pandas</code>]/[<code>IterableDataset.to_polars</code>]/[<code>IterableDataset.to_dict</code>] <p>\u5bfc\u51fa\u793a\u4f8b\uff1a</p> <pre><code>dataset.to_csv(\"path/of/my/dataset.csv\")\n\nfor idx in range(dataset.num_shards):\n    shard = dataset.shard(num_shards=dataset.num_shards, index=idx)\n    shard.to_parquet(f\"path/of/my/dataset/data-{idx:05d}.parquet\")\n</code></pre>"},{"location":"datasets/docs/tabular_load/","title":"\u52a0\u8f7d\u8868\u683c\u6570\u636e","text":"<p>\u8868\u683c\u6570\u636e\u96c6\u4ee5\u884c\u548c\u5217\u8868\u793a\u6837\u672c\u4e0e\u7279\u5f81\uff0c\u5e38\u89c1\u5b58\u50a8\u5f62\u5f0f\u5305\u62ec CSV\u3001Pandas DataFrame\u3001\u6570\u636e\u5e93\u7b49\u3002\u4e0b\u9762\u4ecb\u7ecd\u5982\u4f55\u4ece\u4e0d\u540c\u6765\u6e90\u521b\u5efa\u8868\u683c\u6570\u636e\u96c6\uff1a</p> <ul> <li>CSV \u6587\u4ef6</li> <li>Pandas DataFrame</li> <li>HDF5 \u6587\u4ef6</li> <li>\u6570\u636e\u5e93</li> </ul>"},{"location":"datasets/docs/tabular_load/#csv","title":"CSV","text":"<p>\u5728 [<code>~datasets.load_dataset</code>] \u4e2d\u6307\u5b9a\u901a\u7528\u6784\u5efa\u5668 <code>csv</code> \u5373\u53ef\u8bfb\u53d6 CSV\u3002\u82e5\u9700\u52a0\u8f7d\u591a\u4e2a\u6587\u4ef6\uff0c\u53ef\u4f20\u5165\u5217\u8868\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n&gt;&gt;&gt; dataset = load_dataset(\"csv\", data_files=\"my_file.csv\")\n&gt;&gt;&gt; dataset = load_dataset(\"csv\", data_files=[\"my_file_1.csv\", \"my_file_2.csv\"])\n</code></pre> <p>\u540c\u6837\u652f\u6301\u4e3a\u4e0d\u540c\u5212\u5206\u6307\u5b9a\u6587\u4ef6\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"csv\", data_files={\"train\": [\"train1.csv\", \"train2.csv\"], \"test\": \"test.csv\"})\n</code></pre> <p>\u52a0\u8f7d\u8fdc\u7a0b\u6216\u538b\u7f29\u6587\u4ef6\u4e5f\u53ea\u9700\u4f20\u5165 URL\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"csv\", data_files={\"train\": \"https://.../train.csv\"})\n&gt;&gt;&gt; dataset = load_dataset(\"csv\", data_files={\"train\": \"https://domain.org/train.zip\"})\n</code></pre>"},{"location":"datasets/docs/tabular_load/#pandas-dataframe","title":"Pandas DataFrame","text":"<p>\u4f7f\u7528 [<code>~datasets.Dataset.from_pandas</code>] \u53ef\u4ee5\u76f4\u63a5\u4ece Pandas DataFrame \u6784\u5efa\u6570\u636e\u96c6\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import Dataset\n&gt;&gt;&gt; import pandas as pd\n&gt;&gt;&gt; df = pd.read_csv(\"https://huggingface.co/datasets/imodels/credit-card/raw/main/train.csv\")\n&gt;&gt;&gt; dataset = Dataset.from_pandas(df)\n</code></pre> <p>\u53ef\u901a\u8fc7 <code>split</code> \u6307\u5b9a\u5212\u5206\u540d\u79f0\uff1a</p> <pre><code>&gt;&gt;&gt; train_ds = Dataset.from_pandas(train_df, split=\"train\")\n</code></pre> <p>\u82e5\u63a8\u65ad\u51fa\u7684\u7279\u5f81\u4e0d\u7b26\u5408\u9884\u671f\uff0c\u53ef\u663e\u5f0f\u6307\u5b9a\u7279\u5f81\uff0c\u56e0\u4e3a DataFrame \u5728\u957f\u5ea6\u4e3a 0 \u6216\u4ec5\u5305\u542b <code>None/NaN</code> \u65f6\u65e0\u6cd5\u63a8\u65ad\u7c7b\u578b\u3002</p>"},{"location":"datasets/docs/tabular_load/#hdf5","title":"HDF5","text":"<p>HDF5 \u5e38\u7528\u4e8e\u5b58\u50a8\u5927\u89c4\u6a21\u6570\u503c\u6570\u636e\uff0c\u52a0\u8f7d\u65b9\u5f0f\u7c7b\u4f3c CSV\uff1a</p> <pre><code>&gt;&gt;&gt; dataset = load_dataset(\"hdf5\", data_files=\"data.h5\")\n</code></pre> <p>\u6ce8\u610f\u52a0\u8f7d\u5668\u5047\u8bbe\u6587\u4ef6\u5177\u5907\u201c\u8868\u683c\u201d\u7ed3\u6784\uff0c\u5373\u6240\u6709\u5b50\u6570\u636e\u96c6\u7b2c\u4e00\u7ef4\u957f\u5ea6\u4e00\u81f4\u3002</p>"},{"location":"datasets/docs/tabular_load/#_2","title":"\u6570\u636e\u5e93","text":"<p>\u6570\u636e\u901a\u5e38\u901a\u8fc7 SQL \u67e5\u8be2\u5b58\u50a8\u3002\u5728 \ud83e\udd17 Datasets \u4e2d\uff0c\u53ef\u8fde\u63a5\u6570\u636e\u5e93\u3001\u6267\u884c\u67e5\u8be2\u5e76\u521b\u5efa\u6570\u636e\u96c6\uff0c\u968f\u540e\u5373\u53ef\u4f7f\u7528\u6240\u6709\u5904\u7406\u529f\u80fd\u3002</p>"},{"location":"datasets/docs/tabular_load/#sqlite","title":"SQLite \u793a\u4f8b","text":"<p>\u9996\u5148\u4f7f\u7528\u7ebd\u7ea6\u65f6\u62a5 Covid-19 \u6570\u636e \u521b\u5efa SQLite \u6570\u636e\u5e93\uff1a</p> <pre><code>&gt;&gt;&gt; import sqlite3, pandas as pd\n&gt;&gt;&gt; conn = sqlite3.connect(\"us_covid_data.db\")\n&gt;&gt;&gt; df = pd.read_csv(\"https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv\")\n&gt;&gt;&gt; df.to_sql(\"states\", conn, if_exists=\"replace\")\n</code></pre> <p>\u8fde\u63a5\u6570\u636e\u5e93\u9700\u8981\u76f8\u5e94\u7684 URI\uff08\u4e0d\u540c\u6570\u636e\u5e93\u683c\u5f0f\u89c1 SQLAlchemy \u6587\u6863\uff09\u3002SQLite \u7684 URI \u4e3a\uff1a</p> <pre><code>&gt;&gt;&gt; uri = \"sqlite:///us_covid_data.db\"\n</code></pre> <p>\u7136\u540e\u901a\u8fc7 [<code>~datasets.Dataset.from_sql</code>] \u52a0\u8f7d\u8868\u6216\u67e5\u8be2\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import Dataset\n&gt;&gt;&gt; ds = Dataset.from_sql(\"states\", uri)\n&gt;&gt;&gt; ds = Dataset.from_sql('SELECT * FROM states WHERE state=\"California\";', uri)\n</code></pre> <p>\u4e4b\u540e\u5373\u53ef\u4f7f\u7528\u8bf8\u5982 [<code>~datasets.Dataset.filter</code>] \u7b49\u65b9\u6cd5\u5904\u7406\u3002</p>"},{"location":"datasets/docs/tabular_load/#postgresql","title":"PostgreSQL","text":"<p>PostgreSQL \u7684\u4f7f\u7528\u6d41\u7a0b\u7c7b\u4f3c\uff0c\u8bf7\u53c2\u8003 \u793a\u4f8b notebook \u4e86\u89e3\u5b89\u88c5\u4e0e\u8fde\u63a5\u65b9\u5f0f\uff0c\u7136\u540e\u540c\u6837\u4f7f\u7528 <code>Dataset.from_sql</code> \u52a0\u8f7d\u6570\u636e\u3002</p>"},{"location":"datasets/docs/troubleshoot/","title":"\u5e38\u89c1\u95ee\u9898\u6392\u67e5","text":"<p>\u672c\u6307\u5357\u63d0\u4f9b\u5904\u7406\u5e38\u89c1\u95ee\u9898\u7684\u601d\u8def\u3002\u5982\u672a\u627e\u5230\u5bf9\u5e94\u5efa\u8bae\uff0c\u8bf7\u9605\u8bfb\u5bfb\u6c42\u5e2e\u52a9\u4e86\u89e3\u5982\u4f55\u83b7\u53d6\u652f\u6301\u3002</p>"},{"location":"datasets/docs/troubleshoot/#push_to_hub","title":"\u4f7f\u7528 <code>push_to_hub</code> \u4e0a\u4f20\u6570\u636e\u96c6\u9047\u5230\u7684\u95ee\u9898","text":""},{"location":"datasets/docs/troubleshoot/#_2","title":"\u8eab\u4efd\u9a8c\u8bc1","text":"<ul> <li>\u786e\u8ba4\u6240\u4f7f\u7528\u7684 Hugging Face \u8bbf\u95ee\u4ee4\u724c\u5177\u5907 write \u6743\u9650\u3002</li> <li>\u5728 macOS \u4e0a\uff0c\u53ef\u5c1d\u8bd5\u6e05\u7406\u94a5\u5319\u4e32\u4e2d\u7684 huggingface.co \u5bc6\u7801\uff0c\u5e76\u91cd\u65b0\u914d\u7f6e <code>git config --global credential.helper osxkeychain</code>\uff0c\u7136\u540e\u91cd\u65b0\u8fd0\u884c <code>huggingface-cli login</code>\u3002</li> <li>\u4e5f\u53ef\u4ee5\u4f7f\u7528 SSH Key \u8ba4\u8bc1\uff0c\u8be6\u89c1 Hub \u6587\u6863\u3002</li> </ul>"},{"location":"datasets/docs/troubleshoot/#_3","title":"\u5927\u578b\u6570\u636e\u96c6\u4e0a\u4f20\u65ad\u8fde","text":"<p>\u4e0a\u4f20\u5927\u91cf\u5206\u7247\u65f6\u53ef\u80fd\u89e6\u53d1\u8fc7\u591a\u63d0\u4ea4\u5bfc\u81f4\u8fde\u63a5\u4e2d\u65ad\uff0c\u6216\u56e0 AWS S3 \u6682\u65f6\u8fd4\u56de 500 \u9519\u8bef\u3002\u53ef\u518d\u6b21\u8c03\u7528 [<code>Dataset.push_to_hub</code>]\uff0cHub \u4f1a\u6839\u636e SHA \u8df3\u8fc7\u5df2\u4e0a\u4f20\u7684\u5206\u7247\u3002\u5efa\u8bae\u4fdd\u6301\u5e93\u4e3a\u6700\u65b0\u7248\u672c\u4ee5\u83b7\u5f97\u7a33\u5065\u6027\u6539\u8fdb\u3002</p>"},{"location":"datasets/docs/troubleshoot/#too-many-requests","title":"<code>Too Many Requests</code>","text":"<p>\u82e5\u51fa\u73b0\u4ee5\u4e0b\u9519\u8bef\uff1a</p> <pre><code>HfHubHTTPError: 429 Client Error: Too Many Requests ...\n</code></pre> <p>\u8bf7\u5347\u7ea7 <code>datasets</code> \u81f3\u6700\u65b0\u7248\u672c\uff08\u81f3\u5c11 <code>2.15.0</code>\uff09\u3002</p>"},{"location":"datasets/docs/troubleshoot/#_4","title":"\u4f7f\u7528\u81ea\u5b9a\u4e49\u6570\u636e\u521b\u5efa\u6570\u636e\u96c6\u7684\u95ee\u9898","text":""},{"location":"datasets/docs/troubleshoot/#_5","title":"\u4ece\u6587\u4ef6\u5939\u52a0\u8f7d\u56fe\u50cf/\u97f3\u9891","text":"<p>\u5e38\u89c1\u539f\u56e0\u662f\u6587\u4ef6\u7ed3\u6784\u6216\u5143\u6570\u636e\u6587\u4ef6\u4e0d\u7b26\u5408\u8981\u6c42\u3002\u8bf7\u53c2\u8003\uff1a</p> <ul> <li>AudioFolder</li> <li>ImageFolder</li> </ul>"},{"location":"datasets/docs/troubleshoot/#pickle","title":"Pickle \u76f8\u5173\u9519\u8bef","text":""},{"location":"datasets/docs/troubleshoot/#datasetfrom_generator","title":"<code>Dataset.from_generator</code>","text":"<p>[<code>Dataset.from_generator</code>] \u4e0e [<code>IterableDataset.from_generator</code>] \u8981\u6c42\u751f\u6210\u5668\u51fd\u6570\u53ef\u88ab pickle \u5e8f\u5217\u5316\uff0c\u4ee5\u4fbf\u7f13\u5b58\u3002\u82e5\u4f20\u5165\u751f\u6210\u5668\u5bf9\u8c61\u6216\u51fd\u6570\u5f15\u7528\u4e86\u4e0d\u53ef\u5e8f\u5217\u5316\u7684\u5168\u5c40\u5bf9\u8c61\uff08\u5982\u6570\u636e\u5e93\u8fde\u63a5\uff09\uff0c\u4f1a\u62a5 <code>TypeError: cannot pickle 'generator' object</code>\u3002\u53ef\u5728\u51fd\u6570\u5185\u90e8\u521d\u59cb\u5316\u76f8\u5173\u5bf9\u8c61\u89e3\u51b3\u3002</p>"},{"location":"datasets/docs/troubleshoot/#datasetmap","title":"<code>Dataset.map</code>","text":"<p>\u5728\u591a\u8fdb\u7a0b <code>map</code> \u4e2d\uff0c\u9700\u5c06\u5bf9\u8c61\u5e8f\u5217\u5316\u540e\u4f20\u9012\u7ed9\u5b50\u8fdb\u7a0b\uff0c\u82e5\u5bf9\u8c61\u4e0d\u53ef pickle \u5219\u4f1a\u62a5\u9519\u3002\u53ef\u5c1d\u8bd5\uff1a</p> <ul> <li>\u4e3a\u5bf9\u8c61\u5b9e\u73b0 <code>__getstate__</code>/<code>__setstate__</code>/<code>__reduce__</code>\u3002</li> <li>\u901a\u8fc7 <code>new_fingerprint</code> \u53c2\u6570\u63d0\u4f9b\u81ea\u5b9a\u4e49\u54c8\u5e0c\u3002</li> <li>\u6216\u8c03\u7528 <code>datasets.disable_caching()</code> \u5173\u95ed\u7f13\u5b58\uff08\u4e0d\u63a8\u8350\uff0c\u4e86\u89e3\u66f4\u591a\u89c1\u7f13\u5b58\u6307\u5357\uff09\u3002</li> </ul>"},{"location":"datasets/docs/troubleshoot/#asking-for-help","title":"Asking for help","text":"<p>\u82e5\u4ee5\u4e0a\u65b9\u6cd5\u4ecd\u672a\u89e3\u51b3\uff0c\u53ef\u901a\u8fc7\u4ee5\u4e0b\u6e20\u9053\u6c42\u52a9\uff1a</p> <ul> <li>\u8bba\u575b\uff1a\u5728 \ud83e\udd17Datasets \u5206\u7c7b \u53d1\u5e16\uff0c\u63d0\u4f9b\u8be6\u7ec6\u80cc\u666f\u4e0e\u53ef\u590d\u73b0\u4ee3\u7801\u3002</li> <li>Discord\uff1a\u52a0\u5165 Discord\uff0c\u5411\u56e2\u961f\u548c\u793e\u533a\u63d0\u95ee\u3002</li> <li>Hub \u793e\u533a\u8ba8\u8bba\uff1a\u82e5\u5728 Hub \u521b\u5efa\u6570\u636e\u96c6\u9047\u5230\u95ee\u9898\uff0c\u53ef\u5728\u6570\u636e\u96c6\u9875\u9762\u7684 Community \u6807\u7b7e\u9875\u5f00\u542f\u8ba8\u8bba\uff0c\u5e76\u9644\u4e0a\u5f85\u68c0\u67e5\u6587\u4ef6\uff0c@\u76f8\u5173\u7ef4\u62a4\u8005\uff1a</li> </ul> <pre><code># Dataset review request for &lt;Dataset name&gt;\n\n## Description\n\n&lt;brief description&gt;\n\n## Files to review\n\n- file1\n- file2\n- ...\n\ncc @lhoestq @albertvillanova\n</code></pre> <ul> <li>GitHub Issues\uff1a\u6000\u7591\u5e93\u5b58\u5728 bug \u65f6\uff0c\u5728 Datasets \u4ed3\u5e93 \u63d0\u4ea4 Issue\uff0c\u9644\u4e0a\u590d\u73b0\u4ee3\u7801\u3001\u73af\u5883\u4e0e\u6570\u636e\u8bf4\u660e\u3002</li> </ul>"},{"location":"datasets/docs/tutorial/","title":"\u6982\u89c8","text":"<p>\u6b22\u8fce\u6765\u5230 \ud83e\udd17 Datasets \u6559\u7a0b\uff01\u8fd9\u4e9b\u5165\u95e8\u6559\u7a0b\u5c06\u5e26\u4f60\u638c\u63e1\u4f7f\u7528 \ud83e\udd17 Datasets \u7684\u57fa\u672c\u6280\u80fd\uff0c\u5305\u62ec\u9009\u62e9\u673a\u5668\u5b66\u4e60\u6846\u67b6\uff08\u5982 PyTorch \u6216 TensorFlow\uff09\u5e76\u52a0\u8f7d\u3001\u51c6\u5907\u8bad\u7ec3\u6570\u636e\u3002\u5728\u6b64\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u4f1a\u5b66\u5230\u5982\u4f55\u9009\u62e9\u4e0d\u540c\u7684\u914d\u7f6e\u4e0e\u6570\u636e\u5212\u5206\u3001\u6d4f\u89c8\u4e0e\u68c0\u67e5\u6570\u636e\u5185\u5bb9\u3001\u6267\u884c\u9884\u5904\u7406\uff0c\u5e76\u5c06\u6570\u636e\u96c6\u5206\u4eab\u81f3 Hugging Face Hub\u3002</p> <p>\u6559\u7a0b\u9ed8\u8ba4\u4f60\u5177\u5907\u57fa\u7840\u7684 Python \u4e0e\u4e3b\u6d41\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u77e5\u8bc6\u3002\u5982\u679c\u5df2\u7ecf\u719f\u6089\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u5feb\u901f\u4e0a\u624b\uff0c\u4e86\u89e3 \ud83e\udd17 Datasets \u7684\u6838\u5fc3\u80fd\u529b\u3002</p> <p>\u63d0\u793a</p> <p>\u672c\u6559\u7a0b\u4ec5\u8986\u76d6\u4f7f\u7528 \ud83e\udd17 Datasets \u6240\u9700\u7684\u6838\u5fc3\u6280\u80fd\u3002\u8fd8\u6709\u8bb8\u591a\u9ad8\u7ea7\u529f\u80fd\u4e0e\u5e94\u7528\u6ca1\u6709\u6d89\u53ca\uff0c\u63a8\u8350\u9605\u8bfb Hugging Face \u8bfe\u7a0b\u7684\u7b2c 5 \u7ae0\u83b7\u53d6\u66f4\u7cfb\u7edf\u7684\u4ecb\u7ecd\u3002</p> <p>\u82e5\u4f60\u5728\u4f7f\u7528 \ud83e\udd17 Datasets \u65f6\u6709\u4efb\u4f55\u7591\u95ee\uff0c\u6b22\u8fce\u52a0\u5165\u6211\u4eec\u7684 \u8bba\u575b\u4e0e\u793e\u533a\u4ea4\u6d41\u3002</p> <p>\u51c6\u5907\u597d\u4e86\u5417\uff1f\u51fa\u53d1\u5427\uff01\ud83c\udfc1</p>"},{"location":"datasets/docs/upload_dataset/","title":"\u5728 Hub \u4e0a\u5206\u4eab\u6570\u636e\u96c6","text":"<p>Hugging Face Hub \u6c47\u805a\u4e86\u5927\u91cf\u793e\u533a\u8d21\u732e\u4e0e\u7ecf\u5178\u7814\u7a76\u6570\u636e\u96c6\u3002\u6211\u4eec\u9f13\u52b1\u5927\u5bb6\u5728 Hub \u4e0a\u5206\u4eab\u6570\u636e\uff0c\u5e2e\u52a9\u673a\u5668\u5b66\u4e60\u793e\u533a\u5171\u540c\u6210\u957f\u3001\u52a0\u901f\u521b\u65b0\u3002\u6240\u6709\u8d21\u732e\u90fd\u503c\u5f97\u6b22\u8fce \u2014\u2014 \u4e0a\u4f20\u4e00\u4e2a\u6570\u636e\u96c6\u53ea\u9700\u62d6\u62fd\u5373\u53ef\u5b8c\u6210\uff01</p> <p>\u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u8d26\u53f7\uff0c\u8bf7\u5148\u6ce8\u518c Hugging Face Hub\u3002</p>"},{"location":"datasets/docs/upload_dataset/#hub_1","title":"\u4f7f\u7528 Hub \u754c\u9762\u4e0a\u4f20","text":"<p>Hub \u63d0\u4f9b\u4e86\u56fe\u5f62\u5316\u754c\u9762\uff0c\u65b9\u4fbf\u6ca1\u6709\u5f00\u53d1\u7ecf\u9a8c\u7684\u7528\u6237\u4e0a\u4f20\u6570\u636e\u96c6\u3002</p>"},{"location":"datasets/docs/upload_dataset/#_1","title":"\u521b\u5efa\u4ed3\u5e93","text":"<p>\u6570\u636e\u96c6\u4ed3\u5e93\u7528\u4e8e\u6258\u7ba1\u6570\u636e\u6587\u4ef6\uff0c\u5e76\u4fdd\u7559\u7248\u672c\u5386\u53f2\uff0c\u4fbf\u4e8e\u7ba1\u7406\u4e0d\u540c\u7248\u672c\u3002</p> <ol> <li>\u70b9\u51fb\u5934\u50cf\u4e2d\u7684 New Dataset \u521b\u5efa\u65b0\u7684\u6570\u636e\u96c6\u4ed3\u5e93\u3002</li> <li>\u9009\u62e9\u6570\u636e\u96c6\u540d\u79f0\uff0c\u5e76\u51b3\u5b9a\u662f\u516c\u5f00\u8fd8\u662f\u79c1\u6709\u3002\u516c\u5f00\u6570\u636e\u96c6\u5bf9\u6240\u6709\u4eba\u53ef\u89c1\uff0c\u79c1\u6709\u6570\u636e\u96c6\u4ec5\u5bf9\u4f60\u6216\u7ec4\u7ec7\u6210\u5458\u5f00\u653e\u3002</li> </ol>"},{"location":"datasets/docs/upload_dataset/#_2","title":"\u4e0a\u4f20\u6570\u636e\u96c6","text":"<ol> <li> <p>\u521b\u5efa\u4ed3\u5e93\u540e\uff0c\u8f6c\u5230 Files and versions \u9009\u9879\u5361\u6dfb\u52a0\u6587\u4ef6\u3002\u70b9\u51fb Add file \u4e0a\u4f20\u6570\u636e\u96c6\u6587\u4ef6\u3002\u6211\u4eec\u652f\u6301\u591a\u79cd\u6587\u672c\u3001\u97f3\u9891\u3001\u56fe\u50cf\u683c\u5f0f\uff0c\u5982 <code>.csv</code>\u3001<code>.mp3</code>\u3001<code>.jpg</code> \u7b49\u3002\u5bf9\u4e8e <code>.csv</code>\u3001<code>.json</code>\u3001<code>.jsonl</code>\u3001<code>.txt</code> \u7b49\u6587\u672c\u6587\u4ef6\uff0c\u5efa\u8bae\u538b\u7f29\u540e\u518d\u4e0a\u4f20\uff08\u4f8b\u5982 <code>.zip</code> \u6216 <code>.gz</code>\uff09\uff0c\u4ee5\u4fbf\u66f4\u5feb\u540c\u6b65\u3002</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cGit LFS \u4e0d\u4f1a\u8ddf\u8e2a\u6587\u672c\u6269\u5c55\u540d\uff0c\u5982\u679c\u6587\u4ef6\u8d85\u8fc7 10MB\uff0c\u5c31\u65e0\u6cd5\u63d0\u4ea4\u4e0a\u4f20\u3002\u53ef\u4ee5\u67e5\u770b\u4ed3\u5e93\u4e2d\u7684 <code>.gitattributes</code> \u6587\u4ef6\u4e86\u89e3\u5df2\u8ddf\u8e2a\u7684\u6269\u5c55\u540d\u3002\u672c\u6559\u7a0b\u53ef\u4f7f\u7528\u4ee5\u4e0b\u4f53\u79ef\u8f83\u5c0f\u7684 <code>.csv</code> \u793a\u4f8b\uff1atrain.csv\u3001test.csv\u3002</p> </li> </ol> <ol> <li>\u5c06\u6570\u636e\u96c6\u6587\u4ef6\u62d6\u653e\u5230\u9875\u9762\u4e2d\uff0c\u5e76\u6dfb\u52a0\u7b80\u77ed\u7684\u63d0\u4ea4\u8bf4\u660e\u3002</li> </ol> <ol> <li>\u4e0a\u4f20\u5b8c\u6210\u540e\uff0c\u6587\u4ef6\u4f1a\u5b58\u50a8\u5728\u4f60\u7684\u6570\u636e\u96c6\u4ed3\u5e93\u4e2d\u3002</li> </ol>"},{"location":"datasets/docs/upload_dataset/#dataset-card","title":"\u521b\u5efa Dataset Card","text":"<p>\u4e3a\u6570\u636e\u96c6\u64b0\u5199\u8bf4\u660e\u5361\u7247\u53ef\u4ee5\u5e2e\u52a9\u5176\u4ed6\u7528\u6237\u5feb\u901f\u627e\u5230\u5e76\u6b63\u786e\u4f7f\u7528\u4f60\u7684\u6570\u636e\u96c6\u3002</p> <ol> <li>\u70b9\u51fb Create Dataset Card \u6309\u94ae\uff0c\u65b0\u5efa <code>README.md</code> \u6587\u4ef6\u3002</li> </ol> <ol> <li> <p>\u9875\u9762\u9876\u90e8\u7684 Metadata UI \u63d0\u4f9b\u4e86\u8bb8\u53ef\u8bc1\u3001\u8bed\u8a00\u3001\u4efb\u52a1\u7c7b\u578b\u7b49\u591a\u4e2a\u5b57\u6bb5\u3002\u8fd9\u4e9b\u6807\u7b7e\u80fd\u663e\u8457\u63d0\u5347\u6570\u636e\u96c6\u5728 Hub \u4e0a\u7684\u53ef\u53d1\u73b0\u6027\u3002\u9009\u62e9\u5bf9\u5e94\u9009\u9879\u540e\uff0c\u5b83\u4eec\u4f1a\u81ea\u52a8\u6dfb\u52a0\u5230\u5361\u7247\u5f00\u5934\u3002</p> <p>\u4f60\u4e5f\u53ef\u4ee5\u53c2\u8003 Dataset Card \u89c4\u8303\uff0c\u5176\u4e2d\u5217\u51fa\u4e86\u66f4\u5b8c\u6574\uff08\u4f46\u975e\u5fc5\u586b\uff09\u7684\u6807\u7b7e\u9009\u9879\uff0c\u4f8b\u5982 <code>annotations_creators</code>\uff0c\u4fbf\u4e8e\u4f60\u6311\u9009\u5408\u9002\u7684\u6807\u7b7e\u3002</p> </li> </ol> <ol> <li>\u70b9\u51fb\u7f16\u8f91\u5668\u9876\u90e8\u7684 Import dataset card template \u94fe\u63a5\uff0c\u53ef\u81ea\u52a8\u63d2\u5165\u6a21\u677f\u3002\u6309\u7167\u6a21\u677f\u586b\u5199\uff0c\u662f\u5411\u793e\u533a\u4ecb\u7ecd\u6570\u636e\u96c6\u5e76\u8bf4\u660e\u4f7f\u7528\u65b9\u5f0f\u7684\u7edd\u4f73\u65b9\u5f0f\u3002\u60f3\u4e86\u89e3\u4f18\u79c0\u5361\u7247\u7684\u793a\u4f8b\uff0c\u53ef\u53c2\u9605 CNN DailyMail Dataset card\u3002</li> </ol>"},{"location":"datasets/docs/upload_dataset/#_3","title":"\u52a0\u8f7d\u6570\u636e\u96c6","text":"<p>\u6570\u636e\u96c6\u4e0a\u4f20\u5b8c\u6210\u540e\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u901a\u8fc7 [<code>load_dataset</code>] \u51fd\u6570\u52a0\u8f7d\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"stevhliu/demo\")\n</code></pre>"},{"location":"datasets/docs/upload_dataset/#python","title":"\u901a\u8fc7 Python \u4e0a\u4f20","text":"<p>\u5982\u679c\u66f4\u504f\u597d\u7f16\u7a0b\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528 huggingface_hub \u5e93\u4e0e Hub \u4ea4\u4e92\u3002</p> <ol> <li>\u5b89\u88c5\u5e93\uff1a</li> </ol> <pre><code>pip install huggingface_hub\n</code></pre> <ol> <li>\u5728 Python \u4e2d\u4e0a\u4f20\u6570\u636e\u96c6\u524d\uff0c\u9700\u8981\u767b\u5f55 Hugging Face \u8d26\u53f7\uff1a</li> </ol> <pre><code>huggingface-cli login\n</code></pre> <ol> <li>\u4f7f\u7528 <code>push_to_hub()</code> \u51fd\u6570\u5c06\u6587\u4ef6\u6dfb\u52a0\u3001\u63d0\u4ea4\u5e76\u63a8\u9001\u5230\u4ed3\u5e93\uff1a</li> </ol> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n&gt;&gt;&gt; dataset = load_dataset(\"stevhliu/demo\")\n# dataset = dataset.map(...)  # \u5728\u6b64\u6267\u884c\u6240\u6709\u9884\u5904\u7406\n&gt;&gt;&gt; dataset.push_to_hub(\"stevhliu/processed_demo\")\n</code></pre> <p>\u5982\u9700\u521b\u5efa\u79c1\u6709\u6570\u636e\u96c6\uff0c\u5c06 <code>private</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>True</code>\u3002\u4ec5\u5728\u9996\u6b21\u521b\u5efa\u4ed3\u5e93\u65f6\u751f\u6548\uff1a</p> <pre><code>&gt;&gt;&gt; dataset.push_to_hub(\"stevhliu/private_processed_demo\", private=True)\n</code></pre> <p>\u82e5\u8981\u65b0\u589e\u914d\u7f6e\uff08\u5b50\u96c6\uff09\u6216\u5212\u5206\uff08train/validation/test\uff09\uff0c\u8bf7\u67e5\u9605 [<code>Dataset.push_to_hub</code>] \u6587\u6863\u3002</p>"},{"location":"datasets/docs/upload_dataset/#_4","title":"\u9690\u79c1","text":"<p>\u79c1\u6709\u6570\u636e\u96c6\u4ec5\u5bf9\u4f60\u81ea\u5df1\u53ef\u89c1\uff1b\u82e5\u8bbe\u7f6e\u4e3a\u7ec4\u7ec7\u5171\u4eab\uff0c\u5219\u7ec4\u7ec7\u6210\u5458\u4e5f\u53ef\u8bbf\u95ee\u3002</p> <p>\u52a0\u8f7d\u79c1\u6709\u6570\u636e\u96c6\u65f6\uff0c\u5c06\u8ba4\u8bc1\u4ee4\u724c\u4f20\u9012\u7ed9 <code>token</code> \u53c2\u6570\uff1a</p> <pre><code>&gt;&gt;&gt; from datasets import load_dataset\n\n# \u52a0\u8f7d\u4e2a\u4eba\u79c1\u6709\u6570\u636e\u96c6\n&gt;&gt;&gt; dataset = load_dataset(\"stevhliu/demo\", token=True)\n\n# \u52a0\u8f7d\u7ec4\u7ec7\u79c1\u6709\u6570\u636e\u96c6\n&gt;&gt;&gt; dataset = load_dataset(\"organization/dataset_name\", token=True)\n</code></pre>"},{"location":"datasets/docs/upload_dataset/#_5","title":"\u63a5\u4e0b\u6765\uff1f","text":"<p>\u606d\u559c\u4f60\u5b8c\u6210\u4e86\u672c\u6559\u7a0b\uff01\ud83e\udd73</p> <p>\u4ece\u8fd9\u91cc\u51fa\u53d1\uff0c\u4f60\u53ef\u4ee5\uff1a</p> <ul> <li>\u7ee7\u7eed\u5b66\u4e60\u5982\u4f55\u4f7f\u7528 \ud83e\udd17 Datasets \u7684\u5176\u4ed6\u51fd\u6570\u6765\u5904\u7406\u6570\u636e\u96c6\u3002</li> <li>\u4ee5\u6d41\u5f0f\u65b9\u5f0f\u52a0\u8f7d\u8d85\u5927\u6570\u636e\u96c6\uff0c\u907f\u514d\u672c\u5730\u4e0b\u8f7d\u3002</li> <li>\u5b9a\u4e49\u6570\u636e\u96c6\u7684\u62c6\u5206\u4e0e\u914d\u7f6e\uff0c\u5e76\u4e0e\u793e\u533a\u5206\u4eab\u3002</li> </ul> <p>\u82e5\u5728\u4f7f\u7528 \ud83e\udd17 Datasets \u65f6\u9047\u5230\u95ee\u9898\uff0c\u6b22\u8fce\u52a0\u5165\u6211\u4eec\u7684 \u8bba\u575b\u4e0e\u793e\u533a\u4ea4\u6d41\u3002</p>"},{"location":"datasets/docs/use_dataset/","title":"\u9884\u5904\u7406\u57fa\u7840","text":"<p>\u52a0\u8f7d\u6570\u636e\u96c6\u540e\uff0c\u9700\u8981\u5c06\u5176\u8f6c\u6362\u4e3a\u6a21\u578b\u53ef\u63a5\u53d7\u7684\u683c\u5f0f\u3002\u4e0d\u540c\u6a21\u6001\u7684\u9884\u5904\u7406\u65b9\u5f0f\u5404\u4e0d\u76f8\u540c\uff0c\u4f46\u5e38\u89c1\u9700\u6c42\u5305\u62ec\uff1a</p> <ul> <li>\u6587\u672c\u6570\u636e\uff1a\u5206\u8bcd\u3002</li> <li>\u97f3\u9891\u6570\u636e\uff1a\u91cd\u91c7\u6837\u3002</li> <li>\u56fe\u50cf\u6570\u636e\uff1a\u6570\u636e\u589e\u5f3a\u3002</li> <li>\u6700\u540e\u8bbe\u7f6e\u6570\u636e\u683c\u5f0f\u4e0e\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5bf9\u9f50\u3002</li> </ul> <p>\u672c\u6559\u7a0b\u8fd8\u9700\u8981\u5b89\u88c5 \ud83e\udd17 Transformers\uff1a</p> <pre><code>pip install transformers\n</code></pre>"},{"location":"datasets/docs/use_dataset/#_2","title":"\u6587\u672c\u5206\u8bcd","text":"<p>\u6a21\u578b\u65e0\u6cd5\u76f4\u63a5\u5904\u7406\u539f\u59cb\u6587\u672c\uff0c\u9700\u8981\u5c06\u6587\u672c\u62c6\u5206\u4e3a token \u5e76\u6620\u5c04\u4e3a\u6570\u5b57\u3002</p> <ol> <li>\u52a0\u8f7d rotten_tomatoes \u6570\u636e\u96c6\u53ca\u4e0e\u9884\u8bad\u7ec3 BERT \u5bf9\u5e94\u7684\u5206\u8bcd\u5668\uff08\u9700\u4e0e\u6a21\u578b\u4e00\u81f4\uff09\uff1a</li> </ol> <pre><code>from transformers import AutoTokenizer\nfrom datasets import load_dataset\n\ntokenizer = AutoTokenizer.from_pretrained(\"bert-base-uncased\")\ndataset = load_dataset(\"cornell-movie-review-data/rotten_tomatoes\", split=\"train\")\n</code></pre> <ol> <li>\u89c2\u5bdf\u5206\u8bcd\u7ed3\u679c\uff1a</li> </ol> <pre><code>tokenizer(dataset[0][\"text\"])\n</code></pre> <p>\u8fd4\u56de\u7684\u5b57\u5178\u5305\u542b <code>input_ids</code>\u3001<code>token_type_ids</code>\u3001<code>attention_mask</code> \u7b49\u6a21\u578b\u8f93\u5165\u3002</p> <ol> <li>\u4f7f\u7528 [<code>~Dataset.map</code>] \u6279\u91cf\u5206\u8bcd\uff0c\u52a0\u901f\u5904\u7406\uff1a</li> </ol> <pre><code>def tokenization(batch):\n    return tokenizer(batch[\"text\"])\n\ndataset = dataset.map(tokenization, batched=True)\n</code></pre> <ol> <li>\u6839\u636e\u6846\u67b6\u8bbe\u7f6e\u683c\u5f0f\uff1a</li> </ol> <p> <pre><code>dataset.set_format(type=\"torch\", columns=[\"input_ids\", \"token_type_ids\", \"attention_mask\", \"label\"])\n</code></pre> <p> <pre><code>from transformers import DataCollatorWithPadding\n\ndata_collator = DataCollatorWithPadding(tokenizer=tokenizer, return_tensors=\"tf\")\ntf_dataset = dataset.to_tf_dataset(\n    columns=[\"input_ids\", \"token_type_ids\", \"attention_mask\"],\n    label_cols=[\"label\"],\n    batch_size=2,\n    collate_fn=data_collator,\n    shuffle=True,\n)\n</code></pre> <p> </p>"},{"location":"datasets/docs/use_dataset/#_3","title":"\u97f3\u9891\u91cd\u91c7\u6837","text":"<p>\u97f3\u9891\u9700\u6309\u7167\u56fa\u5b9a\u91c7\u6837\u7387\u5904\u7406\u3002\u786e\u4fdd\u6570\u636e\u4e0e\u9884\u8bad\u7ec3\u6a21\u578b\u91c7\u6837\u7387\u4e00\u81f4\uff0c\u5426\u5219\u6a21\u578b\u8868\u73b0\u4f1a\u53d7\u5f71\u54cd\u3002</p> <ol> <li>\u52a0\u8f7d MInDS-14 \u6570\u636e\u96c6\u3001[<code>Audio</code>] \u7279\u5f81\u548c Wav2Vec2 \u7279\u5f81\u63d0\u53d6\u5668\uff1a</li> </ol> <pre><code>from transformers import AutoFeatureExtractor\nfrom datasets import load_dataset, Audio\n\nfeature_extractor = AutoFeatureExtractor.from_pretrained(\"facebook/wav2vec2-base-960h\")\ndataset = load_dataset(\"PolyAI/minds14\", \"en-US\", split=\"train\")\n</code></pre> <ol> <li>\u67e5\u770b\u97f3\u9891\u91c7\u6837\u7387\uff1a</li> </ol> <pre><code>audio = dataset[0][\"audio\"]\naudio.get_all_samples().sample_rate  # 8000\n</code></pre> <ol> <li>\u4f9d\u636e\u6570\u636e\u96c6\u5361\u7247\u4e0e\u6a21\u578b\u5361\u7247\u53ef\u77e5\uff1a\u6570\u636e\u96c6\u91c7\u6837\u7387\u4e3a 8kHz\uff0c\u6a21\u578b\u4e3a 16kHz\uff0c\u9700\u4e0a\u91c7\u6837\uff1a</li> </ol> <pre><code>dataset = dataset.cast_column(\"audio\", Audio(sampling_rate=16_000))\n</code></pre> <ol> <li>\u4f7f\u7528 <code>map</code> \u6279\u91cf\u91cd\u91c7\u6837\u5e76\u63d0\u53d6\u7279\u5f81\uff1a</li> </ol> <pre><code>def preprocess(batch):\n    arrays = [x.get_all_samples().data for x in batch[\"audio\"]]\n    inputs = feature_extractor(arrays, sampling_rate=feature_extractor.sampling_rate, max_length=16000, truncation=True)\n    return inputs\n\ndataset = dataset.map(preprocess, batched=True)\n</code></pre>"},{"location":"datasets/docs/use_dataset/#_4","title":"\u56fe\u50cf\u6570\u636e\u589e\u5f3a","text":"<p>\u6570\u636e\u589e\u5f3a\u901a\u8fc7\u5f15\u5165\u968f\u673a\u53d8\u6362\u63d0\u5347\u6a21\u578b\u6cdb\u5316\u80fd\u529b\u3002</p> <ol> <li>\u52a0\u8f7d Beans \u6570\u636e\u96c6\u4e0e ViT \u7279\u5f81\u63d0\u53d6\u5668\uff1a</li> </ol> <pre><code>from transformers import AutoFeatureExtractor\nfrom datasets import load_dataset, Image\n\nfeature_extractor = AutoFeatureExtractor.from_pretrained(\"google/vit-base-patch16-224-in21k\")\ndataset = load_dataset(\"AI-Lab-Makerere/beans\", split=\"train\")\n</code></pre> <ol> <li>\u6839\u636e\u9700\u8981\u53ef\u7edf\u4e00\u56fe\u50cf\u6a21\u5f0f\uff1a</li> </ol> <pre><code>dataset = dataset.cast_column(\"image\", Image(mode=\"RGB\"))\n</code></pre> <ol> <li>\u5b89\u88c5\u5e76\u5f15\u5165 Albumentations\uff1a</li> </ol> <pre><code>pip install albumentations\n</code></pre> <pre><code>import albumentations as A\nimport numpy as np\nfrom PIL import Image\n\ntransform = A.Compose([\n    A.RandomCrop(height=256, width=256, pad_if_needed=True, p=1),\n    A.HorizontalFlip(p=0.5),\n    A.ColorJitter(p=0.5),\n])\n</code></pre> <ol> <li>\u7f16\u5199\u8f6c\u6362\u51fd\u6570\uff08PIL \u2194 NumPy\uff09\uff1a</li> </ol> <pre><code>def albumentations_transforms(batch):\n    images = []\n    for image in batch[\"image\"]:\n        image_np = np.array(image.convert(\"RGB\"))\n        transformed = transform(image=image_np)[\"image\"]\n        images.append(Image.fromarray(transformed))\n    batch[\"pixel_values\"] = images\n    return batch\n</code></pre> <ol> <li>\u4f7f\u7528 [<code>~Dataset.with_transform</code>] \u5373\u65f6\u5e94\u7528\uff1a</li> </ol> <pre><code>dataset = dataset.with_transform(albumentations_transforms)\ndataset[0][\"pixel_values\"]\n</code></pre> <p>\u5b8c\u6210\u4e0a\u8ff0\u6b65\u9aa4\u540e\uff0c\u5373\u53ef\u5c06\u6570\u636e\u96c6\u4e0e\u5bf9\u5e94\u6846\u67b6\u7684 <code>DataLoader</code>\uff08\u6216 <code>tf.data</code> \u7ba1\u7ebf\uff09\u7ed3\u5408\u8fdb\u884c\u8bad\u7ec3\u3002</p>"},{"location":"datasets/docs/use_with_jax/","title":"\u642d\u914d JAX \u4f7f\u7528","text":"<p>\u672c\u6587\u4ecb\u7ecd\u5982\u4f55\u5c06 <code>datasets</code> \u8f93\u51fa\u4e3a <code>jax.Array</code> \u5e76\u7528\u4e8e JAX \u6a21\u578b\u3002\u8bf7\u5148\u5b89\u88c5 <code>pip install datasets[jax]</code>\u3002</p>"},{"location":"datasets/docs/use_with_jax/#_1","title":"\u8bbe\u7f6e\u683c\u5f0f","text":"<p>\u9ed8\u8ba4\u8fd4\u56de Python \u5bf9\u8c61\u3002\u8bbe\u7f6e\u683c\u5f0f\u4e3a <code>\"jax\"</code> \u5373\u53ef\u5f97\u5230 <code>DeviceArray</code>\uff1a</p> <pre><code>ds = Dataset.from_dict({\"data\": [[1, 2], [3, 4]]}).with_format(\"jax\")\nds[0]  # {'data': DeviceArray([1, 2], dtype=int32)}\n</code></pre> <p>\u540c\u6837\u9002\u7528\u4e8e <code>DatasetDict</code>\u3002\u683c\u5f0f\u5728\u5b9e\u9645\u8bbf\u95ee\u6570\u636e\u524d\u4e0d\u4f1a\u751f\u6548\u3002</p> <p>\u82e5\u9700\u8981\u6307\u5b9a\u8bbe\u5907\uff0c\u53ef\u5c06 <code>device</code> \u53c2\u6570\u8bbe\u4e3a <code>str(jax.devices()[0])</code>\u3002</p> <p>\u5bf9\u4e8e\u56fa\u5b9a\u5f62\u72b6\u7684 N \u7ef4\u6570\u7ec4\uff0c\u5efa\u8bae\u5728\u7279\u5f81\u4e2d\u4f7f\u7528 [<code>Array2D</code>] \u7b49\u7c7b\u578b\u660e\u786e\u5f62\u72b6\uff0c\u4ee5\u907f\u514d\u989d\u5916\u6bd4\u8f83\u4e0e\u590d\u5236\u3002</p> <p>[<code>ClassLabel</code>]\u3001[<code>Image</code>]\u3001[<code>Audio</code>] \u7b49\u7279\u5f81\u5747\u53ef\u8f6c\u6362\u4e3a JAX \u6570\u7ec4\uff08\u4f7f\u7528\u56fe\u50cf/\u97f3\u9891\u9700\u5b89\u88c5\u76f8\u5e94 extra\uff09\u3002</p>"},{"location":"datasets/docs/use_with_jax/#_2","title":"\u6570\u636e\u52a0\u8f7d\u5efa\u8bae","text":"<p>JAX \u4e0d\u63d0\u4f9b\u539f\u751f\u6570\u636e\u52a0\u8f7d\u5668\uff0c\u901a\u5e38\u7ed3\u5408 PyTorch <code>DataLoader</code> \u6216 TensorFlow <code>tf.data</code>\u3002\u53ef\u5148\u4f7f\u7528 <code>with_format(\"jax\")</code> \u5c06\u6570\u636e\u96c6\u8f6c\u6362\u4e3a JAX \u6570\u7ec4\uff0c\u7136\u540e\u5728\u5916\u90e8\u52a0\u8f7d\u5668\u4e2d\u6309\u6279\u5904\u7406\u3002\u8fd9\u6837\u5373\u53ef\u590d\u7528 Hugging Face \u4e0a\u7684\u4efb\u610f\u6a21\u578b\u800c\u65e0\u9700\u81ea\u5df1\u5b9e\u73b0\u6570\u636e\u8bfb\u53d6\u903b\u8f91\u3002</p>"},{"location":"datasets/docs/use_with_numpy/","title":"\u642d\u914d NumPy \u4f7f\u7528","text":"<p>\u672c\u6587\u4ecb\u7ecd\u5982\u4f55\u4ece <code>datasets</code> \u83b7\u53d6 <code>numpy.ndarray</code>\uff0c\u5e76\u5c06\u5176\u7528\u4e8e\u57fa\u4e8e NumPy \u7684\u6a21\u578b\uff08\u5982 <code>scikit-learn</code>\uff09\u3002</p>"},{"location":"datasets/docs/use_with_numpy/#_1","title":"\u8bbe\u7f6e\u6570\u636e\u96c6\u683c\u5f0f","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u96c6\u8fd4\u56de Python \u539f\u751f\u5bf9\u8c61\u3002\u82e5\u5e0c\u671b\u8fd4\u56de NumPy \u6570\u7ec4\uff0c\u53ef\u8bbe\u7f6e\u683c\u5f0f\u4e3a <code>numpy</code>\uff1a</p> <pre><code>from datasets import Dataset\ndata = [[1, 2], [3, 4]]\nds = Dataset.from_dict({\"data\": data}).with_format(\"numpy\")\nds[0]   # {'data': array([1, 2])}\n</code></pre> <p>\u540c\u6837\u9002\u7528\u4e8e <code>DatasetDict</code>\uff1a</p> <pre><code>dds = DatasetDict.from_dict({\"train\": {\"data\": [[1, 2]]}})\ndds = dds.with_format(\"numpy\")\n</code></pre>"},{"location":"datasets/docs/use_with_numpy/#_2","title":"\u591a\u7ef4\u6570\u7ec4","text":"<p>\u82e5\u6570\u7ec4\u5f62\u72b6\u56fa\u5b9a\uff0c\u4f1a\u81ea\u52a8\u62fc\u63a5\u4e3a\u540c\u4e00\u5f20\u91cf\uff1b\u82e5\u5f62\u72b6\u4e0d\u56fa\u5b9a\u5219\u56de\u9000\u4e3a <code>dtype=object</code>\u3002\u5efa\u8bae\u5728\u5b9a\u4e49\u7279\u5f81\u65f6\u4f7f\u7528 [<code>Array2D</code>] \u7b49\u660e\u786e\u58f0\u660e\u5f62\u72b6\u4ee5\u907f\u514d\u989d\u5916\u590d\u5236\uff1a</p> <pre><code>features = Features({\"data\": Array2D(shape=(2, 2), dtype=\"int32\")})\n</code></pre>"},{"location":"datasets/docs/use_with_numpy/#_3","title":"\u5176\u4ed6\u7279\u5f81\u7c7b\u578b","text":"<p>[<code>ClassLabel</code>] \u4f1a\u88ab\u6b63\u786e\u8f6c\u6362\u4e3a\u6570\u7ec4\uff1b\u5b57\u7b26\u4e32\u53ca\u4e8c\u8fdb\u5236\u4fdd\u6301\u4e0d\u53d8\u3002[<code>Image</code>]\u3001[<code>Audio</code>] \u4e5f\u53d7\u652f\u6301\uff08\u9700\u5b89\u88c5 <code>datasets[vision]</code> \u6216 <code>datasets[audio]</code>\uff09\uff1a</p> <pre><code>features = Features({\"image\": Image()})\nds = Dataset.from_dict({\"image\": [\"path/to/img.png\"]}, features=features).with_format(\"numpy\")\nds[0][\"image\"].shape  # (H, W, C)\n</code></pre>"},{"location":"datasets/docs/use_with_numpy/#_4","title":"\u6570\u636e\u52a0\u8f7d","text":"<p>NumPy \u672c\u8eab\u4e0d\u63d0\u4f9b\u6570\u636e\u52a0\u8f7d\u5668\uff0c\u53ef\u901a\u8fc7 <code>with_format('numpy')</code> \u76f4\u63a5\u83b7\u53d6\u6570\u7ec4\uff0c\u6216\u7ed3\u5408 <code>Dataset.iter()</code> \u6309\u6279\u8fed\u4ee3\u3002\u4ee5 MNIST \u4e3a\u4f8b\uff1a</p> <pre><code>ds = load_dataset(\"mnist\").with_format(\"numpy\")\nfor batch in ds[\"train\"].iter(batch_size=32):\n    x, y = batch[\"image\"], batch[\"label\"]\n</code></pre> <p>\u82e5\u9700\u66f4\u590d\u6742\u7684\u52a0\u8f7d\u903b\u8f91\uff0c\u53ef\u7ed3\u5408 PyTorch <code>DataLoader</code> \u7b49\u6846\u67b6\u4f7f\u7528\u3002</p>"},{"location":"datasets/docs/use_with_pandas/","title":"\u642d\u914d Pandas \u4f7f\u7528","text":"<p>\u672c\u6587\u4ecb\u7ecd\u5982\u4f55\u5229\u7528 Pandas \u5904\u7406 <code>datasets</code> \u6570\u636e\u96c6\uff0c\u4ee5\u53ca\u6570\u636e\u4e0e Pandas \u4e4b\u95f4\u7684\u8f6c\u6362\u3002\u7531\u4e8e\u5e95\u5c42\u4f7f\u7528 PyArrow\uff0c\u4e0e Pandas \u96c6\u6210\u826f\u597d\uff0c\u5904\u7406\u901f\u5ea6\u8f83\u5feb\u3002</p>"},{"location":"datasets/docs/use_with_pandas/#_1","title":"\u8bbe\u7f6e\u683c\u5f0f","text":"<p>\u9ed8\u8ba4\u8fd4\u56de Python \u539f\u751f\u5bf9\u8c61\u3002\u82e5\u9700\u8fd4\u56de <code>DataFrame</code>/<code>Series</code>\uff0c\u53ef\u8bbe\u7f6e\u683c\u5f0f\u4e3a <code>pandas</code>\uff1a</p> <pre><code>from datasets import Dataset\ndata = {\"col_0\": [\"a\", \"b\"], \"col_1\": [0.0, 1.0]}\nds = Dataset.from_dict(data).with_format(\"pandas\")\nds[0]   # DataFrame\nds[:2]  # DataFrame\n</code></pre> <p>\u6d41\u5f0f\u6570\u636e\u96c6\uff08<code>streaming=True</code>\uff09\u540c\u6837\u9002\u7528\uff0c\u53ef\u5728\u8fed\u4ee3\u65f6\u83b7\u5f97\u6279\u91cf <code>DataFrame</code>\u3002</p>"},{"location":"datasets/docs/use_with_pandas/#pandas_1","title":"\u4f7f\u7528 Pandas \u5904\u7406","text":"<p>Pandas \u51fd\u6570\u901a\u5e38\u6bd4\u624b\u5199 Python \u66f4\u9ad8\u6548\uff0c\u53ef\u7ed3\u5408 [<code>Dataset.map</code>]\u3001[<code>Dataset.filter</code>] \u4f7f\u7528\uff1a</p> <pre><code>ds = ds.map(lambda df: df.assign(col_2=df.col_1 + 1), batched=True)\nds = ds.filter(lambda df: df.col_0 == \"b\", batched=True)\n</code></pre> <p>\u5efa\u8bae\u8bbe\u7f6e <code>batched=True</code>\uff08\u5fc5\u8981\u65f6\u6307\u5b9a <code>batch_size</code>\uff09\uff0c\u5bf9 [<code>IterableDataset</code>] \u4e5f\u540c\u6837\u9002\u7528\u3002</p>"},{"location":"datasets/docs/use_with_pandas/#pandas_2","title":"\u4e0e Pandas \u4e92\u8f6c","text":"<ul> <li>\u4ece Pandas \u5bfc\u5165\uff1a[<code>Dataset.from_pandas(df)</code>]</li> <li>\u5bfc\u51fa\u81f3 Pandas\uff1a[<code>Dataset.to_pandas()</code>]</li> </ul> <p>\u8fd9\u6837\u4fbf\u53ef\u5728 Pandas \u4e0e \ud83e\udd17 Datasets \u4e4b\u95f4\u81ea\u7531\u5207\u6362\u3002</p>"},{"location":"datasets/docs/use_with_polars/","title":"\u642d\u914d Polars \u4f7f\u7528","text":"<p><code>datasets</code> \u4e0e Polars \u540c\u6837\u57fa\u4e8e Arrow\uff0c\u53ef\u5b9e\u73b0\u96f6\u62f7\u8d1d\u9ad8\u6548\u5904\u7406\u3002\u672c\u6307\u5357\u4ecb\u7ecd\u5982\u4f55\u8bbe\u7f6e\u8f93\u51fa\u683c\u5f0f\u3001\u4f7f\u7528 Polars \u5904\u7406\u6570\u636e\uff0c\u4ee5\u53ca\u4e0e Polars \u4e92\u76f8\u8f6c\u6362\u3002</p>"},{"location":"datasets/docs/use_with_polars/#_1","title":"\u8bbe\u7f6e\u683c\u5f0f","text":"<p>\u9ed8\u8ba4\u8fd4\u56de Python \u5bf9\u8c61\u3002\u82e5\u9700\u8fd4\u56de <code>polars.DataFrame/Series</code>\uff0c\u53ef\u8bbe\u7f6e\u683c\u5f0f\u4e3a <code>polars</code>\uff1a</p> <pre><code>ds = Dataset.from_dict({\"col_0\": [\"a\", \"b\"], \"col_1\": [0.0, 1.0]}).with_format(\"polars\")\nds[0]   # pl.DataFrame\n</code></pre> <p>\u6d41\u5f0f\u6570\u636e\u96c6\u540c\u6837\u9002\u7528\u3002</p>"},{"location":"datasets/docs/use_with_polars/#polars_1","title":"\u4f7f\u7528 Polars \u5904\u7406","text":"<p>Polars \u51fd\u6570\u7531 Rust \u5b9e\u73b0\uff0c\u8fd0\u884c\u901f\u5ea6\u5feb\u3002\u53ef\u7ed3\u5408 [<code>Dataset.map</code>]\u3001[<code>Dataset.filter</code>] \u4f7f\u7528\uff1a</p> <pre><code>import polars as pl\nds = ds.map(lambda df: df.with_columns(pl.col(\"col_1\").add(1).alias(\"col_2\")), batched=True)\nds = ds.filter(lambda df: df[\"col_0\"] == \"b\", batched=True)\n</code></pre> <p>\u540c\u6837\u9002\u7528\u4e8e [<code>IterableDataset</code>]\u3002\u5bf9\u4e8e\u5b57\u7b26\u4e32\u3001\u6570\u503c\u7b49\u7c7b\u578b\uff0cPolars \u63d0\u4f9b\u4e30\u5bcc\u51fd\u6570\uff0c\u8be6\u89c1\u5b98\u65b9\u6587\u6863\u3002</p>"},{"location":"datasets/docs/use_with_polars/#polars_2","title":"\u4e0e Polars \u4e92\u8f6c","text":"<ul> <li>\u4ece Polars \u5bfc\u5165\uff1a[<code>Dataset.from_polars(df)</code>]</li> <li>\u5bfc\u51fa\u4e3a Polars\uff1a[<code>Dataset.to_polars(ds)</code>]</li> </ul> <p>\u793a\u4f8b\u4e2d\u4f7f\u7528 Polars \u8fdb\u884c\u6b63\u5219\u62bd\u53d6\u53ef\u663e\u8457\u63d0\u901f\uff0c\u76f8\u8f83\u7eaf Python \u6709 5 \u500d\u4ee5\u4e0a\u6027\u80fd\u63d0\u5347\u3002</p>"},{"location":"datasets/docs/use_with_pyarrow/","title":"\u642d\u914d PyArrow \u4f7f\u7528","text":"<p><code>datasets</code> \u5e95\u5c42\u57fa\u4e8e PyArrow\uff0c\u56e0\u6b64\u53ef\u4ee5\u96f6\u62f7\u8d1d\u5730\u4e0e Arrow \u751f\u6001\u7ed3\u5408\u3002\u672c\u6307\u5357\u8bf4\u660e\u5982\u4f55\u8bbe\u7f6e\u683c\u5f0f\u3001\u4f7f\u7528 Arrow \u8ba1\u7b97\u51fd\u6570\u5904\u7406\u6570\u636e\uff0c\u4ee5\u53ca\u4e0e PyArrow \u4e92\u76f8\u8f6c\u6362\u3002</p>"},{"location":"datasets/docs/use_with_pyarrow/#_1","title":"\u8bbe\u7f6e\u683c\u5f0f","text":"<p>\u9ed8\u8ba4\u8fd4\u56de Python \u5bf9\u8c61\u3002\u82e5\u5e0c\u671b\u5f97\u5230 <code>pyarrow.Table</code>/<code>ChunkedArray</code>\uff0c\u53ef\u8bbe\u7f6e\u683c\u5f0f\u4e3a <code>\"arrow\"</code>\uff1a</p> <pre><code>ds = Dataset.from_dict({\"col_0\": [\"a\", \"b\"], \"col_1\": [0.0, 1.0]}).with_format(\"arrow\")\nds[0]   # pyarrow.Table\nds[:2]  # pyarrow.Table\n</code></pre> <p>\u6d41\u5f0f\u6570\u636e\u96c6\u540c\u6837\u9002\u7528\uff0c\u53ef\u6309\u6279\u8fd4\u56de <code>Table</code>\u3002</p>"},{"location":"datasets/docs/use_with_pyarrow/#arrow","title":"\u4f7f\u7528 Arrow \u8ba1\u7b97","text":"<p>PyArrow \u7684\u7b97\u5b50\u7531 C++ \u5b9e\u73b0\uff0c\u5904\u7406\u901f\u5ea6\u5feb\u3002\u53ef\u5728 [<code>Dataset.map</code>]\u3001[<code>Dataset.filter</code>] \u4e2d\u4f7f\u7528\uff1a</p> <pre><code>import pyarrow.compute as pc\nds = ds.map(lambda t: t.append_column(\"col_2\", pc.add(t[\"col_1\"], 1)), batched=True)\nds = ds.filter(lambda t: pc.equal(t[\"col_0\"], \"b\"), batched=True)\n</code></pre> <p>\u5efa\u8bae\u542f\u7528 <code>batched=True</code> \u5e76\u6309\u9700\u8bbe\u7f6e <code>batch_size</code>\u3002[<code>IterableDataset</code>] \u540c\u6837\u652f\u6301\u3002</p>"},{"location":"datasets/docs/use_with_pyarrow/#pyarrow_1","title":"\u4e0e PyArrow \u4e92\u8f6c","text":"<ul> <li>\u76f4\u63a5\u4ece <code>pyarrow.Table</code> \u6784\u5efa\uff1a<code>Dataset(table)</code></li> <li>\u8bbf\u95ee\u5e95\u5c42\u8868\uff1a<code>ds.data.table</code>\uff08\u53ef\u80fd\u4f34\u968f <code>_indices</code> \u7d22\u5f15\u6620\u5c04\uff09</li> <li>\u5bfc\u51fa\u4e3a Table\uff1a<code>table = ds.with_format(\"arrow\")[:]</code></li> </ul> <p>\u4e86\u89e3\u8fd9\u4e9b\u7ec6\u8282\u6709\u52a9\u4e8e\u5728 Arrow \u4e0e \ud83e\udd17 Datasets \u95f4\u65e0\u7f1d\u5207\u6362\u3002</p>"},{"location":"datasets/docs/use_with_pytorch/","title":"\u642d\u914d PyTorch \u4f7f\u7528","text":"<p>\u672c\u6587\u4ecb\u7ecd\u5982\u4f55\u5c06 <code>datasets</code> \u8f93\u51fa\u4e3a <code>torch.Tensor</code>\uff0c\u5e76\u7ed3\u5408 <code>DataLoader</code> \u9ad8\u6548\u52a0\u8f7d\u6570\u636e\u3002</p>"},{"location":"datasets/docs/use_with_pytorch/#_1","title":"\u8bbe\u7f6e\u683c\u5f0f","text":"<p>\u9ed8\u8ba4\u8fd4\u56de Python \u5bf9\u8c61\u3002\u82e5\u9700\u8fd4\u56de\u5f20\u91cf\uff0c\u53ef\u8bbe\u7f6e\u683c\u5f0f\u4e3a <code>\"torch\"</code>\uff0c\u5e76\u53ef\u901a\u8fc7 <code>device</code> \u53c2\u6570\u76f4\u63a5\u653e\u7f6e\u5230 GPU\uff1a</p> <pre><code>ds = Dataset.from_dict({\"data\": [[1, 2], [3, 4]]}).with_format(\"torch\", device=device)\nds[0]  # {'data': tensor([1, 2], device='cuda:0')}\n</code></pre> <p>\u82e5\u5f20\u91cf\u5f62\u72b6\u56fa\u5b9a\uff0c\u5efa\u8bae\u5728\u7279\u5f81\u4e2d\u4f7f\u7528 [<code>Array2D</code>] \u7b49\u663e\u5f0f\u58f0\u660e\uff0c\u907f\u514d\u989d\u5916\u62f7\u8d1d\u3002</p> <p>[<code>ClassLabel</code>]\u3001[<code>Image</code>]\u3001[<code>Audio</code>] \u7b49\u7279\u5f81\u4f1a\u8f6c\u6362\u4e3a\u5f20\u91cf\uff08\u4f7f\u7528\u56fe\u50cf/\u97f3\u9891\u9700\u5b89\u88c5 <code>datasets[vision]</code>\u3001<code>datasets[audio]</code>\uff09\u3002</p>"},{"location":"datasets/docs/use_with_pytorch/#dataloader","title":"DataLoader","text":"<p><code>Dataset</code> \u53ef\u76f4\u63a5\u4f20\u5165 <code>torch.utils.data.DataLoader</code>\uff1a</p> <pre><code>dataloader = DataLoader(ds, batch_size=32)\nfor batch in dataloader:\n    ...\n</code></pre>"},{"location":"datasets/docs/use_with_pytorch/#_2","title":"\u52a0\u901f\u6570\u636e\u52a0\u8f7d","text":"<ul> <li>\u591a\u8fdb\u7a0b\uff1a\u8bbe\u7f6e <code>num_workers</code> \u53ef\u5e76\u884c\u52a0\u8f7d\u3002\u6bcf\u4e2a\u5b50\u8fdb\u7a0b\u4f1a\u91cd\u65b0\u5185\u5b58\u6620\u5c04\u6570\u636e\u96c6\uff0c\u4e0d\u4f1a\u989d\u5916\u5360\u7528\u5185\u5b58\u3002</li> </ul> <pre><code>dataloader = DataLoader(ds, batch_size=32, num_workers=4)\n</code></pre> <ul> <li> <p>\u6d41\u5f0f\u52a0\u8f7d\uff1a\u901a\u8fc7 <code>load_dataset(..., streaming=True)</code> \u83b7\u53d6 [<code>IterableDataset</code>]\uff0c\u65e0\u9700\u9884\u5148\u4e0b\u8f7d\u3002\u82e5\u6570\u636e\u5b58\u5728\u591a\u4e2a\u5206\u7247\uff0c\u7ed3\u5408 <code>num_workers</code> \u53ef\u5e76\u884c\u6d41\u5f0f\u8bfb\u53d6\u3002</p> </li> <li> <p>\u65ad\u70b9\u7eed\u8f7d\uff1a\u4f7f\u7528 <code>torchdata.stateful_dataloader.StatefulDataLoader</code>\uff0c\u7ed3\u5408 [<code>IterableDataset.state_dict</code>] / <code>load_state_dict</code> \u5b9e\u73b0\u3002</p> </li> </ul>"},{"location":"datasets/docs/use_with_pytorch/#_3","title":"\u5206\u5e03\u5f0f","text":"<p>\u4f7f\u7528 [<code>datasets.distributed.split_dataset_by_node</code>] \u6309\u8bad\u7ec3\u8282\u70b9\u5212\u5206\u6570\u636e\uff1a</p> <pre><code>ds = split_dataset_by_node(ds, rank=rank, world_size=world_size)\n</code></pre> <p>\u65e0\u8bba\u662f map-style \u8fd8\u662f iterable \u6570\u636e\u96c6\u90fd\u9002\u7528\uff0c\u53ef\u4e0e <code>DataLoader</code> \u7ed3\u5408\u8fdb\u4e00\u6b65\u5e76\u884c\u5904\u7406\u3002</p>"},{"location":"datasets/docs/use_with_spark/","title":"\u642d\u914d Spark \u4f7f\u7528","text":"<p>\u672c\u6587\u4ecb\u7ecd\u5982\u4f55\u5c06 Spark DataFrame \u8f6c\u6362\u4e3a \ud83e\udd17 Datasets [<code>Dataset</code>]\uff0c\u4ee5\u4fbf\u5feb\u901f\u8bbf\u95ee\u6837\u672c\u5e76\u4f5c\u4e3a\u8bad\u7ec3\u6570\u636e\u52a0\u8f7d\u5668\u3002</p>"},{"location":"datasets/docs/use_with_spark/#spark_1","title":"\u4ece Spark \u52a0\u8f7d","text":"<p><code>Dataset</code> \u5c01\u88c5 Arrow \u8868\uff0c\u8bfb\u5199\u9ad8\u6548\u5e76\u652f\u6301\u5185\u5b58\u6620\u5c04\uff0c\u53ef\u5904\u7406\u8d85\u8fc7\u5185\u5b58\u5927\u5c0f\u7684\u6570\u636e\u3002\u53ef\u901a\u8fc7 [<code>Dataset.from_spark</code>] \u5c06 DataFrame \u8f6c\u4e3a\u6570\u636e\u96c6\uff1a</p> <pre><code>df = spark.createDataFrame([[1, \"Elia\"], [2, \"Teo\"]], [\"id\", \"name\"])\nds = Dataset.from_spark(df)\n</code></pre> <p>Spark worker \u4f1a\u5c06\u6570\u636e\u5199\u5165\u78c1\u76d8\u7f13\u5b58\u4e3a Arrow \u6587\u4ef6\uff0c\u7136\u540e\u8f7d\u5165\u4e3a <code>Dataset</code>\u3002\u82e5\u4e0d\u9700\u7269\u5316\uff0c\u53ef\u4f7f\u7528 [<code>IterableDataset.from_spark</code>] \u83b7\u53d6\u6d41\u5f0f\u6570\u636e\u96c6\uff1a</p> <pre><code>ds = IterableDataset.from_spark(df)\nnext(iter(ds))  # {\"id\": 1, \"name\": \"Elia\"}\n</code></pre>"},{"location":"datasets/docs/use_with_spark/#_1","title":"\u7f13\u5b58","text":"<p><code>Dataset.from_spark</code> \u4f1a\u7f13\u5b58\u7ed3\u679c\uff0c\u91cd\u590d\u8c03\u7528\u4e0d\u4f1a\u518d\u6b21\u8fd0\u884c Spark \u4f5c\u4e1a\u3002\u53ef\u901a\u8fc7 <code>cache_dir</code> \u6307\u5b9a\u7f13\u5b58\u8def\u5f84\uff0c\u9700\u786e\u4fdd driver \u4e0e worker \u90fd\u53ef\u8bbf\u95ee\u3002\u6ce8\u610f\u4e0d\u540c Spark \u4f1a\u8bdd\u7684 DataFrame \u8bed\u4e49\u54c8\u5e0c\u4e0d\u540c\uff0c\u4f1a\u89e6\u53d1\u91cd\u65b0\u5199\u5165\u3002</p>"},{"location":"datasets/docs/use_with_spark/#_2","title":"\u7279\u5f81\u7c7b\u578b","text":"<p>\u82e5\u5305\u542b\u56fe\u50cf\u3001\u97f3\u9891\u6216\u591a\u7ef4\u6570\u7ec4\uff0c\u53ef\u901a\u8fc7 <code>features=</code> \u6307\u5b9a\u5bf9\u5e94\u7279\u5f81\u7c7b\u578b\uff1a</p> <pre><code>features = Features({\"idx\": Value(\"int64\"), \"image\": Image()})\ndataset = Dataset.from_spark(df, features=features)\n</code></pre> <p>\u66f4\u591a\u7279\u5f81\u7c7b\u578b\u8bf7\u53c2\u9605 [<code>Features</code>] \u6587\u6863\u3002</p>"},{"location":"datasets/docs/use_with_tensorflow/","title":"\u642d\u914d TensorFlow \u4f7f\u7528","text":"<p>\u672c\u6587\u4ecb\u7ecd\u5982\u4f55\u5c06 <code>datasets</code> \u8f93\u51fa\u4e3a <code>tf.Tensor</code>\uff0c\u5e76\u901a\u8fc7 <code>tf.data.Dataset</code> \u6d41\u5f0f\u4f9b\u7ed9 Keras\u3002</p>"},{"location":"datasets/docs/use_with_tensorflow/#_1","title":"\u8bbe\u7f6e\u683c\u5f0f","text":"<p>\u9ed8\u8ba4\u8fd4\u56de Python \u5bf9\u8c61\u3002\u53ef\u8bbe\u7f6e\u683c\u5f0f\u4e3a <code>\"tf\"</code> \u83b7\u53d6\u5f20\u91cf\uff1a</p> <pre><code>ds = Dataset.from_dict({\"data\": [[1, 2], [3, 4]]}).with_format(\"tf\")\nds[0]  # {'data': &lt;tf.Tensor ...&gt;}\n</code></pre> <p>\u82e5\u6570\u7ec4\u5f62\u72b6\u4e0d\u56fa\u5b9a\u4f1a\u751f\u6210 <code>tf.RaggedTensor</code>\uff1b\u5982\u9700\u56fa\u5b9a\u5f62\u72b6\uff0c\u53ef\u5728\u7279\u5f81\u4e2d\u4f7f\u7528 [<code>Array2D</code>] \u7b49\u7c7b\u578b\u3002</p> <p>[<code>ClassLabel</code>]\u3001[<code>Image</code>]\u3001[<code>Audio</code>] \u7b49\u7279\u5f81\u4f1a\u8f6c\u6362\u4e3a Tensor\uff08\u4f7f\u7528\u56fe\u50cf/\u97f3\u9891\u9700\u5b89\u88c5 <code>datasets[vision]</code>\u3001<code>datasets[audio]</code>\uff09\u3002</p>"},{"location":"datasets/docs/use_with_tensorflow/#tfdatadataset","title":"\u8f6c\u6362\u4e3a <code>tf.data.Dataset</code>","text":"<p>\u867d\u7136\u53ef\u4ee5\u76f4\u63a5\u7d22\u5f15\u8bfb\u53d6\u6837\u672c\uff0c\u4f46\u8981\u4e0e <code>model.fit()</code>\u3001<code>model.predict()</code> \u7b49\u65b9\u6cd5\u914d\u5408\uff0c\u5efa\u8bae\u4f7f\u7528 [<code>Dataset.to_tf_dataset</code>]\u3002\u6d41\u7a0b\u901a\u5e38\u4e3a\uff1a</p> <ol> <li>\u5728 Hugging Face <code>Dataset</code> \u4e0a\u5b8c\u6210\u9884\u5904\u7406\uff08<code>map</code>\u3001<code>filter</code> \u7b49\uff09\u3002</li> <li>\u8c03\u7528 <code>to_tf_dataset(columns=..., label_cols=..., batch_size=..., collate_fn=...)</code> \u83b7\u53d6 <code>tf.data.Dataset</code>\u3002</li> <li>\u5c06\u8fd4\u56de\u7684\u6570\u636e\u96c6\u4f20\u7ed9 Keras API\u3002</li> </ol> <p>\u8fd9\u79cd\u65b9\u5f0f\u80fd\u5145\u5206\u5229\u7528 <code>tf.data</code> \u7684\u5e76\u884c\u3001\u5f02\u6b65\u52a0\u8f7d\u80fd\u529b\uff0c\u540c\u65f6\u4fdd\u7559\u5728 Hugging Face \u6570\u636e\u96c6\u4e0a\u4f7f\u7528\u4efb\u610f Python \u9884\u5904\u7406\u51fd\u6570\u7684\u7075\u6d3b\u6027\u3002</p>"},{"location":"datasets/docs/video_dataset/","title":"\u521b\u5efa\u89c6\u9891\u6570\u636e\u96c6","text":"<p>\u672c\u6307\u5357\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 <code>VideoFolder</code>\uff08\u914d\u5408\u5143\u6570\u636e\uff09\u6784\u5efa\u89c6\u9891\u6570\u636e\u96c6\uff0c\u65e0\u9700\u7f16\u5199\u4ee3\u7801\u5373\u53ef\u5904\u7406\u6210\u5343\u4e0a\u4e07\u6761\u89c6\u9891\u3002</p> <p>\u63d0\u793a</p> <p>\u53ef\u901a\u8fc7\u8bbf\u95ee\u63a7\u5236\u9650\u5236\u4e0b\u8f7d\uff0c\u8be6\u89c1 Gated datasets\u3002</p>"},{"location":"datasets/docs/video_dataset/#videofolder","title":"VideoFolder","text":"<p><code>VideoFolder</code> \u4f1a\u6839\u636e\u76ee\u5f55\u7ed3\u6784\u63a8\u65ad\u6807\u7b7e\u3002\u793a\u4f8b\u76ee\u5f55\uff1a</p> <pre><code>folder/train/dog/golden_retriever.mp4\nfolder/train/cat/maine_coon.mp4\nfolder/test/dog/german_shepherd.mp4\n</code></pre> <p>\u6ee1\u8db3\u7ed3\u6784\u540e\uff0c\u53ef\u76f4\u63a5\u4f7f\u7528 [<code>load_dataset(\"videofolder\", data_dir=...)</code>] \u52a0\u8f7d\u3002\u82e5\u6240\u6709\u6587\u4ef6\u4f4d\u4e8e\u540c\u4e00\u76ee\u5f55\uff0c\u9700\u663e\u5f0f\u8bbe\u7f6e <code>drop_labels=False</code> \u624d\u4f1a\u751f\u6210\u6807\u7b7e\u5217\u3002</p> <p>\u5982\u9700\u5b58\u653e\u989d\u5916\u4fe1\u606f\uff08\u5b57\u5e55\u3001\u8fb9\u754c\u6846\u7b49\uff09\uff0c\u53ef\u5728\u6587\u4ef6\u5939\u4e2d\u6dfb\u52a0 <code>metadata.csv</code> / <code>metadata.jsonl</code> / <code>metadata.parquet</code>\uff0c\u5176\u4e2d\u5fc5\u987b\u5305\u542b <code>file_name</code> \u6216 <code>*_file_name</code> \u5173\u8054\u89c6\u9891\u6587\u4ef6\u3002\u4e5f\u652f\u6301\u6bcf\u884c\u5bf9\u5e94\u591a\u4e2a\u89c6\u9891\uff08\u4f7f\u7528 <code>file_names</code> \u5b57\u6bb5\uff09\u3002</p>"},{"location":"datasets/docs/video_dataset/#_2","title":"\u89c6\u9891\u5b57\u5e55\u793a\u4f8b","text":"<pre><code>file_name,text\n0001.mp4,This is a golden retriever playing with a ball\n</code></pre> <p>\u52a0\u8f7d\u540e\u4f1a\u751f\u6210 <code>text</code> \u5217\uff1a</p> <pre><code>dataset = load_dataset(\"videofolder\", data_dir=\"/path/to/folder\", split=\"train\")\ndataset[0][\"text\"]\n</code></pre>"},{"location":"datasets/docs/video_dataset/#hub","title":"\u4e0a\u4f20\u81f3 Hub","text":"<p>\u4f7f\u7528 <code>huggingface_hub.HfApi.upload_folder</code> \u5373\u53ef\u4e0a\u4f20\u6574\u4e2a\u76ee\u5f55\uff1a</p> <pre><code>api.upload_folder(folder_path=\"/path/to/local/dataset\", repo_id=\"username/my-cool-dataset\", repo_type=\"dataset\")\n</code></pre>"},{"location":"datasets/docs/video_dataset/#webdataset","title":"WebDataset","text":"<p>\u5bf9\u4e8e\u5927\u578b\u89c6\u9891\u96c6\uff0c\u53ef\u91c7\u7528 WebDataset TAR \u5f52\u6863\u683c\u5f0f\uff08\u5982\u6bcf\u4e2a TAR 1GB\uff09\u3002\u5f52\u6863\u4e2d\u6587\u4ef6\u5171\u4eab\u540c\u4e00\u524d\u7f00\uff08<code>.mp4</code>\u3001<code>.json</code> \u7b49\uff09\u3002\u52a0\u8f7d\u65f6\u4f1a\u4e3a\u6bcf\u79cd\u540e\u7f00\u751f\u6210\u4e00\u5217\uff1a</p> <pre><code>dataset = load_dataset(\"webdataset\", data_dir=\"/path/to/folder\", split=\"train\")\ndataset[0][\"json\"]\n</code></pre> <p>\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 WebDataset \u5b98\u65b9\u6587\u6863\u3002</p>"},{"location":"datasets/docs/video_load/","title":"\u52a0\u8f7d\u89c6\u9891\u6570\u636e","text":"<p>\u6ce8\u610f</p> <p>\u89c6\u9891\u652f\u6301\u4ecd\u5904\u4e8e\u5b9e\u9a8c\u9636\u6bb5\uff0c\u63a5\u53e3\u53ef\u80fd\u8c03\u6574\u3002</p> <p>\u89c6\u9891\u5217\u4f7f\u7528 [<code>Video</code>] \u7279\u5f81\uff0c\u5185\u90e8\u4f9d\u8d56 <code>torchvision</code> \u4e0e <code>av</code>\uff0c\u8bf7\u5148\u5b89\u88c5\uff08\u53c2\u8003\u5b98\u65b9\u5b89\u88c5\u6307\u5357\uff09\u3002</p> <p>\u52a0\u8f7d\u6570\u636e\u96c6\u5e76\u8bbf\u95ee <code>video</code> \u5217\u65f6\uff0c\u4f1a\u8fd4\u56de <code>torchcodec</code> \u7684\u89e3\u7801\u5668\u5bf9\u8c61\uff1a</p> <pre><code>dataset = load_dataset(\"path/to/video/folder\", split=\"train\")\nvideo = dataset[0][\"video\"]\n</code></pre> <p>\u63d0\u793a</p> <p>\u8bbf\u95ee\u65f6\u5e94\u5148\u7d22\u5f15\u884c\u518d\u53d6\u5217\uff08<code>dataset[0][\"video\"]</code>\uff09\uff0c\u907f\u514d\u4e00\u6b21\u6027\u89e3\u7801\u5168\u90e8\u89c6\u9891\u3002</p> <p>\u66f4\u591a\u901a\u7528\u52a0\u8f7d\u65b9\u5f0f\u8bf7\u53c2\u8003\u901a\u7528\u6307\u5357\u3002</p>"},{"location":"datasets/docs/video_load/#_2","title":"\u8bfb\u53d6\u5e27","text":"<p>\u901a\u8fc7 <code>get_frame_at</code> \u6216 <code>get_frames_in_range</code> \u83b7\u53d6\u5e27\u6570\u636e\uff1a</p> <pre><code>frame = video.get_frame_at(0)\nframes = video.get_frames_in_range(0, 6, 1)\n</code></pre> <p>\u4e5f\u53ef\u4f7f\u7528 <code>get_frames_played_in_range(start_seconds, stop_seconds)</code> \u6839\u636e\u65f6\u95f4\u533a\u95f4\u8fd4\u56de\u5e27\u5e8f\u5217\u3002</p>"},{"location":"datasets/docs/video_load/#_3","title":"\u672c\u5730\u6587\u4ef6","text":"<p>\u82e5\u5df2\u6709\u89c6\u9891\u8def\u5f84\uff0c\u53ef\u7ed3\u5408 [<code>Dataset.from_dict</code>] \u4e0e [<code>~Dataset.cast_column</code>] \u521b\u5efa\u5217\u5e76\u81ea\u52a8\u89e3\u7801\uff1a</p> <pre><code>dataset = Dataset.from_dict({\"video\": [\"path/to/video.mp4\"]}).cast_column(\"video\", Video())\n</code></pre> <p>\u82e5\u4ec5\u9700\u8def\u5f84/\u5b57\u8282\uff0c\u53ef\u8bbe\u7f6e <code>decode=False</code>\u3002</p>"},{"location":"datasets/docs/video_load/#videofolder","title":"VideoFolder","text":"<p>\u540c\u6837\u53ef\u4ee5\u4f7f\u7528 <code>VideoFolder</code> \u6784\u5efa\u5668\u8bfb\u53d6\u6210\u5343\u4e0a\u4e07\u89c6\u9891\uff08\u7ed3\u6784\u4e0e\u521b\u5efa\u6307\u5357\u4e00\u81f4\uff09\u3002\u652f\u6301 <code>drop_metadata</code>\u3001<code>drop_labels</code>\u3001<code>filters</code> \u548c <code>streaming=True</code> \u7b49\u53c2\u6570\u3002</p>"},{"location":"datasets/docs/video_load/#webdataset","title":"WebDataset","text":"<p>\u5927\u89c4\u6a21\u89c6\u9891\u53ef\u4f7f\u7528 TAR \u5f52\u6863\u7684 WebDataset \u683c\u5f0f\uff0c\u901a\u5e38\u4e0e <code>streaming=True</code> \u642d\u914d\uff1a</p> <pre><code>dataset = load_dataset(\"webdataset\", data_dir=\"/path/to/folder\", streaming=True)\n</code></pre>"},{"location":"datasets/docs/video_load/#_4","title":"\u89c6\u9891\u89e3\u7801","text":"<p>\u9ed8\u8ba4\u6309\u9700\u89e3\u7801\u5e27\uff0c\u53ef\u901a\u8fc7 <code>dataset.decode(num_threads=...)</code> \u542f\u7528\u591a\u7ebf\u7a0b\uff08\u8fdc\u7a0b\u6d41\u5f0f\u65f6\u5c24\u4e3a\u6709\u6548\uff09\u3002\u82e5\u53ea\u9700\u8def\u5f84\u53ef\u8c03\u7528 <code>dataset.decode(False)</code> \u7981\u7528\u89e3\u7801\u3002</p> <p>[<code>IterableDataset.decode</code>] \u4ec5\u9002\u7528\u4e8e\u6d41\u5f0f\u6570\u636e\u96c6\u3002</p>"},{"location":"datasets/docs/package_reference/builder_classes/","title":"\u6784\u5efa\u5668\u7c7b","text":"<p>\u6784\u5efa\u5668\uff08Builder\uff09\u8d1f\u8d23\u5b9a\u4e49\u6570\u636e\u96c6\u7684\u4e0b\u8f7d\u3001\u89e3\u6790\u4e0e\u5207\u5206\u65b9\u5f0f\u3002\u4e0b\u8868\u6c47\u603b\u5e38\u7528\u7c7b\u53ca\u5176\u804c\u8d23\uff0c\u4fbf\u4e8e\u5728\u7f16\u5199\u81ea\u5b9a\u4e49 <code>dataset script</code> \u65f6\u53c2\u8003\u3002</p>"},{"location":"datasets/docs/package_reference/builder_classes/#_2","title":"\u6838\u5fc3\u6784\u5efa\u5668","text":"\u7c7b \u4f5c\u7528 \u5173\u952e\u8981\u70b9 <code>datasets.DatasetBuilder</code> \u6240\u6709\u6784\u5efa\u5668\u7684\u57fa\u7c7b\uff0c\u5c01\u88c5 <code>info</code>\u3001<code>download_and_prepare()</code>\u3001<code>as_dataset()</code> \u7b49\u901a\u7528\u6d41\u7a0b\u3002 \u91cd\u5199 <code>_info()</code>\u3001<code>_split_generators()</code>\u3001<code>_generate_examples()</code> \u6765\u63cf\u8ff0\u6570\u636e\u96c6\u3002 <code>datasets.GeneratorBasedBuilder</code> \u901a\u8fc7 Python \u751f\u6210\u5668\u9010\u6837\u672c\u4ea7\u51fa\u6570\u636e\u7684\u6784\u5efa\u5668\u3002 \u6700\u5e38\u89c1\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c<code>_generate_examples</code> \u8fd4\u56de <code>(key, example)</code> \u8fed\u4ee3\u5668\u3002 <code>datasets.ArrowBasedBuilder</code> \u76f4\u63a5\u8fd4\u56de <code>pyarrow.Table</code> \u7684\u6784\u5efa\u5668\u3002 \u9002\u5408\u6570\u636e\u5df2\u7ecf\u662f Arrow/Parquet \u7ed3\u6784\u65f6\u7684\u9ad8\u6548\u52a0\u8f7d\u3002 <code>datasets.BuilderConfig</code> \u63cf\u8ff0\u5355\u4e2a\u914d\u7f6e\uff08\u8bed\u8a00\u3001\u4efb\u52a1\u5b50\u96c6\u7b49\uff09\u7684\u5143\u4fe1\u606f\u3002 \u53ef\u5b9a\u4e49 <code>name</code>\u3001<code>version</code>\u3001<code>features</code> \u548c\u81ea\u5b9a\u4e49\u53c2\u6570\uff0c\u5728 <code>load_dataset(..., name=\"xx\")</code> \u65f6\u9009\u7528\u3002"},{"location":"datasets/docs/package_reference/builder_classes/#_3","title":"\u4e0b\u8f7d\u4e0e\u7f13\u5b58","text":"\u7c7b / \u679a\u4e3e \u4f5c\u7528 \u5178\u578b\u7528\u6cd5 <code>datasets.DownloadManager</code> \u5728 <code>download_and_prepare()</code> \u4e2d\u8d1f\u8d23\u4e0b\u8f7d\u3001\u7f13\u5b58\u4e0e\u89e3\u538b\u8d44\u6e90\u3002 \u4f7f\u7528 <code>download(url_or_urls)</code>\u3001<code>download_and_extract()</code> \u83b7\u53d6\u6587\u4ef6\uff1b\u81ea\u52a8\u590d\u7528\u7f13\u5b58\u3002 <code>datasets.StreamingDownloadManager</code> \u652f\u6301\u6d41\u5f0f\u8bfb\u53d6\u8fdc\u7a0b\u6587\u4ef6\u800c\u65e0\u9700\u843d\u76d8\u3002 \u5728 <code>streaming=True</code> \u6a21\u5f0f\u4e0b\u7531\u6846\u67b6\u81ea\u52a8\u542f\u7528\u3002 <code>datasets.DownloadConfig</code> \u63a7\u5236\u4e0b\u8f7d\u884c\u4e3a\uff08\u7f13\u5b58\u76ee\u5f55\u3001\u8d85\u65f6\u65f6\u95f4\u3001\u54c8\u5e0c\u6821\u9a8c\u7b49\uff09\u3002 \u901a\u8fc7 <code>load_dataset(..., download_config=DownloadConfig(max_retries=3))</code> \u4f20\u5165\u3002 <code>datasets.DownloadMode</code> \u6307\u5b9a\u662f\u5426\u91cd\u65b0\u4e0b\u8f7d\u6216\u5f3a\u5236\u4f7f\u7528\u7f13\u5b58\u3002 \u53ef\u9009 <code>REUSE_DATASET_IF_EXISTS</code>\u3001<code>FORCE_REDOWNLOAD</code> \u7b49\u503c\u3002"},{"location":"datasets/docs/package_reference/builder_classes/#_4","title":"\u6570\u636e\u6821\u9a8c","text":"\u679a\u4e3e \u8bf4\u660e <code>datasets.VerificationMode</code> \u63a7\u5236 <code>download_and_prepare()</code> \u662f\u5426\u6821\u9a8c\u54c8\u5e0c\u3002\u5e38\u7528\u503c\uff1a<code>NO_VERIFICATION</code>\uff08\u8df3\u8fc7\uff09\u3001<code>VERIFY_CHECKSUMS</code>\uff08\u9ed8\u8ba4\uff09\u3001<code>VERIFY_CODES</code>\uff08\u4e25\u683c\u68c0\u67e5\uff09\u3002"},{"location":"datasets/docs/package_reference/builder_classes/#_5","title":"\u5207\u5206\u5b9a\u4e49","text":"\u7c7b / \u51fd\u6570 \u4f5c\u7528 \u8bf4\u660e <code>datasets.SplitGenerator</code> \u5728 <code>_split_generators()</code> \u4e2d\u8fd4\u56de\u7684\u5bf9\u8c61\uff0c\u63cf\u8ff0\u5355\u4e2a\u5207\u5206\u53ca\u5176\u751f\u6210\u53c2\u6570\u3002 \u6307\u5b9a <code>name</code>\uff08\u5982 <code>datasets.Split.TRAIN</code>\uff09\u548c <code>gen_kwargs</code>\u3002 <code>datasets.Split</code> / <code>datasets.NamedSplit</code> / <code>datasets.NamedSplitAll</code> \u9884\u5b9a\u4e49\u6216\u81ea\u5b9a\u4e49\u5207\u5206\u5e38\u91cf\u3002 <code>NamedSplit(\"validation\")</code> \u7528\u4e8e\u989d\u5916\u547d\u540d\u5207\u5206\uff1b<code>NamedSplitAll(\"train+validation\")</code> \u7ec4\u5408\u5207\u5206\u3002 <code>datasets.ReadInstruction</code> \u89e3\u6790\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u5207\u5206\u6307\u4ee4\uff08\u5982 <code>\"train[:10%]\"</code>\uff09\u3002 \u53ef\u5728\u811a\u672c\u4e2d\u624b\u52a8\u6784\u5efa\uff0c\u6216\u5728\u7528\u6237\u8c03\u7528 <code>load_dataset(split=\"train[:10%]\")</code> \u65f6\u81ea\u52a8\u751f\u6210\u3002"},{"location":"datasets/docs/package_reference/builder_classes/#_6","title":"\u7248\u672c\u7ba1\u7406","text":"\u7c7b \u4f5c\u7528 <code>datasets.utils.Version</code> \u5c01\u88c5\u8bed\u4e49\u5316\u7248\u672c\uff0c\u4f8b\u5982 <code>\"1.2.0\"</code>\uff1b\u53ef\u7528\u4e8e\u6bd4\u8f83\u3001\u9012\u589e\uff0c\u5e76\u5728 <code>BuilderConfig</code> \u4e2d\u58f0\u660e\u53d7\u652f\u6301\u7684\u7248\u672c\u8303\u56f4\u3002"},{"location":"datasets/docs/package_reference/loading_methods/","title":"\u52a0\u8f7d\u65b9\u6cd5","text":"<p>\u5217\u51fa\u4e0e\u52a0\u8f7d\u6570\u636e\u96c6\u7684\u76f8\u5173\u65b9\u6cd5\uff0c\u5e76\u7b80\u8981\u8bf4\u660e\u5e38\u7528\u51fd\u6570\u7684\u4f5c\u7528\u4e0e\u53c2\u6570\u3002</p>"},{"location":"datasets/docs/package_reference/loading_methods/#_2","title":"\u6570\u636e\u96c6","text":""},{"location":"datasets/docs/package_reference/loading_methods/#datasetsload_dataset","title":"<code>datasets.load_dataset()</code>","text":"<pre><code>datasets.load_dataset(path, name=None, split=None, **config_kwargs)\n</code></pre> <ul> <li>\u4ece Hugging Face Hub\u3001\u811a\u672c\u6587\u4ef6\u6216\u672c\u5730\u6570\u636e\u52a0\u8f7d\u6807\u51c6 <code>Dataset</code>/<code>DatasetDict</code>\u3002</li> <li><code>path</code>\uff1a\u6570\u636e\u96c6\u811a\u672c\u540d\u79f0\u3001Hub \u4ed3\u5e93 ID \u6216\u672c\u5730\u76ee\u5f55\u8def\u5f84\u3002</li> <li><code>name</code>\uff1a\u53ef\u9009\u914d\u7f6e\u540d\uff0c\u7528\u4e8e\u5305\u542b\u591a\u914d\u7f6e\u7684\u6570\u636e\u96c6\u3002</li> <li><code>split</code>\uff1a\u8fd4\u56de\u5355\u4e2a\u5207\u5206\uff08\u5982 <code>\"train\"</code>\uff09\uff0c\u7559\u7a7a\u5219\u8fd4\u56de\u6240\u6709\u5207\u5206\u7ec4\u6210\u7684 <code>DatasetDict</code>\u3002</li> <li>\u5176\u4f59\u5173\u952e\u5b57\u53c2\u6570\u4f1a\u4f20\u7ed9\u76f8\u5e94\u7684 <code>BuilderConfig</code>\uff0c\u5982 <code>revision</code>\u3001<code>cache_dir</code>\u3001<code>streaming</code> \u7b49\u3002</li> </ul>"},{"location":"datasets/docs/package_reference/loading_methods/#datasetsload_from_disk","title":"<code>datasets.load_from_disk()</code>","text":"<pre><code>datasets.load_from_disk(dataset_path, storage_options=None)\n</code></pre> <ul> <li>\u4ece\u78c1\u76d8\u6062\u590d <code>load_dataset().save_to_disk()</code> \u6216 <code>Dataset.save_to_disk()</code> \u4ea7\u751f\u7684\u7f13\u5b58\u3002</li> <li><code>dataset_path</code> \u6307\u5411\u4fdd\u5b58\u76ee\u5f55\uff1b\u82e5\u76ee\u5f55\u5305\u542b\u591a\u4e2a\u5207\u5206\uff0c\u4f1a\u8fd8\u539f\u4e3a <code>DatasetDict</code>\u3002</li> <li><code>storage_options</code> \u5141\u8bb8\u4f20\u5165\u6587\u4ef6\u7cfb\u7edf\u76f8\u5173\u914d\u7f6e\uff08\u5982\u4f7f\u7528 fsspec \u8bbf\u95ee\u5bf9\u8c61\u5b58\u50a8\uff09\u3002</li> </ul>"},{"location":"datasets/docs/package_reference/loading_methods/#datasetsload_dataset_builder","title":"<code>datasets.load_dataset_builder()</code>","text":"<pre><code>datasets.load_dataset_builder(path, name=None, **builder_kwargs)\n</code></pre> <ul> <li>\u4ec5\u6784\u5efa\u5e76\u8fd4\u56de\u6570\u636e\u96c6\u7684 <code>DatasetBuilder</code> \u5b9e\u4f8b\uff0c\u800c\u4e0d\u7acb\u5373\u4e0b\u8f7d\u6570\u636e\u3002</li> <li>\u9002\u5408\u5728\u5b9e\u9645\u4e0b\u8f7d\u524d\u68c0\u67e5 <code>info.features</code>\u3001<code>info.splits</code> \u7b49\u5143\u6570\u636e\u3002</li> <li>\u652f\u6301\u4e0e <code>load_dataset</code> \u76f8\u540c\u7684 <code>path</code> \u4e0e\u914d\u7f6e\u53c2\u6570\u3002</li> </ul>"},{"location":"datasets/docs/package_reference/loading_methods/#datasetsget_dataset_config_names","title":"<code>datasets.get_dataset_config_names()</code>","text":"<pre><code>datasets.get_dataset_config_names(path, token=None, use_auth_token=None, **download_kwargs)\n</code></pre> <ul> <li>\u5217\u51fa\u6570\u636e\u96c6\u6240\u6709\u53ef\u7528\u914d\u7f6e\uff08\u4f8b\u5982\u8bed\u8a00\u3001\u4efb\u52a1\u5b50\u96c6\u7b49\uff09\u3002</li> <li>Hugging Face Hub \u4e0a\u7684\u79c1\u6709\u6570\u636e\u96c6\u9700\u63d0\u4f9b <code>token</code> \u6216 <code>use_auth_token=True</code>\u3002</li> </ul>"},{"location":"datasets/docs/package_reference/loading_methods/#datasetsget_dataset_infos","title":"<code>datasets.get_dataset_infos()</code>","text":"<pre><code>datasets.get_dataset_infos(path, use_auth_token=None, **download_kwargs)\n</code></pre> <ul> <li>\u8fd4\u56de\u4ee5\u914d\u7f6e\u540d\u4e3a\u952e\u7684 <code>DatasetInfo</code> \u6620\u5c04\uff0c\u5305\u542b\u7279\u5f81\u3001\u8bb8\u53ef\u3001\u63cf\u8ff0\u7b49\u5143\u6570\u636e\u3002</li> <li>\u652f\u6301\u4e0e <code>load_dataset</code> \u4e00\u81f4\u7684\u8ba4\u8bc1\u4e0e\u4e0b\u8f7d\u53c2\u6570\u3002</li> </ul>"},{"location":"datasets/docs/package_reference/loading_methods/#datasetsget_dataset_split_names","title":"<code>datasets.get_dataset_split_names()</code>","text":"<pre><code>datasets.get_dataset_split_names(path, name=None, use_auth_token=None, **download_kwargs)\n</code></pre> <ul> <li>\u83b7\u53d6\u7279\u5b9a\u914d\u7f6e\u4e0b\u53ef\u7528\u7684\u5207\u5206\u540d\u79f0\u5217\u8868\uff08\u5982 <code>\"train\"</code>\u3001<code>\"validation\"</code>\u3001<code>\"test\"</code>\uff09\u3002</li> <li>\u4e0e <code>load_dataset</code> \u76f8\u540c\uff0c\u53ef\u8bbf\u95ee\u8fdc\u7a0b\u6216\u672c\u5730\u811a\u672c\u3002</li> </ul>"},{"location":"datasets/docs/package_reference/loading_methods/#_3","title":"\u6587\u4ef6\u914d\u7f6e","text":"<p>\u4ee5\u4e0b\u914d\u7f6e\u7528\u4e8e\u52a0\u8f7d\u672c\u5730\u6587\u4ef6\u6216\u6570\u636e\u96c6\u4ed3\u5e93\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u672c\u5730\u6587\u4ef6\uff1a<code>load_dataset(\"parquet\", data_dir=\"path/to/data/dir\")</code></li> <li>\u6570\u636e\u96c6\u4ed3\u5e93\uff1a<code>load_dataset(\"allenai/c4\")</code></li> </ul> <p>\u53ef\u901a\u8fc7\u5411 <code>load_dataset</code> \u4f20\u53c2\u63a7\u5236\u52a0\u8f7d\u65b9\u5f0f\uff0c\u4f8b\u5982\u6307\u5b9a <code>sep</code> \u53c2\u6570\u4ee5\u914d\u7f6e [<code>~datasets.packaged_modules.csv.CsvConfig</code>]\uff1a</p> <pre><code>load_dataset(\"csv\", data_dir=\"path/to/data/dir\", sep=\"\\t\")\n</code></pre> \u6570\u636e\u7c7b\u578b \u914d\u7f6e\u7c7b \u52a0\u8f7d\u7c7b \u8bf4\u660e \u6587\u672c <code>datasets.packaged_modules.text.TextConfig</code> <code>datasets.packaged_modules.text.Text</code> \u9010\u884c\u8bfb\u53d6\u6587\u672c\u6587\u4ef6\uff0c\u53ef\u901a\u8fc7 <code>features</code> \u6307\u5b9a\u5217\u7ed3\u6784\u3002 CSV/TSV <code>datasets.packaged_modules.csv.CsvConfig</code> <code>datasets.packaged_modules.csv.Csv</code> \u8bfb\u53d6\u5206\u9694\u7b26\u6587\u672c\uff0c\u652f\u6301 <code>sep</code>\u3001<code>header</code>\u3001<code>quotechar</code> \u7b49\u53c2\u6570\u3002 JSON <code>datasets.packaged_modules.json.JsonConfig</code> <code>datasets.packaged_modules.json.Json</code> \u652f\u6301 JSON Lines \u6216\u5d4c\u5957\u5b57\u6bb5\uff0c\u53ef\u7ed3\u5408 <code>field</code> \u9009\u62e9\u952e\u3002 XML <code>datasets.packaged_modules.xml.XmlConfig</code> <code>datasets.packaged_modules.xml.Xml</code> \u4f7f\u7528 <code>xpath</code>\u3001<code>item_tag</code> \u63d0\u53d6\u8282\u70b9\uff0c\u5e76\u6620\u5c04\u5230\u7279\u5f81\u3002 Parquet <code>datasets.packaged_modules.parquet.ParquetConfig</code> <code>datasets.packaged_modules.parquet.Parquet</code> \u76f4\u63a5\u8bfb\u53d6\u5217\u5f0f\u5b58\u50a8\u7684 Parquet \u6587\u4ef6\u3002 Arrow <code>datasets.packaged_modules.arrow.ArrowConfig</code> <code>datasets.packaged_modules.arrow.Arrow</code> \u52a0\u8f7d Apache Arrow \u6587\u4ef6\uff0c\u4fdd\u6301\u5217\u5f0f\u8868\u793a\u3002 SQL <code>datasets.packaged_modules.sql.SqlConfig</code> <code>datasets.packaged_modules.sql.Sql</code> \u901a\u8fc7 SQL \u67e5\u8be2\u5bfc\u5165\u6570\u636e\u5e93\u8868\uff0c\u9700\u8bbe\u7f6e\u8fde\u63a5\u5b57\u7b26\u4e32\u3002 \u56fe\u50cf\u6587\u4ef6\u5939 <code>datasets.packaged_modules.imagefolder.ImageFolderConfig</code> <code>datasets.packaged_modules.imagefolder.ImageFolder</code> \u904d\u5386\u76ee\u5f55\u6811\u52a0\u8f7d\u56fe\u50cf\uff0c\u81ea\u52a8\u89e3\u6790\u6807\u7b7e\u3002 \u97f3\u9891\u6587\u4ef6\u5939 <code>datasets.packaged_modules.audiofolder.AudioFolderConfig</code> <code>datasets.packaged_modules.audiofolder.AudioFolder</code> \u52a0\u8f7d\u97f3\u9891\u6587\u4ef6\u5e76\u53ef\u5728\u8bfb\u53d6\u65f6\u91cd\u91c7\u6837\u3002 \u89c6\u9891\u6587\u4ef6\u5939 <code>datasets.packaged_modules.videofolder.VideoFolderConfig</code> <code>datasets.packaged_modules.videofolder.VideoFolder</code> \u652f\u6301\u6309\u5e27\u89e3\u7801\u548c\u91c7\u6837\u89c6\u9891\u6587\u4ef6\u3002 HDF5 <code>datasets.packaged_modules.hdf5.HDF5Config</code> <code>datasets.packaged_modules.hdf5.HDF5</code> \u5c06 HDF5 \u6570\u636e\u96c6\u5b57\u6bb5\u6620\u5c04\u5230 Arrow \u7279\u5f81\u3002 PDF <code>datasets.packaged_modules.pdffolder.PdfFolderConfig</code> <code>datasets.packaged_modules.pdffolder.PdfFolder</code> \u5bf9 PDF \u6587\u6863\u6267\u884c OCR/\u6587\u672c\u62bd\u53d6\uff0c\u5e76\u751f\u6210\u9875\u7ea7\u6837\u672c\u3002 WebDataset <code>datasets.packaged_modules.webdataset.WebDataset</code> \u540c\u4e0a \u89e3\u6790 WebDataset \u6253\u5305\u683c\u5f0f\uff0c\u652f\u6301\u6d41\u5f0f\u8bfb\u53d6 tar \u6863\u3002 <p>\u63d0\u793a\uff1a \u4ee5\u4e0a\u7c7b\u5747\u53ef\u901a\u8fc7 <code>load_dataset(&lt;loader_name&gt;, **config_kwargs)</code> \u81ea\u52a8\u5b9e\u4f8b\u5316\uff0c\u65e0\u9700\u624b\u52a8\u5bfc\u5165\u3002</p>"},{"location":"datasets/docs/package_reference/main_classes/","title":"\u6838\u5fc3\u7c7b","text":""},{"location":"datasets/docs/package_reference/main_classes/#datasetinfo","title":"DatasetInfo","text":"<p><code>datasets.DatasetInfo</code> \u4fdd\u5b58\u6570\u636e\u96c6\u7684\u5143\u6570\u636e\uff0c\u4f8b\u5982\u8bb8\u53ef\u534f\u8bae\u3001\u7279\u5f81\u5b57\u5178\u3001\u63cf\u8ff0\u4e0e\u4e0b\u8f7d\u5927\u5c0f\u3002\u5b83\u5728 <code>load_dataset</code> \u65f6\u81ea\u52a8\u6784\u5efa\uff0c\u4e5f\u53ef\u5728\u81ea\u5b9a\u4e49\u6784\u5efa\u5668\u4e2d\u901a\u8fc7 <code>_info()</code> \u624b\u52a8\u586b\u5199\u3002</p> <ul> <li>\u901a\u8fc7 <code>info.features</code> \u83b7\u53d6\u5217\u5b9a\u4e49\u3002</li> <li><code>info.splits</code> \u5217\u51fa\u53ef\u7528\u5207\u5206\u53ca\u6837\u672c\u6570\u3002</li> <li><code>info.push_to_hub()</code> \u53ef\u5c06\u5143\u6570\u636e\u4e0a\u4f20\u81f3 Hub\uff0c\u4e0e\u6570\u636e\u96c6\u811a\u672c\u4e00\u540c\u5206\u4eab\u3002</li> </ul>"},{"location":"datasets/docs/package_reference/main_classes/#dataset","title":"Dataset","text":"<p><code>datasets.Dataset</code> \u662f \ud83e\udd17 Datasets \u7684\u6838\u5fc3\u8868\u683c\u6570\u636e\u7ed3\u6784\uff0c\u57fa\u4e8e Apache Arrow \u5b9e\u73b0\u968f\u673a\u8bbf\u95ee\u4e0e\u96f6\u62f7\u8d1d\u5207\u7247\u3002</p> <p>\u5e38\u7528\u5c5e\u6027</p> <ul> <li><code>dataset.num_rows</code> / <code>num_columns</code> / <code>column_names</code></li> <li><code>dataset.features</code>\uff1a\u5217\u7c7b\u578b\u63cf\u8ff0\u3002</li> <li><code>dataset.cache_files</code>\uff1a\u7f13\u5b58\u6587\u4ef6\u5217\u8868\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u3002</li> </ul> <p>\u6570\u636e\u64cd\u4f5c</p> <ul> <li>\u8f6c\u6362\u4e0e\u6620\u5c04\uff1a<code>map()</code>\u3001<code>filter()</code>\u3001<code>shuffle()</code>\u3001<code>select()</code>\u3001<code>train_test_split()</code>\u3002</li> <li>\u5217\u64cd\u4f5c\uff1a<code>add_column()</code>\u3001<code>remove_columns()</code>\u3001<code>rename_column()</code>\u3001<code>cast_column()</code>\u3002</li> <li>\u5bfc\u51fa\uff1a<code>to_pandas()</code>\u3001<code>to_dict()</code>\u3001<code>to_parquet()</code>\u3001<code>to_json()</code>\u3001<code>save_to_disk()</code>\u3001<code>push_to_hub()</code>\u3002</li> <li>\u9ad8\u7ea7\u68c0\u7d22\uff1a<code>add_faiss_index()</code>\u3001<code>search()</code>\u3001<code>get_nearest_examples()</code>\u3002</li> </ul> <p>\u521b\u5efa\u65b9\u5f0f</p> <ul> <li><code>Dataset.from_dict()</code> / <code>from_pandas()</code> / <code>from_generator()</code> / <code>from_file()</code> \u7b49\u5de5\u5382\u51fd\u6570\u3002</li> <li><code>Dataset.to_iterable_dataset()</code> \u53ef\u8f6c\u4e3a\u6d41\u5f0f\u6570\u636e\u96c6\u3002</li> </ul>"},{"location":"datasets/docs/package_reference/main_classes/#datasetdict","title":"DatasetDict","text":"<p><code>datasets.DatasetDict</code> \u662f\u4ee5\u5207\u5206\u540d\u79f0\u4e3a\u952e\u3001<code>Dataset</code> \u4e3a\u503c\u7684\u5bb9\u5668\u3002\u5e38\u89c1\u7279\u6027\uff1a</p> <ul> <li>\u50cf\u64cd\u4f5c\u5b57\u5178\u4e00\u6837\u8bbf\u95ee\uff1a<code>ds[\"train\"]</code>\u3002</li> <li>\u652f\u6301\u6279\u91cf\u64cd\u4f5c\uff1a<code>ds.map(fn)</code> \u4f1a\u5bf9\u6240\u6709\u5207\u5206\u6267\u884c\u540c\u4e00\u51fd\u6570\u3002</li> <li><code>DatasetDict.save_to_disk()</code> \u4e0e <code>push_to_hub()</code> \u7528\u4e8e\u6574\u4f53\u4fdd\u5b58\u6216\u5206\u4eab\u3002</li> </ul>"},{"location":"datasets/docs/package_reference/main_classes/#iterabledataset","title":"IterableDataset","text":"<p><code>datasets.IterableDataset</code> \u901a\u8fc7\u751f\u6210\u5668\u6309\u9700\u8bfb\u53d6\u6570\u636e\uff0c\u9002\u5408\u8d85\u5927\u6216\u6d41\u5f0f\u6570\u636e\u6e90\u3002\u652f\u6301 <code>map()</code>\u3001<code>filter()</code>\u3001<code>shuffle()</code>\u3001<code>take()</code>\u3001<code>skip()</code> \u7b49\u60f0\u6027\u64cd\u4f5c\uff0c\u5e76\u53ef\u901a\u8fc7 <code>set_format()</code> \u63a7\u5236\u8f93\u51fa\u7c7b\u578b\u3002</p>"},{"location":"datasets/docs/package_reference/main_classes/#_2","title":"\u7ec4\u5408\u4e0e\u5206\u5e03\u5f0f\u5de5\u5177","text":"\u51fd\u6570 \u4f5c\u7528 <code>datasets.concatenate_datasets(datasets_list)</code> \u6cbf\u6837\u672c\u7ef4\u5ea6\u62fc\u63a5\u591a\u4e2a <code>Dataset</code>\uff0c\u9700\u8981\u5217\u7ed3\u6784\u4e00\u81f4\u3002 <code>datasets.interleave_datasets(datasets_list, probabilities=None, seed=None)</code> \u4ea4\u9519\u5408\u5e76\u591a\u4e2a\u6570\u636e\u96c6\uff0c\u5e38\u7528\u4e8e\u591a\u4efb\u52a1\u8bad\u7ec3\u6216\u6570\u636e\u96c6\u5e73\u8861\u3002 <code>datasets.distributed.split_dataset_by_node(dataset, rank=None, world_size=None)</code> \u5728\u5206\u5e03\u5f0f\u8bad\u7ec3\u4e2d\u6309\u8282\u70b9\u62c6\u5206\u6570\u636e\uff0c\u907f\u514d\u91cd\u590d\u8bfb\u53d6\u3002"},{"location":"datasets/docs/package_reference/main_classes/#_3","title":"\u7f13\u5b58\u63a7\u5236","text":"\u51fd\u6570 \u8bf4\u660e <code>datasets.enable_caching()</code> / <code>datasets.disable_caching()</code> \u5168\u5c40\u542f\u7528\u6216\u7981\u7528\u7f13\u5b58\u6587\u4ef6\u7684\u521b\u5efa\u3002 <code>datasets.is_caching_enabled()</code> \u8fd4\u56de\u5e03\u5c14\u503c\uff0c\u6307\u793a\u5f53\u524d\u7f13\u5b58\u7b56\u7565\u3002"},{"location":"datasets/docs/package_reference/main_classes/#column","title":"Column","text":"<p><code>datasets.Column</code> \u8868\u793a\u6570\u636e\u96c6\u4e2d\u7684\u5355\u5217\uff0c\u5c01\u88c5\u7279\u5f81\u7c7b\u578b\u4e0e\u5e95\u5c42 Arrow \u6570\u7ec4\u3002\u901a\u5e38\u901a\u8fc7 <code>dataset[\"text\"]</code> \u83b7\u53d6\u539f\u59cb\u5217\u8868\uff0c\u800c <code>dataset.column(\"text\")</code> \u5219\u8fd4\u56de <code>Column</code> \u5bf9\u8c61\uff0c\u4fbf\u4e8e\u67e5\u8be2\u5217\u5143\u6570\u636e\u6216\u6267\u884c Arrow \u7ea7\u522b\u64cd\u4f5c\u3002</p>"},{"location":"datasets/docs/package_reference/table_classes/","title":"\u8868\u683c\u7c7b","text":"<p>\ud83e\udd17 Datasets \u4f9d\u8d56 PyArrow \u63d0\u4f9b\u7684\u5217\u5f0f\u5b58\u50a8\u3002\u4ee5\u4e0b\u7ed3\u6784\u4f4d\u4e8e <code>datasets.table</code> \u6a21\u5757\u4e2d\uff0c\u4e00\u822c\u65e0\u9700\u76f4\u63a5\u5b9e\u4f8b\u5316\uff0c\u4f46\u4e86\u89e3\u5176\u5dee\u5f02\u6709\u52a9\u4e8e\u4f18\u5316\u6027\u80fd\u3002</p> \u7c7b \u5b58\u50a8\u65b9\u5f0f \u9002\u7528\u573a\u666f \u5173\u952e\u80fd\u529b <code>datasets.table.Table</code> \u62bd\u8c61\u57fa\u7c7b\uff0c\u5305\u88c5\u4efb\u610f Arrow <code>Table</code>\u3002 \u4f5c\u4e3a\u7edf\u4e00\u63a5\u53e3\u88ab <code>Dataset</code> \u6301\u6709\u3002 \u63d0\u4f9b <code>to_pandas()</code>\u3001<code>to_batches()</code>\u3001<code>schema</code> \u7b49\u8bfb\u5199\u65b9\u6cd5\u3002 <code>datasets.table.InMemoryTable</code> \u5c06\u6570\u636e\u5b8c\u5168\u52a0\u8f7d\u5230\u5185\u5b58\u3002 \u5c0f\u81f3\u4e2d\u7b49\u89c4\u6a21\u6570\u636e\u96c6\u3001\u9891\u7e41\u968f\u673a\u8bbf\u95ee\u3002 \u652f\u6301\u5207\u7247\u3001\u5217\u64cd\u4f5c\uff08\u6dfb\u52a0/\u5220\u9664/\u91cd\u547d\u540d\uff09\u3001<code>from_pandas()</code> \u7b49\u6784\u9020\u51fd\u6570\u3002 <code>datasets.table.MemoryMappedTable</code> \u57fa\u4e8e\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u6309\u9700\u52a0\u8f7d\u3002 \u5904\u7406\u8d85\u8fc7\u5185\u5b58\u4e0a\u9650\u7684\u8d85\u5927\u6570\u636e\u96c6\u3002 \u4fdd\u6301\u4e0e <code>InMemoryTable</code> \u7c7b\u4f3c\u7684\u5217\u64cd\u4f5c\uff0c\u540c\u65f6\u907f\u514d\u5168\u91cf\u8f7d\u5165\u3002 <code>datasets.table.ConcatenationTable</code> \u5c06\u591a\u4e2a\u5757\u89c6\u4e3a\u5355\u4e2a\u903b\u8f91\u8868\u3002 \u8bfb\u53d6\u5206\u5757\u4e0b\u8f7d\u7684\u6570\u636e\u6216\u589e\u91cf\u8ffd\u52a0\u6837\u672c\u3002 \u5728\u4e0d\u590d\u5236\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u62fc\u63a5\u591a\u4e2a Arrow \u8868\u3002"},{"location":"datasets/docs/package_reference/table_classes/#_2","title":"\u5e38\u7528\u8f85\u52a9\u51fd\u6570","text":"<ul> <li><code>datasets.table.concat_tables(tables)</code>\uff1a\u6cbf\u5217\u4e00\u81f4\u7684\u60c5\u51b5\u4e0b\u62fc\u63a5\u591a\u4e2a Arrow \u8868\u3002</li> <li><code>datasets.table.list_table_cache_files(table)</code>\uff1a\u5217\u51fa\u5e95\u5c42\u7f13\u5b58\u6587\u4ef6\u8def\u5f84\uff0c\u4fbf\u4e8e\u8bca\u65ad\u78c1\u76d8\u5360\u7528\u3002</li> </ul>"},{"location":"datasets/docs/package_reference/utilities/","title":"\u5b9e\u7528\u5de5\u5177","text":""},{"location":"datasets/docs/package_reference/utilities/#_2","title":"\u914d\u7f6e\u65e5\u5fd7","text":"<p>\ud83e\udd17 Datasets \u81f4\u529b\u4e8e\u900f\u660e\u8fd0\u884c\uff0c\u4f46\u6709\u65f6\u8f93\u51fa\u4f1a\u8f83\u591a\u3002\u53ef\u4ee5\u4f7f\u7528\u65e5\u5fd7\u5de5\u5177\u8c03\u6574\u5e93\u7684\u8be6\u7ec6\u7a0b\u5ea6\u3002\u9ed8\u8ba4\u7ea7\u522b\u4e3a <code>WARNING</code>\u3002</p> <p>\u4f8b\u5982\uff0c\u5c06\u65e5\u5fd7\u7ea7\u522b\u6539\u4e3a <code>INFO</code>\uff1a</p> <pre><code>import datasets\ndatasets.logging.set_verbosity_info()\n</code></pre> <p>\u4e5f\u53ef\u901a\u8fc7\u73af\u5883\u53d8\u91cf <code>DATASETS_VERBOSITY</code> \u8986\u76d6\u9ed8\u8ba4\u7ea7\u522b\uff0c\u53ef\u9009\u503c\u5305\u62ec <code>debug</code>\u3001<code>info</code>\u3001<code>warning</code>\u3001<code>error</code>\u3001<code>critical</code>\uff1a</p> <pre><code>DATASETS_VERBOSITY=error ./myprogram.py\n</code></pre> <p>\u5e38\u7528\u65b9\u6cd5\uff1a</p> <ul> <li>[<code>logging.get_verbosity</code>]\uff1a\u83b7\u53d6\u5f53\u524d\u65e5\u5fd7\u7ea7\u522b\u3002</li> <li>[<code>logging.set_verbosity</code>]\uff1a\u8bbe\u7f6e\u65e5\u5fd7\u7ea7\u522b\u3002</li> </ul> <p>\u65e5\u5fd7\u7ea7\u522b\u7531\u4f4e\u5230\u9ad8\uff08\u53ca\u5176\u6574\u6570\u503c\uff09\uff1a</p> <ol> <li><code>logging.CRITICAL</code>/<code>logging.FATAL</code>\uff0850\uff09\uff1a\u4ec5\u62a5\u544a\u81f4\u547d\u9519\u8bef\u3002</li> <li><code>logging.ERROR</code>\uff0840\uff09\uff1a\u4ec5\u62a5\u544a\u9519\u8bef\u3002</li> <li><code>logging.WARNING</code>/<code>logging.WARN</code>\uff0830\uff09\uff1a\u62a5\u544a\u9519\u8bef\u4e0e\u8b66\u544a\uff08\u9ed8\u8ba4\uff09\u3002</li> <li><code>logging.INFO</code>\uff0820\uff09\uff1a\u62a5\u544a\u9519\u8bef\u3001\u8b66\u544a\u4e0e\u57fa\u672c\u4fe1\u606f\u3002</li> <li><code>logging.DEBUG</code>\uff0810\uff09\uff1a\u8f93\u51fa\u5168\u90e8\u4fe1\u606f\u3002</li> </ol> \u51fd\u6570 \u8bf4\u660e \u5e38\u7528\u573a\u666f <code>datasets.logging.get_verbosity()</code> \u8fd4\u56de\u5f53\u524d\u5168\u5c40\u65e5\u5fd7\u7ea7\u522b\uff08<code>logging</code> \u5e38\u91cf\uff09\u3002 \u5728\u8c03\u6574\u7ea7\u522b\u524d\u5148\u8bfb\u53d6\u73b0\u6709\u8bbe\u7f6e\uff0c\u6216\u7f16\u5199\u8c03\u8bd5\u8f93\u51fa\u3002 <code>datasets.logging.set_verbosity(level)</code> \u5c06\u5168\u5c40\u65e5\u5fd7\u7ea7\u522b\u8bbe\u7f6e\u4e3a <code>logging.DEBUG/INFO/...</code>\u3002 \u5728\u811a\u672c\u5f00\u59cb\u65f6\u7edf\u4e00\u63a7\u5236\u8f93\u51fa\u91cf\u3002 <code>datasets.logging.set_verbosity_info()</code><code>set_verbosity_warning()</code><code>set_verbosity_debug()</code><code>set_verbosity_error()</code> \u9884\u8bbe\u7684\u4fbf\u6377\u51fd\u6570\uff0c\u5206\u522b\u5c06\u7ea7\u522b\u8bbe\u4e3a <code>INFO</code>\u3001<code>WARNING</code>\u3001<code>DEBUG</code>\u3001<code>ERROR</code>\u3002 \u76f4\u63a5\u8c03\u7528\u8bed\u4e49\u5316\u51fd\u6570\uff0c\u907f\u514d\u8bb0\u5fc6\u6574\u6570\u7ea7\u522b\u3002 <code>datasets.logging.disable_propagation()</code> / <code>enable_propagation()</code> \u63a7\u5236 \ud83e\udd17 Datasets \u65e5\u5fd7\u662f\u5426\u5411\u7236\u8bb0\u5f55\u5668\u4f20\u64ad\u3002 \u5d4c\u5165\u5728\u5305\u542b\u81ea\u5b9a\u4e49\u65e5\u5fd7\u914d\u7f6e\u7684\u5e94\u7528\u4e2d\uff0c\u907f\u514d\u91cd\u590d\u65e5\u5fd7\u3002"},{"location":"datasets/docs/package_reference/utilities/#_3","title":"\u914d\u7f6e\u8fdb\u5ea6\u6761","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u4e0b\u8f7d\u4e0e\u9884\u5904\u7406\u8fc7\u7a0b\u4e2d\u4f1a\u663e\u793a <code>tqdm</code> \u8fdb\u5ea6\u6761\u3002\u53ef\u901a\u8fc7\u73af\u5883\u53d8\u91cf <code>HF_DATASETS_DISABLE_PROGRESS_BARS</code> \u5168\u5c40\u5173\u95ed\uff1b\u4e5f\u53ef\u4ee5\u8c03\u7528 [<code>~utils.enable_progress_bars</code>] \u4e0e [<code>~utils.disable_progress_bars</code>] \u63a7\u5236\u3002\u82e5\u73af\u5883\u53d8\u91cf\u5df2\u8bbe\u7f6e\uff0c\u5c06\u4f18\u5148\u751f\u6548\u3002</p> \u51fd\u6570 \u8bf4\u660e <code>datasets.utils.enable_progress_bars()</code> \u5728\u5f53\u524d Python \u8fdb\u7a0b\u4e2d\u542f\u7528\u8fdb\u5ea6\u6761\u663e\u793a\u3002 <code>datasets.utils.disable_progress_bars()</code> \u5728\u5f53\u524d\u8fdb\u7a0b\u4e2d\u7981\u7528\u8fdb\u5ea6\u6761\uff1b\u4f18\u5148\u7ea7\u4f4e\u4e8e\u73af\u5883\u53d8\u91cf\u3002 <code>datasets.utils.are_progress_bars_disabled()</code> \u8fd4\u56de\u5e03\u5c14\u503c\uff0c\u6307\u793a\u8fdb\u5ea6\u6761\u662f\u5426\u5df2\u88ab\u5168\u5c40\u7981\u7528\u3002"},{"location":"megatron/","title":"Megatron-LM \u4e0e Megatron Core","text":"<p>\u7528\u4e8e\u5927\u89c4\u6a21\u8bad\u7ec3 Transformer \u6a21\u578b\u7684 GPU \u4f18\u5316\u5e93\u3002</p> <p> </p>"},{"location":"megatron/#_1","title":"\u5feb\u901f\u4e0a\u624b","text":"<pre><code># \u5b89\u88c5 Megatron Core \u53ca\u4f9d\u8d56\npip install --no-build-isolation megatron-core[mlm,dev]\n\n# \u514b\u9686\u793a\u4f8b\u4ed3\u5e93\ngit clone https://github.com/NVIDIA/Megatron-LM.git\ncd Megatron-LM\npip install --no-build-isolation .[mlm,dev]\n</code></pre> <p>\u66f4\u591a\u5b89\u88c5\u65b9\u5f0f\uff08Docker\u3001pip dev/lts\u3001\u6e90\u7801\u5b89\u88c5\u4e0e\u7cfb\u7edf\u9700\u6c42\uff09\u8bf7\u53c2\u9605 \u5b8c\u6574\u5b89\u88c5\u6307\u5357\u3002</p>"},{"location":"megatron/#_2","title":"\u6700\u65b0\u52a8\u6001","text":"<ul> <li>\u65b0\u53d1\u5e03\uff1aMegatron Dev Branch \u2014\u2014 \u4f53\u9a8c\u5c1a\u5728\u5b9e\u9a8c\u9636\u6bb5\u7684\u65b0\u7279\u6027\u3002</li> <li>\u66f4\u65b0\uff1aMegatron Bridge \u2014\u2014 \u63d0\u4f9b Hugging Face \u4e0e Megatron \u68c0\u67e5\u70b9\u4e92\u8f6c\u5de5\u5177\u53ca\u70ed\u95e8\u6a21\u578b\u914d\u65b9\u3002</li> <li>[2025/08] MoE Q3-Q4 2025 Roadmap \u2014\u2014 \u6db5\u76d6 DeepSeek-V3\u3001Qwen3\u3001\u9ad8\u7ea7\u5e76\u884c\u7b56\u7565\u3001FP8 \u4f18\u5316\u4e0e Blackwell \u589e\u5f3a\u3002</li> <li>[2025/08] GPT-OSS Model \u2014\u2014 \u6b63\u5728\u96c6\u6210 YaRN RoPE \u7f29\u653e\u3001\u6ce8\u610f\u529b sink\u3001\u81ea\u5b9a\u4e49\u6fc0\u6d3b\u7b49\u9ad8\u7ea7\u7279\u6027\u81f3 Megatron Core\u3002</li> <li>[2025/06] Megatron MoE Model Zoo \u2014\u2014 \u6c47\u603b DeepSeek-V3\u3001Mixtral\u3001Qwen3 MoE \u6a21\u578b\u7684\u5b9e\u8df5\u3001\u6027\u80fd\u4e0e\u68c0\u67e5\u70b9\u8f6c\u6362\u3002</li> <li>[2025/05] Megatron Core v0.11.0 \u4e3a\u8de8\u6570\u636e\u4e2d\u5fc3\u7684 LLM \u8bad\u7ec3\u5e26\u6765\u65b0\u80fd\u529b\uff08\u535a\u5ba2\uff09\u3002</li> </ul> <p>\u5386\u53f2\u66f4\u65b0\u53ef\u5728\u4ed3\u5e93 Issues \u4e0e\u535a\u5ba2\u4e2d\u67e5\u8be2\u3002</p>"},{"location":"megatron/#megatron","title":"Megatron \u6982\u89c8","text":""},{"location":"megatron/#_3","title":"\u9879\u76ee\u7ed3\u6784","text":"<pre><code>Megatron-LM/\n\u251c\u2500\u2500 megatron/                    \n\u2502   \u251c\u2500\u2500 core/                    # Megatron Core (kernels, parallelism, building blocks)\n\u2502   \u2502   \u251c\u2500\u2500 models/              # Transformer models\n\u2502   \u2502   \u251c\u2500\u2500 transformer/         # Transformer building blocks\n\u2502   \u2502   \u251c\u2500\u2500 tensor_parallel/     # Tensor parallelism\n\u2502   \u2502   \u251c\u2500\u2500 pipeline_parallel/   # Pipeline parallelism\n\u2502   \u2502   \u251c\u2500\u2500 distributed/         # Distributed training (FSDP, DDP)\n\u2502   \u2502   \u251c\u2500\u2500 optimizer/           # Optimizers\n\u2502   \u2502   \u251c\u2500\u2500 datasets/            # Dataset loaders\n\u2502   \u2502   \u251c\u2500\u2500 inference/           # Inference engines\n\u2502   \u2502   \u2514\u2500\u2500 export/              # Model export (e.g. TensorRT-LLM)\n\u2502   \u251c\u2500\u2500 training/                # Training scripts\n\u2502   \u251c\u2500\u2500 inference/               # Inference server\n\u2502   \u251c\u2500\u2500 legacy/                  # Legacy components\n\u2502   \u2514\u2500\u2500 post_training/           # Post-training (RLHF, etc.)\n\u251c\u2500\u2500 examples/                    # Ready-to-use training examples\n\u251c\u2500\u2500 tools/                       # Utility tools\n\u251c\u2500\u2500 tests/                       # Comprehensive test suite\n\u2514\u2500\u2500 docs/                        # Documentation\n</code></pre>"},{"location":"megatron/#megatron-lm","title":"Megatron-LM\uff1a\u53c2\u8003\u5b9e\u73b0","text":"<p>\u53c2\u8003\u5b9e\u73b0\uff0c\u5305\u542b Megatron Core \u4ee5\u53ca\u8bad\u7ec3\u6a21\u578b\u6240\u9700\u7684\u4e00\u5207\u3002</p> <p>\u6700\u9002\u5408\uff1a</p> <ul> <li>\u5728\u6700\u65b0 NVIDIA \u786c\u4ef6\u4e0a \u8fdb\u884c\u5177\u5907\u524d\u6cbf\u6027\u80fd\u7684\u8d85\u5927\u89c4\u6a21\u57fa\u7840\u6a21\u578b\u8bad\u7ec3</li> <li>\u7814\u7a76\u56e2\u961f \u63a2\u7d22\u65b0\u67b6\u6784\u4e0e\u8bad\u7ec3\u6280\u5de7</li> <li>\u5b66\u4e60\u5206\u5e03\u5f0f\u8bad\u7ec3 \u6982\u5ff5\u4e0e\u6700\u4f73\u5b9e\u8df5</li> <li>\u5feb\u901f\u5b9e\u9a8c \u5e76\u590d\u73b0\u6210\u719f\u7684\u6a21\u578b\u914d\u7f6e</li> </ul> <p>\u53ef\u83b7\u5f97\uff1a</p> <ul> <li>\u9488\u5bf9 GPT\u3001LLaMA\u3001DeepSeek\u3001Qwen \u7b49\u6a21\u578b\u7684\u9884\u914d\u7f6e\u8bad\u7ec3\u811a\u672c</li> <li>\u4ece\u6570\u636e\u51c6\u5907\u5230\u8bc4\u4f30\u7684\u7aef\u5230\u7aef\u793a\u4f8b</li> <li>\u9762\u5411\u7814\u7a76\u7684\u5de5\u5177\u4e0e\u5b9e\u7528\u7ec4\u4ef6</li> </ul>"},{"location":"megatron/#megatron-core","title":"Megatron Core\uff1a\u53ef\u7ec4\u5408\u5e93","text":"<p>\u53ef\u7ec4\u5408\u5e93\uff0c\u63d0\u4f9b GPU \u4f18\u5316\u7684\u6784\u5efa\u6a21\u5757\uff0c\u652f\u6301\u81ea\u5b9a\u4e49\u8bad\u7ec3\u6846\u67b6\u3002</p> <p>\u6700\u9002\u5408\uff1a</p> <ul> <li>\u6846\u67b6\u5f00\u53d1\u8005 \u57fa\u4e8e\u6a21\u5757\u5316\u3001\u9ad8\u5ea6\u4f18\u5316\u7684\u7ec4\u4ef6\u8fdb\u884c\u6269\u5c55</li> <li>\u7814\u7a76\u56e2\u961f \u81ea\u5b9a\u4e49\u8bad\u7ec3\u5faa\u73af\u3001\u4f18\u5316\u5668\u6216\u6570\u636e\u7ba1\u7ebf</li> <li>\u673a\u5668\u5b66\u4e60\u5de5\u7a0b\u5e08 \u6784\u5efa\u5177\u5907\u5bb9\u9519\u80fd\u529b\u7684\u8bad\u7ec3\u6d41\u6c34\u7ebf</li> </ul> <p>\u53ef\u83b7\u5f97\uff1a</p> <ul> <li>\u53ef\u7ec4\u5408\u7684 Transformer \u57fa\u7840\u7ec4\u4ef6\uff08\u6ce8\u610f\u529b\u3001MLP \u7b49\uff09</li> <li>\u9ad8\u7ea7\u5e76\u884c\u7b56\u7565\uff08TP\u3001PP\u3001DP\u3001EP\u3001CP\uff09</li> <li>\u6d41\u6c34\u7ebf\u8c03\u5ea6\u4e0e\u5206\u5e03\u5f0f\u4f18\u5316\u5668</li> <li>\u6df7\u5408\u7cbe\u5ea6\u652f\u6301\uff08FP16\u3001BF16\u3001FP8\uff09</li> <li>GPU \u4f18\u5316\u5185\u6838\u4e0e\u5185\u5b58\u7ba1\u7406</li> <li>\u9ad8\u6027\u80fd\u6570\u636e\u52a0\u8f7d\u4e0e\u6570\u636e\u96c6\u5de5\u5177</li> <li>\u591a\u79cd\u6a21\u578b\u67b6\u6784\uff08LLaMA\u3001Qwen\u3001GPT\u3001Mixtral\u3001Mamba \u7b49\uff09</li> </ul>"},{"location":"megatron/#_4","title":"\u751f\u6001\u7cfb\u7edf\u5e93","text":"<p>Megatron Core \u6240\u4f9d\u8d56\u7684\u5e93\uff1a</p> <ul> <li>Megatron Energon \u65b0\u53d1\u5e03 - \u652f\u6301\u6587\u672c\u3001\u56fe\u50cf\u3001\u89c6\u9891\u3001\u97f3\u9891\u7684\u591a\u6a21\u6001\u6570\u636e\u52a0\u8f7d\u5668\uff0c\u63d0\u4f9b\u5206\u5e03\u5f0f\u52a0\u8f7d\u4e0e\u6570\u636e\u96c6\u6df7\u5408</li> <li>Transformer Engine - \u4f18\u5316\u7b97\u5b50\u4e0e FP8 \u6df7\u5408\u7cbe\u5ea6\u652f\u6301</li> <li>Resiliency Extension (NVRx) - \u5e26\u6545\u969c\u68c0\u6d4b\u4e0e\u6062\u590d\u7684\u5bb9\u9519\u8bad\u7ec3</li> </ul> <p>\u57fa\u4e8e Megatron Core \u7684\u5e93\uff1a</p> <ul> <li>Megatron Bridge - \u8bad\u7ec3\u5e93\uff0c\u63d0\u4f9b Hugging Face \u4e0e Megatron \u68c0\u67e5\u70b9\u53cc\u5411\u8f6c\u6362\u3001\u7075\u6d3b\u8bad\u7ec3\u5faa\u73af\u4e0e\u751f\u4ea7\u7ea7\u914d\u65b9</li> <li>NeMo RL - \u53ef\u6269\u5c55\u7684\u5f3a\u5316\u5b66\u4e60\u5de5\u5177\u5305\uff0c\u652f\u6301 RLHF\u3001DPO \u7b49\u8bad\u7ec3\u540e\u65b9\u6cd5</li> <li>NeMo Framework - \u9762\u5411\u4f01\u4e1a\u7684\u6846\u67b6\uff0c\u5177\u5907\u4e91\u539f\u751f\u652f\u6301\u4e0e\u7aef\u5230\u7aef\u793a\u4f8b</li> <li>TensorRT Model Optimizer (ModelOpt) - \u7528\u4e8e\u91cf\u5316\u3001\u526a\u679d\u3001\u84b8\u998f\u7684\u6a21\u578b\u4f18\u5316\u5de5\u5177\u5305</li> </ul> <p>\u517c\u5bb9\u751f\u6001\uff1a Hugging Face Accelerate\u3001Colossal-AI\u3001DeepSpeed</p>"},{"location":"megatron/#_5","title":"\u5b89\u88c5","text":""},{"location":"megatron/#docker","title":"Docker\uff08\u63a8\u8350\uff09","text":"<p>\u5efa\u8bae\u4f18\u5148\u4f7f\u7528 PyTorch NGC Container \u7684\u4e0a\u4e00\u7248\u672c\uff0c\u4ee5\u786e\u4fdd\u4e0e Megatron Core \u7684\u7248\u672c\u4e0e\u6d4b\u8bd5\u5339\u914d\u3002\u6211\u4eec\u7684\u53d1\u5e03\u59cb\u7ec8\u57fa\u4e8e\u524d\u4e00\u4e2a\u6708\u7684 NGC \u5bb9\u5668\uff0c\u4ee5\u4fdd\u8bc1\u517c\u5bb9\u6027\u4e0e\u7a33\u5b9a\u6027\u3002</p> <p>\u6ce8\u610f\uff1a NGC PyTorch \u5bb9\u5668\u901a\u8fc7 <code>PIP_CONSTRAINT</code> \u5168\u5c40\u7ea6\u675f Python \u73af\u5883\u3002\u4ee5\u4e0b\u793a\u4f8b\u4f1a\u89e3\u9664\u8be5\u53d8\u91cf\u3002</p> <p>\u6b64\u5bb9\u5668\u9884\u88c5\u4e86\u6240\u6709\u517c\u5bb9\u7248\u672c\u7684\u4f9d\u8d56\uff0c\u5e76\u5bf9 NVIDIA GPU \u8fdb\u884c\u4e86\u4f18\u5316\u914d\u7f6e\uff1a</p> <ul> <li>PyTorch\uff08\u6700\u65b0\u7a33\u5b9a\u7248\uff09</li> <li>CUDA\u3001cuDNN\u3001NCCL\uff08\u6700\u65b0\u7a33\u5b9a\u7248\uff09</li> <li>\u5bf9 NVIDIA Hopper\u3001Ada\u3001Blackwell GPU \u7684 FP8 \u652f\u6301</li> <li>\u4e3a\u83b7\u5f97\u6700\u4f73\u6027\u80fd\uff0c\u63a8\u8350\u4f7f\u7528 NVIDIA Turing \u53ca\u66f4\u65b0\u67b6\u6784</li> </ul> <pre><code># Launch container with mounted directories\ndocker run --runtime --nvidia --gpus all -it --rm \\\n  -v /path/to/megatron:/workspace/megatron \\\n  -v /path/to/dataset:/workspace/dataset \\\n  -v /path/to/checkpoints:/workspace/checkpoints \\\n  -e PIP_CONSTRAINT= \\\n  nvcr.io/nvidia/pytorch:25.04-py3\n</code></pre>"},{"location":"megatron/#pip","title":"pip \u5b89\u88c5","text":"<p>Megatron Core \u652f\u6301\u4e24\u4e2a NGC PyTorch \u5bb9\u5668\uff1a</p> <ul> <li><code>dev</code>\uff1a\u7d27\u8ddf\u4e0a\u6e38\u4f9d\u8d56\u7684\u6700\u65b0\u7248\u672c</li> <li><code>lts</code>\uff1a\u9488\u5bf9 NGC PyTorch 24.01 \u7684\u957f\u671f\u652f\u6301</li> </ul> <p>\u4e24\u4e2a\u5bb9\u5668\u90fd\u53ef\u4ee5\u4e0e <code>mlm</code> \u914d\u5408\uff0c\u4ee5\u4fbf\u5728 Megatron Core \u57fa\u7840\u4e0a\u8865\u5145 Megatron-LM \u7684\u4f9d\u8d56\u3002</p> <pre><code># Install the latest release dependencies\npip install \"setuptools&lt;80.0.0,&gt;=77.0.0\" \"packaging&gt;=24.2\"\npip install --no-build-isolation megatron-core[dev]\n# Optional: Add Megatron-LM dependencies\npip install \"setuptools&lt;80.0.0,&gt;=77.0.0\" \"packaging&gt;=24.2\"\npip install --no-build-isolation megatron-core[mlm,dev]\n</code></pre> <pre><code># Install packages for NGC PyTorch 24.01 LTS support\npip install \"setuptools&lt;80.0.0,&gt;=77.0.0\" \"packaging&gt;=24.2\"\npip install --no-build-isolation megatron-core[lts]\n# Optional: Add Megatron-LM dependencies\npip install \"setuptools&lt;80.0.0,&gt;=77.0.0\" \"packaging&gt;=24.2\"\npip install --no-build-isolation megatron-core[mlm,lts]\n</code></pre> <p>\u82e5\u4ec5\u9700\u5305\u542b torch \u7684 Megatron Core\uff0c\u53ef\u6267\u884c\uff1a</p> <pre><code>pip install megatron-core\n</code></pre>"},{"location":"megatron/#_6","title":"\u7cfb\u7edf\u9700\u6c42","text":""},{"location":"megatron/#_7","title":"\u786c\u4ef6\u9700\u6c42","text":"<ul> <li>FP8 \u652f\u6301\uff1aNVIDIA Hopper\u3001Ada\u3001Blackwell GPU</li> <li>\u63a8\u8350\uff1aNVIDIA Turing \u67b6\u6784\u6216\u66f4\u65b0\u4ea7\u54c1</li> </ul>"},{"location":"megatron/#_8","title":"\u8f6f\u4ef6\u9700\u6c42","text":"<ul> <li>CUDA/cuDNN/NCCL\uff1a\u6700\u65b0\u7a33\u5b9a\u7248</li> <li>PyTorch\uff1a\u6700\u65b0\u7a33\u5b9a\u7248</li> <li>Transformer Engine\uff1a\u6700\u65b0\u7a33\u5b9a\u7248</li> <li>Python\uff1a\u63a8\u8350 3.12</li> </ul>"},{"location":"megatron/#_9","title":"\u6027\u80fd\u57fa\u51c6","text":"<p>\u6700\u65b0\u6027\u80fd\u57fa\u51c6\u8be6\u89c1 NVIDIA NeMo Framework Performance Summary\u3002</p> <p>\u6211\u4eec\u7684\u4ee3\u7801\u5e93\u53ef\u5728\u6570\u5343\u5757 GPU \u4e0a\u9ad8\u6548\u8bad\u7ec3 20 \u4ebf\u5230 4620 \u4ebf\u53c2\u6570\u7684\u6a21\u578b\uff0c\u5728 H100 \u96c6\u7fa4\u4e0a\u5b9e\u73b0\u6700\u9ad8 47% Model FLOP Utilization (MFU)\u3002</p> <p></p> <p>\u57fa\u51c6\u914d\u7f6e\uff1a</p> <ul> <li>\u8bcd\u8868\u5927\u5c0f\uff1a131,072 \u4e2a token</li> <li>\u5e8f\u5217\u957f\u5ea6\uff1a4096 token</li> <li>\u6a21\u578b\u7f29\u653e\uff1a\u901a\u8fc7\u8c03\u6574\u9690\u85cf\u5c42\u5bbd\u5ea6\u3001\u6ce8\u610f\u529b\u5934\u6570\u548c\u5c42\u6570\u8fbe\u5230\u76ee\u6807\u53c2\u6570\u89c4\u6a21</li> <li>\u901a\u4fe1\u4f18\u5316\uff1a\u7ec6\u7c92\u5ea6\u91cd\u53e0\u4e86 DP\uff08<code>--overlap-grad-reduce</code>\u3001<code>--overlap-param-gather</code>\uff09\u3001TP\uff08<code>--tp-comm-overlap</code>\uff09\u4e0e PP\uff08\u9ed8\u8ba4\u542f\u7528\uff09</li> </ul> <p>\u5173\u952e\u7ed3\u679c\uff1a</p> <ul> <li>6144 \u5757 H100 GPU\uff1a\u5b8c\u6210 4620 \u4ebf\u53c2\u6570\u6a21\u578b\u7684\u57fa\u51c6\u6d4b\u8bd5</li> <li>\u8d85\u7ebf\u6027\u6269\u5c55\uff1a\u968f\u6a21\u578b\u89c4\u6a21\u589e\u5927\uff0cMFU \u4ece 41% \u63d0\u5347\u81f3 47%-48%</li> <li>\u7aef\u5230\u7aef\u6d4b\u91cf\uff1a\u541e\u5410\u91cf\u5305\u542b\u6570\u636e\u52a0\u8f7d\u3001\u4f18\u5316\u5668\u6b65\u9aa4\u3001\u901a\u4fe1\u4e0e\u65e5\u5fd7</li> <li>\u53ef\u7528\u4e8e\u751f\u4ea7\uff1a\u8bad\u7ec3\u6d41\u7a0b\u5305\u542b\u68c0\u67e5\u70b9\u4e0e\u5bb9\u9519\u673a\u5236</li> <li>\u8bf4\u660e\uff1a\u6027\u80fd\u7ed3\u679c\u5728\u672a\u8bad\u7ec3\u6536\u655b\u7684\u60c5\u51b5\u4e0b\u6d4b\u5f97</li> </ul>"},{"location":"megatron/#_10","title":"\u5f31\u6269\u5c55\u7ed3\u679c","text":"<p>\u5f31\u6269\u5c55\u7ed3\u679c\u5c55\u793a\u4e86\u8d85\u7ebf\u6027\u6269\u5c55\uff08\u6700\u5c0f\u6a21\u578b MFU \u4e3a 41%\uff0c\u6700\u5927\u6a21\u578b\u63d0\u5347\u81f3 47%-48%\uff09\uff0c\u539f\u56e0\u5728\u4e8e\u66f4\u5927\u7684 GEMM \u5177\u5907\u66f4\u9ad8\u7684\u7b97\u672f\u5f3a\u5ea6\uff0c\u6267\u884c\u6548\u7387\u66f4\u9ad8\u3002</p> <p></p>"},{"location":"megatron/#_11","title":"\u5f3a\u6269\u5c55\u7ed3\u679c","text":"<p>\u6211\u4eec\u8fd8\u5bf9\u6807\u51c6 GPT-3 \u6a21\u578b\u8fdb\u884c\u4e86\u5f3a\u6269\u5c55\uff08\u7531\u4e8e\u8bcd\u8868\u66f4\u5927\uff0c\u6211\u4eec\u7684\u7248\u672c\u53c2\u6570\u7565\u591a\u4e8e 1750 \u4ebf\uff09\uff0c\u5728 96 \u81f3 4608 \u5757 H100 GPU \u4e0a\u4fdd\u6301 1152 \u5e8f\u5217\u7684\u6279\u5927\u5c0f\u3002\u968f\u7740\u89c4\u6a21\u589e\u5927\uff0c\u901a\u4fe1\u5f00\u9500\u66f4\u52a0\u7a81\u51fa\uff0cMFU \u4ece 47% \u964d\u81f3 42%\u3002</p> <p></p>"},{"location":"megatron/#_12","title":"\u8bad\u7ec3","text":""},{"location":"megatron/#_13","title":"\u5feb\u901f\u5165\u95e8","text":""},{"location":"megatron/#_14","title":"\u7b80\u5355\u8bad\u7ec3\u793a\u4f8b","text":"<pre><code># Distributed training example (2 GPUs, mock data)\ntorchrun --nproc_per_node=2 examples/run_simple_mcore_train_loop.py\n</code></pre>"},{"location":"megatron/#llama-3","title":"LLaMA-3 \u8bad\u7ec3\u793a\u4f8b","text":"<pre><code># 8 GPUs, FP8 precision, mock data\n./examples/llama/train_llama3_8b_fp8.sh\n</code></pre>"},{"location":"megatron/#_15","title":"\u6570\u636e\u51c6\u5907","text":""},{"location":"megatron/#jsonl","title":"JSONL \u6570\u636e\u683c\u5f0f","text":"<pre><code>{\"text\": \"Your training text here...\"}\n{\"text\": \"Another training sample...\"}\n</code></pre>"},{"location":"megatron/#_16","title":"\u57fa\u7840\u9884\u5904\u7406","text":"<pre><code>python tools/preprocess_data.py \\\n    --input data.jsonl \\\n    --output-prefix processed_data \\\n    --tokenizer-type HuggingFaceTokenizer \\\n    --tokenizer-model /path/to/tokenizer.model \\\n    --workers 8 \\\n    --append-eod\n</code></pre>"},{"location":"megatron/#_17","title":"\u6838\u5fc3\u53c2\u6570","text":"<ul> <li><code>--input</code>\uff1a\u8f93\u5165 JSON/JSONL \u6587\u4ef6\u8def\u5f84</li> <li><code>--output-prefix</code>\uff1a\u8f93\u51fa\u4e8c\u8fdb\u5236\u6587\u4ef6\uff08.bin \u4e0e .idx\uff09\u7684\u524d\u7f00</li> <li><code>--tokenizer-type</code>\uff1a\u5206\u8bcd\u5668\u7c7b\u578b\uff08<code>HuggingFaceTokenizer</code>\u3001<code>GPT2BPETokenizer</code> \u7b49\uff09</li> <li><code>--tokenizer-model</code>\uff1a\u5206\u8bcd\u5668\u6a21\u578b\u6587\u4ef6\u8def\u5f84</li> <li><code>--workers</code>\uff1a\u5e76\u884c\u5904\u7406\u7684\u5de5\u4f5c\u8fdb\u7a0b\u6570</li> <li><code>--append-eod</code>\uff1a\u8ffd\u52a0\u6587\u6863\u7ed3\u675f\u6807\u8bb0</li> </ul>"},{"location":"megatron/#_18","title":"\u5e76\u884c\u7b56\u7565","text":""},{"location":"megatron/#dp","title":"\u6570\u636e\u5e76\u884c\uff08DP\uff09","text":""},{"location":"megatron/#_19","title":"\u6807\u51c6\u6570\u636e\u5e76\u884c","text":"<pre><code># Standard DDP: replicate model on each GPU\ntorchrun --nproc_per_node=8 pretrain_gpt.py \\\n    --data-parallel-sharding-strategy no_shard\n</code></pre>"},{"location":"megatron/#fully-sharded-data-parallel-fsdp","title":"Fully Sharded Data Parallel (FSDP)","text":"<pre><code># Megatron-optimized FSDP (~15% faster than PyTorch FSDP2)\n--use-custom-fsdp\n\n# PyTorch FSDP2\n--use-torch-fsdp2\n\n# Sharding strategies\n--data-parallel-sharding-strategy optim              # Shard optimizer states (ZeRO-1)\n--data-parallel-sharding-strategy optim_grads        # Shard gradients + optimizer states (ZeRO-2)\n--data-parallel-sharding-strategy optim_grads_params # Shard parameters + gradients + optimizer states (ZeRO-3)\n</code></pre>"},{"location":"megatron/#tp","title":"\u5f20\u91cf\u5e76\u884c\uff08TP\uff09","text":"<p>\u5728\u591a\u5757 GPU \u95f4\u62c6\u5206\u5355\u5c42\u6a21\u578b\uff1a</p> <pre><code>--tensor-model-parallel-size 4  # 4-way tensor parallelism\n--sequence-parallel             # Enable sequence parallelism (recommended with TP)\n</code></pre>"},{"location":"megatron/#pp","title":"\u6d41\u6c34\u7ebf\u5e76\u884c\uff08PP\uff09","text":"<p>\u6309\u6a21\u578b\u6df1\u5ea6\u62c6\u5206\u5230\u4e0d\u540c GPU\uff1a</p> <pre><code>--pipeline-model-parallel-size 8     # 8 pipeline stages\n--virtual-pipeline-model-parallel-size 4  # Virtual pipeline to improve load balancing\n</code></pre>"},{"location":"megatron/#cp","title":"\u4e0a\u4e0b\u6587\u5e76\u884c\uff08CP\uff09","text":"<p>\u5728\u591a\u5757 GPU \u95f4\u62c6\u5206\u957f\u5e8f\u5217\u4ee5\u5904\u7406\u957f\u4e0a\u4e0b\u6587\uff1a</p> <pre><code>--context-parallel-size 2                    # 2-way context parallelism\n--cp-comm-type p2p                          # Communication options: p2p, a2a, allgather, a2a+p2p\n--hierarchical-context-parallel-sizes 2 4   # Hierarchical context parallelism\n</code></pre>"},{"location":"megatron/#ep","title":"\u4e13\u5bb6\u5e76\u884c\uff08EP\uff09","text":"<p>\u9762\u5411 Mixture of Experts (MoE) \u6a21\u578b\uff1a</p> <pre><code>--expert-model-parallel-size 4  # 4-way expert parallelism\n--num-experts 8                 # 8 experts per MoE layer\n--moe-grouped-gemm              # Optimize expert computation\n</code></pre>"},{"location":"megatron/#_20","title":"\u7ec4\u5408\u5e76\u884c\u7b56\u7565","text":""},{"location":"megatron/#_21","title":"\u5e76\u884c\u7b56\u7565\u9009\u578b\u6307\u5357","text":"<p>\u57fa\u4e8e NVIDIA NeMo \u751f\u4ea7\u914d\u7f6e\uff1a</p> \u6a21\u578b \u53c2\u6570\u89c4\u6a21 GPU \u6570 TP PP CP EP \u5907\u6ce8 LLaMA-3 8B 8 1 1 2 1 \u4f7f\u7528 CP \u652f\u6301 8K \u5e8f\u5217\u957f\u5ea6 LLaMA-3 70B 64 4 4 2 1 TP+PP \u7ec4\u5408 LLaMA-3.1 405B 1024 8 8 2 1 \u9002\u7528\u4e8e\u8d85\u5927\u89c4\u6a21\u7684 3D \u5e76\u884c GPT-3 175B 128-512 4 8 1 1 \u5927\u6a21\u578b\u914d\u7f6e Mixtral 8x7B 64 1 4 1 8 MoE \u4f7f\u7528 EP Mixtral 8x22B 256 4 4 8 8 \u5927\u89c4\u6a21 MoE \u7684 TP+EP \u7ec4\u5408 DeepSeek-V3 671B 1024 2 16 1 64 \u5927\u578b MoE \u914d\u7f6e"},{"location":"megatron/#moe","title":"MoE \u7279\u6b8a\u8981\u6c42","text":"<p>\u91cd\u8981\uff1a \u5c06\u4e13\u5bb6\u5e76\u884c\uff08EP\uff09\u4e0e\u5f20\u91cf\u5e76\u884c\uff08TP\uff09\u7ed3\u5408\u65f6\uff0c\u5fc5\u987b\u542f\u7528 \u5e8f\u5217\u5e76\u884c\uff08SP\uff09\u3002</p>"},{"location":"megatron/#_22","title":"\u6027\u80fd\u4f18\u5316","text":"\u529f\u80fd \u53c2\u6570 \u76ca\u5904 FlashAttention <code>--attention-backend</code> \u63d0\u5347\u6ce8\u610f\u529b\u8ba1\u7b97\u901f\u5ea6\u5e76\u964d\u4f4e\u5185\u5b58\u5360\u7528 FP8 \u8bad\u7ec3 <code>--fp8-hybrid</code> \u63d0\u5347\u8bad\u7ec3\u901f\u5ea6 \u6fc0\u6d3b\u91cd\u8ba1\u7b97 <code>--recompute-activations</code> \u964d\u4f4e\u5185\u5b58\u5360\u7528 \u6570\u636e\u5e76\u884c\u901a\u4fe1\u91cd\u53e0 <code>--overlap-grad-reduce</code> \u52a0\u901f\u5206\u5e03\u5f0f\u8bad\u7ec3 \u5206\u5e03\u5f0f\u4f18\u5316\u5668 <code>--use-distributed-optimizer</code> \u7f29\u77ed\u68c0\u67e5\u70b9\u65f6\u95f4 <p>-&gt; NVIDIA NeMo Framework Performance Tuning Guide - \u6df1\u5165\u7684\u6027\u80fd\u8c03\u4f18\u6307\u5357\uff0c\u6db5\u76d6\u901a\u4fe1\u91cd\u53e0\u3001\u5185\u5b58\u4f18\u5316\u4e0e\u5206\u6790\u8c03\u8bd5\u9009\u9879\u3002</p>"},{"location":"megatron/#flashattention","title":"FlashAttention","text":"<p>FlashAttention \u662f\u9ad8\u6548\u7684\u6ce8\u610f\u529b\u7b97\u6cd5\u3002\u63a8\u8350\u9ed8\u8ba4\u914d\u7f6e\uff0c\u5373\u901a\u8fc7 Transformer Engine \u8c03\u7528 cuDNN\uff0c\u5b9e\u73b0\u524d\u5411\u6700\u9ad8 50%\u3001\u53cd\u5411\u6700\u9ad8 84% \u7684\u52a0\u901f\uff0c\u5e76\u652f\u6301 FP8 \u5185\u6838\u3002\u4e5f\u53ef\u901a\u8fc7 <code>--use-flash-attn</code> \u4f7f\u7528 <code>flash-attn</code> \u5305\u3002</p>"},{"location":"megatron/#_23","title":"\u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3","text":"<pre><code>--fp16                    # Standard FP16\n--bf16                    # BFloat16 (recommended for large models)\n--fp8-hybrid              # FP8 training (Hopper, Ada, Blackwell GPUs)\n</code></pre>"},{"location":"megatron/#_24","title":"\u6fc0\u6d3b\u68c0\u67e5\u70b9\u4e0e\u91cd\u8ba1\u7b97","text":"<pre><code># For limited memory\n--recompute-activations\n\n# For extreme memory pressure\n--recompute-granularity full \\\n--recompute-method uniform\n</code></pre>"},{"location":"megatron/#_25","title":"\u6570\u636e\u5e76\u884c\u901a\u4fe1\u91cd\u53e0","text":"<pre><code>--overlap-grad-reduce\n--overlap-param-gather\n</code></pre>"},{"location":"megatron/#_26","title":"\u5206\u5e03\u5f0f\u4f18\u5316\u5668","text":"<pre><code>--use-distributed-optimizer\n</code></pre>"},{"location":"megatron/#_27","title":"\u8def\u7ebf\u56fe","text":"<p>\u53ca\u65f6\u4e86\u89e3\u6700\u65b0\u7684\u5f00\u53d1\u8def\u7ebf\u56fe\u4e0e\u8ba1\u5212\u7279\u6027\uff1a</p> <ul> <li>MoE Q3-Q4 2025 Roadmap - \u6db5\u76d6 DeepSeek-V3\u3001Qwen3\u3001\u9ad8\u7ea7\u5e76\u884c\u7b56\u7565\u3001FP8 \u4f18\u5316\u53ca Blackwell \u589e\u5f3a</li> <li>GPT-OSS Implementation Tracker - \u96c6\u6210 YaRN RoPE \u7f29\u653e\u3001\u6ce8\u610f\u529b sink\u3001\u81ea\u5b9a\u4e49\u6fc0\u6d3b\u51fd\u6570\u7b49\u9ad8\u7ea7\u7279\u6027</li> </ul> <p>\u66f4\u591a\u8def\u7ebf\u56fe\u8ddf\u8e2a\u5373\u5c06\u53d1\u5e03\u3002</p>"},{"location":"megatron/#_28","title":"\u793e\u533a\u4e0e\u652f\u6301","text":""},{"location":"megatron/#_29","title":"\u83b7\u53d6\u5e2e\u52a9","text":"<ul> <li>\u6587\u6863\uff1aDocumentation - \u5b98\u65b9\u6587\u6863</li> <li>\u95ee\u9898\u8ffd\u8e2a\uff1aIssues - \u63d0\u4ea4\u7f3a\u9677\u6216\u529f\u80fd\u8bf7\u6c42</li> </ul>"},{"location":"megatron/#_30","title":"\u8d21\u732e\u65b9\u5f0f","text":"<p>\u6211\u4eec\u975e\u5e38\u6b22\u8fce\u8d21\u732e\uff01\u60a8\u53ef\u4ee5\uff1a</p> <ul> <li>\u62a5\u544a\u7f3a\u9677 - \u5e2e\u52a9\u63d0\u5347\u53ef\u9760\u6027</li> <li>\u63d0\u8bae\u65b0\u529f\u80fd - \u5171\u540c\u5851\u9020 Megatron Core \u7684\u672a\u6765</li> <li>\u6539\u8fdb\u6587\u6863 - \u8ba9 Megatron Core \u66f4\u6613\u4e0a\u624b</li> <li>\u63d0\u4ea4 PR - \u8d21\u732e\u4ee3\u7801\u6539\u8fdb</li> </ul> <p>-&gt; \u8d21\u732e\u6307\u5357</p>"},{"location":"megatron/#_31","title":"\u5f15\u7528","text":"<pre><code>@article{megatron-lm,\n  title={Megatron-LM: Training Multi-Billion Parameter Language Models Using Model Parallelism},\n  author={Shoeybi, Mohammad and Patwary, Mostofa and Puri, Raul and LeGresley, Patrick and Casper, Jared and Catanzaro, Bryan},\n  journal={arXiv preprint arXiv:1909.08053},\n  year={2019}\n}\n</code></pre>"},{"location":"megatron/CHANGELOG/","title":"\u66f4\u65b0\u65e5\u5fd7","text":""},{"location":"megatron/CHANGELOG/#nvidia-megatron-core-0140","title":"NVIDIA Megatron Core 0.14.0","text":"<ul> <li>\u529f\u80fd</li> <li>\u63a8\u7406<ul> <li>\u4e3a DynamicInferenceEngine \u6dfb\u52a0\u5f02\u6b65\u652f\u6301\uff08MR !3187\uff09</li> <li>\u4e3a FP8 \u63a8\u7406\u586b\u5145\u8f93\u5165\u5f20\u91cf\u5e76\u542f\u7528 FP8 \u6743\u91cd\uff08MR !3341\uff09</li> <li>\u5f3a\u5236\u63a8\u7406\u9636\u6bb5\u5728\u4f7f\u7528\u5f20\u91cf\u5e76\u884c\u65f6\u59cb\u7ec8\u805a\u5408 logits\uff08MR !3442\uff09</li> <li>\u4e3a\u52a8\u6001\u63a8\u7406\u5f15\u5165\u591a\u6279\u6b21\u5927\u5c0f\u7684 CUDA Graphs\uff08MR !3402\uff09</li> </ul> </li> <li>\u8bad\u7ec3\u540e\u9636\u6bb5<ul> <li>ModelOpt \u66f4\u65b0\uff08MR !3268\uff09</li> <li>\u65b0\u589e\u63a8\u6d4b\u5f0f\u89e3\u7801 AR \u6821\u9a8c\u529f\u80fd</li> <li>\u65b0\u589e DeepSeek \u548c Qwen \u6a21\u578b\u914d\u7f6e</li> </ul> </li> <li>\u6027\u80fd<ul> <li>\u96c6\u6210 ModelCommProcessGroup\uff08MR !3391\uff09</li> <li>\u6dfb\u52a0 HyperCommGrid\uff1a\u9762\u5411\u6a21\u578b\u5e76\u884c\u7684 N \u7ef4\u901a\u4fe1\u7f51\u683c\uff08MR !3398\uff09</li> <li>\u7075\u6d3b\u521b\u5efa\u4e0e\u7ba1\u7406\u901a\u4fe1\u5206\u7ec4</li> <li>\u652f\u6301 Spike No More \u5d4c\u5165\u521d\u59cb\u5316\u4e0e\u6743\u91cd\u8870\u51cf\u8df3\u8fc7\uff08MR !3500\uff09</li> </ul> </li> <li>MoE<ul> <li>\u6b63\u5728\u79ef\u6781\u9488\u5bf9 Blackwell \u5e73\u53f0\u4f18\u5316\u5927\u89c4\u6a21\u7ec6\u7c92\u5ea6 MoE \u6027\u80fd\u3002</li> <li>\u529f\u80fd\uff1a</li> <li>\u652f\u6301 Expert Parallel A2A Overlapping\uff08MR !3470\uff1bMR !3074\uff09</li> <li>\u652f\u6301 MTP \u7684 CP \u4e0e\u91cd\u8ba1\u7b97\uff08MR !3330\uff09</li> <li>\u652f\u6301\u5168\u5c40\u8f85\u52a9\u635f\u5931\uff08MR !3318\uff09</li> <li>\u5185\u5b58\u4f18\u5316</li> <li>\u652f\u6301\u5bf9 FP8 layernorm\u3001moe_act\u3001shared_experts \u8fdb\u884c\u91cd\u8ba1\u7b97\uff08MR !3465\uff09</li> <li>\u652f\u6301 DSV3 FP8 \u8bad\u7ec3\u7684\u4f18\u5316\u5668\u5378\u8f7d\uff08MR !3659\uff09</li> <li>\u6027\u80fd\u4f18\u5316</li> <li>\u6dfb\u52a0 MoE router \u878d\u5408\uff08MR !3809\uff09</li> <li>\u66f4\u65b0 MoE CUDA graph\uff08MR !3631\uff09</li> <li>\u7f3a\u9677\u4fee\u590d\uff1a</li> <li>\u4fee\u590d\u8def\u7531\u5668\u8f93\u5165\u6296\u52a8 dtype\uff08MR !3774\uff09</li> </ul> </li> <li>\u6a21\u578b\u652f\u6301<ul> <li>\u65b0\u589e MiMo video VLM \u8bad\u7ec3\u793a\u4f8b\uff08MR !3543\uff09</li> <li>\u4e3a MIMO \u65b0\u589e AVLM\uff08MR !3624\uff09</li> </ul> </li> <li>\u6613\u7528\u6027<ul> <li>\u4e3a\u6e90\u7801\u5b89\u88c5\u6dfb\u52a0 uv \u652f\u6301\uff08MR !3615\uff09</li> <li>\u6bcf\u5468\u81ea\u52a8\u9884\u53d1\u5e03\uff08MR !3574\uff09</li> </ul> </li> <li>\u7f3a\u9677\u4fee\u590d</li> <li>\u4e3a softmax_factor \u4f7f\u7528 mscale_all_dim\uff08MR !2800\uff09</li> <li>\u4fee\u590d FP8 \u53c2\u6570\u5206\u5757\u7f29\u653e\u7684\u5355\u5143\u6d4b\u8bd5\uff08MR !3480\uff09</li> <li>\u4fee\u590d\u5206\u5757\u7f29\u653e\u5355\u5143\u6d4b\u8bd5\uff08MR !3491\uff09</li> <li>\u4e3a\u65e0 token \u8bf7\u6c42\u4f18\u5316\u9884\u586b\u5145\uff08MR !3499\uff09</li> <li>\u4e3a Fp8Padding \u4e0e Fp8Unpadding \u6dfb\u52a0\u9ed8\u8ba4\u503c\uff08MR !3501\uff09</li> <li>\u4fee\u590d\u7075\u6d3b\u6d41\u6c34\u7ebf\u5e03\u5c40\u7684 CUDA graph \u903b\u8f91\uff08MR !3505\uff09</li> <li>\u652f\u6301 strict=False \u52a0\u8f7d FP8 \u6a21\u578b\uff08MR !3508\uff09</li> <li>\u5728 torch &lt; 1.4.0 \u65f6\u8df3\u8fc7 RoPE \u68c0\u67e5\uff08MR !3528\uff09</li> <li>\u4e3a\u7a33\u5b9a\u6027\u7981\u7528 Apex \u6d4b\u8bd5\uff08MR !3539\uff09</li> <li>\u4fee\u590d parallel_state expert parallelism \u7684\u62fc\u5199\u9519\u8bef\uff08MR !3548\uff09</li> <li>\u5728 macOS \u4e0a\u4e3a modelopt \u6dfb\u52a0\u9632\u62a4\uff08MR !3549\uff09</li> <li>CUDA \u51fd\u6570\u5931\u8d25\u65f6\u91cd\u8bd5\uff08MR !3554\uff09</li> <li>\u4fee\u590d NCCL \u5185\u5b58\u6c60\u521b\u5efa\u9519\u8bef\uff08MR !3557\uff09</li> <li>\u4fee\u590d get_rotary_seq_len \u8fd4\u56de\u7c7b\u578b\uff08MR !3559\uff09</li> <li>CUDA \u51fd\u6570\u5931\u8d25\u65f6\u91cd\u8bd5\uff08MR !3560\uff09</li> <li>\u4fee\u590d NCCL \u5206\u914d\u5668\u5c5e\u6027\u9519\u8bef\uff08MR !3565\uff09</li> <li>\u786e\u4fdd\u591a\u63d0\u793a\u63a8\u7406\u53ef\u7528\uff08MR !3568\uff09</li> <li>\u4fee\u590d FIPS \u7cfb\u7edf\u4e0a\u7684 MD5\uff08MR !3577\uff09</li> <li>\u4fee\u590d\u52a8\u6001\u4e0a\u4e0b\u6587\u4e0e\u63a8\u7406\u76f8\u5173\u7f3a\u9677\uff08MR !3582\uff09</li> <li>\u4fee\u590d\u4ea4\u9519\u878d\u5408 RoPE \u7684 TE \u7248\u672c\uff08MR !3586\uff09</li> <li>\u4fee\u590d\u542b MoE \u4e0e TP \u7684 MTP \u65e5\u5fd7\uff08MR !3594\uff09</li> <li>\u6dfb\u52a0 TE import \u9632\u62a4\u4fee\u590d\uff08MR !3596\uff09</li> <li>\u4e3a NCCL UB \u60c5\u51b5\u6dfb\u52a0\u65ad\u8a00\uff08MR !3599\uff09</li> <li>\u79fb\u9664 Encoder PP \u76f8\u5173\u51fd\u6570\uff08MR !3604\uff09</li> <li>\u4fee\u590d\u6d4b\u8bd5\u4e2d\u7684\u6bb5\u9519\u8bef\uff08MR !3605\uff09</li> <li>\u4fee\u590d\u5206\u5e03\u5f0f\u4f18\u5316\u5668\u4e2d\u7684 TE \u9519\u8bef\uff08MR !3625\uff09</li> <li>\u79fb\u9664\u68c0\u67e5\u70b9\u6d41\u7a0b\u4e2d\u7684\u5197\u4f59\u5c4f\u969c\uff08MR !3626\uff09</li> <li>\u652f\u6301 VPP MTP \u5e76\u4fee\u590d\u65e5\u5fd7\uff08MR !3630\uff09</li> <li>\u4e3a <code>free(): invalid pointer</code> \u9519\u8bef\u63d0\u4f9b\u91cd\u8bd5\u673a\u5236\uff08MR !3632\uff09</li> <li>\u4fee\u590d test_replication.py \u95ee\u9898\uff08MR !3633\uff09</li> <li>\u4fee\u590d parallel_state \u4e2d\u7684\u62fc\u5199\u9519\u8bef\uff08MR !3634\uff09</li> <li>\u4fee\u590d CUDA graph \u903b\u8f91\u5224\u5b9a\uff08MR !3635\uff09</li> <li>\u4fee\u590d TE \u5b89\u88c5\u9519\u8bef\uff08MR !3636\uff09</li> <li>\u786e\u4fdd\u672c\u5730\u6d4b\u8bd5\u4f7f\u7528\u6b63\u786e\u7684\u5206\u7247\u7c7b\u578b\uff08MR !3643\uff09</li> <li>\u4fee\u590d\u6700\u540e\u4e00\u5c42\u7684 CUDA graph \u53cd\u5411\u7f13\u51b2\u590d\u7528\uff08MR !3645\uff09</li> <li>\u5728 get_rotary_seq_len \u4e2d\u4e3a packed_seq_params \u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff08MR !3651\uff09</li> <li>\u4fee\u590d\u52a8\u6001\u793a\u4f8b\u811a\u672c\u9519\u8bef\uff08MR !3653\uff09</li> <li>\u6dfb\u52a0 TE import \u9632\u62a4\u4fee\u590d\uff08MR !3666\uff09</li> <li>\u91cd\u5927\u53d8\u66f4\uff1a</li> <li>\u5c06 <code>megatron.core.distributed.custom_fsdp</code> \u62c6\u5206\u4e3a\u7834\u574f\u6027\u66f4\u6539\u7684\u65b0\u6a21\u5757 <code>megatron.core.distributed.fsdp.src.megatron_fsdp</code></li> <li>\u5df2\u77e5\u95ee\u9898</li> </ul>"},{"location":"megatron/CHANGELOG/#nvidia-megatron-core-0130","title":"NVIDIA Megatron Core 0.13.0","text":"<ul> <li>\u652f\u6301\u5728\u4f18\u5316\u5668\u72b6\u6001\u4e2d\u4f7f\u7528 bf16 dtype\uff0c\u4ee5\u914d\u5408 TransformerEngine \u7684\u7cbe\u5ea6\u611f\u77e5\u4f18\u5316\u5668</li> <li>MoE</li> <li>\u529f\u80fd\uff1a<ul> <li>\u901a\u8fc7\u81ea\u5b9a\u4e49\u6d41\u6c34\u7ebf\u5e03\u5c40\uff08<code>--pipeline-model-parallel-layout</code>\uff09\u652f\u6301\u7075\u6d3b\u7684\u975e\u5bf9\u79f0\u865a\u62df\u6d41\u6c34\u7ebf\u5e76\u884c</li> <li>\u652f\u6301\u5411 MoE \u6a21\u5757\u4f20\u5165\u81ea\u5b9a\u4e49\u5e76\u884c\u5206\u7ec4</li> <li>\u4e3a MoE \u6a21\u578b\u63d0\u4f9b Hybrid Shard Data-Parallel \u652f\u6301\uff08<code>--num-distributed-optimizer-instances</code>\uff09</li> <li>\u652f\u6301 DeepSeek-V3 \u7ed3\u5408 Expert Parallel \u4e0e\u81ea\u5b9a\u4e49 FSDP \u7684\u8bad\u7ec3</li> <li>\u4e3a Multi-Token-Prediction \u5f15\u5165 FP8 \u652f\u6301</li> </ul> </li> <li>\u5185\u5b58\u4f18\u5316<ul> <li>\u7ec6\u7c92\u5ea6\u91cd\u8ba1\u7b97\u4ee5\u964d\u4f4e\u6fc0\u6d3b\u663e\u5b58\u5f00\u9500\uff08<code>--recompute-modules</code> \u642d\u914d <code>--recompute-granularity selective</code>\uff09</li> <li>\u901a\u8fc7\u5c06\u6982\u7387\u4e58\u6cd5\u4ece\u53cd\u5411\u91cd\u6392\u5217\u79fb\u81f3 GroupedMLP \u7684\u6fc0\u6d3b\u51fd\u6570\uff0c\u63d0\u9ad8 token permutation \u7684\u5185\u5b58\u6548\u7387</li> </ul> </li> <li>\u6027\u80fd\u4f18\u5316<ul> <li>MLA RoPE \u878d\u5408\u7b97\u5b50\u4e0e YARN \u5d4c\u5165\u7f13\u5b58</li> <li>\u901a\u8fc7\u586b\u5145\u8def\u7531\u6620\u5c04\u4f18\u5316 MoE \u6a21\u578b\u7684 FP8 padding</li> </ul> </li> <li>\u7f3a\u9677\u4fee\u590d\uff1a<ul> <li>\u4fee\u590d\u5728\u542f\u7528 <code>expert_bias</code> \u6216 group limited routing \u65f6\u7684\u8f85\u52a9\u635f\u5931\u8ba1\u7b97\uff08<code>load_balancing_loss</code> \u6570\u503c\u76f8\u8f83\u65e7\u7248\u672c\u4f1a\u53d1\u751f\u53d8\u5316\uff09</li> <li>\u4fee\u590d MLA \u7684\u6253\u5305\u5e8f\u5217\u652f\u6301</li> </ul> </li> <li>\u5df2\u77e5\u95ee\u9898\uff1a<ul> <li>MTP \u6682\u4e0d\u517c\u5bb9\u7075\u6d3b\u6d41\u6c34\u7ebf\u5e03\u5c40\uff0c\u9884\u8ba1\u5728 MR !3594 \u4fee\u590d</li> <li>TP2 \u4e0b MTP \u7684\u6536\u655b\u95ee\u9898\uff0c\u9884\u8ba1\u5728 MR !3594 \u4fee\u590d</li> </ul> </li> </ul>"},{"location":"megatron/CONTRIBUTING/","title":"\u4e3a Megatron-LM \u505a\u51fa\u8d21\u732e","text":"<p>\u672c\u6587\u6863\u6982\u8ff0\u4e86\u975e NVIDIA \u8d21\u732e\u8005\u5728 Megatron-LM GitHub \u4ed3\u5e93\u63d0\u4ea4\u95ee\u9898\u6216\u62c9\u53d6\u8bf7\u6c42\u65f6\u7684\u6d41\u7a0b\u4e0e\u7b56\u7565\u3002</p> <p>\u6211\u4eec\u6b22\u8fce\u6240\u6709\u4eba\u53c2\u4e0e\u8d21\u732e\uff0c\u4f46 Megatron-LM \u7684\u5f00\u53d1\u4ecd\u4e3b\u8981\u5728 NVIDIA \u5185\u90e8\u63a8\u8fdb\u3002\u56e0\u6b64\uff0c\u5728\u63d0\u4ea4\u4fee\u6539\u524d\uff0c\u8bf7\u786e\u4fdd\u6539\u52a8\u7b26\u5408\u9879\u76ee\u65b9\u5411\u3002\u6211\u4eec\u975e\u5e38\u611f\u8c22\u4fee\u590d\u7f3a\u9677\u7b49\u5c0f\u578b\u6539\u52a8\uff1b\u82e5\u5e0c\u671b\u8fdb\u884c\u8f83\u5927\u7684\u67b6\u6784\u8c03\u6574\u6216\u98ce\u683c\u91cd\u6784\uff0c\u8bf7\u5148\u63d0\u4ea4 issue \u8ba8\u8bba\u3002</p> <p>\u6240\u6709\u5916\u90e8 PR \u4f1a\u5148\u88ab\u5408\u5e76\u5230 NVIDIA \u5185\u90e8\u7684 Megatron-LM \u4ed3\u5e93\uff0c\u518d\u4ee5\u540c\u6837\u7684 commit \u5f52\u5c5e\u63a8\u9001\u56de\u516c\u5f00\u4ed3\u5e93\u3002</p>"},{"location":"megatron/CONTRIBUTING/#issue","title":"Issue \u7b56\u7565","text":"<p>\u5728\u63d0\u4ea4\u95ee\u9898\u65f6\uff0c\u8bf7\u7262\u8bb0\u4ee5\u4e0b\u8981\u70b9\uff1a</p> <ul> <li>\u5982\u679c\u62a5\u544a\u7f3a\u9677\uff08\u884c\u4e3a\u4e0d\u7b26\u5408\u9884\u671f\uff09\uff0c\u8bf7\u9009\u62e9 BUG \u6a21\u677f\u3002</li> <li>\u82e5\u9047\u5230\u901f\u5ea6\u6216\u7cbe\u5ea6\u7684\u56de\u9000\uff0c\u8bf7\u4f7f\u7528 REGRESSION \u6a21\u677f\u3002</li> <li>\u9700\u8981\u65b0\u589e\u529f\u80fd\u6216\u4fee\u6539\u73b0\u6709\u529f\u80fd\u65f6\uff0c\u4f7f\u7528 ENHANCEMENT \u6a21\u677f\u3002</li> <li>\u5982\u679c\u53ea\u662f\u63d0\u95ee\uff0c\u53ef\u4e0d\u4f7f\u7528\u6a21\u677f\uff0c\u4f46\u8bf7\u5c3d\u91cf\u6e05\u6670\u3001\u7b80\u6d01\u3002</li> <li>\u6bcf\u4e2a issue \u9650\u5236\u4e00\u4e2a\u95ee\u9898\uff0c\u907f\u514d\u5728\u540c\u4e00\u4e2a issue \u4e2d\u6df7\u5408\u591a\u4e2a\u4e3b\u9898\u3002</li> <li>\u82e5\u6211\u4eec\u80fd\u591f\u8f7b\u677e\u590d\u73b0\u95ee\u9898\uff0c\u7ef4\u62a4\u8005\u901a\u5e38\u4f1a\u66f4\u5feb\u54cd\u5e94\u3002</li> <li>\u8bf7\u6ce8\u610f\u62fc\u5199\u3001\u8bed\u6cd5\u4e0e\u6807\u70b9\u3002</li> <li>\u4ee5\u4e25\u8c28\u3001\u6280\u672f\u6027\u7684\u8bed\u6c14\u64b0\u5199\u63cf\u8ff0\u3002</li> </ul>"},{"location":"megatron/CONTRIBUTING/#_1","title":"\u4ee3\u7801\u63d0\u4ea4\u7b56\u7565","text":"<p>\u4ee5\u4e0b\u662f\u63a8\u8350\u9075\u5faa\u7684\u6ce8\u610f\u4e8b\u9879\uff1a</p>"},{"location":"megatron/CONTRIBUTING/#_2","title":"\u8bf7\u52a1\u5fc5\uff1a","text":"<ul> <li>\u683c\u5f0f\u5316\u65b0\u589e\u4ee3\u7801\uff0c\u4f7f\u5176\u4e0e\u88ab\u4fee\u6539\u6587\u4ef6\u4fdd\u6301\u4e00\u81f4\u3002Megatron-LM \u76ee\u524d\u5c1a\u672a\u5b9a\u4e49\u7edf\u4e00\u98ce\u683c\u6216\u5f3a\u5236\u683c\u5f0f\u5316\u89c4\u5219\u3002</li> <li>\u5c06\u6539\u52a8\u62c6\u5206\u4e3a\u5c0f\u800c\u72ec\u7acb\u7684 commit\uff0c\u4f8b\u5982\u6bcf\u4e2a commit \u5bf9\u5e94\u4e00\u4e2a\u529f\u80fd\u70b9\u6216\u7f3a\u9677\u4fee\u590d\u3002</li> <li>\u786e\u4fdd commit \u57fa\u4e8e\u6700\u65b0\u7684 master \u5206\u652f\u8fdb\u884c rebase\u3002</li> <li>\u5728\u63d0\u4ea4\u4fe1\u606f\u6807\u9898\u4e2d\u4f7f\u7528\u7948\u4f7f\u53e5\uff08\u5982 \u201cChange the default argument for X\u201d\uff0c\u4e0d\u8981\u4f7f\u7528 \u201cChanged\u2026\u201d\uff09\u3002</li> <li>\u4ee5\u89c4\u8303\u7684\u82f1\u6587\u64b0\u5199 commit \u4fe1\u606f\uff0c\u6ce8\u610f\u8bed\u6cd5\u4e0e\u6807\u70b9\u3002</li> <li>\u68c0\u67e5\u4ee3\u7801\u3001\u6ce8\u91ca\u4e0e commit \u4fe1\u606f\u7684\u62fc\u5199\u3002</li> </ul>"},{"location":"megatron/CONTRIBUTING/#_3","title":"\u8bf7\u52a1\u5fc5\u907f\u514d\uff1a","text":"<ul> <li>\u63d0\u4ea4\u4e0e\u9879\u76ee\u8bb8\u53ef\u8bc1\u4e0d\u517c\u5bb9\u7684\u4ee3\u7801\u3002</li> <li>\u4fee\u6539 PR \u8303\u56f4\u4e4b\u5916\u7684\u5185\u5bb9\uff0c\u5305\u62ec\u65e0\u5173\u7684\u683c\u5f0f\u5316\u53d8\u66f4\u3002</li> <li>\u5728\u591a\u4e2a commit \u4e4b\u95f4\u53cd\u590d\u6539\u53d8\u8bbe\u8ba1\u3002</li> <li>\u4fdd\u7559\u88ab\u6ce8\u91ca\u6389\u7684\u4ee3\u7801\u3002</li> <li>\u672a\u7ecf\u8ba8\u8bba\u5373\u63d0\u4ea4\u5927\u8303\u56f4\u67b6\u6784\u8c03\u6574\uff0c\u8bf7\u5148\u5f00 issue \u4ea4\u6d41\u3002</li> </ul>"},{"location":"megatron/CONTRIBUTING/#issue-pull-request-2023-7","title":"Issue \u4e0e Pull Request \u5e38\u89c1\u95ee\u7b54\uff082023 \u5e74 7 \u6708\u66f4\u65b0\uff09","text":""},{"location":"megatron/CONTRIBUTING/#issue-pr","title":"\u63d0\u4ea4 issue \u6216 PR \u540e\uff0c\u591a\u4e45\u80fd\u6536\u5230\u53cd\u9988\uff1f","text":"<p>Megatron-LM \u7531\u4e00\u652f\u89c4\u6a21\u4e0d\u5927\u7684\u7814\u7a76\u56e2\u961f\u7ef4\u62a4\uff0c\u6211\u4eec\u4f1a\u5c3d\u91cf\u5728\u4e00\u5468\u5185\u9605\u8bfb\u5e76\u56de\u5e94\u65b0 issue \u4e0e PR\u3002\u51e0\u70b9\u53c2\u8003\uff1a - \u53ef\u590d\u73b0\u7684\u7f3a\u9677\u3001\u56de\u9000\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7684\u4fee\u590d\u4f1a\u6700\u5148\u5f97\u5230\u5173\u6ce8\u3002 - \u529f\u80fd\u589e\u5f3a\u8bf7\u6c42\u53ef\u80fd\u53ea\u4f1a\u5f97\u5230\u201c\u5df2\u9605\u8bfb\u201d\u7684\u56de\u590d\uff1b\u82e5\u4e0e\u9879\u76ee\u65b9\u5411\u4e0d\u7b26\uff0c\u53ef\u80fd\u4f1a\u76f4\u63a5\u5173\u95ed\u5e76\u6807\u8bb0\u4e3a \u201cwontfix\u201d\u3002\u5982\u679c\u88ab\u4fdd\u7559\uff0c\u5219\u8868\u793a\u7ef4\u62a4\u8005\u8ba4\u540c\u8be5\u529f\u80fd\u7684\u4ef7\u503c\u3002 - \u4f7f\u7528\u652f\u6301\u7c7b\u8bf7\u6c42\uff08\u4f8b\u5982\u8fd0\u884c\u5e2e\u52a9\uff09\u4f18\u5148\u7ea7\u6700\u4f4e\uff0c\u4f1a\u5728\u7ef4\u62a4\u8005\u6709\u7cbe\u529b\u65f6\u5904\u7406\u3002</p>"},{"location":"megatron/CONTRIBUTING/#_4","title":"\u5982\u679c\u8fdf\u8fdf\u6ca1\u6709\u56de\u5e94\uff0c\u591a\u4e45\u540e\u53ef\u4ee5\u63d0\u9192\u7ef4\u62a4\u8005\uff1f","text":"<p>\u82e5\u5728\u4e00\u5468\u5185\u6ca1\u6709\u4efb\u4f55\u56de\u590d\uff0c\u53ef\u4ee5\u9002\u5ea6\u63d0\u9192\u4e00\u6b21\u3002</p>"},{"location":"megatron/CONTRIBUTING/#_5","title":"\u76ee\u524d\u7684\u7ef4\u62a4\u8005\u662f\u8c01\uff1f","text":"<p>\u8bf7\u8054\u7cfb @jaredcasper \u548c @jon-barker\u3002</p>"},{"location":"megatron/CONTRIBUTING/#issuepr","title":"\u662f\u5426\u6709\u8d85\u65f6\u672a\u5904\u7406\u7684 issue/PR \u7b56\u7565\uff1f\u4f1a\u88ab\u5173\u95ed\u5417\uff1f","text":"<p>\u662f\u7684\uff0c\u81ea 2023 \u5e74 7 \u6708\u8d77\uff0c\u6211\u4eec\u4f7f\u7528\u673a\u5668\u4eba\u5728 PR 60 \u5929\u65e0\u66f4\u65b0\u65f6\u6807\u8bb0\u4e3a \u201cstale\u201d\u3002</p> <p>\u4ed3\u5e93\u4e2d\u4ecd\u6709\u957f\u8fbe 3.5 \u5e74\u7684\u5386\u53f2 backlog\uff0c\u6211\u4eec\u4f1a\u4ece\u65e7\u5230\u65b0\u5730\u8fdb\u884c\u68b3\u7406\u3002\u5bf9\u4e8e\u53ef\u80fd\u4ecd\u7136\u6709\u6548\u7684\u65e7 issue\uff0c\u6211\u4eec\u4f1a\u8bf7\u6c42\u91cd\u65b0\u57fa\u4e8e\u6700\u65b0\u4ee3\u7801\u6d4b\u8bd5\u3002\u5982\u679c\u6ca1\u6709\u56de\u5e94\uff0c\u53ef\u80fd\u4f1a\u5173\u95ed\uff1b\u82e5\u4f60\u8ba4\u4e3a\u4ecd\u9700\u5904\u7406\uff0c\u53ea\u9700\u5728\u8be5 issue \u4e2d\u7559\u8a00\u5373\u53ef\u91cd\u65b0\u5f00\u542f\u3002</p> <p>\u611f\u8c22\u4f60\u7684\u8d21\u732e\uff01</p>"},{"location":"megatron/docs/llama_mistral/","title":"Llama/Mistral \u6307\u5357","text":""},{"location":"megatron/docs/llama_mistral/#megatron-lm-llamamistral-llama","title":"\u5728 Megatron-LM \u4e2d\u652f\u6301 Llama\u3001Mistral \u53ca\u5176\u4ed6 Llama \u7cfb\u6a21\u578b","text":"<p>\u6ce8\u610f\uff1a\u4e3a\u7b80\u5316\u4ee3\u7801\uff0c\u76ee\u524d\u4ec5\u652f\u6301\u8f6c\u6362\u4ece HuggingFace \u4e0b\u8f7d\u7684 Llama-3.x \u4e0e Mistral \u68c0\u67e5\u70b9\u3002</p> <p>Llama-2 \u4e0e Llama-3.x \u5bb6\u65cf\u63d0\u4f9b\u4e86\u5f00\u6e90\u7684\u9884\u8bad\u7ec3\u4e0e\u804a\u5929\u5fae\u8c03\u6a21\u578b\uff0c\u5728\u591a\u9879\u57fa\u51c6\u4e0a\u8868\u73b0\u4f18\u5f02\u3002\u4e24\u4ee3\u6a21\u578b\u53d1\u5e03\u65f6\u90fd\u4f4d\u5217\u5f00\u6e90\u6a21\u578b\u524d\u5217\uff0c\u5e76\u4e0e\u9886\u5148\u7684\u95ed\u6e90\u6a21\u578b\u76f8\u7ade\u4e89\uff08\u53c2\u89c1 https://arxiv.org/pdf/2307.09288.pdf \u4e0e https://ai.meta.com/blog/meta-llama-3/\uff09\u3002</p> <p>\u540c\u6837\u5730\uff0cMistral-7B \u4e5f\u662f\u5f00\u6e90\u6a21\u578b\uff0c\u5305\u542b\u9884\u8bad\u7ec3\u4e0e\u804a\u5929\u5fae\u8c03\u7248\u672c\uff0c\u57fa\u51c6\u6210\u7ee9\u7a81\u51fa\u3002</p> <p>\u5728\u67b6\u6784\u4e0a\uff0cLlama-2\u3001Llama-3 \u4e0e Mistral-7B \u9ad8\u5ea6\u76f8\u4f3c\u3002\u56e0\u6b64 Megatron \u53ef\u4ee5\u52a0\u8f7d\u4e09\u79cd\u6a21\u578b\u7684\u68c0\u67e5\u70b9\uff0c\u7528\u4e8e\u63a8\u7406\u6216\u5fae\u8c03\u3002\u8f6c\u6362\u65b9\u5f0f\u5728\u7ec6\u8282\u4e0a\u7565\u6709\u5dee\u5f02\uff0c\u4e0b\u9762\u6309\u6a21\u578b\u5206\u522b\u8bf4\u660e\u3002</p> <ul> <li>\u5728 Megatron-LM \u4e2d\u652f\u6301 Llama\u3001Mistral \u53ca\u5176\u4ed6 Llama \u7cfb\u6a21\u578b</li> <li>Llama-2</li> <li>\u4e0b\u8f7d Meta \u6216 HuggingFace \u68c0\u67e5\u70b9</li> <li>\u8f6c\u6362\u68c0\u67e5\u70b9\u683c\u5f0f<ul> <li>Meta \u683c\u5f0f</li> <li>HuggingFace \u683c\u5f0f</li> </ul> </li> <li>\u542f\u52a8\u6a21\u578b<ul> <li>\u8c03\u6574 Megatron \u542f\u52a8\u53c2\u6570</li> <li>\u4f7f\u7528 Meta \u811a\u672c\u542f\u52a8</li> <li>\u4f7f\u7528 HuggingFace \u542f\u52a8</li> </ul> </li> <li>\u57fa\u51c6\u7ed3\u679c<ul> <li>Big Bench</li> <li>\u591a\u8bed\u8a00\u57fa\u51c6</li> <li>LM Evaluation Harness</li> <li>MMLU</li> </ul> </li> <li>Llama-3.x</li> <li>\u4e0b\u8f7d HuggingFace \u68c0\u67e5\u70b9</li> <li>\u8f6c\u6362\u68c0\u67e5\u70b9\u683c\u5f0f<ul> <li>HuggingFace \u683c\u5f0f</li> </ul> </li> <li>\uff08\u53ef\u9009\uff09\u9a8c\u8bc1\u68c0\u67e5\u70b9</li> <li>\u542f\u52a8\u6a21\u578b</li> <li>Mistral-7B</li> <li>\u4e0b\u8f7d HuggingFace \u68c0\u67e5\u70b9</li> <li>\u8f6c\u6362\u68c0\u67e5\u70b9\u683c\u5f0f</li> <li>\uff08\u53ef\u9009\uff09\u9a8c\u8bc1\u68c0\u67e5\u70b9</li> <li>\u542f\u52a8\u6a21\u578b</li> <li>\u5176\u4ed6 Llama \u7cfb\u6a21\u578b\u652f\u6301</li> <li>\u5df2\u77e5\u6570\u503c\u5dee\u5f02</li> <li>\u4f7f\u7528\u65e7\u7248\u6a21\u578b\u683c\u5f0f</li> </ul>"},{"location":"megatron/docs/llama_mistral/#llama-2","title":"Llama-2","text":"<p>Llama-2 \u68c0\u67e5\u70b9\u53ef\u7528\u4e8e Megatron \u63a8\u7406\u4e0e\u5fae\u8c03\uff0c\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u83b7\u53d6\u4e0b\u8f7d\u68c0\u67e5\u70b9\u7684\u6743\u9650\u3002</li> <li>\u5c06 Meta/HuggingFace \u683c\u5f0f\u8f6c\u6362\u4e3a Megatron \u683c\u5f0f\u3002</li> <li>\u914d\u7f6e\u542f\u52a8\u6a21\u578b\u6240\u9700\u7684\u53c2\u6570\u3002</li> </ol> <p>\u4e0b\u6587\u4f9d\u6b21\u4ecb\u7ecd\u5404\u6b65\u9aa4\uff0c\u6700\u540e\u9644\u4e0a\u57fa\u51c6\u7ed3\u679c\u5bf9\u6bd4\uff1a1) \u4f7f\u7528 Meta \u539f\u751f\u68c0\u67e5\u70b9\u4e0e Meta \u63a8\u7406\u4ee3\u7801\u7684\u8868\u73b0\uff1b2) \u4f7f\u7528\u8f6c\u6362\u540e\u68c0\u67e5\u70b9\u4e0e Megatron \u63a8\u7406\u4ee3\u7801\u7684\u8868\u73b0\u3002</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#meta-huggingface","title":"\u4e0b\u8f7d Meta \u6216 HuggingFace \u68c0\u67e5\u70b9","text":"<p>\u9700\u8981\u5148\u7533\u8bf7\u8bbf\u95ee\u6743\u9650\uff0c\u4ece Meta \u6216 HuggingFace\uff08\u7b80\u79f0 HF\uff09\u4e0b\u8f7d Llama-2 \u68c0\u67e5\u70b9\u3002\u4e24\u79cd\u683c\u5f0f\u5747\u53ef\u8f6c\u6362\u4e3a Megatron\uff1aMeta \u539f\u751f\u683c\u5f0f\uff08\u53ef\u5728 Meta \u4e0e HF \u83b7\u53d6\uff09\u4ee5\u53ca HF \u63d0\u4f9b\u7684\u683c\u5f0f\uff08\u4ec5\u5728 HF \u4e0b\u8f7d\uff09\u3002</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#_1","title":"\u8f6c\u6362\u68c0\u67e5\u70b9\u683c\u5f0f","text":"<p>\u63a8\u8350\u5728\u8bad\u7ec3\u6216\u5fae\u8c03\u65f6\u4f7f\u7528 <code>--dtype bf16</code>\u3002\u63a8\u7406\u5219\u53ef\u9009\u62e9 bfloat16 \u6216 float16\u3002</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#meta","title":"Meta \u683c\u5f0f","text":"<p>Meta \u683c\u5f0f\u68c0\u67e5\u70b9\u4f1a\u5148\u8f6c\u6362\u4e3a HF \u683c\u5f0f\uff0c\u518d\u8f6c\u6362\u4e3a Megatron \u683c\u5f0f\u3002\u9700\u8981\u5b89\u88c5 <code>transformers</code> \u5305\uff0c\u7248\u672c\u9700\u4e0d\u4f4e\u4e8e 4.31.0\uff08\u4f8b\u5982 <code>pip install transformers&gt;=4.31.0</code>\uff09\u3002\u6ce8\u610f\uff1a\u5df2\u5728 <code>4.31.0</code> \u4e0e <code>4.32.0</code> \u4e0a\u9a8c\u8bc1\uff0c\u66f4\u65b0\u7248\u672c\u53ef\u80fd\u7565\u6709\u5dee\u5f02\u3002\u5047\u8bbe\u4e0b\u8f7d\u597d\u7684\u68c0\u67e5\u70b9\u5728 <code>$CHECKPOINT_DIR</code>\uff08\u6309 7B\u300113B\u300170B \u7b49\u5b50\u76ee\u5f55\u5212\u5206\uff09\uff0c\u4ee5\u4e0b\u547d\u4ee4\u53ef\u5c06 Llama-2 \u683c\u5f0f\u8f6c\u6362\u4e3a bfloat16 \u7684 HF \u683c\u5f0f\uff1a</p> <pre><code>python tools/checkpoint/convert.py \\\n&gt;   --model-type GPT \\\n&gt;   --loader llama_mistral \\\n&gt;   --load-dir ${META_FORMAT_DIR} \\\n&gt;   --model-size ${MODEL_SIZE} \\\n&gt;   --checkpoint-type meta \\\n&gt;   --tokenizer-model ${TOKENIZER_MODEL} \\\n&gt;   --saver core \\\n&gt;   --save-dir ${MEGATRON_FORMAT_DIR} \\\n&gt;   --target-tensor-parallel-size ${TP} \\\n&gt;   --target-pipeline-parallel-size ${PP} \\\n&gt;   --bf16\n</code></pre> <p><code>--model-size</code> \u7684\u5408\u6cd5\u53d6\u503c\u5305\u62ec\uff1a<code>llama2-7B</code>\u3001<code>llama2-13B</code>\u3001<code>llama2-70B</code>\uff08\u9884\u8bad\u7ec3\u6a21\u578b\uff09\uff0c\u4ee5\u53ca <code>llama2-7Bf</code>\u3001<code>llama2-13Bf</code>\u3001<code>llama2-70Bf</code>\uff08\u804a\u5929\u5fae\u8c03\u6a21\u578b\uff09\u3002</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#huggingface","title":"HuggingFace \u683c\u5f0f","text":"<p>Megatron \u63d0\u4f9b\u4e86 Llama-2 \u68c0\u67e5\u70b9\u8f6c\u6362\u811a\u672c\uff08<code>tools/checkpoint/loader_llama_mistral.py</code>\uff09\uff0c\u53ef\u76f4\u63a5\u5c06 HF \u683c\u5f0f\u8f6c\u6362\u4e3a Megatron \u683c\u5f0f\u3002\u52a1\u5fc5\u6839\u636e\u6a21\u578b\u8bbe\u5b9a\u6b63\u786e\u7684\u5f20\u91cf\u5e76\u884c\u89c4\u6a21\uff08<code>TP</code>\uff09\uff1b\u4e0b\u8868\u7ed9\u51fa\u4e86\u63a8\u8350\u503c\uff1a</p> \u6a21\u578b\u89c4\u6a21 \u5f20\u91cf\u5e76\u884c\u89c4\u6a21 (<code>TP</code>) 7B 1 13B 2 70B 8 <p>\u8bbe\u7f6e\u597d <code>TP</code> \u5e76\u63d0\u4f9b Llama-2 tokenizer\uff08\u968f\u539f\u59cb\u68c0\u67e5\u70b9\u4e0b\u8f7d\uff0c\u89c1 <code>${TOKENIZER_MODEL}</code>\uff09\u540e\uff0c\u5728 Megatron \u4ed3\u5e93\u6839\u76ee\u5f55\u8fd0\u884c\uff1a</p> <pre><code>python tools/checkpoint/convert.py \\\n&gt;   --model-type GPT \\\n&gt;   --loader llama_mistral \\\n&gt;   --load-dir ${HF_FORMAT_DIR} \\\n&gt;   --model-size ${MODEL_SIZE} \\\n&gt;   --checkpoint-type hf \\\n&gt;   --tokenizer-model ${TOKENIZER_MODEL} \\\n&gt;   --saver core \\\n&gt;   --save-dir ${MEGATRON_FORMAT_DIR} \\\n&gt;   --target-tensor-parallel-size ${TP} \\\n&gt;   --target-pipeline-parallel-size ${PP} \\\n&gt;   --bf16\n</code></pre> <p>\u8f6c\u6362\u5b8c\u6210\u540e\u5373\u53ef\u5c06\u68c0\u67e5\u70b9\u52a0\u8f7d\u5230 Megatron GPT \u6a21\u578b\u4e2d\u3002</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#_2","title":"\u542f\u52a8\u6a21\u578b","text":""},{"location":"megatron/docs/llama_mistral/#megatron","title":"\u8c03\u6574 Megatron \u542f\u52a8\u53c2\u6570","text":"<p>\u65e0\u8bba\u63a8\u7406\u6216\u5fae\u8c03\uff0c\u53ef\u53c2\u8003\u4ee5\u4e0b\u5e38\u7528\u53c2\u6570\uff1a</p> <pre><code>--tensor-model-parallel-size ${TP} \\\n--pipeline-model-parallel-size 1 \\\n--seq-length 4096 \\\n--max-position-embeddings 4096 \\\n--tokenizer-type Llama2Tokenizer \\\n--tokenizer-model ${TOKENIZER_MODEL} \\\n--load ${CHECKPOINT_DIR} \\\n--exit-on-missing-checkpoint \\\n--use-checkpoint-args \\\n--no-load-optim \\\n--no-load-rng \\\n--untie-embeddings-and-output-weights \\\n--use-rotary-position-embeddings \\\n--normalization RMSNorm \\\n--no-position-embedding \\\n--no-masked-softmax-fusion \\\n--attention-softmax-in-fp32\n</code></pre> <p>\u6ce8\u610f\uff1a \u82e5\u8f6c\u6362\u65f6\u4f7f\u7528\u4e86\u65e7\u7248\u6a21\u578b\u683c\u5f0f\uff08<code>--saver legacy</code>\uff09\uff0c\u8bf7\u53c2\u9605\u4f7f\u7528\u65e7\u7248\u6a21\u578b\u683c\u5f0f\u3002</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#meta_1","title":"\u4f7f\u7528 Meta \u811a\u672c\u542f\u52a8","text":"<p>Meta \u5b98\u65b9\u63a8\u7406\u811a\u672c\u53ef\u76f4\u63a5\u52a0\u8f7d Meta \u683c\u5f0f\u68c0\u67e5\u70b9\uff0c\u4ee3\u7801\u4f4d\u4e8e\uff1ahttps://github.com/facebookresearch/llama</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#huggingface_1","title":"\u4f7f\u7528 HuggingFace \u542f\u52a8","text":"<p>HuggingFace Transformers \u63d0\u4f9b\u4e86 Llama \u63a8\u7406\u4ee3\u7801\uff0c\u53ef\u5728\u6b64\u67e5\u770b\uff1ahttps://github.com/huggingface/transformers/blob/main/src/transformers/models/llama/modeling_llama.py</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#_3","title":"\u57fa\u51c6\u7ed3\u679c","text":"<p>\u4e0b\u5217\u8868\u683c\u6bd4\u8f83\u4e86 Meta \u539f\u751f\u63a8\u7406\uff08\u4f7f\u7528 Meta \u683c\u5f0f\u68c0\u67e5\u70b9\uff09\u4e0e Megatron \u63a8\u7406\uff08\u4f7f\u7528\u8f6c\u6362\u540e\u7684 HF \u68c0\u67e5\u70b9\uff09\u4e4b\u95f4\u7684\u5dee\u5f02\u3002</p> <p>\u8bef\u5dee\u6309\u7167 <code>|&lt;llama_score&gt; - &lt;megatron_score&gt;| / &lt;llama_score&gt;</code> \u8ba1\u7b97\u3002\u5bf9\u6bcf\u4e2a\u6a21\u578b\u89c4\u6a21\u5171\u7edf\u8ba1 80 \u9879\u6d4b\u8bd5\uff0c\u5e73\u5747\u8bef\u5dee\u4e3a 0.15%\u3002\u5dee\u5f02\u4e3b\u8981\u6e90\u81ea\u4e24\u5957\u5b9e\u73b0\u7684\u6570\u503c\u7ec6\u8282\u4e0d\u540c\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>Megatron \u5728\u81ea\u6ce8\u610f\u529b\u4e0e SwiGLU \u7b49\u4f4d\u7f6e\u4f7f\u7528\u6279\u91cf\u77e9\u9635\u4e58\u6cd5\uff0c\u800c Llama \u5206\u591a\u6b21\u6267\u884c\u3002</li> <li>Megatron \u5728\u81ea\u6ce8\u610f\u529b\u4e2d\u4f7f\u7528 <code>torch.baddbmm</code>\uff0cLlama \u5219\u4f7f\u7528 <code>torch.matmul</code>\u3002</li> <li>Megatron \u7684\u65cb\u8f6c\u4f4d\u7f6e\u7f16\u7801\u57fa\u4e8e <code>sin</code>/<code>cos</code>\uff0cLlama \u4f7f\u7528 <code>polar</code>/<code>complex</code>\u3002</li> <li>Llama \u5728\u521d\u59cb\u5316\u65f6\u8c03\u7528 <code>torch.set_default_dtype(torch.float16)</code>\uff0cMegatron \u5219\u6ca1\u6709\u3002</li> </ul> <p></p>"},{"location":"megatron/docs/llama_mistral/#big-bench","title":"Big Bench","text":"\u6570\u636e\u96c6 7B 13B 70B date_understanding 0.29% 0.13% 0.12% general_knowledge 0.00% 0.00% 0.00% human_organs_senses 0.00% 0.00% 0.00% intent_recognition 0.00% 0.11% 0.00% riddle_sense 0.00% 0.00% 0.00% similarities_abstraction 0.00% 0.58% 0.00% simple_arithmetic_json_multiple_choice 0.00% 0.00% 0.00% undo_permutation 0.19% 0.19% 0.18%"},{"location":"megatron/docs/llama_mistral/#_4","title":"\u591a\u8bed\u8a00\u57fa\u51c6","text":"\u6570\u636e\u96c6 7B 13B 70B en-template-mGPT-remove-punctuation 0.08% 0.00% 0.00% et-template-mGPT-remove-punctuation 0.00% 0.13% 0.25% ht-template-mGPT-remove-punctuation 0.26% 0.13% 0.26% id-template-mGPT-remove-punctuation 0.11% 0.00% 0.19% it-template-mGPT-remove-punctuation 0.00% 0.10% 0.09% qu-template-mGPT-remove-punctuation 0.00% 0.00% 0.27% sw-template-mGPT-remove-punctuation 0.14% 0.13% 0.13% th-template-mGPT-remove-punctuation 0.25% 0.13% 0.13% tr-template-mGPT-remove-punctuation 0.26% 0.00% 0.34% vi-template-mGPT-remove-punctuation 0.00% 0.11% 0.00% zh-template-mGPT-remove-punctuation 0.00% 0.10% 0.09%"},{"location":"megatron/docs/llama_mistral/#lm-evaluation-harness","title":"LM Evaluation Harness","text":"\u6570\u636e\u96c6 7B 13B 70B boolq 0.04% 0.04% 0.07% hellaswag 0.02% 0.03% 0.03% piqa 0.00% 0.00% 0.07% winogrande 0.00% 0.11% 0.20%"},{"location":"megatron/docs/llama_mistral/#mmlu","title":"MMLU","text":"\u5206\u7c7b 7B 13B 70B stem [18] 0.79% 0.05% 0.01% humanities [13] 0.19% 0.01% 0.02% other (business, health, misc.) [14] 0.08% 0.06% 0.12% social sciences [12] 0.37% 0.21% 0.01%"},{"location":"megatron/docs/llama_mistral/#llama-3x","title":"Llama-3.x","text":"<p>Llama-3.x \u68c0\u67e5\u70b9\u4e5f\u53ef\u4ee5\u5728 Megatron \u4e2d\u7528\u4e8e\u63a8\u7406\u6216\u5fae\u8c03\uff0c\u6d41\u7a0b\u6db5\u76d6\uff1a</p> <ol> <li>\u4e0b\u8f7d\u6743\u91cd\u4e0e tokenizer\u3002</li> <li>\u5c06 HuggingFace \u683c\u5f0f\u8f6c\u6362\u4e3a Megatron \u683c\u5f0f\u3002</li> <li>\uff08\u53ef\u9009\uff09\u9a8c\u8bc1\u8f6c\u6362\u7ed3\u679c\u3002</li> <li>\u8bbe\u7f6e\u542f\u52a8\u53c2\u6570\u3002</li> </ol> <p></p>"},{"location":"megatron/docs/llama_mistral/#huggingface_2","title":"\u4e0b\u8f7d HuggingFace \u68c0\u67e5\u70b9","text":"<p>\u4ece HuggingFace \u83b7\u53d6\u6240\u9700\u7684 Llama-3.x \u68c0\u67e5\u70b9\uff08\u9700\u63d0\u524d\u7533\u8bf7\uff09\u3002</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#_5","title":"\u8f6c\u6362\u68c0\u67e5\u70b9\u683c\u5f0f","text":""},{"location":"megatron/docs/llama_mistral/#huggingface_3","title":"HuggingFace \u683c\u5f0f","text":"<p>\u4f7f\u7528 Megatron \u63d0\u4f9b\u7684 Llama-3.x \u8f6c\u6362\u811a\u672c\uff08\u540c\u6837\u4f4d\u4e8e <code>tools/checkpoint/loader_llama_mistral.py</code>\uff09\uff0c\u5373\u53ef\u5c06 HF \u683c\u5f0f\u8f6c\u6362\u4e3a Megatron \u683c\u5f0f\u3002\u5173\u952e\u53c2\u6570\u5305\u62ec\u5f20\u91cf\u5e76\u884c\u89c4\u6a21 <code>TP</code> \u4e0e tokenizer \u8def\u5f84\u3002</p> \u6a21\u578b\u89c4\u6a21 \u5f20\u91cf\u5e76\u884c\u89c4\u6a21 (<code>TP</code>) 1B 1 3B 1 8B 1 70B 8 <pre><code>python tools/checkpoint/convert.py \\\n  --model-type GPT \\\n  --loader llama_mistral \\\n  --checkpoint-type hf \\\n  --tokenizer-model ${TOKENIZER_MODEL} \\\n  --load-dir ${HF_CHECKPOINT_DIR} \\\n  --save-dir ${MEGATRON_FORMAT_DIR} \\\n  --saver core \\\n  --target-tensor-parallel-size ${TP} \\\n  --target-pipeline-parallel-size ${PP} \\\n  --bf16\n</code></pre> <p>Megatron \u4f1a\u6839\u636e\u8bbe\u5b9a\u7684 TP \u503c\u62c6\u5206\u6743\u91cd\u6587\u4ef6\u3002<code>--tokenizer-model</code> \u6307\u5411\u5bf9\u5e94\u7684 tokenizer \u6a21\u578b\u3002</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#_6","title":"\uff08\u53ef\u9009\uff09\u9a8c\u8bc1\u68c0\u67e5\u70b9","text":"<p>\u8f6c\u6362\u5b8c\u6210\u540e\uff0c\u53ef\u4f7f\u7528 <code>examples/inference/llama_mistral/run_text_generation_llama3.sh &lt;PATH_TO_CONVERTED_CORE_CHECKPOINT&gt; &lt;PATH_TO_DOWNLOADED_HUGGINGFACE_CHECKPOINT&gt;</code> \u542f\u52a8 Megatron \u6587\u672c\u751f\u6210\u670d\u52a1\u3002\u5bf9\u4e8e Llama3.1\uff0c\u8bf7\u4f7f\u7528 <code>run_text_generation_llama3.1.sh</code>\u3002</p> <p>\u670d\u52a1\u542f\u52a8\u540e\uff0c\u53ef\u901a\u8fc7 <code>curl 'http://&lt;TEXT_GENERATION_SERVER_IP&gt;:5000/api' -X 'PUT' -H 'Content-Type: application/json; charset=UTF-8' -d '{\"prompts\":[\"&lt;SOME_PROMPT&gt;\"], \"tokens_to_generate\":100, \"top_k\":1}'</code> \u8fdb\u884c\u6d4b\u8bd5\u3002</p> <p>\u53ef\u8fd0\u884c <code>python examples/llama_mistral/huggingface_reference.py --model_path &lt;PATH_TO_DOWNLOADED_HUGGINGFACE_CHECKPOINT&gt; --prompt &lt;SOME_PROMPT&gt;</code> \u83b7\u5f97 HuggingFace \u53c2\u8003\u7ed3\u679c\u3002</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#_7","title":"\u542f\u52a8\u6a21\u578b","text":"<p>\u63a8\u7406\u6216\u5fae\u8c03\u65f6\u5e38\u7528\u7684\u53c2\u6570\u793a\u4f8b\uff1a</p> <pre><code>--tensor-model-parallel-size ${TP} \\\n--pipeline-model-parallel-size 1 \\\n--seq-length 8192 \\\n--max-position-embeddings 8192 \\\n--tokenizer-type HuggingFaceTokenizer \\\n--tokenizer-model ${TOKENIZER_MODEL} \\\n--load ${CHECKPOINT_DIR} \\\n--exit-on-missing-checkpoint \\\n--use-checkpoint-args \\\n--no-load-optim \\\n--no-load-rng \\\n--untie-embeddings-and-output-weights \\\n--normalization RMSNorm \\\n--position-embedding-type rope \\\n--no-masked-softmax-fusion \\\n--attention-softmax-in-fp32 \\\n--disable-bias-linear \\\n--transformer-impl transformer_engine \\\n--group-query-attention 8 \\\n--attention-dropout 0.0 \\\n--hidden-dropout 0.0 \\\n--rotary-base 500000 \\\n--rotary-percent 1.0 \\\n--ffn-hidden-size 14336 \\\n--num-attention-heads 32 \\\n--swiglu \\\n--bf16 \\\n</code></pre> <p>\u5bf9\u4e8e Llama3.1\uff0c\u53ef\u4f7f\u7528\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <pre><code>--tensor-model-parallel-size ${TP} \\\n--pipeline-model-parallel-size 1 \\\n--seq-length 8192 \\\n--max-position-embeddings 131072 \\\n--tokenizer-type HuggingFaceTokenizer \\\n--tokenizer-model ${TOKENIZER_MODEL} \\\n--load ${CHECKPOINT_DIR} \\\n--exit-on-missing-checkpoint \\\n--use-checkpoint-args \\\n--no-load-optim \\\n--no-load-rng \\\n--untie-embeddings-and-output-weights \\\n--normalization RMSNorm \\\n--position-embedding-type rope \\\n--no-masked-softmax-fusion \\\n--attention-softmax-in-fp32 \\\n--disable-bias-linear \\\n--transformer-impl transformer_engine \\\n--group-query-attention 8 \\\n--attention-dropout 0.0 \\\n--hidden-dropout 0.0 \\\n--rotary-base 500000 \\\n--rotary-percent 1.0 \\\n--use-rope-scaling \\\n--ffn-hidden-size 14336 \\\n--num-attention-heads 32 \\\n--swiglu \\\n--bf16 \\\n</code></pre> <p>\u6ce8\u610f\uff1a \u82e5\u8f6c\u6362\u65f6\u4f7f\u7528 <code>--saver legacy</code>\uff0c\u8bf7\u53c2\u9605\u4f7f\u7528\u65e7\u7248\u6a21\u578b\u683c\u5f0f\u3002</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#mistral-7b","title":"Mistral-7B","text":"<p>Megatron \u76ee\u524d\u652f\u6301\u52a0\u8f7d Mistral-7B v0.3\uff08\u4e0d\u5305\u542b\u6ed1\u52a8\u7a97\u53e3\u6ce8\u610f\u529b\uff0c\u8bcd\u8868 32768\uff09\u8fdb\u884c\u63a8\u7406\u4e0e\u5fae\u8c03\u3002\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u83b7\u53d6\u6743\u91cd\u4e0e tokenizer\u3002</li> <li>\u5c06 HuggingFace \u683c\u5f0f\u8f6c\u6362\u4e3a Megatron \u683c\u5f0f\u3002</li> <li>\uff08\u53ef\u9009\uff09\u9a8c\u8bc1\u8f6c\u6362\u540e\u7684\u68c0\u67e5\u70b9\u3002</li> <li>\u914d\u7f6e\u542f\u52a8\u53c2\u6570\u3002</li> </ol> <p></p>"},{"location":"megatron/docs/llama_mistral/#huggingface_4","title":"\u4e0b\u8f7d HuggingFace \u68c0\u67e5\u70b9","text":"<p>\u4ece HuggingFace \u4e0b\u8f7d Mistral-7B \u68c0\u67e5\u70b9\uff08\u9700\u63d0\u524d\u7533\u8bf7\uff09\u3002</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#_8","title":"\u8f6c\u6362\u68c0\u67e5\u70b9\u683c\u5f0f","text":"<p>\u5229\u7528 Megatron \u81ea\u5e26\u7684\u8f6c\u6362\u811a\u672c <code>tools/checkpoint/loader_llama_mistral.py</code>\uff0c\u53ef\u5c06 HF \u683c\u5f0f\u8f6c\u6362\u4e3a Megatron \u683c\u5f0f\u3002\u6267\u884c\u793a\u4f8b\uff1a</p> <pre><code>$&gt;: python tools/checkpoint/convert.py \\\n &gt;    --bf16 \\\n &gt;    --model-type GPT \\\n &gt;    --loader llama_mistral \\\n &gt;    --saver core \\\n &gt;    --target-tensor-parallel-size ${TP} \\\n &gt;    --checkpoint-type hf \\\n &gt;    --load-dir ${HF_FORMAT_DIR} \\\n &gt;    --save-dir ${MEGATRON_FORMAT_DIR} \\\n &gt;    --tokenizer-model ${TOKENIZER_MODEL} \\\n &gt;    --model-size mistral \\\n</code></pre> <p>\u8f6c\u6362\u5b8c\u6210\u540e\u5373\u53ef\u5728 Megatron Core \u7684 GPT \u6a21\u578b\u4e2d\u52a0\u8f7d\u65b0\u7684\u68c0\u67e5\u70b9\u3002</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#_9","title":"\uff08\u53ef\u9009\uff09\u9a8c\u8bc1\u68c0\u67e5\u70b9","text":"<p>\u53ef\u901a\u8fc7\u811a\u672c <code>examples/inference/llama_mistral/run_text_generation_mistral.sh &lt;PATH_TO_CONVERTED_MCORE_CHECKPOINT&gt; &lt;PATH_TO_DOWNLOADED_HUGGINGFACE_CHECKPOINT&gt;</code> \u542f\u52a8\u6587\u672c\u751f\u6210\u670d\u52a1\uff0c\u5e76\u7528\u5982\u4e0b\u8bf7\u6c42\u6d4b\u8bd5\uff1a</p> <pre><code>curl 'http://&lt;TEXT_GENERATION_SERVER_IP&gt;:5000/api' -X 'PUT' \\\n  -H 'Content-Type: application/json; charset=UTF-8' \\\n  -d '{\"prompts\":[\"&lt;SOME_PROMPT&gt;\"], \"tokens_to_generate\":100, \"top_k\":1}'\n</code></pre> <p>\u540c\u65f6\u53ef\u8fd0\u884c <code>python examples/inference/llama_mistral/huggingface_reference.py --model_path &lt;PATH_TO_DOWNLOADED_HUGGINGFACE_CHECKPOINT&gt; --prompt &lt;SOME_PROMPT&gt;</code> \u83b7\u53d6 HuggingFace \u53c2\u8003\u7ed3\u679c\u8fdb\u884c\u5bf9\u6bd4\u3002</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#_10","title":"\u542f\u52a8\u6a21\u578b","text":"<p>\u63a8\u7406\u6216\u5fae\u8c03 Mistral-7B \u65f6\u5e38\u7528\u7684\u53c2\u6570\uff1a</p> <pre><code>--tensor-model-parallel-size ${TP} \\\n--pipeline-model-parallel-size 1 \\\n--seq-length 4096 \\\n--max-position-embeddings 4096 \\\n--tokenizer-type HuggingFaceTokenizer \\\n--tokenizer-model ${TOKENIZER_MODEL} \\\n--load ${CHECKPOINT_DIR} \\\n--exit-on-missing-checkpoint \\\n--use-checkpoint-args \\\n--no-load-optim \\\n--no-load-rng \\\n--untie-embeddings-and-output-weights \\\n--normalization RMSNorm \\\n--position-embedding-type rope \\\n--no-masked-softmax-fusion \\\n--attention-softmax-in-fp32 \\\n--apply-layernorm-1p \\\n--transformer-impl transformer_engine \\\n--group-query-attention 8 \\\n--disable-bias-linear \\\n--rotary-base 1000000 \\\n--rotary-percent 1.0 \\\n--swiglu \\\n--ffn-hidden-size 14336 \\\n--num-attention-heads 32\n</code></pre> <p>\u6ce8\u610f\uff1a \u82e5\u4f7f\u7528 <code>--saver legacy</code> \u8f6c\u6362\uff0c\u8bf7\u53c2\u9605\u4f7f\u7528\u65e7\u7248\u6a21\u578b\u683c\u5f0f\u3002</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#llama","title":"\u5176\u4ed6 Llama \u7cfb\u6a21\u578b\u652f\u6301","text":"<p>\u6ce8\u610f\uff1a\u5b9e\u9a8c\u6027\u529f\u80fd</p> <p>\u8bb8\u591a\u6a21\u578b\uff08\u4f8b\u5982 Yi-34B\u3001Qwen2.x\uff09\u91c7\u7528\u4e0e Llama \u7c7b\u4f3c\u7684\u67b6\u6784\uff0c\u53ef\u6309Llama-3.x \u90e8\u5206\u7ed9\u51fa\u7684\u547d\u4ee4\u5c06 HuggingFace \u68c0\u67e5\u70b9\u8f6c\u6362\u4e3a Megatron \u683c\u5f0f\u3002</p> <p></p>"},{"location":"megatron/docs/llama_mistral/#_11","title":"\u5df2\u77e5\u6570\u503c\u5dee\u5f02","text":"<p>Megatron \u4e0e HuggingFace \u5bf9 Llama-3.x\u3001Mistral \u6a21\u578b\u7684\u5b9e\u73b0\u5e76\u975e\u6570\u503c\u5b8c\u5168\u4e00\u81f4\uff0c\u5b58\u5728\u4e00\u4e9b\u9884\u671f\u5185\u7684\u7ec6\u5fae\u5dee\u5f02\uff0c\u4f8b\u5982\uff1a</p> <ol> <li>TransformerEngine \u5728 RMSNorm \u5185\u4f7f\u7528\u6a21\u578b\u7684 <code>params_dtype</code>\uff0c\u800c HuggingFace \u4f7f\u7528 FP32\u3002\u8be6\u89c1\uff1ahttps://github.com/NVIDIA/TransformerEngine/issues/1132</li> <li>HuggingFace \u5c06\u81ea\u6ce8\u610f\u529b\u4e2d\u7684 q\u3001k\u3001v \u6295\u5f71\u62c6\u5206\u4e3a\u4e09\u4e2a GEMM\uff0c\u800c Megatron \u4f1a\u5408\u5e76\u4e3a\u4e00\u6b21 GEMM\uff0c\u4ee5\u63d0\u9ad8\u6548\u7387\uff0c\u4ece\u800c\u5e26\u6765\u5fae\u5c0f\u6570\u503c\u5dee\u522b\u3002</li> </ol> <p></p>"},{"location":"megatron/docs/llama_mistral/#_12","title":"\u4f7f\u7528\u65e7\u7248\u6a21\u578b\u683c\u5f0f","text":"<p>\u672c\u6587\u793a\u4f8b\u5747\u4f7f\u7528 <code>--saver core</code>\uff0c\u5373\u65b0\u7248 Megatron GPT \u6a21\u578b\u7c7b\uff1a</p> <ul> <li>\u65e7\u7c7b\uff1a<code>megatron.legacy.model.gpt_model.GPTModel</code></li> <li>\u65b0\u7c7b\uff1a<code>megatron.core.models.gpt.gpt_model.GPTModel</code></li> </ul> <p>\u63a8\u8350\u4f7f\u7528\u65b0\u683c\u5f0f\u3002\u5982\u679c\u9700\u8981\u4f7f\u7528\u65e7\u7c7b\uff08\u5373\u8f6c\u6362\u65f6\u6307\u5b9a <code>--saver legacy</code>\uff09\uff0c\u5728\u542f\u52a8\u8bad\u7ec3\u6216\u5fae\u8c03\u65f6\u9700\u989d\u5916\u4f20\u5165\uff1a</p> <ul> <li><code>--use-legacy-models</code>\uff1a\u542f\u7528\u65e7\u7248\u6a21\u578b\u7c7b</li> <li><code>--ckpt-format torch</code>\uff1a\u4f7f\u7528 <code>torch</code> \u68c0\u67e5\u70b9\u683c\u5f0f\uff08\u65e7\u7248\u6a21\u578b\u552f\u4e00\u517c\u5bb9\u7684\u683c\u5f0f\uff09</li> </ul>"},{"location":"megatron/docs/source/","title":"\u7528\u6237\u6307\u5357\u7d22\u5f15","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p>"},{"location":"megatron/docs/source/#megatron-core","title":"Megatron Core \u7528\u6237\u6307\u5357","text":"<p>Megatron Core \u63d0\u4f9b Megatron-LM \u8bad\u7ec3\u6240\u9700\u7684\u6838\u5fc3\u7ec4\u4ef6\uff0c\u6db5\u76d6\u5f20\u91cf\u5e76\u884c\u3001\u6d41\u6c34\u7ebf\u5e76\u884c\u3001MoE \u7b49\u9ad8\u9636\u80fd\u529b\u3002\u4ee5\u4e0b\u5165\u53e3\u53ef\u5e2e\u52a9\u4f60\u5feb\u901f\u5b9a\u4f4d\u9700\u8981\u7684\u6587\u6863\uff1a</p> <ul> <li>\u7528\u6237\u6307\u5357\u6982\u89c8</li> <li>API \u6307\u5357\u76ee\u5f55</li> </ul>"},{"location":"megatron/docs/source/api-guide/","title":"API \u6307\u5357","text":"<ul> <li>models</li> <li>tensor_parallel</li> <li>context_parallel</li> <li>pipeline_parallel</li> <li>custom_fsdp</li> <li>fusions</li> <li>transformer</li> <li>moe</li> <li>dist_checkpointing</li> <li>dist_optimizer</li> <li>distributed</li> <li>datasets</li> <li>multi_latent_attention</li> <li>num_microbatches_calculator</li> <li>optimizer_param_scheduler</li> <li>optimizer_cpu_offload</li> <li>multi_token_prediction</li> <li>tokenizers</li> </ul>"},{"location":"megatron/docs/source/api-guide/context_parallel/","title":"context_parallel \u6a21\u5757","text":""},{"location":"megatron/docs/source/api-guide/context_parallel/#context-parallelism","title":"Context parallelism \u6982\u8ff0","text":"<p>\u56fe 1\uff1aTransformer \u5c42\u5728 TP2CP2 \u914d\u7f6e\u4e0b\u7684\u8fd0\u884c\u793a\u610f\u3002Attention \u65c1\u8fb9\u7684\u901a\u4fe1\u5c5e\u4e8e CP\uff0c\u5176\u4f59\u5c5e\u4e8e TP\u3002\uff08AG/RS\uff1a\u524d\u5411 all-gather\u3001\u53cd\u5411 reduce-scatter\uff1bRS/AG\uff1a\u524d\u5411 reduce-scatter\u3001\u53cd\u5411 all-gather\uff1b/AG\uff1a\u524d\u5411\u7a7a\u64cd\u4f5c\u3001\u53cd\u5411 all-gather\uff09\u3002</p> <p>Context Parallelism\uff08\u7b80\u79f0 \u201cCP\u201d\uff09\u662f\u4e00\u79cd\u9488\u5bf9\u5e8f\u5217\u957f\u5ea6\u7ef4\u5ea6\u7684\u5e76\u884c\u65b9\u6848\u3002\u4e0e\u5148\u524d\u7684\u5e8f\u5217\u5e76\u884c\uff08SP\uff09\u4ec5\u62c6\u5206 Dropout \u4e0e LayerNorm \u6fc0\u6d3b\u4e0d\u540c\uff0cCP \u4f1a\u6cbf\u5e8f\u5217\u7ef4\u5ea6\u5207\u5206\u7f51\u7edc\u8f93\u5165\u53ca\u6240\u6709\u6fc0\u6d3b\u3002\u4f7f\u7528 CP \u65f6\uff0c\u9664\u6ce8\u610f\u529b\u6a21\u5757\u5916\u7684\u5176\u4ed6\u7b97\u5b50\uff08\u5982\u7ebf\u6027\u5c42\u3001LayerNorm \u7b49\uff09\u5747\u65e0\u9700\u4fee\u6539\uff0c\u56e0\u4e3a\u5b83\u4eec\u6ca1\u6709\u8de8 token \u7684\u64cd\u4f5c\u3002\u5bf9\u4e8e\u6ce8\u610f\u529b\u800c\u8a00\uff0c\u6bcf\u4e2a token \u7684 Q\uff08query\uff09\u9700\u8981\u4e0e\u540c\u4e00\u5e8f\u5217\u4e2d\u6240\u6709 token \u7684 K/V\uff08key/value\uff09\u8ba1\u7b97\uff0c\u56e0\u6b64 CP \u9700\u8981\u5728\u591a\u5361\u4e4b\u95f4\u989d\u5916\u6267\u884c all-gather \u6765\u6536\u96c6\u5b8c\u6574\u7684 KV \u5e8f\u5217\uff0c\u5e76\u5728\u53cd\u5411\u4f20\u64ad\u65f6\u5bf9 KV \u7684\u6fc0\u6d3b\u68af\u5ea6\u6267\u884c reduce-scatter\u3002\u4e3a\u4e86\u964d\u4f4e\u6fc0\u6d3b\u5360\u7528\uff0c\u6bcf\u5f20 GPU \u5728\u524d\u5411\u9636\u6bb5\u53ea\u4fdd\u5b58\u81ea\u5df1\u8d1f\u8d23\u7684\u5e8f\u5217\u6bb5\u5bf9\u5e94\u7684 KV\uff0c\u5e76\u5728\u53cd\u5411\u65f6\u91cd\u65b0\u805a\u5408\u3002KV \u7684\u901a\u4fe1\u53d1\u751f\u5728\u4e0d\u540c\u5f20\u91cf\u5e76\u884c\u7ec4\u7684\u5bf9\u5e94 GPU \u4e4b\u95f4\uff0c\u5176 all-gather \u4e0e reduce-scatter \u5728\u5e95\u5c42\u88ab\u8f6c\u6362\u4e3a\u73af\u5f62\u62d3\u6251\u4e0a\u7684\u70b9\u5bf9\u70b9\u901a\u4fe1\u3002\u82e5\u91c7\u7528 MQA/GQA \u7b49\u65b9\u6848\uff0c\u53ea\u9700\u5c11\u91cf\u6ce8\u610f\u529b\u5934\u5373\u53ef\u7ef4\u62a4 KV\uff0c\u4ece\u800c\u8fdb\u4e00\u6b65\u964d\u4f4e\u901a\u4fe1\u91cf\u3002</p> <p>\u4f8b\u5982\u56fe 1 \u4e2d\uff0c\u5047\u8bbe\u5e8f\u5217\u957f\u5ea6\u4e3a 8K\uff0c\u6bcf\u5f20 GPU \u8d1f\u8d23 4K \u4e2a token\u3002GPU0 \u4e0e GPU2 \u7ec4\u6210\u4e00\u4e2a CP \u7ec4\uff0c\u9700\u8981\u4e92\u76f8\u4ea4\u6362 KV\uff1bGPU1 \u4e0e GPU3 \u4ea6\u7136\u3002CP \u4e0e Ring Attention \u76f8\u4f3c\uff0c\u4f46\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u53d6\u5f97\u66f4\u597d\u7684\u6027\u80fd\uff1a(1) \u5229\u7528\u6700\u65b0\u7684\u5f00\u6e90\u4e0e cuDNN flash attention \u5185\u6838\uff1b(2) \u53bb\u9664\u56e0\u4e0b\u4e09\u89d2\u56e0\u679c mask \u5e26\u6765\u7684\u5197\u4f59\u8ba1\u7b97\uff0c\u5b9e\u73b0\u6700\u4f18\u8d1f\u8f7d\u5747\u8861\u3002</p>"},{"location":"megatron/docs/source/api-guide/context_parallel/#context-parallelism_1","title":"Context parallelism \u7684\u6536\u76ca","text":"<p>\u56fe 2\uff1a175B GPT \u5728\u4e0d\u540c TP+CP \u7ec4\u5408\u4e0b\u76f8\u5bf9\u4e8e\u5168\u91cd\u8ba1\u7b97\uff08TP8CP1\uff09\u7684\u52a0\u901f\u6bd4\u3002</p> <p>\u5f53\u4e0a\u4e0b\u6587\u957f\u5ea6\u589e\u957f\u65f6\uff0c\u5927\u8bed\u8a00\u6a21\u578b\u7684\u6fc0\u6d3b\u5185\u5b58\u7ebf\u6027\u589e\u52a0\uff0c\u5bb9\u6613\u906d\u9047 OOM\u3002\u867d\u7136\u53ef\u4ee5\u5728\u53cd\u5411\u9636\u6bb5\u91cd\u8ba1\u7b97\u6fc0\u6d3b\u907f\u514d OOM\uff0c\u4f46\u5f00\u9500\u7ea6\u4e3a 30%\u3002\u5c06\u5f20\u91cf\u5e76\u884c\uff08TP\uff09\u589e\u5927\u4e5f\u80fd\u7f13\u89e3 OOM\uff0c\u4f46\u4f1a\u4f7f\u7b97\u5b50\u66f4\u77ed\uff0c\u4ece\u800c\u96be\u4ee5\u63a9\u853d\u901a\u4fe1\u5ef6\u8fdf\uff1b\u65e0\u8bba\u662f\u5426\u53d1\u751f OOM\uff0c\u6269\u5927 TP \u90fd\u53ef\u80fd\u9047\u5230\u8fd9\u4e00\u95ee\u9898\u3002</p> <p>CP \u80fd\u66f4\u597d\u5730\u89e3\u51b3\u4e0a\u8ff0\u74f6\u9888\u3002\u501f\u52a9 CP\uff0c\u6bcf\u5f20 GPU \u4ec5\u5904\u7406\u5e8f\u5217\u7684\u4e00\u90e8\u5206\uff0c\u8ba1\u7b97\u4e0e\u901a\u4fe1\u91cf\u90fd\u6309 CP \u500d\u6570\u4e0b\u964d\uff0c\u56e0\u6b64\u4e8c\u8005\u4e4b\u95f4\u4e0d\u4f1a\u51fa\u73b0\u91cd\u53e0\u95ee\u9898\u3002\u540c\u65f6\uff0c\u6bcf\u5f20 GPU \u4e0a\u7684\u6fc0\u6d3b\u5360\u7528\u4e5f\u6309 CP \u500d\u6570\u7f29\u5c0f\uff0c\u4ece\u6839\u6e90\u4e0a\u907f\u514d OOM\u3002\u5982\u56fe 2 \u6240\u793a\uff0c\u5408\u7406\u7ec4\u5408 TP \u4e0e CP \u53ef\u4ee5\u5728\u4e0d\u5f15\u5165\u91cd\u8ba1\u7b97\u5f00\u9500\u7684\u60c5\u51b5\u4e0b\uff0c\u5b9e\u73b0\u8ba1\u7b97\u4e0e\u901a\u4fe1\u7684\u6700\u4f73\u5e73\u8861\u3002</p>"},{"location":"megatron/docs/source/api-guide/context_parallel/#context-parallelism_2","title":"\u5982\u4f55\u542f\u7528 context parallelism","text":"<p>GPT \u5df2\u5185\u7f6e CP \u652f\u6301\uff0c\u5171\u4eab GPT \u4ee3\u7801\u8def\u5f84\u7684\u6a21\u578b\uff08\u4f8b\u5982 Llama\uff09\u540c\u6837\u53d7\u76ca\u3002CP \u53ef\u4e0e TP\uff08\u5f20\u91cf\u5e76\u884c\uff09\u3001PP\uff08\u6d41\u6c34\u7ebf\u5e76\u884c\uff09\u3001DP\uff08\u6570\u636e\u5e76\u884c\uff09\u534f\u540c\u5de5\u4f5c\uff0c\u603b GPU \u6570\u4e3a TP \u00d7 CP \u00d7 PP \u00d7 DP\u3002CP \u8fd8\u517c\u5bb9\u591a\u79cd\u6ce8\u610f\u529b\u53d8\u4f53\uff0c\u5305\u62ec MHA\u3001MQA\u3001GQA\uff0c\u4ee5\u53ca\u5355\u5411\u6216\u53cc\u5411\u63a9\u7801\u3002</p> <p>\u5728\u547d\u4ee4\u884c\u8bbe\u7f6e context_parallel_size= \u5373\u53ef\u542f\u7528 CP\u3002\u9ed8\u8ba4\u503c\u4e3a 1\uff0c\u8868\u793a\u5173\u95ed CP\u3002\u542f\u7528 CP \u9700\u8981 Megatron-Core \u7248\u672c\u4e0d\u4f4e\u4e8e 0.5.0\uff0cTransformer Engine \u7248\u672c\u4e0d\u4f4e\u4e8e 1.1\u3002"},{"location":"megatron/docs/source/api-guide/custom_fsdp/","title":"\u81ea\u5b9a\u4e49 FSDP","text":"<p>\u6ce8\u610f\uff1a\u5728 M-Core 0.14 \u4e2d\uff0c\u81ea\u5b9a\u4e49 FSDP \u7684\u68c0\u67e5\u70b9\u5b9e\u73b0\u5df2\u91cd\u6784\u4e3a\u4f7f\u7528\u57fa\u4e8e DTensor \u7684 torch distributed checkpointing\uff0c\u5e76\u66f4\u540d\u4e3a Megatron FSDP\u3002\u672c\u6587\u4e2d\u76f8\u5173\u90e8\u5206\u5df2\u4e0d\u518d\u9002\u7528\u3002</p>"},{"location":"megatron/docs/source/api-guide/custom_fsdp/#mcore-fully-sharded-data-parallel-fsdp","title":"MCore \u81ea\u5b9a\u4e49 Fully Sharded Data Parallel (FSDP)","text":""},{"location":"megatron/docs/source/api-guide/custom_fsdp/#_1","title":"\u5982\u4f55\u4f7f\u7528\uff1f","text":"<p>\u542f\u7528 MCore \u81ea\u5b9a\u4e49 FSDP \u65f6\u9700\u6dfb\u52a0\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <pre><code>--use-megatron-fsdp\n--data-parallel-sharding-strategy optim_grads_params\n--no-gradient-accumulation-fusion\n--use-distributed-optimizer\n</code></pre>"},{"location":"megatron/docs/source/api-guide/custom_fsdp/#_2","title":"\u5173\u952e\u7279\u6027","text":"<ul> <li>\u5206\u7247\u7b56\u7565\uff1a\u9ad8\u6548\u5730\u5bf9\u4f18\u5316\u5668\u72b6\u6001\u3001\u68af\u5ea6\u4e0e\u53c2\u6570\u8fdb\u884c\u5206\u7247\uff0c\u663e\u8457\u964d\u4f4e\u5185\u5b58\u5360\u7528\u3002</li> <li>\u901a\u4fe1\u4e0e\u8ba1\u7b97\u91cd\u53e0\uff1a\u9488\u5bf9\u901a\u4fe1\u4e0e\u8ba1\u7b97\u5e76\u884c\u6267\u884c\u8fdb\u884c\u4e86\u4f18\u5316\uff0c\u53ef\u63d0\u5347\u6574\u4f53\u6548\u7387\u3002</li> <li>\u652f\u6301\u81ea\u52a8\u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3\uff1a\u517c\u5bb9 BF16 O1/O2/O3 \u914d\u65b9\uff0c\u4ee5\u53ca FP8 \u8ba1\u7b97\uff08FP32 \u53c2\u6570\uff09\u4e0e FP8 \u53c2\u6570\u8bad\u7ec3\uff0c\u4fbf\u4e8e\u7075\u6d3b\u914d\u7f6e\u7cbe\u5ea6\u3002</li> <li>\u5f20\u91cf\u5e76\u884c (TP)\u3001\u4e13\u5bb6\u5e76\u884c (EP) \u4e0e\u4e0a\u4e0b\u6587\u5e76\u884c (CP)\uff1a\u53ef\u4e0e TP\u3001EP\u3001CP \u914d\u7f6e\u7ec4\u5408\uff0c\u652f\u6301\u5927\u89c4\u6a21\u8bed\u8a00\u6a21\u578b\u7684\u9ad8\u6548\u6269\u5c55\u3002</li> <li>\u4f7f\u7528 Meta \u8bbe\u5907\u8fdb\u884c\u5206\u5e03\u5f0f\u6a21\u578b\u521d\u59cb\u5316\uff1a\u5141\u8bb8\u5148\u5728 meta \u8bbe\u5907\u4e0a\u521d\u59cb\u5316\u6a21\u578b\uff0c\u518d\u901a\u8fc7 <code>Module.reset_parameters</code> API \u9010\u5c42\u521d\u59cb\u5316\u5206\u5e03\u5f0f\u6743\u91cd\u7f13\u51b2\u533a\uff0c\u6709\u52a9\u4e8e\u6784\u5efa\u8d85\u5927\u6a21\u578b\u3002</li> </ul>"},{"location":"megatron/docs/source/api-guide/custom_fsdp/#_3","title":"\u914d\u7f6e\u5efa\u8bae","text":""},{"location":"megatron/docs/source/api-guide/custom_fsdp/#1-cuda_device_max_connections","title":"1. \u7981\u7528 <code>CUDA_DEVICE_MAX_CONNECTIONS</code>","text":"<p>\u4e3a\u4fdd\u8bc1 FSDP \u901a\u4fe1\u4e0e\u8ba1\u7b97\u7684\u5b8c\u5168\u5e76\u884c\u5316\uff0c\u5e94\u5173\u95ed\u73af\u5883\u53d8\u91cf <code>CUDA_DEVICE_MAX_CONNECTIONS</code>\u3002\u6b64\u64cd\u4f5c\u80fd\u907f\u514d CUDA \u6d41\u4e2d\u51fa\u73b0\u6c14\u6ce1\uff08\u4f46\u53ef\u80fd\u4f1a\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u964d\u4f4e TP \u4e0e CP \u7684\u901f\u5ea6\uff09\u3002</p> <pre><code>unset CUDA_DEVICE_MAX_CONNECTIONS\n</code></pre>"},{"location":"megatron/docs/source/api-guide/custom_fsdp/#2-calculate-per-token-loss","title":"2. \u6dfb\u52a0 <code>--calculate-per-token-loss</code>","text":"<p>\u5728\u68af\u5ea6\u5206\u7247\u6a21\u5f0f\u4e0b\uff0c\u5efa\u8bae\u5728\u8bad\u7ec3\u811a\u672c\u4e2d\u6dfb\u52a0 <code>--calculate-per-token-loss</code> \u53c2\u6570\u3002\u8be5\u53c2\u6570\u53ef\u964d\u4f4e\u68af\u5ea6\u7f29\u653e\u7684\u9891\u7387\uff0c\u51cf\u5c11\u5bf9 SM \u8d44\u6e90\u7684\u6d88\u8017\uff0c\u4ece\u800c\u63d0\u5347\u6027\u80fd\u3002</p>"},{"location":"megatron/docs/source/api-guide/custom_fsdp/#fsdp","title":"\u81ea\u5b9a\u4e49 FSDP \u8bbe\u8ba1","text":""},{"location":"megatron/docs/source/api-guide/custom_fsdp/#1","title":"1. \u6982\u89c8","text":"<p>Megatron-Core \u4e2d\u7684\u81ea\u5b9a\u4e49 Fully Sharded Data Parallelism (FSDP) \u65e8\u5728\u5728\u8bad\u7ec3\u5927\u578b\u8bed\u8a00\u6a21\u578b\u65f6\u4f18\u5316\u5185\u5b58\u5360\u7528\u4e0e\u6027\u80fd\u3002\u5176\u6838\u5fc3\u8bbe\u8ba1\u539f\u5219\u5305\u62ec\uff1a</p> <ul> <li>\u9762\u5411\u5927\u578b\u8bed\u8a00\u6a21\u578b\u4f18\u5316\uff1a\u81ea\u5b9a\u4e49 FSDP \u9488\u5bf9\u62e5\u6709\u6570\u5341\u4ebf\u53c2\u6570\u7684\u6a21\u578b\u8fdb\u884c\u4e86\u6269\u5c55\u4f18\u5316\uff0c\u4f7f\u5927\u6a21\u578b\u8bad\u7ec3\u66f4\u52a0\u987a\u7545\u3002</li> <li>\u9ad8\u6548\u7684\u5185\u5b58\u4f7f\u7528\uff1a\u901a\u8fc7\u5bf9\u4f18\u5316\u5668\u72b6\u6001\u3001\u68af\u5ea6\u4e0e\u6a21\u578b\u53c2\u6570\u8fdb\u884c\u7b56\u7565\u6027\u5206\u7247\uff0c\u5927\u5e45\u964d\u4f4e\u5185\u5b58\u5360\u7528\uff0c\u4f7f\u539f\u672c\u65e0\u6cd5\u88c5\u5165\u663e\u5b58\u7684\u6a21\u578b\u5f97\u4ee5\u8bad\u7ec3\u3002</li> <li>\u9ad8\u6548\u5de5\u4f5c\u6d41\u4e0e\u901a\u4fe1\u8ba1\u7b97\u91cd\u53e0\uff1a\u8bbe\u8ba1\u4e0a\u51cf\u5c11\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u901a\u4fe1\u6b65\u9aa4\uff0c\u5e76\u6700\u5927\u5316\u901a\u4fe1\u4e0e\u8ba1\u7b97\u7684\u91cd\u53e0\uff0c\u4ee5\u63d0\u5347\u6548\u7387\u3001\u964d\u4f4e\u5ef6\u8fdf\u3002</li> <li>\u652f\u6301 MCore \u7684\u9ad8\u6548\u8bad\u7ec3\u65b9\u6cd5\uff1a\u4e0e Megatron-Core \u7684\u9ad8\u7ea7\u5e76\u884c\u6280\u672f\uff08\u5f20\u91cf\u5e76\u884c\u3001\u4e13\u5bb6\u5e76\u884c\u3001\u4e0a\u4e0b\u6587\u5e76\u884c\uff09\u65e0\u7f1d\u96c6\u6210\uff0c\u5e76\u652f\u6301\u81ea\u52a8\u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3\uff0c\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\u6027\u80fd\u3002</li> </ul> <p>\u81ea\u5b9a\u4e49 FSDP \u7684\u8bbe\u8ba1\u7075\u611f\u6765\u81ea PyTorch FSDP Zhao, Yanli, et al. \u4ee5\u53ca MCore \u7684\u5206\u5e03\u5f0f\u4f18\u5316\u5668\u3002\u4e0b\u9762\u5f15\u7528 PyTorch FSDP \u7684\u4ecb\u7ecd\uff0c\u5e2e\u52a9\u7406\u89e3\u81ea\u5b9a\u4e49 FSDP \u7684\u6838\u5fc3\u6982\u5ff5\u3002</p> <p>\u5728 DistributedDataParallel (DDP) \u8bad\u7ec3\u4e2d\uff0c\u6bcf\u4e2a\u8fdb\u7a0b/\u5de5\u4f5c\u8005\u62e5\u6709\u4e00\u4efd\u6a21\u578b\u526f\u672c\u5e76\u5904\u7406\u4e00\u6279\u6570\u636e\uff0c\u6700\u540e\u901a\u8fc7 all-reduce \u6c47\u603b\u4e0d\u540c\u5de5\u4f5c\u8005\u7684\u68af\u5ea6\u3002DDP \u4f1a\u5728\u6240\u6709\u5de5\u4f5c\u8005\u4e0a\u590d\u5236\u6a21\u578b\u6743\u91cd\u4e0e\u4f18\u5316\u5668\u72b6\u6001\u3002FSDP \u662f\u4e00\u79cd\u6570\u636e\u5e76\u884c\u65b9\u5f0f\uff0c\u4f1a\u5728 DDP rank \u4e4b\u95f4\u5206\u7247\u6a21\u578b\u53c2\u6570\u3001\u4f18\u5316\u5668\u72b6\u6001\u4e0e\u68af\u5ea6\u3002</p> <p>\u4f7f\u7528 FSDP \u8bad\u7ec3\u65f6\uff0c\u76f8\u6bd4\u5728\u6240\u6709\u5de5\u4f5c\u8005\u4e0a\u4f7f\u7528 DDP\uff0c\u5176 GPU \u5185\u5b58\u5360\u7528\u66f4\u5c0f\u3002\u8fd9\u6837\u53ef\u4ee5\u5728\u8bbe\u5907\u4e0a\u5bb9\u7eb3\u66f4\u5927\u7684\u6a21\u578b\u6216\u66f4\u5927\u7684\u6279\u91cf\uff0c\u4f7f\u8bad\u7ec3\u7279\u5927\u6a21\u578b\u6210\u4e3a\u53ef\u80fd\u3002\u4f46\u8fd9\u4f1a\u589e\u52a0\u901a\u4fe1\u91cf\u3002\u901a\u8fc7\u91cd\u53e0\u901a\u4fe1\u4e0e\u8ba1\u7b97\u7b49\u5185\u90e8\u4f18\u5316\uff0c\u53ef\u4ee5\u964d\u4f4e\u901a\u4fe1\u5f00\u9500\u3002</p> <p></p> <p>\u6ce8\u610f\uff1a\u6d41\u7a0b\u4e2d\u5904\u7406\u7684\u5355\u4f4d\u4e3a\u201cFSDP \u5b9e\u4f8b 1\uff1aN \u5c42\u201d\u3002FSDP \u5b9e\u4f8b\u662f\u6700\u5c0f\u7684\u5904\u7406\u5355\u5143\uff08\u4e5f\u662f PyTorch Module\uff09\uff0c\u8fd9\u610f\u5473\u7740\u5728\u4f7f\u7528\u5b8c\u8be5\u6a21\u5757\uff08\u6267\u884c\u6b63\u5411\u6216\u53cd\u5411\uff09\u540e\u5373\u53ef\u5b89\u5168\u91ca\u653e\u5176\u6743\u91cd\uff0c\u4e0d\u4f1a\u6709\u5176\u4ed6\u8ba1\u7b97\u4f9d\u8d56\u8fd9\u4e9b\u6743\u91cd\u3002\u8fd9\u4e00\u80fd\u529b\u662f FSDP \u9010\u5c42\u6267\u884c\u4e0e\u8282\u7701\u5185\u5b58\u7b56\u7565\u7684\u57fa\u7840\u3002FSDP \u5b9e\u4f8b\u4e5f\u88ab\u79f0\u4e3a Transformer \u4e2d\u7684\u201c\u4e9a\u5c42\u201d\uff0c\u5373 <code>TransformerLayer</code>\u3002</p>"},{"location":"megatron/docs/source/api-guide/custom_fsdp/#2-fsdp","title":"2. \u81ea\u5b9a\u4e49 FSDP \u4e2d\u7684\u4e3b\u8981\u6982\u5ff5","text":"<p>Megatron-Core \u7684\u81ea\u5b9a\u4e49 FSDP \u4e0e\u5206\u5e03\u5f0f\u4f18\u5316\u5668\u7d27\u5bc6\u534f\u540c\u3002FSDP \u8d1f\u8d23\u5728\u524d\u5411\u4e0e\u53cd\u5411\u8fc7\u7a0b\u4e2d\u6536\u96c6\u53c2\u6570\u53ca\u68af\u5ea6\uff0c\u800c\u5206\u5e03\u5f0f\u4f18\u5316\u5668\u8d1f\u8d23\u53c2\u6570\u66f4\u65b0\u4e0e\u72b6\u6001\u7ef4\u62a4\u3002</p> <p>\u5982\u4e0b\u56fe\u5c55\u793a\u4e86\u652f\u6491 FSDP \u7684\u6838\u5fc3\u7c7b\u4e0e\u6570\u636e\u7ed3\u6784\uff1a</p> <p></p> <ul> <li><code>AllGatherPipeline.initialize_data_parallel_groups</code> \u7528\u4e8e\u521d\u59cb\u5316\u6570\u636e\u5e76\u884c\u901a\u4fe1\u7ec4\u3002</li> <li><code>AllGatherPipeline.build_all_gather_buckets</code> \u4e0e <code>GradReducePipeline.build_reduce_buckets</code> \u6784\u5efa\u53c2\u6570\u805a\u5408\u548c\u68af\u5ea6\u5f52\u7ea6\u7684\u6876\u3002</li> <li><code>AllGatherPipeline.schedule_all_gathers</code> \u4e0e <code>GradReducePipeline.schedule_grad_reduce</code> \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u8c03\u5ea6\u901a\u4fe1\u3002</li> </ul> <p>\u901a\u8fc7 <code>ParamAndGradBuffer</code>\uff0c\u81ea\u5b9a\u4e49 FSDP \u5728\u53c2\u6570\u6536\u96c6\u4e0e\u68af\u5ea6\u5f52\u7ea6\u65f6\u4f7f\u7528\u7edf\u4e00\u7684\u7f13\u51b2\u7ed3\u6784\uff0c\u4ee5\u4fbf\u4e0e\u5206\u5e03\u5f0f\u4f18\u5316\u5668\u5171\u4eab\u3002</p>"},{"location":"megatron/docs/source/api-guide/custom_fsdp/#31-meta","title":"3.1 \u5728 Meta \u8bbe\u5907\u4e0a\u521d\u59cb\u5316\u6a21\u578b","text":"<p>\u8bad\u7ec3\u7279\u5927\u6a21\u578b\u65f6\uff0c\u53ef\u5148\u5728 meta \u8bbe\u5907\u4e0a\u521d\u59cb\u5316\u6a21\u578b\u3002\u501f\u52a9 PyTorch \u7684 <code>reset_parameters</code> API\uff0c\u53ef\u5728\u6784\u5efa <code>ParamAndGradBuffer</code> \u65f6\u9010\u5c42\u521d\u59cb\u5316\u6743\u91cd\u3002\u5927\u591a\u6570 PyTorch \u539f\u751f\u6a21\u5757\u4e0e TransformerEngine \u6a21\u5757\u5747\u652f\u6301\u6b64 API\uff08\u4f8b\u5982 PyTorch Linear\u3001TE LayerNormLinear\uff09\u3002</p> <pre><code># Initialize model on the meta device\nwith torch.device(\"meta\"):\n    model = GPTModel(config)\n\nmodel = FullyShardedDataParallel(\n    transformer_config,\n    model,\n    ddp_config,\n    fsdp_unit_modules=[TransformerLayer, LanguageModelEmbedding],\n)\n</code></pre> <p>\u91cd\u8981\u6ce8\u610f\u4e8b\u9879\uff1a 1. \u81ea\u5b9a\u4e49\u6a21\u5757\uff1a\u82e5\u6a21\u578b\u4e2d\u5305\u542b\u81ea\u5b9a\u4e49\u6a21\u5757\uff0c\u8bf7\u786e\u4fdd\u5176\u5b9e\u73b0\u4e86 <code>reset_parameters</code> API\u3002\u5426\u5219\u9700\u5728 CUDA \u6216 CPU \u4e0a\u5f3a\u5236\u521d\u59cb\u5316\u53c2\u6570\u3002 2. \u5f20\u91cf\u521d\u59cb\u5316\uff1a\u82e5\u6a21\u578b\u521d\u59cb\u5316\u65f6\u521b\u5efa\u7684\u5f20\u91cf\u672a\u663e\u5f0f\u6307\u5b9a\u8bbe\u5907\uff0c\u5219\u9ed8\u8ba4\u4f4d\u4e8e meta \u8bbe\u5907\u3002\u4e3a\u907f\u514d\u95ee\u9898\uff0c\u5e94\u663e\u5f0f\u6307\u5b9a\u8fd9\u4e9b\u5f20\u91cf\u7684\u8bbe\u5907\u3002</p>"},{"location":"megatron/docs/source/api-guide/custom_fsdp/#4-fsdp","title":"4. \u81ea\u5b9a\u4e49 FSDP \u4e0e\u6a21\u578b\u524d\u5411/\u53cd\u5411\u4f20\u64ad\u7684\u4ea4\u4e92","text":"<p>\u81ea\u5b9a\u4e49 FSDP \u901a\u8fc7\u6ce8\u518c\u6a21\u5757\u94a9\u5b50\u3001\u68af\u5ea6\u94a9\u5b50\u6216\u5728\u6a21\u5757\u95f4\u63d2\u5165\u51fd\u6570\u5b9e\u73b0 Fully Sharded Data Parallelism\u3002\u5728 PyTorch \u6a21\u5757\u7684\u524d\u5411\u6216\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u5728\u9002\u5f53\u65f6\u673a\u63d2\u5165\u901a\u4fe1\u5e76\u7ba1\u7406\u53c2\u6570\u4e0e\u68af\u5ea6\u3002</p> <p>\u6a21\u5757\u94a9\u5b50\u6982\u89c8\uff1a - \u6a21\u5757\u524d\u5411\u524d\u94a9\u5b50\uff08<code>module.register_forward_pre_hook</code>\uff09\uff1a\u5728\u524d\u5411\u8ba1\u7b97\u524d\u53d6\u6d88\u53c2\u6570\u5206\u7247\u3002\u5bf9\u4e8e FSDP \u5355\u5143\u6a21\u5757\uff0c\u8fd8\u4f1a\u6dfb\u52a0 RegisterFSDPBackwardFunction\uff0c\u5728\u6a21\u5757\u53cd\u5411\u5b8c\u6210\u540e\u91cd\u65b0\u5206\u7247\u5e76\u5f52\u7ea6\u68af\u5ea6\u3002 - \u6a21\u5757\u524d\u5411\u540e\u94a9\u5b50\uff08<code>module.register_forward_hook</code>\uff09\uff1a\u5728\u524d\u5411\u8ba1\u7b97\u540e\u91cd\u65b0\u5206\u7247\u6a21\u578b\u6743\u91cd\u3002 - \u6839\u6a21\u5757\u53cd\u5411\u524d\u94a9\u5b50\uff08<code>root_module.register_full_backward_pre_hook</code>\uff09\uff1a\u786e\u4fdd\u6240\u6709\u53c2\u6570\u5728\u53cd\u5411\u524d\u5df2\u91cd\u65b0\u5206\u7247\uff0c\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u5185\u5b58\u5cf0\u503c\uff0c\u5e76\u5c06\u6240\u6709\u6a21\u5757\u6807\u8bb0\u4e3a <code>TrainingState.PRE_BACKWARD</code>\u3002 - \u6a21\u5757\u53cd\u5411\u524d\u94a9\u5b50\uff08<code>module.register_full_backward_pre_hook</code>\uff09\uff1a\u5728\u53cd\u5411\u8ba1\u7b97\u524d\u53d6\u6d88\u6a21\u578b\u6743\u91cd\u5206\u7247\u3002 - \u6839\u6a21\u5757\u53cd\u5411\u540e\u94a9\u5b50\uff08<code>torch.autograd.Variable._execution_engine.queue_callback</code>\uff09\uff1a\u786e\u4fdd\u53cd\u5411\u8fc7\u7a0b\u4e2d\u6240\u6709\u68af\u5ea6\u5747\u88ab\u6b63\u786e\u5904\u7406\u5e76\u53ef\u7528\u3002</p> <p>\u68af\u5ea6\u5f52\u7ea6\u6d41\u6c34\u7ebf\u7ef4\u62a4\u4e00\u4e2a\u4ece\u68af\u5ea6\u5230 FSDP \u53c2\u6570\u7ec4\u7684\u6620\u5c04\u3002\u4e00\u65e6\u67d0\u4e2a\u53c2\u6570\u7ec4\u4e2d\u7684\u5168\u90e8\u68af\u5ea6\u5c31\u7eea\uff0c\u5c31\u4f1a\u542f\u52a8\u68af\u5ea6\u5f52\u7ea6\u3002\u8be5\u6d41\u7a0b\u5047\u8bbe\u6a21\u578b\u68af\u5ea6\u59cb\u7ec8\u6309\u4e00\u5b9a\u987a\u5e8f\u751f\u6210\uff08\u4e3a <code>module.parameters()</code> \u7684\u9006\u5e8f\uff09\uff0c\u5426\u5219 FSDP \u4f1a\u7ef4\u62a4\u8fc7\u591a\u53c2\u6570\u7ec4\u7684\u68af\u5ea6\u7f13\u51b2\u533a\uff0c\u5bfc\u81f4\u989d\u5916\u7684\u5185\u5b58\u5f00\u9500\u3002</p>"},{"location":"megatron/docs/source/api-guide/custom_fsdp/#41","title":"4.1 \u9488\u5bf9\u6fc0\u6d3b\u91cd\u8ba1\u7b97\u7684\u4f18\u5316","text":"<p>\u542f\u7528\u6fc0\u6d3b\u91cd\u8ba1\u7b97\u4f1a\u5bfc\u81f4\u540c\u4e00\u6a21\u5757\u5728\u53cd\u5411\u4f20\u64ad\u65f6\u5148\u6267\u884c\u524d\u5411\u51fd\u6570\u518d\u6267\u884c\u53cd\u5411\u51fd\u6570\uff0c\u4ece\u800c\u89e6\u53d1\u4e24\u6b21\u6743\u91cd\u53d6\u6d88\u5206\u7247\u4e0e\u4e24\u6b21\u91cd\u65b0\u5206\u7247\u3002\u5982\u679c\u80fd\u591f\u8bc6\u522b\u8fd9\u662f\u4e00\u6b21\u524d\u5411 + \u53cd\u5411\u64cd\u4f5c\uff0c\u5c31\u53ef\u4ee5\u5206\u522b\u53ea\u6267\u884c\u4e00\u6b21\u53d6\u6d88\u5206\u7247\u4e0e\u4e00\u6b21\u91cd\u65b0\u5206\u7247\u3002</p> <p>\u4e3a\u5b9e\u73b0\u8be5\u76ee\u7684\uff0c\u6211\u4eec\u4f7f\u7528 <code>training_state</code> \u8ddf\u8e2a\u6a21\u578b\u72b6\u6001\uff0c\u5305\u62ec <code>FORWARD</code>\u3001<code>PRE_BACKWARD</code>\u3001<code>POST_BACKWARD</code>\u3001<code>IDLE</code>\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u53cd\u5411\u524d\u94a9\u5b50\u5148\u4e8e\u524d\u5411\u524d\u94a9\u5b50\u6267\u884c\u3002\u5728\u53cd\u5411\u524d\u94a9\u5b50\u4e2d\u5b8c\u6210\u6743\u91cd\u53d6\u6d88\u5206\u7247\u540e\uff0c\u5c06\u72b6\u6001\u6807\u8bb0\u4e3a <code>PRE_BACKWARD</code>\uff0c\u968f\u540e\u524d\u5411\u524d\u94a9\u5b50\u68c0\u6d4b\u5230\u8be5\u6807\u8bb0\u4fbf\u4e0d\u4f1a\u518d\u6b21\u53d6\u6d88\u5206\u7247\u3002\u7c7b\u4f3c\u5730\uff0c\u524d\u5411\u540e\u94a9\u5b50\u5148\u4e8e\u53cd\u5411\u540e\u51fd\u6570\u6267\u884c\uff0c\u901a\u8fc7\u5728\u524d\u5411\u540e\u94a9\u5b50\u4e2d\u68c0\u67e5 <code>PRE_BACKWARD</code> \u6807\u8bb0\uff0c\u53ef\u907f\u514d\u91cd\u590d\u5206\u7247\u3002</p>"},{"location":"megatron/docs/source/api-guide/custom_fsdp/#5-fsdp","title":"5. \u81ea\u5b9a\u4e49 FSDP \u7684\u5185\u5b58\u673a\u5236\u4e0e\u7279\u6027","text":"<p>FSDP \u53ef\u4ee5\u5bf9\u6a21\u578b\u53c2\u6570\u3001\u68af\u5ea6\u3001\u4f18\u5316\u5668\u72b6\u6001\uff0c\u4ee5\u53ca\u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3\u4e2d\u7684\u9ad8\u7cbe\u5ea6\u4e3b\u6743\u91cd\u5b9e\u73b0\u5b8c\u5168\u5206\u5e03\u5f0f\u5316\uff0c\u9664\u6fc0\u6d3b\u5185\u5b58\u5916\u51e0\u4e4e\u6240\u6709\u90e8\u5206\u90fd\u88ab\u5206\u6563\u3002\u7136\u800c FSDP \u4ecd\u53ef\u80fd\u9047\u5230\u5185\u5b58\u95ee\u9898\u3002</p> <p>FSDP \u4f1a\u9891\u7e41\u6267\u884c\u6743\u91cd\u7684\u53d6\u6d88\u5206\u7247\u4e0e\u91cd\u65b0\u5206\u7247\uff0c\u53ef\u80fd\u5bfc\u81f4\u5185\u5b58\u9891\u7e41\u7533\u8bf7\u4e0e\u91ca\u653e\uff0c\u9020\u6210\u5f20\u91cf\u672a\u80fd\u53ca\u65f6\u91ca\u653e\uff0c\u4ece\u800c\u5f15\u53d1\u5185\u5b58\u5cf0\u503c\uff08\u751a\u81f3 OOM\uff09\u3001PyTorch \u5185\u5b58\u5206\u914d\u5668\u7f13\u5b58\u5d29\u6e83\uff0c\u4ee5\u53ca\u5927\u91cf <code>cudaMalloc</code>/<code>cudaFree</code> \u8c03\u7528\uff0c\u8fd9\u4e9b\u95ee\u9898\u4f1a\u663e\u8457\u62d6\u6162\u7cfb\u7edf\u3002</p> <p>\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7 <code>tensor._typed_storage()._resize_(0)</code> \u7acb\u5373\u91ca\u653e\u5b58\u50a8\u7a7a\u95f4\uff0c\u4ee5\u89e3\u51b3\u5f20\u91cf\u672a\u53ca\u65f6\u91ca\u653e\u7684\u95ee\u9898\u3002\u81ea\u5b9a\u4e49 FSDP \u5728 <code>AllGatherPipeline</code> \u4e0e <code>GradReducePipeline</code> \u4e2d\u63d0\u4f9b\u63a5\u53e3\uff0c\u53ef\u5c06\u53c2\u6570\u805a\u5408\u4e0e\u68af\u5ea6\u5f52\u7ea6\u7684\u4e34\u65f6\u7f13\u51b2\u5206\u914d\u5668\u66ff\u6362\u4e3a <code>StorageResizeBasedBucketAllocator</code>\uff0c\u5c06\u91ca\u653e\u64cd\u4f5c\u66ff\u6362\u4e3a <code>tensor._typed_storage()._resize_(0)</code>\u3002</p> <p>PyTorch \u5185\u5b58\u5206\u914d\u5668\u7f13\u5b58\u5d29\u6e83\u662f\u66f4\u590d\u6742\u7684\u95ee\u9898\uff0c\u5e38\u5728\u5b9e\u9645\u5185\u5b58\u4f7f\u7528\u63a5\u8fd1 GPU \u4e0a\u9650\u65f6\u51fa\u73b0\uff0c\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\u3002\u8981\u7f13\u89e3\u8be5\u95ee\u9898\uff0c\u5e94\u5c3d\u91cf\u907f\u514d\u9891\u7e41\u89e6\u53d1 GPU \u5185\u5b58\u4e0a\u9650\u3002\u4f7f\u7528\u81ea\u7ba1\u7406\u5206\u914d\u5668\uff08\u5982 <code>RotaryBucketAllocator</code>\uff09\u4e5f\u662f\u6f5c\u5728\u65b9\u6848\uff0c\u4f46\u9700\u6ce8\u610f <code>RotaryBucketAllocator</code> \u5c1a\u672a\u6210\u719f\u3002</p>"},{"location":"megatron/docs/source/api-guide/custom_fsdp/#_4","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>Getting Started with Fully Sharded Data Parallel (FSDP)</li> </ul>"},{"location":"megatron/docs/source/api-guide/datasets/","title":"datasets \u6a21\u5757","text":""},{"location":"megatron/docs/source/api-guide/datasets/#_1","title":"\u6570\u636e\u7ba1\u7ebf","text":""},{"location":"megatron/docs/source/api-guide/datasets/#_2","title":"\u6570\u636e\u9884\u5904\u7406","text":"<p>\u6570\u636e\u9884\u5904\u7406\u56f4\u7ed5\u4ee5\u4e0b\u7c7b\u6784\u5efa\uff1a</p> <ol> <li><code>IndexedDatasetBuilder</code></li> <li><code>IndexedDataset</code></li> </ol> <p>\u76ee\u524d\u7aef\u5230\u7aef\u7684\u6570\u636e\u9884\u5904\u7406\u6d41\u7a0b\u4ecd\u9700\u7528\u6237\u81ea\u884c\u5b9e\u73b0\uff0c\u66f4\u591a\u7ec6\u8282\u53ef\u53c2\u9605\u7c7b\u7684\u6587\u6863\u5b57\u7b26\u4e32\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#indexeddatasetbuilder","title":"IndexedDatasetBuilder","text":"<p><code>IndexedDatasetBuilder</code> \u8d1f\u8d23\u6784\u5efa\u5e76\u5408\u5e76\u591a\u4e2a <code>IndexedDataset</code> \u5b9e\u4f8b\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#indexeddataset","title":"IndexedDataset","text":"<p><code>IndexedDataset</code> \u662f Megatron Core \u4e2d\u6700\u4f4e\u5c42\u7684\u6570\u636e\u63a5\u53e3\u3002\u5185\u90e8\u5f15\u7528\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a\u6570\u636e\u6587\u4ef6\uff08<code>.bin</code>\uff09\u5b58\u50a8\u6587\u6863/\u5e8f\u5217\u5185\u5bb9\uff0c\u7d22\u5f15\u6587\u4ef6\uff08<code>.idx</code>\uff09\u5b58\u50a8\u6587\u6863/\u5e8f\u5217\u7684\u5143\u6570\u636e\u3002</p> <p>\u7d22\u5f15\u6587\u4ef6\u9996\u5148\u4fdd\u5b58\u6570\u636e\u96c6\u7ea7\u522b\u7684\u5143\u4fe1\u606f\uff1a - \u7d22\u5f15\u5934\uff08\u7528\u4e8e\u517c\u5bb9\u65e7\u7248\u672c\uff09 - \u7d22\u5f15\u7248\u672c\uff08\u7528\u4e8e\u517c\u5bb9\u65e7\u7248\u672c\uff09 - \u5199\u5165\u6570\u636e\u6587\u4ef6\u65f6\u4f7f\u7528\u7684\u6570\u636e\u7c7b\u578b\u7f16\u7801 - \u6570\u636e\u96c6\u4e2d\u7684\u5e8f\u5217\u6570\u91cf - \u6570\u636e\u96c6\u4e2d\u7684\u6587\u6863\u6570\u91cf</p> <p>\u968f\u540e\u8bb0\u5f55\u6587\u6863\u7ea7\u4e0e\u5e8f\u5217\u7ea7\u5143\u6570\u636e\uff1a - \u6309\u987a\u5e8f\u8bb0\u5f55\u6bcf\u4e2a\u5e8f\u5217\u5305\u542b\u7684\u5143\u7d20\u6570\u91cf - \u6309\u987a\u5e8f\u8bb0\u5f55\u6bcf\u4e2a\u5e8f\u5217\u7684\u5b57\u8282\u504f\u79fb\u91cf - \u6309\u987a\u5e8f\u8bb0\u5f55\u6bcf\u4e2a\u6587\u6863\u5bf9\u5e94\u7684\u8fde\u7eed\u5e8f\u5217\u533a\u95f4 <code>[...)</code> - \u6309\u987a\u5e8f\u8bb0\u5f55\u6bcf\u4e2a\u5e8f\u5217\u7684\u6a21\u5f0f\uff08\u591a\u6a21\u6001\u573a\u666f\u4e0b\u4f7f\u7528\uff09</p>"},{"location":"megatron/docs/source/api-guide/datasets/#_3","title":"\u6570\u636e\u52a0\u8f7d\uff1a\u6784\u5efa\u6d41\u7a0b","text":"<p>\u6784\u5efa\u6570\u636e\u52a0\u8f7d\u5668\u662f\u4e00\u4e2a\u5177\u5907\u5206\u5e03\u5f0f\u611f\u77e5\u7684\u8fc7\u7a0b\uff0c\u6d89\u53ca\u4ee5\u4e0b\u7c7b\uff1a</p> <ol> <li><code>BlendedMegatronDatasetConfig</code></li> <li><code>BlendedMegatronDatasetBuilder</code></li> <li><code>IndexedDataset</code></li> <li><code>MegatronDataset</code></li> <li><code>BlendedDataset</code></li> </ol> <p>\u8be6\u7ec6\u4fe1\u606f\u53ef\u53c2\u9605\u7c7b\u6587\u6863\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#blendedmegatrondatasetconfig","title":"BlendedMegatronDatasetConfig\uff08\u53ef\u6269\u5c55\uff09","text":"<p><code>BlendedMegatronDatasetConfig</code> \u7528\u4e8e\u53c2\u6570\u5316 <code>BlendedMegatronDatasetBuilder</code>\uff0c\u8fdb\u800c\u9a71\u52a8 <code>MegatronDataset</code> \u4e0e <code>BlendedDataset</code>\u3002</p> <p>\u4e0d\u540c\u7684\u8bad\u7ec3/\u63a8\u7406\u573a\u666f\u9700\u8981\u6269\u5c55\u8be5\u914d\u7f6e\u7c7b\uff0c\u4f8b\u5982 <code>GPTDatasetConfig</code>\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#blendedmegatrondatasetbuilder","title":"BlendedMegatronDatasetBuilder","text":"<p><code>BlendedMegatronDatasetBuilder</code> \u7528\u4e8e\u6784\u5efa Megatron Core \u4e2d\u6700\u9ad8\u5c42\u7684\u6570\u636e\u63a5\u53e3\u3002</p> <p>\u6ce8\u610f\uff1a \u6240\u6709 rank \u90fd\u9700\u8981\u5c1d\u8bd5\u901a\u8fc7 <code>BlendedMegatronDatasetBuilder</code> \u6784\u5efa\u6570\u636e\u96c6\uff0c\u5426\u5219\u7a0b\u5e8f\u4f1a\u963b\u585e\u3002\u5177\u4f53\u7531\u54ea\u4e9b rank \u5b9e\u9645\u6267\u884c\u6784\u5efa\uff0c\u53ef\u901a\u8fc7 <code>BlendedMegatronDatasetConfig</code> \u63a7\u5236\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#indexeddataset_1","title":"IndexedDataset","text":"<p><code>IndexedDataset</code> \u662f Megatron Core \u6700\u5e95\u5c42\u7684\u6570\u636e\u63a5\u53e3\uff0c\u5728\u6784\u5efa\u9ad8\u5c42\u6570\u636e\u63a5\u53e3\u4e4b\u524d\uff0c\u5fc5\u987b\u786e\u4fdd\u5bf9\u5e94\u7684 <code>.bin/.idx</code> \u6587\u4ef6\u5df2\u5b58\u5728\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#megatrondataset","title":"MegatronDataset\uff08\u53ef\u6269\u5c55\uff09","text":"<p><code>MegatronDataset</code> \u62bd\u8c61\u7c7b\u662f\u57fa\u4e8e <code>IndexedDataset</code> \u7684\u9ad8\u5c42\u6570\u636e\u63a5\u53e3\u3002\u4e0d\u540c\u573a\u666f\u53ef\u6269\u5c55\u51fa\u5404\u81ea\u7684\u6570\u636e\u96c6\uff0c\u4f8b\u5982 <code>GPTDataset</code>\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#blendeddataset","title":"BlendedDataset","text":"<p><code>BlendedDataset</code> \u57fa\u4e8e <code>MegatronDataset</code> \u63d0\u4f9b\u66f4\u9ad8\u5c42\u7684\u6570\u636e\u63a5\u53e3\u3002\u5f53\u9700\u8981\u5c06\u591a\u4e2a\u6570\u636e\u5206\u5e03\uff08\u5373\u591a\u4e2a <code>MegatronDataset</code> \u5b9e\u4f8b\uff09\u6309\u7167\u4e00\u5b9a\u6bd4\u4f8b\u6df7\u5408\u5230\u67d0\u4e2a\u6570\u636e\u5212\u5206\u65f6\u624d\u9700\u4f7f\u7528\uff0c\u53ef\u901a\u8fc7 <code>BlendedMegatronDatasetConfig</code> \u63a7\u5236\u6df7\u5408\u6743\u91cd\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#_4","title":"\u6570\u636e\u52a0\u8f7d\uff1a\u5b9e\u73b0\u7ec6\u8282","text":""},{"location":"megatron/docs/source/api-guide/datasets/#gptdataset","title":"GPTDataset","text":"<p><code>GPTDataset</code> \u7531\u4ee5\u4e0b\u53d8\u91cf\u53c2\u6570\u5316\uff1a\u5e95\u5c42 <code>IndexedDataset</code> \u5b9e\u4f8b <code>indexed_dataset</code>\uff0c\u5212\u5206\u7d22\u5f15 <code>indexed_indices</code>\uff08\u8bad\u7ec3/\u9a8c\u8bc1/\u6d4b\u8bd5\u6240\u7528\u8fde\u7eed\u6587\u6863\u6216\u5e8f\u5217\u7d22\u5f15\u5b50\u96c6\uff09\uff0c\u6837\u672c\u6570\u91cf <code>N</code>\uff0c\u5e8f\u5217\u957f\u5ea6 <code>S</code>\uff0c\u968f\u673a\u79cd\u5b50 <code>R</code>\u3002</p> <p><code>GPTDataset</code> \u521b\u5efa\u4e09\u4e2a\u7d22\u5f15\u4ee5\u652f\u6301\u5feb\u901f\u67e5\u627e\uff1a\uff081\uff09\u6587\u6863\u7d22\u5f15\u3001\uff082\uff09\u6837\u672c\u7d22\u5f15\u3001\uff083\uff09\u4e71\u5e8f\u7d22\u5f15\u3002</p> <ol> <li>\u6587\u6863\u7d22\u5f15 Do_idx \u662f\u957f\u5ea6\u4e3a <code>E * |indexed_indices|</code> \u7684\u4e00\u7ef4\u6570\u7ec4\uff08<code>E</code> \u4e3a\u6700\u5c0f\u6ee1\u8db3 <code>E * |indexed_indices| &gt;= N</code> \u7684 epoch \u6570\uff09\uff0c\u7528\u4e8e\u6620\u5c04\u5230\u6587\u6863\u7d22\u5f15\uff0c\u6309\u7167\u968f\u673a\u79cd\u5b50 <code>R</code> \u8fdb\u884c\u4e71\u5e8f\u3002</li> </ol> <pre><code>\u5df2\u77e5\uff1a\n\nN = 15\nindexed_indices = [5, 6, 7, 8, 9]\nE = 3\n\n\u5219\u793a\u4f8b\uff1a\n\nDo_idx = [8, 8, 9, 6, 7, 5, 8, 5, 6, 6, 5, 9, 7, 7, 9]\n</code></pre> <ol> <li>\u6837\u672c\u7d22\u5f15 Sa_idx \u662f\u5f62\u72b6\u4e3a <code>[N + 1, 2]</code> \u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7528\u4e8e\u5c06\u6837\u672c\u7f16\u53f7 j \u6620\u5c04\u5230\u4e8c\u5143\u7ec4\uff08i, Do_idx[ i ] \u7684\u504f\u79fb\uff09\u3002\u7b2c j \u884c\u548c\u7b2c j + 1 \u884c\u5206\u522b\u8868\u793a\u7b2c j \u4e2a\u6837\u672c\u7684\u5de6\u53f3\u8fb9\u754c\u3002</li> </ol> <pre><code>\u5df2\u77e5\uff1a\n\nS = 1024\n\n\u5219\u793a\u4f8b\uff1a\n\nSa_idx[0] = (0, 0)\nSa_idx[1] = (0, 1024)       =&gt; Do_idx[0] \u957f\u5ea6\u5927\u4e8e S\nSa_idx[2] = (1, 512)        =&gt; Do_idx[0] \u957f\u5ea6\u4e3a 1536\nSa_idx[3] = (2, 0)          =&gt; Do_idx[1] \u957f\u5ea6\u4e3a 1536\nSa_idx[4] = (5, 300)        =&gt; Do_idx[2:5] \u76f8\u6bd4 Do_idx[0:2] \u66f4\u77ed\nSa_idx[5] = (6, 24)         =&gt; Do_idx[5] \u957f\u5ea6\u4e3a 1300\n</code></pre> <ol> <li>\u4e71\u5e8f\u7d22\u5f15 Sh_idx \u662f\u957f\u5ea6\u4e3a <code>N</code> \u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u5c06 k \u6620\u5c04\u5230 j\uff0c\u540c\u6837\u6309\u7167 <code>R</code> \u8fdb\u884c\u4e71\u5e8f\u3002</li> </ol> <pre><code>\u5df2\u77e5\uff1a\n\nN = 10\n\n\u5219\u793a\u4f8b\uff1a\n\nSh_idx = [4, 0, 2, 6, 1, 9, 5, 8, 7, 3]\n</code></pre> <p>\u82e5\u8981\u67e5\u8be2\u7b2c k \u4e2a\u6837\u672c\uff1a</p> <ul> <li>\u4f7f\u7528\u4e71\u5e8f\u7d22\u5f15\u83b7\u53d6\u6837\u672c\u7d22\u5f15\u4f4d\u7f6e j\uff1a</li> </ul> <p><pre><code>j = Sh_idx[k]\n</code></pre> - \u4f7f\u7528\u6837\u672c\u7d22\u5f15\u5f97\u5230\u5bf9\u5e94\u7684\u6587\u6863\u7d22\u5f15\u8fb9\u754c\u4e0e\u504f\u79fb\uff1a</p> <p><pre><code>i, offset = Sa_idx[j]\ni_next, offset_next = Sa_idx[j + 1]\n</code></pre> - \u6839\u636e\u6587\u6863\u7d22\u5f15\u4ece\u8fde\u7eed\u7684\u6587\u6863\u4e2d\u53d6\u51fa\u957f\u5ea6\u4e3a <code>S</code> \u7684 token\uff1a</p> <pre><code>sample = []\nsample += indexed_dataset[Do_idx[i]][offset:]\nif i != i_next:\n    sample += indexed_dataset[Do_idx[i + 1:i_next]]\nsample += indexed_dataset[Do_idx[i_next]][:offset_next]\n</code></pre> <p>\u4e3a\u52a0\u901f\u521d\u59cb\u5316\uff0c\u5404\u7d22\u5f15\u4f1a\u5728\u5355\u4e2a\u8fdb\u7a0b\u987a\u5e8f\u6784\u5efa\u4e0e\u7f13\u5b58\uff0c\u5176\u4f59\u8fdb\u7a0b\u5e76\u884c\u8bfb\u53d6\u7f13\u5b58\u3002\u7f13\u5b58\u6587\u4ef6\u540d\u57fa\u4e8e <code>MegatronDataset.__init__</code> \u5185\u751f\u6210\u7684\u54c8\u5e0c\u503c\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#blendeddataset_1","title":"BlendedDataset","text":"<p><code>BlendedDataset</code> \u7531\u4ee5\u4e0b\u53d8\u91cf\u53c2\u6570\u5316\uff1a\u5e95\u5c42 <code>MegatronDataset</code> \u5217\u8868 <code>D</code>\uff0c\u5bf9\u5e94\u6743\u91cd <code>W</code>\uff08\u6bcf\u4e2a\u6570\u636e\u96c6\u4e00\u4e2a\uff09\uff0c\u4ee5\u53ca\u6df7\u5408\u540e\u7684\u76ee\u6807\u5927\u5c0f <code>S</code>\u3002\u91c7\u6837\u65f6\u4f1a\u6309\u6743\u91cd\u6bd4\u4f8b\u4ece\u5404\u6570\u636e\u96c6\u62bd\u6837\uff0c\u76f4\u5230\u5f97\u5230\u6307\u5b9a\u89c4\u6a21\u7684\u6df7\u5408\u6570\u636e\u96c6\u3002\u6bcf\u6b21\u91c7\u6837\u90fd\u4f1a\u9009\u62e9\u5f53\u524d\u91c7\u6837\u8bef\u5dee\u6700\u5927\u7684\u90a3\u4e2a\u6570\u636e\u96c6\u53d6\u6837\u3002</p> <p><code>BlendedDataset</code> \u4f7f\u7528\u4e24\u7c7b\u7d22\u5f15\uff1a\uff081\uff09\u6570\u636e\u96c6\u7d22\u5f15\u3001\uff082\uff09\u6570\u636e\u96c6\u6837\u672c\u7d22\u5f15\u3002</p> <ol> <li>\u6570\u636e\u96c6\u7d22\u5f15 Da_idx \u662f\u957f\u5ea6\u4e3a <code>S</code> \u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u5c06 i \u6620\u5c04\u5230\u6570\u636e\u96c6\u7f16\u53f7\u3002</li> </ol> <pre><code>\u5df2\u77e5\n\nD = [d0, d1, d2]\nW = [1/2, 1/4, 1/4]\nS = 4\n\n\u5219\u793a\u4f8b\uff1a\n\nDa_idx = [0, 1, 2, 0]\n</code></pre> <ol> <li>\u6570\u636e\u96c6\u6837\u672c\u7d22\u5f15 Sa_idx \u662f\u957f\u5ea6\u4e3a <code>S</code> \u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u5c06 i \u6620\u5c04\u5230 <code>Da_idx[i]</code> \u5bf9\u5e94\u6570\u636e\u96c6\u4e2d\u7684\u6837\u672c\u7f16\u53f7\u3002</li> </ol> <pre><code>\u5df2\u77e5\n\nDa_idx = [0, 1, 2, 0]\n\n\u5219\u793a\u4f8b\uff1a\n\nSa_idx = [0, 0, 0, 1]\n</code></pre> <p>\u82e5\u8981\u67e5\u8be2\u7b2c k \u4e2a\u6837\u672c\uff1a</p> <ul> <li>\u4f7f\u7528\u6570\u636e\u96c6\u7d22\u5f15\u786e\u5b9a\u6570\u636e\u96c6\uff0c\u5e76\u4f7f\u7528\u6570\u636e\u96c6\u6837\u672c\u7d22\u5f15\u83b7\u53d6\u6837\u672c\uff1a</li> </ul> <pre><code>sample = D[Da_idx[k]][Sa_idx[k]]\n</code></pre> <p>\u540c\u6837\u5730\uff0c\u8fd9\u4e9b\u7d22\u5f15\u4f1a\u5728\u5355\u4e2a\u8fdb\u7a0b\u4e2d\u987a\u5e8f\u6784\u5efa\u4e0e\u7f13\u5b58\uff0c\u518d\u7531\u5176\u4ed6\u8fdb\u7a0b\u5e76\u884c\u52a0\u8f7d\u3002\u7f13\u5b58\u6587\u4ef6\u540d\u57fa\u4e8e <code>BlendedDataset.__init__</code> \u4e2d\u751f\u6210\u7684\u54c8\u5e0c\u503c\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#_5","title":"\u5b50\u6a21\u5757","text":""},{"location":"megatron/docs/source/api-guide/datasets/#datasetsblended_megatron_dataset_config","title":"datasets.blended_megatron_dataset_config \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/datasets/blended_megatron_dataset_config.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#datasetsblended_megatron_dataset_builder","title":"datasets.blended_megatron_dataset_builder \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/datasets/blended_megatron_dataset_builder.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#datasetsmegatron_tokenizer","title":"datasets.megatron_tokenizer \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/datasets/megatron_tokenizer.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#datasetsindexed_dataset","title":"datasets.indexed_dataset \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/datasets/indexed_dataset.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#datasetsmegatron_dataset","title":"datasets.megatron_dataset \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/datasets/megatron_dataset.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#datasetsgpt_dataset","title":"datasets.gpt_dataset \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/datasets/gpt_dataset.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#datasetsmasked_dataset","title":"datasets.masked_dataset \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/datasets/masked_dataset.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#datasetsbert_dataset","title":"datasets.bert_dataset \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/datasets/bert_dataset.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#datasetst5_dataset","title":"datasets.t5_dataset \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/datasets/t5_dataset.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#datasetsblended_dataset","title":"datasets.blended_dataset \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/datasets/blended_dataset.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#datasetsutils","title":"datasets.utils \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/datasets/utils.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/datasets/#_6","title":"\u6a21\u5757\u5185\u5bb9","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/datasets/__init__.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/dist_checkpointing/","title":"dist_checkpointing \u6a21\u5757","text":"<p><code>dist_checkpointing</code> \u63d0\u4f9b\u4e86\u5728\u4e0d\u540c\u5e76\u884c\u5212\u5206\u4e4b\u95f4\u8bfb\u5199\u68c0\u67e5\u70b9\u7684\u5de5\u5177\u5e93\u3002\u6240\u8c13\u201c\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\u201d\uff0c\u6307\u7684\u662f\u5728\u7279\u5b9a\u7684\u5f20\u91cf\u5e76\u884c / \u6d41\u6c34\u7ebf\u5e76\u884c / \u6570\u636e\u5e76\u884c\u62d3\u6251\u4e0a\u4fdd\u5b58\u6a21\u578b\u72b6\u6001\uff0c\u7136\u540e\u5728\u53e6\u4e00\u79cd\u62d3\u6251\u4e0a\u6062\u590d\u3002\u9ed8\u8ba4\u5b9e\u73b0\u57fa\u4e8e Zarr\uff0c\u4f46\u5e93\u672c\u8eab\u5141\u8bb8\u6269\u5c55\u5230\u5176\u4ed6\u5b58\u50a8\u683c\u5f0f\u3002</p> <p>\u5178\u578b\u5de5\u4f5c\u6d41\u5982\u4e0b\uff1a</p> <ol> <li>\u5b9a\u4e49\u5206\u7247\u72b6\u6001\uff1a\u501f\u52a9 <code>mapping</code> \u4e0e <code>optimizer</code> \u5b50\u6a21\u5757\uff0c\u6784\u9020\u5e26\u6709\u5206\u7247\u4fe1\u606f\u7684 <code>state_dict</code>\u3002</li> <li>\u9009\u62e9\u7b56\u7565\uff1a\u901a\u8fc7 <code>strategies</code> \u5b50\u5305\u6311\u9009\u5177\u4f53\u7684\u4fdd\u5b58 / \u52a0\u8f7d\u7b56\u7565\u3002</li> <li>\u6267\u884c\u5e8f\u5217\u5316\uff1a\u4f7f\u7528 <code>serialization</code> \u5b50\u6a21\u5757\u5c06\u524d\u4e24\u6b65\u63cf\u8ff0\u7684\u72b6\u6001\u5199\u5165\u6216\u8bfb\u51fa\u76ee\u6807\u4ecb\u8d28\u3002</li> </ol>"},{"location":"megatron/docs/source/api-guide/dist_checkpointing/#_1","title":"\u5b89\u5168\u5730\u52a0\u8f7d\u68c0\u67e5\u70b9","text":"<p>\u81ea PyTorch 2.6 \u8d77\uff0c<code>torch.load</code> \u7684\u9ed8\u8ba4\u884c\u4e3a\u662f <code>weights_only=True</code>\uff0c\u786e\u4fdd\u53ea\u52a0\u8f7d\u5f20\u91cf\u53ca\u767d\u540d\u5355\u4e2d\u7684\u7c7b\u3002\u8fd9\u53ef\u4ee5\u907f\u514d\u610f\u5916\u6267\u884c\u4e0d\u53d7\u4fe1\u4efb\u7684 Python \u4ee3\u7801\u3002</p> <p>\u82e5\u5728\u52a0\u8f7d\u65e7\u68c0\u67e5\u70b9\u65f6\u770b\u5230\u5982\u4e0b\u62a5\u9519\uff1a</p> <pre><code>WeightsUnpickler error: Unsupported global: GLOBAL argparse.Namespace was not an allowed global by default.\n</code></pre> <p>\u53ef\u4ee5\u5728\u811a\u672c\u4e2d\u624b\u52a8\u5c06\u7f3a\u5931\u7684\u7c7b\u578b\u52a0\u5165\u5b89\u5168\u767d\u540d\u5355\uff1a</p> <pre><code>import argparse\nimport torch\n\ntorch.serialization.add_safe_globals([argparse.Namespace])\n</code></pre>"},{"location":"megatron/docs/source/api-guide/dist_checkpointing/#_2","title":"\u5b50\u5305","text":"<ul> <li><code>dist_checkpointing.strategies</code>\uff1a\u5305\u542b\u591a\u79cd\u4fdd\u5b58 / \u52a0\u8f7d\u7b56\u7565\uff08\u5982\u5168\u91cf\u5199\u5165\u3001\u589e\u91cf\u5199\u5165\u7b49\uff09\u7684\u5b9e\u73b0\u3002</li> </ul>"},{"location":"megatron/docs/source/api-guide/dist_checkpointing/#_3","title":"\u5b50\u6a21\u5757\u901f\u89c8","text":"\u6a21\u5757 \u4f5c\u7528\u6982\u8ff0 <code>core.dist_checkpointing.serialization</code> \u8d1f\u8d23\u5177\u4f53\u7684\u5e8f\u5217\u5316 / \u53cd\u5e8f\u5217\u5316\u903b\u8f91\uff0c\u6574\u5408\u7b56\u7565\u4e0e\u5e95\u5c42\u5b58\u50a8\u3002 <code>core.dist_checkpointing.mapping</code> \u63d0\u4f9b\u5de5\u5177\u51fd\u6570\uff0c\u7528\u4e8e\u63cf\u8ff0\u6a21\u578b\u53c2\u6570\u5982\u4f55\u6620\u5c04\u5230\u5404\u4e2a\u5206\u7247\u3002 <code>core.dist_checkpointing.optimizer</code> \u64e6\u5199\u4e0e\u4f18\u5316\u5668\u72b6\u6001\u76f8\u5173\u7684\u5206\u7247\u7ed3\u6784\uff08\u5982\u52a8\u91cf\u3001\u4e8c\u9636\u77e9\u7b49\uff09\u3002 <code>core.dist_checkpointing.core</code> \u5b9a\u4e49\u6838\u5fc3\u62bd\u8c61\uff0c\u5305\u62ec\u4fdd\u5b58 / \u52a0\u8f7d\u5165\u53e3\u51fd\u6570\u4e0e\u901a\u7528\u8f85\u52a9\u903b\u8f91\u3002 <code>core.dist_checkpointing.dict_utils</code> \u9488\u5bf9\u5d4c\u5957 <code>dict</code> \u7684\u904d\u5386\u3001\u5408\u5e76\u3001\u6821\u9a8c\u7b49\u5b9e\u7528\u5de5\u5177\u3002 <code>core.dist_checkpointing.utils</code> \u5176\u4ed6\u8f85\u52a9\u51fd\u6570\uff0c\u4f8b\u5982\u8def\u5f84\u5904\u7406\u3001\u5e76\u884c\u534f\u8c03\u7b49\u3002 <p>\u82e5\u9700\u6df1\u5165\u4e86\u89e3\uff0c\u8bf7\u76f4\u63a5\u67e5\u9605\u5bf9\u5e94\u6e90\u7801\u6587\u4ef6\uff08\u4f4d\u4e8e <code>megatron/core/dist_checkpointing/</code> \u76ee\u5f55\uff09\uff0c\u5176\u4e2d\u5305\u542b\u8be6\u7ec6\u7684\u53c2\u6570\u8bf4\u660e\u4e0e\u5b9e\u73b0\u7ec6\u8282\u3002</p>"},{"location":"megatron/docs/source/api-guide/dist_checkpointing.strategies/","title":"dist_checkpointing.strategies \u6a21\u5757","text":"<p>\u8be5\u5305\u5b9a\u4e49\u4e86\u4e0d\u540c\u7684\u68c0\u67e5\u70b9\u683c\u5f0f\uff08\u540e\u7aef\uff09\u4ee5\u53ca\u76f8\u5e94\u7684\u4fdd\u5b58/\u52a0\u8f7d\u7b97\u6cd5\uff08\u7b56\u7565\uff09\u3002</p> <p>\u7b56\u7565\u53ef\u7528\u4e8e\u5b9e\u73b0\u65b0\u7684\u68c0\u67e5\u70b9\u683c\u5f0f\uff0c\u6216\u4e3a\u73b0\u6709\u683c\u5f0f\u63d0\u4f9b\u66f4\u9002\u5408\u7279\u5b9a\u573a\u666f\u7684\u4fdd\u5b58\u4e0e\u52a0\u8f7d\u65b9\u5f0f\u3002\u5728\u8c03\u7528 <code>dist_checkpointing.load</code> \u4e0e <code>dist_checkpointing.save</code> \u65f6\uff0c\u53ef\u4f20\u5165\u7b56\u7565\u5bf9\u8c61\u4ee5\u63a7\u5236\u5b9e\u9645\u7684\u4fdd\u5b58/\u52a0\u8f7d\u8fc7\u7a0b\u3002</p>"},{"location":"megatron/docs/source/api-guide/dist_checkpointing.strategies/#_1","title":"\u5b50\u6a21\u5757","text":""},{"location":"megatron/docs/source/api-guide/dist_checkpointing.strategies/#dist_checkpointingstrategiesbase","title":"dist_checkpointing.strategies.base \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/dist_checkpointing.strategies/base.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/dist_checkpointing.strategies/#dist_checkpointingstrategiestensorstore","title":"dist_checkpointing.strategies.tensorstore \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/dist_checkpointing.strategies/tensorstore.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/dist_checkpointing.strategies/#dist_checkpointingstrategiestwo_stage","title":"dist_checkpointing.strategies.two_stage \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/dist_checkpointing.strategies/two_stage.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/dist_checkpointing.strategies/#dist_checkpointingstrategieszarr","title":"dist_checkpointing.strategies.zarr \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/dist_checkpointing.strategies/zarr.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/dist_checkpointing.strategies/#_2","title":"\u6a21\u5757\u5185\u5bb9","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/dist_checkpointing.strategies/__init__.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/dist_optimizer/","title":"\u5206\u5e03\u5f0f\u4f18\u5316\u5668","text":"<p>\u5206\u5e03\u5f0f\u4f18\u5316\u5668\u7684\u76ee\u6807\u662f\u5728\u6570\u636e\u5e76\u884c rank \u4e4b\u95f4\u5e73\u5747\u5206\u5e03\u4f18\u5316\u5668\u72b6\u6001\uff08https://arxiv.org/abs/1910.02054\uff09\uff0c\u4ee5\u8282\u7701\u5185\u5b58\uff1b\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u6734\u7d20\u505a\u6cd5\u4f1a\u5728\u6240\u6709\u6570\u636e\u5e76\u884c rank \u4e0a\u5b8c\u6574\u590d\u5236\u4f18\u5316\u5668\u72b6\u6001\u3002</p> <p>\u7406\u8bba\u5185\u5b58\u8282\u7701\u91cf\u53d6\u51b3\u4e8e\u6a21\u578b\u53c2\u6570\u7684\u6570\u636e\u7c7b\u578b\uff08<code>param_dtype</code>\uff09\u4e0e\u5728\u6570\u636e\u5e76\u884c\u526f\u672c\u95f4\u7d2f\u79ef\u7684\u4e3b\u68af\u5ea6\u6570\u636e\u7c7b\u578b\uff08<code>grad_dtype</code>\uff09\u7684\u7ec4\u5408\u3002\u6211\u4eec\u5728\u4f18\u5316\u5668\u66f4\u65b0\u65f6\u59cb\u7ec8\u4f7f\u7528 <code>fp32</code> \u4e3b\u53c2\u6570\u3002\u5f53\u524d\u5b9e\u73b0\u4e2d\uff0c\u6bcf\u4e2a\u53c2\u6570\u7684\u7406\u8bba\u5b57\u8282\u5360\u7528\uff08d \u4e3a\u6570\u636e\u5e76\u884c\u89c4\u6a21\uff09\u5982\u4e0b\uff1a</p> \u975e\u5206\u5e03\u5f0f\u4f18\u5316\u5668 \u5206\u5e03\u5f0f\u4f18\u5316\u5668 <code>fp16</code> \u53c2\u6570\uff0c<code>fp16</code> \u68af\u5ea6 20 4 + 16/d <code>bf16</code> \u53c2\u6570\uff0c<code>fp32</code> \u68af\u5ea6 18 6 + 12/d <code>fp32</code> \u53c2\u6570\uff0c<code>fp32</code> \u68af\u5ea6 16 8 + 8/d <p>\u6211\u4eec\u7684\u5206\u5e03\u5f0f\u4f18\u5316\u5668\u5b9e\u73b0\u4f1a\u4e3a\u53c2\u6570\u4e0e\u4e3b\u68af\u5ea6\u4f7f\u7528\u8fde\u7eed\u7f13\u51b2\u533a\uff1b\u4e00\u65e6\u6a21\u578b\u68af\u5ea6\u5b8c\u5168\u8ba1\u7b97\u5b8c\u6210\uff0c\u5c31\u4f1a\u7acb\u5373\u590d\u5236\u5230\u4e3b\u68af\u5ea6\u4e2d\u3002</p> <p>\u4e0b\u56fe\u5c55\u793a\u4e86\u5206\u5e03\u5f0f\u4f18\u5316\u5668\u7684\u5206\u7247\u65b9\u6848\u4e0e\u53c2\u6570\u66f4\u65b0\u5173\u952e\u6b65\u9aa4\u3002</p>"},{"location":"megatron/docs/source/api-guide/dist_optimizer/#_2","title":"\u6570\u636e\u6d41","text":""},{"location":"megatron/docs/source/api-guide/dist_optimizer/#_3","title":"\u5206\u7247\u65b9\u6848","text":""},{"location":"megatron/docs/source/api-guide/dist_optimizer/#_4","title":"\u5173\u952e\u6b65\u9aa4","text":"<p>\uff08\u8bf4\u660e\uff1a\u7ed3\u5408\u4e0a\u56fe\uff0c\u5047\u8bbe\u6a21\u578b\u6743\u91cd\u4e3a <code>bf16</code>\uff0c\u53cd\u5411\u8ba1\u7b97\u5f97\u5230\u7684\u6a21\u578b\u68af\u5ea6\u4e3a <code>bf16</code>\uff0c\u4e3b\u68af\u5ea6\u4e3a\u4f9b\u4f18\u5316\u5668\u66f4\u65b0\u4f7f\u7528\u7684 <code>fp32</code>\uff1b\u4f18\u5316\u5668\u66f4\u65b0\u65f6\u4e3b\u6743\u91cd\u59cb\u7ec8\u4e3a <code>fp32</code>\u3002\uff09</p> <ul> <li>\u53cd\u5411\u4f20\u64ad\u7ed3\u675f\uff08\u68af\u5ea6\u7f13\u51b2\u533a\u5305\u542b 16 \u4e2a <code>fp32</code> \u68af\u5ea6\u5143\u7d20\uff09\u3002</li> <li>\u5728\u6bcf\u4e2a\u6570\u636e\u5e76\u884c rank \u4e0a\u6267\u884c reduce-scatter\u3002</li> <li>\u6bcf\u4e2a\u6570\u636e\u5e76\u884c rank \u5728\u68af\u5ea6\u7f13\u51b2\u533a\u4e2d\u62e5\u6709 4 \u4e2a\u5df2\u7ecf\u5f52\u7ea6\u5b8c\u6210\u7684\u5143\u7d20\uff08\u5269\u4f59 12 \u4e2a\u5143\u7d20\u65e0\u6548\uff09\u3002</li> <li>DP rank 0 \u62e5\u6709\u5143\u7d20 [0:4] \u7684\u68af\u5ea6\u503c\u3002</li> <li>DP rank 1 \u62e5\u6709\u5143\u7d20 [4:8] \u7684\u68af\u5ea6\u503c\u3002</li> <li>DP rank 2 \u62e5\u6709\u5143\u7d20 [8:12] \u7684\u68af\u5ea6\u503c\u3002</li> <li>DP rank 3 \u62e5\u6709\u5143\u7d20 [12:16] \u7684\u68af\u5ea6\u503c\u3002</li> <li>\u6267\u884c <code>optimizer.step()</code>\u3002</li> <li>\u6bcf\u4e2a\u6570\u636e\u5e76\u884c rank \u5c06\u5176 4 \u4e2a <code>fp32</code> \u4e3b\u53c2\u6570\u5143\u7d20\u590d\u5236\u5230\u5bf9\u5e94\u7684 <code>bf16</code> \u53c2\u6570\u7f13\u51b2\u533a\uff08\u5143\u7d20\u4ece fp32 \u8f6c\u6362\u4e3a fp16\uff09\u3002</li> <li>\u5728\u6bcf\u4e2a\u6570\u636e\u5e76\u884c rank \u4e0a\u6267\u884c all-gather\u3002</li> <li>\u53c2\u6570\u7f13\u51b2\u533a\u73b0\u5728\u5305\u542b\u5168\u90e8 16 \u4e2a\u5df2\u66f4\u65b0\u7684 <code>bf16</code> \u6a21\u578b\u53c2\u6570\u5143\u7d20\u3002PyTorch \u6a21\u5757\u4e2d\u7684\u53c2\u6570\u6307\u9488\u5df2\u6307\u5411\u8be5\u7f13\u51b2\u533a\u4e2d\u7684\u6b63\u786e\u4f4d\u7f6e\uff0c\u56e0\u6b64 all-gather \u5b8c\u6210\u540e\u5373\u53ef\u8fdb\u884c\u4e0b\u4e00\u6b21\u524d\u5411\u8ba1\u7b97\u3002</li> <li>\u6b64\u65f6\u68af\u5ea6\u7f13\u51b2\u533a\u4e5f\u53ef\u4ee5\u6e05\u96f6\uff0c\u4e3a\u4e0b\u4e00\u8f6e\u8fed\u4ee3\u505a\u597d\u51c6\u5907\u3002</li> </ul>"},{"location":"megatron/docs/source/api-guide/distributed/","title":"distributed \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u63d0\u4f9b\u591a\u79cd\u5de5\u5177\uff0c\u7528\u4e8e\u5728\u4f18\u5316\u5668\u66f4\u65b0\u524d\u4e8e\u5404\u4e2a rank \u4e0a\u6574\u7406\u6a21\u578b\u68af\u5ea6\u3002\u5305\u542b\u5c01\u88c5\u5206\u5e03\u5f0f\u6570\u636e\u5e76\u884c\u7684\u5305\u88c5\u5668\uff08\u6267\u884c\u5168\u91cf all-reduce \u6216 reduce-scatter\uff09\uff0c\u4ee5\u53ca <code>finalize_model_grads</code> \u65b9\u6cd5\uff0c\u7528\u4e8e\u5728\u4e0d\u540c\u5e76\u884c\u6a21\u5f0f\u95f4\u540c\u6b65\u68af\u5ea6\uff08\u4f8b\u5982\u4f4d\u4e8e\u4e0d\u540c\u6d41\u6c34\u7ebf\u9636\u6bb5\u7684\u6743\u91cd\u5171\u4eab\u5c42\uff0c\u6216 MoE \u4e2d\u7531\u4e13\u5bb6\u5e76\u884c\u5e26\u6765\u7684\u4e13\u5bb6\u68af\u5ea6\uff09\u3002</p>"},{"location":"megatron/docs/source/api-guide/distributed/#_1","title":"\u5b50\u6a21\u5757","text":""},{"location":"megatron/docs/source/api-guide/distributed/#distributeddistributed_data_parallel","title":"distributed.distributed_data_parallel","text":"<p>\u8fd9\u662f\u5206\u5e03\u5f0f\u6570\u636e\u5e76\u884c\u7684\u6a21\u578b\u5305\u88c5\u5668\u3002\u5b83\u5c06\u68af\u5ea6\u5b58\u50a8\u5728\u8fde\u7eed\u7f13\u51b2\u533a\u4e2d\uff0c\u5e76\u652f\u6301\u5c06\u901a\u4fe1\uff08all-reduce \u6216 reduce-scatter\uff09\u4e0e\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97\u91cd\u53e0\uff1a\u901a\u8fc7\u5c06\u5168\u6a21\u578b\u68af\u5ea6\u62c6\u5206\u4e3a\u591a\u4e2a bucket\uff0c\u5bf9\u6bcf\u4e2a bucket \u5f02\u6b65\u6267\u884c all-reduce/reduce-scatter\u3002</p> <p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/core/distributed/distributed_data_parallel.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/distributed/#distributedfinalize_model_grads","title":"distributed.finalize_model_grads","text":"<p>\u5728\u6240\u6709\u4f7f\u7528\u7684\u5e76\u884c\u6a21\u5f0f\u4e0b\u5b8c\u6210\u4f18\u5316\u5668\u6b65\u9aa4\u524d\u7684\u68af\u5ea6\u6574\u7406\u3002\u5305\u62ec\uff1a\u5bf9\u6570\u636e\u5e76\u884c\u526f\u672c\u6267\u884c all-reduce/reduce-scatter\uff0c\u540c\u6b65\u5e8f\u5217\u5e76\u884c\u7684 LayerNorm \u68af\u5ea6\uff0c\u540c\u6b65\u9996\u672b\u6d41\u6c34\u7ebf\u9636\u6bb5\u7684\u5d4c\u5165\u68af\u5ea6\uff08\u82e5\u672a\u5171\u4eab\uff09\uff0c\u4ee5\u53ca\u540c\u6b65\u4e13\u5bb6\u5e76\u884c\u4e0b\u7684\u4e13\u5bb6\u68af\u5ea6\u3002</p> <p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/core/distributed/finalize_model_grads.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/distributed/#_2","title":"\u6a21\u5757\u5185\u5bb9","text":"<p>\u5c01\u88c5\u4e86\u5728\u4f18\u5316\u5668\u66f4\u65b0\u524d\u8de8 rank \u540c\u6b65\u68af\u5ea6\u7684\u76f8\u5173\u529f\u80fd\u3002</p> <p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/distributed/__init__.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/fusions/","title":"fusions \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u6536\u5f55\u4e86 Megatron Core \u4e2d\u5e38\u7528\u7684\u7b97\u5b50\u878d\u5408\u5b9e\u73b0\u3002\u901a\u8fc7\u5728\u5355\u6b21\u5185\u5b58\u8bbf\u95ee\u4e2d\u5408\u5e76\u591a\u4e2a\u8fd0\u7b97\uff0c\u53ef\u4ee5\u663e\u8457\u964d\u4f4e\u5185\u5b58\u5e26\u5bbd\u5360\u7528\u5e76\u63d0\u5347\u541e\u5410\u91cf\u3002\u5b9e\u73b0\u65b9\u5f0f\u901a\u5e38\u5206\u4e3a\u4e24\u7c7b\uff1a</p> <ul> <li>\u4f9d\u8d56 PyTorch \u7684\u5373\u65f6\u7f16\u8bd1\u80fd\u529b\uff08\u65e9\u671f\u7248\u672c\u4f7f\u7528 <code>torch.jit.script</code>\uff0c\u65b0\u7248\u672c\u53ef\u4ee5\u4f7f\u7528 <code>torch.compile</code>\uff09\u3002</li> <li>\u8c03\u7528 Apex \u6216 TransformerEngine \u4e2d\u7684\u81ea\u5b9a\u4e49 CUDA \u5185\u6838\u3002</li> </ul>"},{"location":"megatron/docs/source/api-guide/fusions/#_1","title":"\u5b50\u6a21\u5757\u6982\u89c8","text":"\u5b50\u6a21\u5757 \u4e3b\u8981\u529f\u80fd <code>core.fusions.fused_bias_dropout</code> \u5c06 bias-add \u4e0e dropout \u878d\u5408\uff0c\u8bad\u7ec3\u4e0e\u63a8\u7406\u9636\u6bb5\u5206\u522b\u9009\u62e9\u6700\u4f18\u5b9e\u73b0\u3002 <code>core.fusions.fused_bias_gelu</code> \u5c06 bias-add \u4e0e GeLU \u6fc0\u6d3b\u878d\u5408\uff0c\u51cf\u5c11\u8bbf\u5b58\u4e0e\u4e34\u65f6\u5f20\u91cf\u3002 <code>core.fusions.fused_layer_norm</code> \u5c01\u88c5\u6765\u81ea Apex \u7684\u591a\u79cd LayerNorm \u878d\u5408\u5b9e\u73b0\u3002 <code>core.fusions.fused_softmax</code> \u63d0\u4f9b\u9002\u914d Apex \u7684\u591a\u79cd Softmax \u53d8\u4f53\uff08\u542b\u63a9\u7801\u3001scale \u7b49\uff09\u3002 <code>core.fusions.fused_cross_entropy</code> \u4f7f\u7528 PyTorch JIT \u5c06\u4ea4\u53c9\u71b5\u635f\u5931\u4e0e\u901a\u4fe1\u6279\u5904\u7406\u878d\u5408\uff0c\u63d0\u5347\u5206\u5e03\u5f0f\u8bad\u7ec3\u6548\u7387\u3002 <p>\u4e0b\u6587\u7ed9\u51fa\u4e86\u6bcf\u4e2a\u5b50\u6a21\u5757\u7684\u7b80\u8981\u8bf4\u660e\u53ca\u5165\u53e3\u4f4d\u7f6e\uff0c\u4fbf\u4e8e\u67e5\u9605\u6e90\u7801\u6216\u8fdb\u4e00\u6b65\u6269\u5c55\u3002</p>"},{"location":"megatron/docs/source/api-guide/fusions/#corefusionsfused_bias_dropout","title":"<code>core.fusions.fused_bias_dropout</code>","text":"<ul> <li>\u4f5c\u7528\uff1a\u5728\u4fdd\u6301 dropout \u8bed\u4e49\u7684\u540c\u65f6\uff0c\u5408\u5e76 bias-add \u64cd\u4f5c\uff0c\u907f\u514d\u5bf9\u540c\u4e00\u5f20\u91cf\u8fdb\u884c\u591a\u6b21\u8bfb\u5199\u3002</li> <li>\u4eae\u70b9\uff1a\u8bad\u7ec3\u6a21\u5f0f\u4e0b\u4f7f\u7528\u878d\u5408\u5b9e\u73b0\uff1b\u63a8\u7406\u6a21\u5f0f\u4e0b\u81ea\u52a8\u56de\u9000\u4e3a\u539f\u751f\u903b\u8f91\u4ee5\u51cf\u5c11\u4e0d\u5fc5\u8981\u5f00\u9500\u3002</li> </ul>"},{"location":"megatron/docs/source/api-guide/fusions/#corefusionsfused_bias_gelu","title":"<code>core.fusions.fused_bias_gelu</code>","text":"<ul> <li>\u4f5c\u7528\uff1a\u5c06\u5168\u8fde\u63a5\u5c42\u4e2d\u7684 bias-add \u4e0e GeLU \u6fc0\u6d3b\u51fd\u6570\u6253\u5305\u6267\u884c\u3002</li> <li>\u4f18\u52bf\uff1a\u51cf\u5c11\u4e2d\u95f4\u6fc0\u6d3b\u7684\u663e\u5b58\u5360\u7528\uff0c\u5c24\u5176\u9002\u7528\u4e8e\u5927\u89c4\u6a21 MLP\u3002</li> </ul>"},{"location":"megatron/docs/source/api-guide/fusions/#corefusionsfused_layer_norm","title":"<code>core.fusions.fused_layer_norm</code>","text":"<ul> <li>\u4f5c\u7528\uff1a\u5bf9 Apex \u63d0\u4f9b\u7684\u591a\u79cd LayerNorm \u878d\u5408\u5185\u6838\u8fdb\u884c\u7edf\u4e00\u5c01\u88c5\u3002</li> <li>\u53ef\u9009\u5b9e\u73b0\uff1a\u652f\u6301 FP16/BF16 \u7b49\u4e0d\u540c\u7cbe\u5ea6\uff0c\u5185\u90e8\u4f1a\u81ea\u52a8\u5339\u914d\u53ef\u7528\u5b9e\u73b0\u3002</li> </ul>"},{"location":"megatron/docs/source/api-guide/fusions/#corefusionsfused_softmax","title":"<code>core.fusions.fused_softmax</code>","text":"<ul> <li>\u4f5c\u7528\uff1a\u63d0\u4f9b\u9002\u914d\u81ea\u5b9a\u4e49\u63a9\u7801\u6216\u7f29\u653e\u7684 Softmax \u878d\u5408\u5b9e\u73b0\u3002</li> <li>\u5178\u578b\u573a\u666f\uff1aTransformer \u6ce8\u610f\u529b\u673a\u5236\u4e2d\u7684\u67e5\u8be2-\u952e\u6ce8\u610f\u529b\u6743\u91cd\u8ba1\u7b97\u3002</li> </ul>"},{"location":"megatron/docs/source/api-guide/fusions/#corefusionsfused_cross_entropy","title":"<code>core.fusions.fused_cross_entropy</code>","text":"<ul> <li>\u4f5c\u7528\uff1a\u5728\u8ba1\u7b97\u4ea4\u53c9\u71b5\u635f\u5931\u7684\u540c\u65f6\uff0c\u5c06\u901a\u4fe1\u76f8\u5173\u64cd\u4f5c\uff08\u5982\u6279\u91cf all-reduce\uff09\u5408\u5e76\uff0c\u964d\u4f4e\u540c\u6b65\u6b21\u6570\u3002</li> <li>\u9002\u7528\uff1a\u6570\u636e\u5e76\u884c\u6216\u5f20\u91cf\u5e76\u884c\u573a\u666f\u4e0b\u7684\u8bed\u8a00\u6a21\u578b\u8bad\u7ec3\u3002</li> </ul> <p>\u82e5\u9700\u8981\u67e5\u770b\u5b8c\u6574 API\uff0c\u8bf7\u76f4\u63a5\u6d4f\u89c8\u76f8\u5e94\u7684 Python \u6587\u4ef6\uff08\u5982 <code>megatron/core/fusions/fused_bias_dropout.py</code>\uff09\uff0c\u4ee3\u7801\u4e2d\u5305\u542b\u53c2\u6570\u7b7e\u540d\u4e0e\u5b9e\u73b0\u7ec6\u8282\u3002</p>"},{"location":"megatron/docs/source/api-guide/models.bert/","title":"models.bert \u6a21\u5757","text":"<p>\u7528\u4e8e\u8bad\u7ec3 BERT \u53ca\u7c7b\u4f3c\u7684\u7f16\u7801\u5668\u6a21\u578b\uff0c\u53ef\u9009\u5e26\u4e8c\u5206\u7c7b\u5934\u4ee5\u652f\u6301\u5206\u7c7b\u4efb\u52a1\u3002</p>"},{"location":"megatron/docs/source/api-guide/models.bert/#_1","title":"\u5b50\u6a21\u5757","text":""},{"location":"megatron/docs/source/api-guide/models.bert/#modelsbertbert_model","title":"models.bert.bert_model \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/models.bert/bert_model.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/models.bert/#_2","title":"\u6a21\u5757\u5185\u5bb9","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/models.bert/__init__.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/models.gpt/","title":"models.gpt \u6a21\u5757","text":"<p>\u5b9e\u73b0\u4e86\u5e38\u89c1\u7684 GPT \u6a21\u578b\uff0c\u652f\u6301\u5f20\u91cf\u5e76\u884c\u3001\u6d41\u6c34\u7ebf\u5e76\u884c\u3001\u6570\u636e\u5e76\u884c\u3001\u4e13\u5bb6\u6df7\u5408\u3001FP8\u3001\u5206\u5e03\u5f0f\u4f18\u5316\u5668\u7b49\u529f\u80fd\uff0c\u5e76\u6301\u7eed\u6269\u5c55\u4e2d\u3002\u5982\u9700\u65b0\u589e\u80fd\u529b\uff0c\u6b22\u8fce\u5173\u6ce8\u66f4\u65b0\u6216\u63d0\u4ea4 issue\u3002</p>"},{"location":"megatron/docs/source/api-guide/models.gpt/#_1","title":"\u5b50\u6a21\u5757","text":""},{"location":"megatron/docs/source/api-guide/models.gpt/#modelsgptgpt_model","title":"models.gpt.gpt_model \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/models.gpt/gpt_model.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/models.gpt/#_2","title":"\u6a21\u5757\u5185\u5bb9","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/models.gpt/__init__.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/models/","title":"models \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u6536\u5f55\u4e86\u4e3b\u6d41 LLM\uff0c\u76ee\u524d\u652f\u6301 GPT\u3001BERT\u3001T5 \u4e0e Retro\uff0c\u540e\u7eed\u8fd8\u4f1a\u6301\u7eed\u6269\u5c55\u3002</p>"},{"location":"megatron/docs/source/api-guide/models/#_1","title":"\u5b50\u5305","text":"<ul> <li>models.gpt</li> <li>models.t5</li> <li>models.bert</li> </ul>"},{"location":"megatron/docs/source/api-guide/models/#_2","title":"\u6a21\u5757\u5185\u5bb9","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/models/__init__.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/models.t5/","title":"models.t5 \u6a21\u5757","text":""},{"location":"megatron/docs/source/api-guide/models.t5/#_1","title":"\u5b50\u6a21\u5757","text":""},{"location":"megatron/docs/source/api-guide/models.t5/#modelst5t5_model","title":"models.t5.t5_model \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/models.t5/t5_model.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/models.t5/#_2","title":"\u6a21\u5757\u5185\u5bb9","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/models.t5/__init__.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/moe/","title":"Mixture of Experts \u6a21\u5757","text":""},{"location":"megatron/docs/source/api-guide/moe/#megatron-core-moe","title":"Megatron Core MoE","text":"<p>Megatron-Core MoE \u63d0\u4f9b\u5b8c\u6574\u7684\u5e76\u884c\u7b56\u7565\uff0c\u5c06\u4e13\u5bb6\u5e76\u884c\u65e0\u7f1d\u878d\u5408\u5230\u5f20\u91cf\u3001\u6570\u636e\u3001\u5e8f\u5217\u4e0e\u6d41\u6c34\u7ebf\u5e76\u884c\u4e2d\u3002\u5728 MCore v0.9 \u4e2d\uff0c\u6211\u4eec\u5df2\u5b9e\u73b0 468 TFLOPS \u7684 Mixtral 8x7B bf16 \u8bad\u7ec3\u6027\u80fd\uff0c\u5e76\u652f\u6301 DeepSeek-V3\u3001Qwen-MoE \u7b49\u6700\u65b0\u7684 MoE \u67b6\u6784\u3002</p>"},{"location":"megatron/docs/source/api-guide/moe/#_1","title":"\u6700\u65b0\u7279\u6027","text":"<ul> <li>\u652f\u6301 DeepSeek-V3 \u67b6\u6784</li> <li>\u4e3a MLA \u4e0e DeepSeek-V3 \u542f\u7528 TP</li> <li>\u4e3a MLA \u4e0e DeepSeek-V3 \u542f\u7528 CP<ul> <li>\u9700\u8981 TransformerEngine &gt;= 2.5.0</li> <li>\u7279\u522b\u611f\u8c22\u6765\u81ea\u5c0f\u7ea2\u4e66\u7684 SuperCB \u548c\u817e\u8baf\u5fae\u4fe1\u57fa\u7840\u8bbe\u65bd\u56e2\u961f\u7684 RandMist \u7684\u8d21\u732e</li> </ul> </li> <li>\u652f\u6301\u65e0\u8f85\u52a9\u635f\u5931\uff08aux-loss-free\uff09\u7684\u8d1f\u8f7d\u5747\u8861\u7b56\u7565</li> <li>\u652f\u6301 node-limited routing</li> <li>\u652f\u6301 Multi-Token Prediction (MTP)</li> <li>\u6279\u7ea7\u91cd\u53e0\u4ee5\u9690\u85cf EP-A2A \u901a\u4fe1</li> <li>\u96c6\u6210 DeepSeek \u7684 DeepEP\uff0c\u5b9e\u73b0\u9ad8\u6548 token \u5206\u53d1\u4e0e\u805a\u5408</li> <li>\u65b0\u589e token permutation/unpermutation \u878d\u5408</li> <li>\u652f\u6301\u4e0d\u5747\u5300\u7684\u865a\u62df\u6d41\u6c34\u7ebf\u5e76\u884c\u62c6\u5206</li> <li>\u652f\u6301\u5728\u90e8\u5206\u5b50\u6a21\u5757\u4e0a\u4e22\u5f03\u8f93\u51fa\u7684\u68c0\u67e5\u70b9\u7b56\u7565</li> </ul>"},{"location":"megatron/docs/source/api-guide/moe/#_2","title":"\u5e76\u884c\u7b56\u7565","text":"<ul> <li>\u4e13\u5bb6\u5e76\u884c\uff08Expert Parallelism\uff09<ul> <li>\u9488\u5bf9 MoE \u6a21\u578b\u7684\u4e13\u7528\u5e76\u884c\u65b9\u5f0f\uff0c\u4e13\u5bb6\u88ab\u5207\u5206\u5230\u4e0d\u540c worker\uff0c\u6bcf\u4e2a worker \u5904\u7406\u4e0d\u540c\u6279\u6b21\u7684\u8bad\u7ec3\u6837\u672c\uff0c\u5e76\u5728\u6bcf\u4e2a MoE \u5c42\u4e0a\u8d1f\u8d23\u4e00\u4e2a\u6216\u591a\u4e2a\u4e13\u5bb6\u3002</li> </ul> </li> <li>3D \u5e76\u884c\uff1a\u6570\u636e\u5e76\u884c\u3001\u5f20\u91cf\u5e76\u884c\u3001\u6d41\u6c34\u7ebf\u5e76\u884c<ul> <li>\u6ce8\u610f\uff1a\u5f53\u540c\u65f6\u4f7f\u7528\u4e13\u5bb6\u5e76\u884c\u4e0e\u5f20\u91cf\u5e76\u884c\u65f6\uff0c\u5fc5\u987b\u542f\u7528\u5e8f\u5217\u5e76\u884c\uff08sequence parallelism\uff09\u3002</li> </ul> </li> <li>\u4e0a\u4e0b\u6587\u5e76\u884c\uff08Context Parallelism\uff09<ul> <li>\u62c6\u5206\u5e8f\u5217\u7ef4\u5ea6\uff0c\u652f\u6301\u957f\u4e0a\u4e0b\u6587\u8bad\u7ec3\u3002</li> </ul> </li> <li>\u66f4\u4e30\u5bcc\u7684\u6620\u5c04\u65b9\u5f0f\uff1aEP \u53ef\u4e0e DP/TP/PP/CP \u7ec4\u5408\uff0c\u4ee5\u5e94\u5bf9\u66f4\u5927\u578b\u7684 MoE \u53d8\u4f53\u3002</li> <li>MoE Parallel Folding\uff1a\u53ef\u4e3a\u6ce8\u610f\u529b\u4e0e MoE \u7ec4\u4ef6\u8bbe\u7f6e\u4e0d\u540c\u7684\u5e76\u884c\u7b56\u7565\uff0c\u5b9e\u73b0\u66f4\u52a0\u7075\u6d3b\u9ad8\u6548\u7684\u6a21\u578b\u5207\u5206\uff0c\u8be6\u89c1\u4e0b\u6587\u3002</li> <li>\u5168\u9762\u652f\u6301\u5206\u5e03\u5f0f\u4f18\u5316\u5668\u3002</li> </ul>"},{"location":"megatron/docs/source/api-guide/moe/#_3","title":"\u8def\u7531\u4e0e\u8d1f\u8f7d\u5747\u8861","text":"<ul> <li>\u8def\u7531\u7c7b\u578b\uff1a<ul> <li>Top-K MLP router</li> </ul> </li> <li>\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\uff1a<ul> <li>Sinkhorn\uff08S-BASE\uff09</li> <li>\u8f85\u52a9\u635f\u5931 / \u8d1f\u8f7d\u5747\u8861\u635f\u5931</li> <li>\u65e0\u8f85\u52a9\u635f\u5931\u7684\u8d1f\u8f7d\u5747\u8861\u7b56\u7565</li> </ul> </li> <li>CUDA \u878d\u5408\u8def\u7531\u4e0e\u8d1f\u8f7d\u5747\u8861\u5185\u6838</li> </ul>"},{"location":"megatron/docs/source/api-guide/moe/#_4","title":"\u6027\u80fd\u4f18\u5316","text":"<ul> <li>\uff08\u5b9e\u9a8c\u7279\u6027\uff09\u96c6\u6210 DeepEP\uff0c\u7528\u4e8e\u5927\u89c4\u6a21 MoE \u8bad\u7ec3\u4e2d\u7684\u9ad8\u6548 token \u901a\u4fe1\u3002</li> <li>\u5f53\u672c\u5730\u4e13\u5bb6\u6570 &gt; 1 \u65f6\u542f\u7528 GroupedGEMM<ul> <li>\u652f\u6301 dtype\uff1abf16</li> <li>\u63d0\u5347\u5927\u578b MoE \u6a21\u578b\u6027\u80fd</li> </ul> </li> <li>\u4e3a MoE \u542f\u7528 <code>--tp-comm-overlap</code></li> <li>\u652f\u6301 FP8 \u8bad\u7ec3</li> </ul>"},{"location":"megatron/docs/source/api-guide/moe/#token","title":"Token \u5206\u53d1\u673a\u5236","text":"<ul> <li>\u65e0\u4e22\u5f03 / Dropless</li> <li>Token \u4e22\u5f03\uff0c\u53ef\u9009\u62e9\u662f\u5426\u586b\u5145\u81f3\u5bb9\u91cf</li> <li>Token permutation / unpermutation \u878d\u5408</li> </ul>"},{"location":"megatron/docs/source/api-guide/moe/#_5","title":"\u6613\u7528\u6027","text":"<ul> <li>\u63d0\u4f9b Mixtral \u6a21\u578b\u7684\u68c0\u67e5\u70b9\u8f6c\u6362\u5de5\u5177\uff0c\u8be6\u89c1 \u793a\u4f8b\u3002</li> <li>MoE \u5c42\u9891\u7387\uff08MoE Layer Frequency\uff09\u53ef\u81ea\u5b9a\u4e49\u6df7\u5408\u7684 MoE/Dense \u67b6\u6784\u3002</li> <li>\u652f\u6301\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9</li> <li>\u652f\u6301\u6309\u5c42\u65e5\u5fd7</li> <li>\u652f\u6301 Upcycling</li> </ul>"},{"location":"megatron/docs/source/api-guide/moe/#_6","title":"\u4f7f\u7528\u6307\u5357","text":""},{"location":"megatron/docs/source/api-guide/moe/#_7","title":"\u4f7f\u7528\u65b9\u6cd5","text":""},{"location":"megatron/docs/source/api-guide/moe/#_8","title":"\u5feb\u901f\u4e0a\u624b","text":"<p>\u82e5\u8981\u8bad\u7ec3\u4e00\u4e2a top-2\u3001\u5305\u542b 8 \u4e2a\u4e13\u5bb6\u5e76\u542f\u7528\u8f85\u52a9\u635f\u5931\u7684 MoE \u6a21\u578b\uff0c\u53ef\u6dfb\u52a0\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <pre><code>--num-experts 8\n--expert-model-parallel-size 8\n--moe-grouped-gemm\n--moe-permute-fusion\n--moe-router-load-balancing-type aux_loss # Options: aux_loss, sinkhorn, none (default: aux_loss)\n--moe-router-topk 2\n--moe-aux-loss-coeff 1e-2\n--use-distributed-optimizer\n--moe-token-dispatcher-type alltoall\n</code></pre> <p>\u82e5\u8981\u542f\u7528\u7c7b GShard\u3001SwitchTransformer \u7684 token drop \u673a\u5236\uff0c\u53ef\u989d\u5916\u8bbe\u7f6e\uff1a</p> <pre><code>--moe-expert-capacity-factor 1.0\n--moe-pad-expert-input-to-capacity # Optional\n</code></pre> <p>\u4e0b\u56fe\u5c55\u793a\u4e86 MCore \u4e2d\u4e0d\u540c\u7684\u4e22\u5f03\u7b56\u7565\uff1a</p> <ol> <li>\u9ed8\u8ba4\u7684 dropless \u7b56\u7565\u4e0d\u4f1a\u4e22\u5f03\u6216\u586b\u5145 token\u3002</li> <li>\u8bbe\u7f6e <code>--moe-expert-capacity-factor</code> \u540e\uff0c\u8d85\u8fc7\u5bb9\u91cf\u7684 token \u4f1a\u6309\u9009\u4e2d\u7684\u6982\u7387\u88ab\u4e22\u5f03\u3002\u82e5 EP &gt; 1\uff0c\u4e22\u5f03\u53d1\u751f\u5728 EP rank \u4e4b\u95f4\u8fdb\u884c token \u4ea4\u6362\u4e4b\u524d\u3002\u5bb9\u91cf\u8ba1\u7b97\u516c\u5f0f\u4e3a <code>capacity = num_tokens_per_rank * topk * capacity_factor / num_experts</code>\u3002</li> <li>\u8bbe\u7f6e <code>--moe-pad-expert-input-to-capacity</code> \u540e\uff0ctoken \u5c11\u4e8e\u5bb9\u91cf\u7684\u4e13\u5bb6\u4f1a\u81ea\u52a8\u586b\u5145\u5230\u5bb9\u91cf\u3002</li> </ol>"},{"location":"megatron/docs/source/api-guide/moe/#mixtral","title":"\u5fae\u8c03 Mixtral \u6a21\u578b","text":"<p>Megatron-Core \u5b8c\u5168\u652f\u6301 Mixtral MoE \u6a21\u578b\uff0c\u5e76\u63d0\u4f9b\u4ece HuggingFace \u683c\u5f0f\u8f6c\u6362\u4e3a MCore \u683c\u5f0f\u7684\u68c0\u67e5\u70b9\u5de5\u5177\u3002</p>"},{"location":"megatron/docs/source/api-guide/moe/#_9","title":"\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9","text":"<p>MCore v0.7 \u5f15\u5165\u4e86\u5b8c\u5168\u5e76\u884c\u4e14\u5f02\u6b65\u7684\u4fdd\u5b58\u80fd\u529b\uff0c\u53ef\u5728\u4fdd\u5b58\u671f\u95f4\u4e0e\u8bad\u7ec3\u8ba1\u7b97\u91cd\u53e0\uff0c\u663e\u8457\u7f29\u77ed\u8bad\u7ec3\u6682\u505c\u65f6\u95f4\u3002</p>"},{"location":"megatron/docs/source/api-guide/moe/#moe-parallel-folding","title":"MoE Parallel Folding","text":"<p>MoE Parallel Folding \u5141\u8bb8\u4f60\u4e3a\u6ce8\u610f\u529b\u4e0e MoE \u90e8\u5206\u8bbe\u7f6e\u4e0d\u540c\u7684\u5e76\u884c\u7b56\u7565\u3002\u901a\u8fc7 <code>--transformer-impl transformer_engine --moe-enable-moe-pf</code> \u7b49\u53c2\u6570\uff0c\u53ef\u8ba9\u6ce8\u610f\u529b\u5c42\u4e0e MLP/\u4e13\u5bb6\u5c42\u91c7\u7528\u4e0d\u540c\u7684\u6620\u5c04\u65b9\u5f0f\uff0c\u4ece\u800c\u83b7\u5f97\u66f4\u7075\u6d3b\u7684\u6a21\u578b\u5207\u5206\u3002\u4f8b\u5982\u5728 DeepSeek-V3 \u4e2d\uff0c\u53ef\u5c06\u6ce8\u610f\u529b\u6620\u5c04\u5230\uff08TP, PP\uff09\uff0c\u800c MoE \u5219\u6620\u5c04\u5230\uff08EP, CP, PP\uff09\u3002</p>"},{"location":"megatron/docs/source/api-guide/moe/#moedense","title":"\u6df7\u5408 MoE/Dense \u67b6\u6784","text":"<p>MoE \u5c42\u9891\u7387\u5141\u8bb8\u5728\u5168\u6a21\u578b\u4e2d\u4ea4\u66ff\u63d2\u5165 Dense \u5c42\u4e0e MoE \u5c42\uff0c\u901a\u8fc7 <code>--moe-layer-freq</code> \u6307\u5b9a\u5468\u671f\u3002\u4f8b\u5982\u8bbe\u7f6e\u4e3a <code>4</code> \u8868\u793a\u6bcf 4 \u5c42 Transformer \u63d2\u5165\u4e00\u4e2a MoE \u5c42\uff0c\u5176\u4f59\u4e3a Dense \u5c42\uff0c\u53ef\u6784\u5efa\u6df7\u5408\u67b6\u6784\u3002</p>"},{"location":"megatron/docs/source/api-guide/moe/#ep-a2a","title":"\u6279\u7ea7 EP-A2A \u91cd\u53e0","text":"<p>\u542f\u7528\u6279\u7ea7\u7684 All-to-All \u91cd\u53e0\uff08\u7075\u611f\u6765\u81ea DeepSeek-V3 \u7684 DualPipe \u5b9e\u73b0\uff09\u53ef\u901a\u8fc7 <code>--moe-batch-level-a2a-overlap</code> \u7b49\u53c2\u6570\u5b9e\u73b0\u3002\u5176\u7279\u6027\u5305\u62ec\uff1a - \u901a\u8fc7\u6279\u7ea7\u91cd\u53e0\u9690\u85cf EP A2A \u901a\u4fe1 - \u5c06\u6743\u91cd\u68af\u5ea6\u4e0e\u6fc0\u6d3b\u68af\u5ea6\u8ba1\u7b97\u62c6\u5206\uff0c\u4ee5\u4fbf\u4e0e\u901a\u4fe1\u66f4\u597d\u5730\u91cd\u53e0 - \u652f\u6301\u4ea4\u9519\u6d41\u6c34\u7ebf\u5e76\u884c - \u652f\u6301 FP8 \u8bad\u7ec3 - \u652f\u6301 MTP\uff08\u76ee\u524d\u4ec5\u652f\u6301 <code>--mtp-num-layers 1</code>\uff09</p> <p>\u4f7f\u7528\u65b9\u5f0f\uff1a <pre><code># Add the following flags to the training script\n--moe-batch-level-a2a-overlap\n--pipeline-parallel-schedule-lbfs\n--num-lbfs-batches 8\n</code></pre></p>"},{"location":"megatron/docs/source/api-guide/moe/#token-dispatcher","title":"Token Dispatcher \u7c7b\u578b","text":"<p>Megatron-Core \u652f\u6301\u591a\u79cd token dispatcher\uff1a - <code>alltoall</code>\uff1a\u7ecf\u5178\u7684 All-to-All token \u5206\u53d1 - <code>flex</code>\uff1a\u652f\u6301 DeepEP \u7684\u7075\u6d3b\u5206\u53d1\uff0c\u5b9e\u73b0\u8de8\u8282\u70b9\u9ad8\u6027\u80fd\u901a\u4fe1</p> <p>\u901a\u8fc7 <code>--moe-token-dispatcher-type</code> \u6307\u5b9a\uff0c\u82e5\u642d\u914d <code>--moe-enable-deepep</code> \u5219\u542f\u7528 DeepEP\u3002</p>"},{"location":"megatron/docs/source/api-guide/moe/#deepseek-deepep","title":"DeepSeek \u7684 DeepEP","text":"<ul> <li>DeepSeek-DeepEP \u63d0\u4f9b\u9488\u5bf9\u5927\u89c4\u6a21 MoE \u8bad\u7ec3\u4f18\u5316\u7684 token \u5206\u53d1\u4e0e\u805a\u5408\u5b9e\u73b0\u3002</li> <li>\u7279\u522b\u9002\u5408 DeepSeek-V3 \u7b49\u5927\u89c4\u6a21\u7ec6\u7c92\u5ea6 MoE \u67b6\u6784\u3002</li> <li>\u542f\u7528\u65b9\u5f0f\uff1a\u5728\u547d\u4ee4\u4e2d\u6dfb\u52a0 <code>--moe-token-dispatcher-type=flex --moe-enable-deepep</code>\u3002</li> </ul>"},{"location":"megatron/docs/source/api-guide/moe/#cuda-graph","title":"CUDA Graph \u652f\u6301","text":"<p>\u901a\u8fc7 <code>--cuda-graph-impl</code> \u53c2\u6570\u542f\u7528 CUDA Graph\uff0c\u6709\u4e24\u79cd\u5b9e\u73b0\uff1a</p> <ol> <li><code>--cuda-graph-impl=local</code>\uff1a\u4f7f\u7528 MCore \u5185\u90e8\u7684 CUDA Graph \u7ba1\u7406\u5668\u3002</li> <li><code>--cuda-graph-impl=transformer_engine</code>\uff1a\u4f7f\u7528 TransformerEngine \u7684 <code>make_graphed_callables()</code> \u63a5\u53e3\u3002</li> </ol> <p>\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u9700\u5728\u8bad\u7ec3\u811a\u672c\u4e2d\u8c03\u7528 <code>TECudaGraphHelper.create_cudagraphs()</code> \u4e0e <code>TECudaGraphHelper.cuda_graph_set_manual_hooks()</code>\uff0c\u793a\u4f8b\u89c1 <code>megatron/training/training.py</code>\u3002</p> <p>\u5bf9\u4e8e MoE \u6a21\u578b\uff0c\u5982\u679c\u672a\u8bbe\u7f6e <code>--moe-expert-capacity-factor</code> \u4e0e <code>--moe-pad-expert-input-to-capacity</code>\uff0c\u5176\u52a8\u6001\u5f62\u72b6\u4f1a\u963b\u6b62\u5bf9 MoE \u5c42\u8fdb\u884c CUDA Graph \u6355\u83b7\u3002\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7 <code>--cuda-graph-scope=attn</code> \u53ea\u5bf9\u6ce8\u610f\u529b\u90e8\u5206\uff08<code>TransformerLayer._forward_attention()</code>\uff09\u542f\u7528 CUDA Graph\uff0c\u800c\u8ba9 MoE \u90e8\u5206\uff08<code>TransformerLayer._forward_mlp()</code>\uff09\u4fdd\u6301\u539f\u72b6\u3002</p>"},{"location":"megatron/docs/source/api-guide/moe/#checkpointing","title":"Checkpointing","text":"<p>\u65b0\u589e\u7684\u201c\u4e22\u5f03\u8f93\u51fa\u201d\u68c0\u67e5\u70b9\u7b56\u7565\u5141\u8bb8\u5728\u524d\u5411\u8fc7\u7a0b\u4e2d\u4e22\u5f03\u7279\u5b9a\u5b50\u6a21\u5757\u7684\u8f93\u51fa\uff0c\u5e76\u5728\u53cd\u5411\u9636\u6bb5\u91cd\u65b0\u8ba1\u7b97\uff0c\u4ee5\u8282\u7701\u5185\u5b58\u3002\u53ef\u901a\u8fc7 <code>--recompute-granularity selective --recompute-modules [submodule1, submodule2, ...]</code> \u542f\u7528\uff0c\u652f\u6301\u7684\u5b50\u6a21\u5757\u5305\u62ec\uff1a</p> <ul> <li><code>moe_act</code>\uff1a\u91cd\u65b0\u8ba1\u7b97 GroupedMLP \u6fc0\u6d3b\u51fd\u6570</li> <li><code>layernorm</code>\uff1a\u91cd\u65b0\u8ba1\u7b97 <code>input_layernorm</code> \u4e0e <code>pre_mlp_layernorm</code>\uff08\u5728\u5b83\u4eec\u4e0d\u662f <code>IdentityOp</code> \u65f6\uff09</li> <li><code>mla_up_proj</code>\uff1a\u91cd\u65b0\u8ba1\u7b97 MLA \u4e0a\u6295\u4e0e RoPE \u5e94\u7528\u90e8\u5206</li> <li><code>core_attn</code>\uff1a\u91cd\u65b0\u8ba1\u7b97\u6838\u5fc3\u6ce8\u610f\u529b\u5b50\u6a21\u5757\uff08\u4f7f\u7528\u6807\u51c6\u68c0\u67e5\u70b9\u65b9\u5f0f\uff09</li> <li><code>mlp</code>\uff1a\u91cd\u65b0\u8ba1\u7b97\u7a20\u5bc6 MLP \u5b50\u6a21\u5757\uff08\u4f7f\u7528\u6807\u51c6\u68c0\u67e5\u70b9\u65b9\u5f0f\uff09\uff0c\u9002\u5408 DeepSeek-V3 \u7b49\u6df7\u5408\u6a21\u578b</li> <li><code>moe</code>\uff1a\u91cd\u65b0\u8ba1\u7b97 MoE \u5c42\u5b50\u6a21\u5757\uff08\u4f7f\u7528\u6807\u51c6\u68c0\u67e5\u70b9\u65b9\u5f0f\uff09</li> </ul>"},{"location":"megatron/docs/source/api-guide/moe/#upcycling","title":"Upcycling","text":"<p>\u901a\u8fc7 <code>--moe-use-upcycling</code> \u53ef\u542f\u7528 upcycling\uff1a\u4ece <code>--load</code> \u76ee\u5f55\u52a0\u8f7d\u7a20\u5bc6\u6a21\u578b\uff0c\u5728\u8fd0\u884c\u65f6\u8f6c\u6362\u4e3a MoE \u6a21\u578b\u5e76\u5f00\u59cb\u8bad\u7ec3\u3002\u8f6c\u6362\u540e\u7684\u6a21\u578b\u4f1a\u5728\u8bad\u7ec3\u524d\u4fdd\u5b58\u81f3 <code>--save</code> \u8def\u5f84\u3002\u8be5\u80fd\u529b\u57fa\u4e8e\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\u6784\u5efa\uff0c\u652f\u6301\u4e0e\u539f\u7a20\u5bc6\u68c0\u67e5\u70b9\u4e0d\u540c\u7684\u5e76\u884c\u6a21\u5f0f\uff0c\u8bad\u7ec3\u65f6\u53ef\u4f7f\u7528\u4efb\u610f\u4e13\u5bb6\u5e76\u884c\u5ea6\u3002</p> <p>\u6b64\u5916\u8fd8\u652f\u6301\u5728\u6700\u65b0\u7814\u7a76\u6210\u679c\u57fa\u7840\u4e0a\u7684\u66f4\u7ec6\u7c92\u5ea6 upcycling \u7b56\u7565\uff08\u8be6\u89c1\u8bba\u6587\uff09\u3002\u9ed8\u8ba4\u7b56\u7565\u662f\u5c06\u73b0\u6709 MLP \u590d\u5236\u4e3a\u591a\u4e2a\u4e13\u5bb6\uff1b\u7ec6\u7c92\u5ea6\u7b56\u7565\u901a\u8fc7 <code>--moe-upcycling-granularity</code> \u6307\u5b9a\u4e13\u5bb6\u9690\u85cf\u5c42\u76f8\u5bf9\u4e8e\u539f\u7a20\u5bc6 FFN \u7684\u7f29\u653e\u500d\u6570\u3002\u5c06\u8be5\u53c2\u6570\u8bbe\u4e3a\u6b63\u6574\u6570\u5373\u53ef\u542f\u7528\uff1b\u82e5\u8bbe\u4e3a 1\uff0c\u5219\u7b49\u540c\u4e8e\u9ed8\u8ba4\u7b56\u7565\u3002\u4f7f\u7528\u7ec6\u7c92\u5ea6\u7b56\u7565\u65f6\uff0cMoE \u7684 FFN \u9690\u85cf\u7ef4\u5ea6\u5e94\u4e3a\u7a20\u5bc6 FFN \u9690\u85cf\u7ef4\u5ea6\u9664\u4ee5 <code>--moe-upcycling-granularity</code>\u3002</p> <p>\u6ce8\u610f\uff1aMoE \u6a21\u578b\u7ed3\u6784\u901a\u8fc7\u811a\u672c\u53c2\u6570\u5b9a\u4e49\u3002\u6240\u6709 MoE \u76f8\u5173\u53c2\u6570\uff08\u5982 <code>--num-experts</code>\uff09\u90fd\u53ef\u81ea\u5b9a\u4e49\uff0c\u4f46\u5176\u4f59\u7ed3\u6784\u53c2\u6570\u9700\u4e0e\u539f\u7a20\u5bc6\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\u3002</p>"},{"location":"megatron/docs/source/api-guide/moe/#_10","title":"\u6027\u80fd\u5efa\u8bae","text":"<ul> <li>\u5f53\u672c\u5730\u4e13\u5bb6\u6570\u8f83\u5927\u65f6\uff0c\u8bf7\u542f\u7528 <code>--moe-grouped-gemm</code> \u4e0e <code>--moe-permute-fusion</code>\u3002</li> <li>\u4f7f\u7528 <code>--moe-router-load-balancing-type sinkhorn</code> \u53ef\u83b7\u5f97\u66f4\u5747\u8861\u7684 token \u5206\u914d\uff0c\u4f46\u8ba1\u7b97\u5f00\u9500\u66f4\u9ad8\u3002</li> <li>\u4e3a\u51cf\u5c11\u901a\u4fe1\u74f6\u9888\uff0c\u5efa\u8bae\u642d\u914d <code>--tp-comm-overlap</code> \u4e0e\u6279\u7ea7 A2A \u91cd\u53e0\u3002</li> <li>\u5bf9\u4e8e\u957f\u5e8f\u5217\u4efb\u52a1\uff0c\u53ef\u7ed3\u5408\u4e0a\u4e0b\u6587\u5e76\u884c\uff08<code>--context-parallel-size</code>\uff09\u4e0e\u4e13\u5bb6\u5e76\u884c\u83b7\u53d6\u66f4\u9ad8\u6548\u7387\u3002</li> </ul>"},{"location":"megatron/docs/source/api-guide/moe/#_11","title":"\u76d1\u63a7\u4e0e\u8c03\u8bd5","text":"<ul> <li>\u53ef\u901a\u8fc7 <code>--log-throughput</code> \u4e0e <code>--log-layerwise-times</code> \u7b49\u53c2\u6570\u76d1\u63a7 MoE \u5c42\u6027\u80fd\u3002</li> <li>\u542f\u7528 <code>--capture-environment-metrics</code> \u53ef\u8bb0\u5f55 GPU \u529f\u8017\u7b49\u4fe1\u606f\uff0c\u8f85\u52a9\u5b9a\u4f4d\u6027\u80fd\u74f6\u9888\u3002</li> </ul>"},{"location":"megatron/docs/source/api-guide/multi_latent_attention/","title":"\u591a\u6f5c\u5728\u6ce8\u610f\u529b","text":""},{"location":"megatron/docs/source/api-guide/multi_latent_attention/#_2","title":"\u591a\u6f5c\u5728\u6ce8\u610f\u529b\u6982\u8ff0","text":"<p>\u591a\u6f5c\u5728\u6ce8\u610f\u529b\uff08Multi-Latent Attention\uff0c\u7b80\u79f0 \u201cMLA\u201d\uff09\u7531 Deepseek \u56e2\u961f\u63d0\u51fa\uff0c\u901a\u8fc7\u5f15\u5165\u591a\u4e2a\u6f5c\u5728\u7a7a\u95f4\u6765\u63d0\u5347\u6ce8\u610f\u529b\u8ba1\u7b97\u6548\u7387\u3002\u5bf9\u4e8e\u5927\u578b\u8bed\u8a00\u6a21\u578b\u800c\u8a00\uff0cMLA \u80fd\u663e\u8457\u964d\u4f4e\u4f20\u7edf\u6ce8\u610f\u529b\u7684\u8ba1\u7b97\u8d1f\u62c5\u3002\u6839\u636e Deepseek-V2 \u6280\u672f\u62a5\u544a\uff0cMLA \u76f8\u6bd4\u591a\u5934\u6ce8\u610f\u529b\uff08MHA\uff09\u5728\u6027\u80fd\u4e0a\u66f4\u5177\u4f18\u52bf\uff0c\u540c\u65f6\u9700\u8981\u66f4\u5c0f\u7684 KV \u7f13\u5b58\u3002</p>"},{"location":"megatron/docs/source/api-guide/multi_latent_attention/#_3","title":"\u5982\u4f55\u542f\u7528\u591a\u6f5c\u5728\u6ce8\u610f\u529b","text":"<p>\u5728 Megatron-LM \u4e2d\u542f\u7528 MLA \u65f6\uff0c\u9700\u8981\u5728\u547d\u4ee4\u884c\u8bbe\u7f6e\uff1a - <code>--multi-latent-attention</code>\uff1a\u5728 MLP \u4e2d\u542f\u7528 MLA\u3002 - \u4f7f\u7528 <code>MLATransformerConfig</code> \u914d\u7f6e MLA \u7684\u5177\u4f53\u53c2\u6570\u3002</p>"},{"location":"megatron/docs/source/api-guide/multi_token_prediction/","title":"\u591a Token \u9884\u6d4b\uff08MTP\uff09","text":"<p>\u591a Token \u9884\u6d4b\uff08Multi-Token Prediction\uff0cMTP\uff09\u4f1a\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u6269\u5c55\u9884\u6d4b\u8303\u56f4\u81f3\u591a\u4e2a\u672a\u6765 token\u3002\u4e00\u65b9\u9762\uff0cMTP \u76ee\u6807\u80fd\u591f\u8ba9\u8bad\u7ec3\u4fe1\u53f7\u66f4\u52a0\u5bc6\u96c6\uff0c\u63d0\u5347\u6570\u636e\u6548\u7387\uff1b\u53e6\u4e00\u65b9\u9762\uff0cMTP \u53ef\u80fd\u8ba9\u6a21\u578b\u63d0\u524d\u89c4\u5212\u8868\u793a\uff0c\u4ece\u800c\u66f4\u597d\u5730\u9884\u6d4b\u540e\u7eed token\u3002\u5728\u672c\u5b9e\u73b0\u4e2d\uff0c\u6211\u4eec\u6309\u987a\u5e8f\u9884\u6d4b\u989d\u5916\u7684 token\uff0c\u5e76\u5728\u6bcf\u4e2a\u9884\u6d4b\u6df1\u5ea6\u4fdd\u7559\u5b8c\u6574\u7684\u56e0\u679c\u94fe\u3002\u4e0b\u56fe\u5c55\u793a\u4e86 MTP \u5728 DeepSeek-V3 \u4e2d\u7684\u5b9e\u73b0\u3002</p> <p></p> <p>\u7b2c k \u4e2a MTP \u6a21\u5757\u5305\u542b\u5171\u4eab\u5d4c\u5165\u5c42\u3001\u6295\u5f71\u77e9\u9635\u3001Transformer \u5757\u4e0e\u5171\u4eab\u8f93\u51fa\u5934\u3002\u5bf9\u4e8e\u7b2c (k - 1) \u4e2a\u9884\u6d4b\u6df1\u5ea6\u4e2d\u7684\u7b2c i \u4e2a\u8f93\u5165 token\uff0c\u6211\u4eec\u9996\u5148\u5c06\u7b2c i \u4e2a token \u7684\u8868\u793a\u4e0e\u7b2c (i + K) \u4e2a token \u7684\u5d4c\u5165\u901a\u8fc7\u7ebf\u6027\u6295\u5f71\u8fdb\u884c\u7ec4\u5408\u3002\u7ec4\u5408\u540e\u7684\u8868\u793a\u4f5c\u4e3a\u7b2c k \u4e2a\u6df1\u5ea6\u7684 Transformer \u5757\u8f93\u5165\uff0c\u7528\u4e8e\u751f\u6210\u65b0\u7684\u8f93\u51fa\u8868\u793a\u3002</p> <p>\u66f4\u591a\u4fe1\u606f\u8bf7\u53c2\u9605 DeepSeek-V3 \u6280\u672f\u62a5\u544a\u3002</p>"},{"location":"megatron/docs/source/api-guide/multi_token_prediction/#_1","title":"\u76f8\u5173\u53c2\u6570","text":"<p>\u5c06 <code>mtp_num_layers</code> \u8bbe\u7f6e\u4e3a\u6b63\u6574\u6570\u5373\u53ef\u8ba9 GPTModel \u7b49\u6a21\u578b\u542f\u7528\u591a Token \u9884\u6d4b\uff08MTP\uff09\u3002</p> \u53c2\u6570 \u63cf\u8ff0 <code>mtp_num_layers</code> \u591a Token \u9884\u6d4b\u5c42\u6570\u3002MTP \u4f1a\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u6269\u5c55\u9884\u6d4b\u8303\u56f4\u81f3\u591a\u4e2a\u672a\u6765 token\u3002\u672c\u5b9e\u73b0\u901a\u8fc7\u4e32\u8054 D \u4e2a\u6a21\u5757\u6765\u987a\u5e8f\u9884\u6d4b D \u4e2a\u989d\u5916 token\u3002\u9ed8\u8ba4\u503c\u4e3a None\u3002 <code>mtp_loss_scaling_factor</code> \u591a Token \u9884\u6d4b\u635f\u5931\u7684\u7f29\u653e\u7cfb\u6570\u3002\u6211\u4eec\u4f1a\u5bf9\u6240\u6709\u6df1\u5ea6\u4e0a\u7684 MTP \u635f\u5931\u6c42\u5e73\u5747\uff0c\u518d\u4e58\u4ee5\u8be5\u7cfb\u6570\u5f97\u5230\u6574\u4f53 MTP \u635f\u5931\uff0c\u4f5c\u4e3a\u989d\u5916\u7684\u8bad\u7ec3\u76ee\u6807\u3002\u9ed8\u8ba4\u503c\u4e3a 0.1\u3002"},{"location":"megatron/docs/source/api-guide/multi_token_prediction/#_2","title":"\u6ce8\u610f\u4e8b\u9879","text":"<p>\u542f\u7528 MTP \u65f6\uff0c\u8bf7\u52ff\u4f7f\u7528 Context Parallel (CP)\u3001\u4efb\u610f\u7684 AttnMaskType \u6216\u5b66\u4e60\u5f97\u5230\u7684\u7edd\u5bf9\u4f4d\u7f6e\u5d4c\u5165\u7c7b\u578b\u3002\u8fd9\u4e9b\u7528\u4f8b\u5f53\u524d\u5c1a\u672a\u652f\u6301\u3002</p>"},{"location":"megatron/docs/source/api-guide/num_microbatches_calculator/","title":"\u5fae\u6279\u6b21\u8ba1\u7b97\u5668","text":"<p>\u8be5 API \u7528\u4e8e\u6839\u636e\u6a21\u578b\u89c4\u6a21\u4e0e\u8bbe\u5b9a\u7684\u6279\u5927\u5c0f\uff0c\u8ba1\u7b97\u6240\u9700\u7684\u5fae\u6279\u6b21\u6570\u91cf\u3002</p>"},{"location":"megatron/docs/source/api-guide/num_microbatches_calculator/#_2","title":"\u6a21\u5757\u5185\u5bb9","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/num_microbatches_calculator/__init__.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/optimizer_cpu_offload/","title":"\u4f18\u5316\u5668 CPU offload \u6a21\u5757","text":""},{"location":"megatron/docs/source/api-guide/optimizer_cpu_offload/#_1","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<p>\u5728 MCore \u4e2d\u542f\u7528\u4f18\u5316\u5668 CPU offload \u65f6\u8bf7\u6dfb\u52a0\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <pre><code>--optimizer-cpu-offload\n--optimizer-offload-fraction 1.0\n--use-precision-aware-optimizer\n</code></pre>"},{"location":"megatron/docs/source/api-guide/optimizer_cpu_offload/#_2","title":"\u914d\u7f6e\u5efa\u8bae","text":"<p>\u68af\u5ea6\u4ece GPU \u590d\u5236\u5230 CPU\u3001\u5728 CPU \u4e0a\u6267\u884c\u4f18\u5316\u5668\u6b65\u9aa4\u3001\u518d\u5c06\u53c2\u6570\u590d\u5236\u56de GPU \u7684\u8fc7\u7a0b\u4f1a\u8017\u8d39\u65f6\u95f4\u3002\u5efa\u8bae\u52a0\u4e0a <code>--overlap-cpu-optimizer-d2h-h2d</code>\uff0c\u4ee5\u5e76\u884c\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c\u3002</p>"},{"location":"megatron/docs/source/api-guide/optimizer_param_scheduler/","title":"\u4f18\u5316\u5668\u53c2\u6570\u8c03\u5ea6\u5668","text":"<p>\u8be5 API \u7528\u4e8e\u8ba1\u7b97\u4f18\u5316\u5668\u7684\u5b66\u4e60\u7387\u4e0e\u6743\u91cd\u8870\u51cf\u3002</p>"},{"location":"megatron/docs/source/api-guide/optimizer_param_scheduler/#_2","title":"\u6a21\u5757\u5185\u5bb9","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/optimizer_param_scheduler/__init__.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/pipeline_parallel/","title":"pipeline_parallel \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u5b9e\u73b0\u4e86\u4e24\u79cd\u4e0d\u540c\u7684\u6d41\u6c34\u7ebf\u5e76\u884c\u8c03\u5ea6\uff08\u5206\u522b\u5bf9\u5e94\u65e0\u4ea4\u9519\u4e0e\u4ea4\u9519\u7248\u672c\uff0c\u8be6\u89c1 Efficient Large-Scale Language Model Training on GPU Clusters Using Megatron-LM\uff09\uff0c\u4ee5\u53ca\u9ed8\u8ba4\u7684\u65e0\u6d41\u6c34\u7ebf\u8c03\u5ea6\u3002\u540c\u65f6\u63d0\u4f9b\u6d41\u6c34\u7ebf\u9636\u6bb5\u4e4b\u95f4\u6240\u9700\u7684\u70b9\u5bf9\u70b9\u901a\u4fe1\u65b9\u6cd5\u3002</p>"},{"location":"megatron/docs/source/api-guide/pipeline_parallel/#_1","title":"\u5b50\u6a21\u5757","text":"<ul> <li>\u81ea\u5b9a\u4e49\u6d41\u6c34\u7ebf\u6a21\u578b\u5e76\u884c\u5e03\u5c40\uff1a\u901a\u8fc7 <code>--pipeline-model-parallel-layout</code> \u7cbe\u7ec6\u62c6\u5206\u5404\u6d41\u6c34\u7ebf\u9636\u6bb5\uff0c\u652f\u6301 DeepSeek-V3 \u7b49\u975e\u5747\u8861\u6a21\u578b\u3002\u6587\u6863\u5305\u542b\u5e03\u5c40\u8bed\u6cd5\u4e0e\u793a\u4f8b\u3002</li> </ul>"},{"location":"megatron/docs/source/api-guide/pipeline_parallel/#pipeline_parallelp2p_communication","title":"pipeline_parallel.p2p_communication \u6a21\u5757","text":"<p>\u5c01\u88c5\u4e86\u4e0d\u540c\u6d41\u6c34\u7ebf\u8c03\u5ea6\u6240\u9700\u7684\u70b9\u5bf9\u70b9\u901a\u4fe1\u5b9e\u73b0\uff08\u5982 <code>recv_forward</code>\u3001<code>recv_backward</code> \u7b49\uff09\u3002</p> <p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/pipeline_parallel/p2p_communication.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/pipeline_parallel/#pipeline_parallelschedules","title":"pipeline_parallel.schedules \u6a21\u5757","text":"<p>\u63d0\u4f9b\u4e24\u79cd\u6d41\u6c34\u7ebf\u8c03\u5ea6\uff1a<code>forward_backward_pipelining_with_interleaving</code>\uff08\u4ea4\u9519\u6d41\u6c34\u7ebf\uff09\u4e0e <code>forward_backward_pipelining_without_interleaving</code>\uff08\u975e\u4ea4\u9519\uff09\uff0c\u4ee5\u53ca\u9ed8\u8ba4\u7684 <code>forward_backward_no_pipelining</code>\u3002<code>get_forward_backward_func</code> \u4f1a\u6839\u636e\u8bad\u7ec3\u914d\u7f6e\u8fd4\u56de\u9002\u5408\u7684\u8c03\u5ea6\u51fd\u6570\uff08\u5982\u6d41\u6c34\u7ebf\u5e76\u884c\u5ea6\u4e3a 1 \u65f6\u4f7f\u7528 <code>forward_backward_no_pipelining</code>\uff09\u3002</p> <p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/pipeline_parallel/schedules.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/pipeline_parallel/#_2","title":"\u6a21\u5757\u5185\u5bb9","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/pipeline_parallel/__init__.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/pipeline_parallel_layout/","title":"\u81ea\u5b9a\u4e49\u6d41\u6c34\u7ebf\u6a21\u578b\u5e76\u884c\u5e03\u5c40","text":"<p>\u8be5\u7279\u6027\u4ecd\u5c5e\u5b9e\u9a8c\u9636\u6bb5\uff0c\u672a\u6765\u53ef\u80fd\u8c03\u6574\u3002</p> <p><code>--pipeline-model-parallel-layout</code> \u63d0\u4f9b\u7075\u6d3b\u7684 API \u7528\u4e8e\u5b9a\u4e49\u6d41\u6c34\u7ebf\u5e76\u884c\u7684\u5206\u6bb5\u65b9\u5f0f\uff0c\u5bf9\u62c6\u5206\u4e0d\u5747\u8861\u7684\u6a21\u578b\u5341\u5206\u5173\u952e\u3002\u4f8b\u5982\uff0c\u8981\u5c06 DeepSeek-V3\uff0861 \u4e2a decoder \u5c42 + 1 \u4e2a MTP \u5c42\uff09\u6309\u7167 PP16VPP2 \u5212\u5206\uff0c\u53ef\u4f7f\u7528\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <pre><code>--pipeline-model-parallel-size 16\n--pipeline-model-parallel-layout \"Et*3|(tt|)*29,m|L\"\n</code></pre> PP \\ VPP rank 0 1 0 embedding + 3 \u00d7 decoder 2 \u00d7 decoder 1~13 2 \u00d7 decoder 2 \u00d7 decoder 14 2 \u00d7 decoder mtp 15 2 \u00d7 decoder loss <p>\u5728\u5e03\u5c40\u5b57\u7b26\u4e32\u4e2d\uff0c\u4f7f\u7528 <code>|</code> \u5206\u9694\u4e0d\u540c\u9636\u6bb5\u3002\u53ef\u901a\u8fc7\u4e58\u53f7\u8868\u793a\u590d\u5236\u7684\u9636\u6bb5\u6216\u5c42\uff0c\u9017\u53f7\u53ef\u4f5c\u4e3a\u53ef\u8bfb\u6027\u88c5\u9970\u3002\u7b26\u53f7\u7ea6\u5b9a\u5982\u4e0b\uff1a</p> <ul> <li><code>E</code> = embedding \u5c42</li> <li><code>t</code> = Transformer decoder \u5c42</li> <li><code>m</code> = MTP \u5c42</li> <li><code>L</code> = loss \u8ba1\u7b97\u5c42</li> </ul> <p>\u5e03\u5c40\u4e2d\u5141\u8bb8\u51fa\u73b0\u7a7a\u9636\u6bb5\uff0c\u4f8b\u5982 <code>E||t|L</code>\uff08\u7b2c\u4e8c\u4e2a\u9636\u6bb5\u4e3a\u7a7a\uff09\u3002</p>"},{"location":"megatron/docs/source/api-guide/tensor_parallel/","title":"tensor_parallel \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u5b9e\u73b0\u4e86 Transformer \u6a21\u578b\u7684\u5f20\u91cf\u5e76\u884c\u7b97\u6cd5\uff08\u8be6\u89c1 Megatron-LM: Training Multi-Billion Parameter Language Models Using Model Parallelism \u4e0e Reducing Activation Recomputation in Large Transformer Models\uff09\u3002</p>"},{"location":"megatron/docs/source/api-guide/tensor_parallel/#_1","title":"\u5b50\u6a21\u5757","text":""},{"location":"megatron/docs/source/api-guide/tensor_parallel/#tensor_parallelcross_entropy","title":"tensor_parallel.cross_entropy \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/tensor_parallel/cross_entropy.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/tensor_parallel/#tensor_paralleldata","title":"tensor_parallel.data \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/tensor_parallel/data.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/tensor_parallel/#tensor_parallellayers","title":"tensor_parallel.layers \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/tensor_parallel/layers.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/tensor_parallel/#tensor_parallelmappings","title":"tensor_parallel.mappings \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/tensor_parallel/mappings.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/tensor_parallel/#tensor_parallelrandom","title":"tensor_parallel.random \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/tensor_parallel/random.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/tensor_parallel/#tensor_parallelutils","title":"tensor_parallel.utils \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/tensor_parallel/utils.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/tensor_parallel/#_2","title":"\u6a21\u5757\u5185\u5bb9","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/tensor_parallel/__init__.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/tokenizers/","title":"\u65b0\u7248\u5206\u8bcd\u5668\u7cfb\u7edf","text":""},{"location":"megatron/docs/source/api-guide/tokenizers/#_2","title":"\u4e0e\u65e7\u7248\u5206\u8bcd\u5668\u7cfb\u7edf\u7684\u4e3b\u8981\u533a\u522b","text":""},{"location":"megatron/docs/source/api-guide/tokenizers/#1-hugging-face-api","title":"1. \u7c7b\u4f3c Hugging Face \u7684 API","text":"<p>\u6211\u4eec\u65b0\u589e\u4e86 <code>MegatronTokenizer</code> \u7c7b\uff0c\u63d0\u4f9b\u4e0e Hugging Face \u7c7b\u4f3c\u4e14\u6613\u4e8e\u4f7f\u7528\u7684 API\uff1a</p> <p><code>.from_pretrained()</code> \u2014\u2014 \u4ece\u76ee\u5f55\u6216\u6587\u4ef6\u52a0\u8f7d\u5206\u8bcd\u5668\uff0c\u53ef\u81ea\u52a8\u68c0\u6d4b\u7c7b\u578b\u4e0e\u914d\u7f6e\u3002</p> <p><code>.write_metadata()</code> \u2014\u2014 \u4fdd\u5b58\u5206\u8bcd\u5668\u914d\u7f6e\uff08\u5143\u6570\u636e\uff09\uff0c\u4fbf\u4e8e\u540e\u7eed\u76f4\u63a5\u590d\u7528\uff0c\u800c\u65e0\u9700\u518d\u6b21\u6307\u5b9a\u53c2\u6570\u3002</p> <p>\u8fd9\u6837\u5c31\u65e0\u9700\u5728\u8bad\u7ec3\u811a\u672c\u4e2d\u586b\u5199\u957f\u4e32\u521d\u59cb\u5316\u53c2\u6570\u6216\u786c\u7f16\u7801\u8bbe\u7f6e\u3002</p>"},{"location":"megatron/docs/source/api-guide/tokenizers/#2","title":"2. \u5206\u8bcd\u5668\u5143\u6570\u636e","text":"<p>\u73b0\u5728\u4f7f\u7528 JSON \u5143\u6570\u636e\u6587\u4ef6\u96c6\u4e2d\u5b58\u653e\u5206\u8bcd\u5668\u7684\u5173\u952e\u914d\u7f6e\uff1a  - \u5206\u8bcd\u5668\u5e93\uff08\u5982 HuggingFace\u3001SentencePiece\u3001TikToken \u7b49\uff09  - \u804a\u5929\u6a21\u677f  - \u5206\u8bcd\u5668\u7c7b</p> <p>\u4f18\u52bf\uff1a  - \u76f8\u5173\u53c2\u6570\u4ec5\u9700\u8bbe\u7f6e\u4e00\u6b21\u3002  - \u4e0d\u518d\u9700\u8981\u5728\u547d\u4ee4\u884c\u4e2d\u4f20\u9012\u591a\u4e2a\u5206\u8bcd\u5668\u914d\u7f6e\u53c2\u6570\u3002  - \u4fbf\u4e8e\u5171\u4eab\u2014\u2014\u590d\u5236\u5206\u8bcd\u5668\u76ee\u5f55\u53ca\u5176\u5143\u6570\u636e\u6587\u4ef6\u5373\u53ef\u3002</p>"},{"location":"megatron/docs/source/api-guide/tokenizers/#3","title":"3. \u5e93\u7c7b\u73b0\u5df2\u5185\u90e8\u7ba1\u7406","text":"<p>\u65e7\u7248\u4e2d\uff0c\u7528\u6237\u5fc5\u987b\u4e86\u89e3\u5e94\u4f7f\u7528\u7684\u5206\u8bcd\u5668\u5e93\uff08\u5982 <code>SentencePieceTokenizer</code>\u3001<code>HuggingFaceTokenizer</code> \u7b49\uff09\u5e76\u624b\u52a8\u5b9e\u4f8b\u5316\u3002</p> <p>\u65b0\u7248\u7cfb\u7edf\u4e2d\uff1a  - \u5e93\u7c7b\u578b\u4f1a\u6839\u636e\u5143\u6570\u636e\u81ea\u52a8\u8bc6\u522b\u3002  - \u5e95\u5c42\u4f1a\u9009\u62e9\u6b63\u786e\u7684\u5206\u8bcd\u5668\u5b9e\u73b0\u3002  - \u4f7f\u7528\u8005\u65e0\u9700\u624b\u52a8\u5904\u7406\u5206\u8bcd\u5668\u7c7b\u3002</p>"},{"location":"megatron/docs/source/api-guide/tokenizers/#3_1","title":"3. \u652f\u6301\u6a21\u578b\u7279\u5b9a\u7684\u5206\u8bcd\u5668\u7c7b","text":"<p>\u7cfb\u7edf\u73b0\u5728\u652f\u6301\uff1a  - \u5185\u7f6e\u7684 LLM \u4e13\u7528\u5206\u8bcd\u5668\u3002  - \u81ea\u5b9a\u4e49\u5206\u8bcd\u5668\uff1a\u901a\u8fc7\u7ee7\u627f <code>MegatronTokenizerText</code> \u521b\u5efa\u81ea\u5b9a\u4e49\u7c7b\uff0c\u5e76\u5728\u5143\u6570\u636e\u6587\u4ef6\u7684 <code>tokenizer_class</code> \u5b57\u6bb5\u4e2d\u58f0\u660e\u5373\u53ef\u3002  - \u5728\u4fdd\u6301\u9ed8\u8ba4\u8bbe\u7f6e\u7b80\u6d01\u7684\u540c\u65f6\uff0c\u4e3a\u9ad8\u7ea7\u5b9a\u5236\u63d0\u4f9b\u7a7a\u95f4\u3002</p>"},{"location":"megatron/docs/source/api-guide/tokenizers/#4","title":"4. \u4f7f\u7528\u65b9\u5f0f","text":"<p>\u521b\u5efa\u5e76\u4fdd\u5b58\u5143\u6570\u636e</p> <pre><code>from megatron.core.tokenizers import MegatronTokenizer\n\n# Metadata is written as tokenizer_metadata.json inside the tokenizer directory.\nMegatronTokenizer.write_metadata(\n    tokenizer_path=\"/path/to/tokenizer.model\",\n    tokenizer_library=\"sentencepiece\",\n    chat_template=\"chat template in jinja format\",\n)\n\n# Example: register a custom tokenizer class\nfrom megatron.core.tokenizers.text import MegatronTokenizerText\n\nclass CustomTokenizer(MegatronTokenizerText):\n    ...\n\nMegatronTokenizer.write_metadata(\n    tokenizer_path=\"/path/to/tokenizer.model\",\n    tokenizer_library=\"sentencepiece\",\n    chat_template=\"chat template in jinja format\",\n    tokenizer_class=CustomTokenizer,\n)\n\n# Save metadata to another location\nMegatronTokenizer.write_metadata(\n    tokenizer_path=\"/path/to/tokenizer.model\",\n    tokenizer_library=\"sentencepiece\",\n    metadata_path=\"/path/to/save/metadata.json\",\n)\n</code></pre> <p>\u6062\u590d\u5206\u8bcd\u5668</p> <pre><code>from megatron.core.tokenizers import MegatronTokenizer\n\nMegatronTokenizer.from_pretrained(\n    tokenizer_path=\"/path/to/tokenizer.model\",\n)\n\n# If metadata is stored elsewhere\nMegatronTokenizer.from_pretrained(\n    tokenizer_path=\"/path/to/tokenizer.model\",\n    metadata_path=\"/path/to/metadata.json\",\n)\n\n# Pass metadata as a dictionary\nMegatronTokenizer.from_pretrained(\n    tokenizer_path=\"GPT2BPETokenizer\",\n    metadata_path={\"library\": \"megatron\"},\n    vocab_file=\"/path/to/vocab.txt\",\n)\n\n# Provide additional parameters\nMegatronTokenizer.from_pretrained(\n    tokenizer_path=\"/path/to/tokenizer/model.json\",\n    metadata_path={\"library\": \"tiktoken\"},\n    pattern=\"v2\",\n    num_special_tokens=1000,\n)\n\n# Null tokenizer\nMegatronTokenizer.from_pretrained(\n    metadata_path={\"library\": \"null\"},\n    vocab_size=131072,\n)\n</code></pre>"},{"location":"megatron/docs/source/api-guide/tokenizers/#4-megatron-lm","title":"4. Megatron-LM \u9884\u8bad\u7ec3\u517c\u5bb9\u6027","text":"<p>\u65b0\u7248\u5206\u8bcd\u5668\u7cfb\u7edf\u4e0e Megatron-LM \u9884\u8bad\u7ec3\u811a\u672c\u517c\u5bb9\u3002\u82e5\u672a\u6307\u5b9a <code>--tokenizer-metadata</code>\uff0c\u4f1a\u81ea\u52a8\u751f\u6210\u9ed8\u8ba4\u5143\u6570\u636e\u6587\u4ef6\u3002</p> <pre><code># Null tokenizer\ntorchrun --nproc_per_node=1 pretrain_gpt.py \\\n    ... \\\n    --tokenizer-type NullTokenizer \\\n    --vocab-size 131072\n\n# HuggingFace tokenizer with explicit metadata\ntorchrun --nproc_per_node=1 pretrain_gpt.py \\\n    ... \\\n    --tokenizer-type HuggingFaceTokenizer \\\n    --tokenizer-model meta-llama/Meta-Llama-3-8B \\\n    --tokenizer-metadata /path/to/metadata.json\n</code></pre> <p>Megatron-LM \u9884\u8bad\u7ec3\u811a\u672c\u4ecd\u652f\u6301\u65e7\u7248\u5206\u8bcd\u5668\u7cfb\u7edf\u3002\u82e5\u9700\u542f\u7528\u65e7\u7248\uff0c\u53ea\u9700\u6dfb\u52a0 <code>--legacy-tokenizer</code> \u53c2\u6570\u3002</p>"},{"location":"megatron/docs/source/api-guide/transformer/","title":"transformer \u6a21\u5757","text":"<p><code>transformer</code> \u6a21\u5757\u63d0\u4f9b\u53ef\u9ad8\u5ea6\u5b9a\u5236\u7684 Transformer \u67b6\u6784\u5b9e\u73b0\u3002\u901a\u8fc7 \u201cspec\u201d \u53c2\u6570\uff0c\u53ef\u4ee5\u5728\u6574\u4e2a\u5c42\u5230\u5355\u4e2a\u7ebf\u6027\u5c42\u7684\u4efb\u610f\u7ea7\u522b\u66ff\u6362\u4e0d\u540c\u7684 PyTorch \u6a21\u5757\uff08\u8be6\u89c1 \u6b64\u5904\uff09\u3002Transformer \u7684\u914d\u7f6e\uff08\u9690\u85cf\u7ef4\u5ea6\u3001\u5c42\u6570\u3001\u6ce8\u610f\u529b\u5934\u6570\u7b49\uff09\u7531 <code>TransformerConfig</code> \u5bf9\u8c61\u7edf\u4e00\u63cf\u8ff0\u3002</p>"},{"location":"megatron/docs/source/api-guide/transformer/#_1","title":"\u5b50\u6a21\u5757","text":""},{"location":"megatron/docs/source/api-guide/transformer/#transformerattention","title":"transformer.attention \u6a21\u5757","text":"<p>\u5c01\u88c5 Transformer \u5c42\u4e2d\u7684\u6ce8\u610f\u529b\u90e8\u5206\uff08\u81ea\u6ce8\u610f\u529b\u6216\u4ea4\u53c9\u6ce8\u610f\u529b\uff09\uff0c\u5305\u62ec Q/K/V \u6295\u5f71\u3001\u6838\u5fc3\u6ce8\u610f\u529b\u8ba1\u7b97\uff08\u5982\u70b9\u79ef\u6ce8\u610f\u529b\uff09\u4ee5\u53ca\u6700\u7ec8\u7684\u8f93\u51fa\u7ebf\u6027\u5c42\u3002</p> <p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/transformer/attention.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/transformer/#transformerdot_product_attention","title":"transformer.dot_product_attention \u6a21\u5757","text":"<p>\u63d0\u4f9b\u7eaf PyTorch \u5b9e\u73b0\u7684\u70b9\u79ef\u6ce8\u610f\u529b\u3002\u5728\u5173\u6ce8\u8bad\u7ec3\u901f\u5ea6\u65f6\uff0c\u901a\u5e38\u4f1a\u4f7f\u7528 FlashAttention \u6216 cuDNN FusedAttention \u7b49\u66f4\u9ad8\u6548\u7684\u5b9e\u73b0\u3002</p> <p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/transformer/dot_product_attention.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/transformer/#transformerenums","title":"transformer.enums \u6a21\u5757","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/transformer/enums.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/transformer/#transformeridentity_op","title":"transformer.identity_op \u6a21\u5757","text":"<p>\u63d0\u4f9b\u4e00\u4e2a\u53ef\u5728 spec \u4e2d\u4f7f\u7528\u7684\u76f4\u901a\u6a21\u5757\uff0c\u7528\u4e8e\u8868\u793a\u8df3\u8fc7\u67d0\u4e2a\u64cd\u4f5c\u3002\u4f8b\u5982\u5728 LayerNorm \u540e\u63a5\u7ebf\u6027\u5c42\u65f6\uff0c\u53ef\u5c06 IdentityOp \u4f5c\u4e3a LayerNorm \u6a21\u5757\u4f20\u5165\u3002</p> <p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/transformer/identity_op.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/transformer/#transformermlp","title":"transformer.mlp \u6a21\u5757","text":"<p>\u5b9e\u73b0 Transformer \u5c42\u4e2d\u7684 MLP\uff0c\u5305\u62ec\u8f93\u5165\u6295\u5f71\u3001\u975e\u7ebf\u6027\u6fc0\u6d3b\u4e0e\u8f93\u51fa\u6295\u5f71\u3002</p> <p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/transformer/mlp.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/transformer/#transformermodule","title":"transformer.module \u6a21\u5757","text":"<p>\u4e3a Transformer \u4e2d\u7684\u5404\u7c7b\u6a21\u5757\u63d0\u4f9b\u516c\u5171\u57fa\u7c7b\uff0c\u5b9e\u73b0\u5171\u4eab\u7684\u8f85\u52a9\u529f\u80fd\u3002</p> <p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/transformer/module.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/transformer/#transformertransformer_block","title":"transformer.transformer_block \u6a21\u5757","text":"<p>\u5b9a\u4e49\u4e00\u7ec4\uff08\u6216\u591a\u7ec4\uff09 Transformer \u5c42\uff0c\u53ef\u914d\u7f6e\u4e3a\u5b8c\u5168\u76f8\u540c\u6216\u5404\u4e0d\u76f8\u540c\u3002</p> <p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/transformer/transformer_block.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/transformer/#transformertransformer_config","title":"transformer.transformer_config \u6a21\u5757","text":"<p>\u5305\u542b Transformer \u7684\u5168\u90e8\u914d\u7f6e\u9879\u3002\u501f\u52a9 dataclass\uff0c\u53ef\u5c06\u53c2\u6570\u96c6\u4e2d\u7ba1\u7406\uff0c\u907f\u514d\u5728\u591a\u5c42\u51fd\u6570\u8c03\u7528\u95f4\u53cd\u590d\u4f20\u9012\u3002</p> <p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/transformer/transformer_config.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/transformer/#transformertransformer_layer","title":"transformer.transformer_layer \u6a21\u5757","text":"<p>\u5b9a\u4e49\u5355\u4e2a\u6807\u51c6 Transformer \u5c42\uff08\u542b\u6ce8\u610f\u529b\u5757\u548c MLP \u5757\uff09\u3002</p> <p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/transformer/transformer_layer.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/transformer/#transformerutils","title":"transformer.utils \u6a21\u5757","text":"<p>\u5305\u542b Transformer \u5b9e\u73b0\u4e2d\u4f7f\u7528\u7684\u5404\u7c7b\u5de5\u5177\u51fd\u6570\u3002</p> <p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/transformer/utils.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/api-guide/transformer/#_2","title":"\u6a21\u5757\u5185\u5bb9","text":"<p>\u8be5\u6a21\u5757\u7684 API \u5b9a\u4e49\u4f4d\u4e8e <code>megatron/core/transformer/__init__.py</code>\uff0c\u53ef\u76f4\u63a5\u67e5\u9605\u6e90\u7801\u4e86\u89e3\u5b8c\u6574\u63a5\u53e3\u3002</p>"},{"location":"megatron/docs/source/user-guide/","title":"\u7528\u6237\u6307\u5357","text":"<ul> <li>\u5feb\u901f\u5f00\u59cb</li> <li>Megatron Service\uff08MSC\uff09 \u96c6\u6210</li> </ul>"},{"location":"megatron/examples/academic_paper_scripts/detxoify_lm/","title":"SGEAT\uff1a\u5bf9\u5927\u89c4\u6a21\u8bed\u8a00\u6a21\u578b\u7684\u53bb\u6bd2\u5316","text":"<p>\u672c\u6587\u6863\u4e3a\u6211\u4eec\u5728 NeurIPS 2022 \u53d1\u8868\u7684\u8bba\u6587\uff1a</p> <p>Exploring the Limits of Domain-Adaptive Training for Detoxifying Large-Scale Language Models</p> <p>\u4f5c\u8005\uff1aBoxin Wang, Wei Ping, Chaowei Xiao, Peng Xu, Mostofa Patwary, Mohammad Shoeybi, Bo Li, Anima Anandkumar, Bryan Catanzaro</p>"},{"location":"megatron/examples/academic_paper_scripts/detxoify_lm/#_1","title":"\u5f15\u7528","text":"<pre><code>@article{WangExp2022,\n  title={Exploring the Limits of Domain-Adaptive Training for Detoxifying Large-Scale Language Models},\n  author={Wang, Boxin and Ping, Wei and Xiao, Chaowei and Xu, Peng and Patwary, Mostofa and Shoeybi, Mohammad and and Li, Bo and Anandkumar, Anima and Catanzaro, Bryan},\n  journal={NeurIPS},\n  year={2022}\n}\n</code></pre>"},{"location":"megatron/examples/academic_paper_scripts/detxoify_lm/#_2","title":"\u4f7f\u7528\u65b9\u6cd5","text":""},{"location":"megatron/examples/academic_paper_scripts/detxoify_lm/#_3","title":"\u73af\u5883\u51c6\u5907","text":"<p>\u9879\u76ee\u73af\u5883\u57fa\u4e8e\u6807\u51c6\u7684 nvcr docker\uff0c\u955c\u50cf\u7248\u672c\u4e3a <code>nvcr.io/nvidia/pytorch:21.12-py3</code>\u3002</p> <p>\u82e5\u8981\u4f7f\u7528 Perspective API\uff0c\u9700\u8981\u5b89\u88c5 <code>google-api-python-client</code>\uff1a</p> <pre><code>pip install --upgrade google-api-python-client\n</code></pre>"},{"location":"megatron/examples/academic_paper_scripts/detxoify_lm/#_4","title":"\u81ea\u5f15\u5bfc\u751f\u6210","text":""},{"location":"megatron/examples/academic_paper_scripts/detxoify_lm/#sgeat_1","title":"SGEAT\uff08\u6807\u51c6\u6d41\u7a0b\uff09","text":"<p>\u4ee5\u4e0b\u811a\u672c\u5c55\u793a\u5982\u4f55\u5bf9 1.3B \u53c2\u6570\u7684 Megatron LM \u8fdb\u884c\u65e0\u6761\u4ef6\u751f\u6210\uff1a</p> <pre><code>#                                                                              [num of samples]     [model checkpoint]          [random seed]\nbash examples/detxoify_lm/self_generation/selfgenerate-1.3b-unconditional.sh       1000          checkpoints/gpt3/gpt3-1.3b/      2333\n</code></pre> <p>\u793a\u4f8b\u4e2d\u4f1a\u751f\u6210 1000 \u6761\u6587\u672c\uff0c\u7ed3\u679c\u4fdd\u5b58\u5728 <code>selfgeneration/unconditional_generation_gpt3-1.3b/2333.out</code>\u3002</p> <p>\u6ce8\u610f\uff1a\u8bf7\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u5728 <code>selfgenerate-1.3b-unconditional.sh</code> \u4e2d\u4fee\u6539 GPT-2 \u8bcd\u8868\u4e0e merge \u6587\u4ef6\u8def\u5f84\uff0c\u4ee5\u53ca\u8f93\u51fa\u76ee\u5f55\u3002</p>"},{"location":"megatron/examples/academic_paper_scripts/detxoify_lm/#_5","title":"\u6807\u6ce8","text":"<p>\u63a5\u4e0b\u6765\u4f7f\u7528 Perspective API \u5bf9\u81ea\u751f\u6210\u8bed\u6599\u8fdb\u884c\u6807\u6ce8\u3002\u8bf7\u5728 <code>examples/detoxify_lm/perspective_api_annotate.py</code> \u4e2d\u586b\u5165\u81ea\u5df1\u7684 API key\u3002</p> <pre><code>python examples/detxoify_lm/perspective_api_annotate.py --data-path [input-data-path] --out-path [output-data-path] --workers 70\n</code></pre> <p>\u4f8b\u5982\uff1a</p> <pre><code>python examples/detxoify_lm/annotations/perspective_api_annotate.py --data-path  selfgeneration/unconditional_generation_gpt3-1.3b/2333.out --out-path  selfgeneration/unconditional_generation_gpt3-1.3b/2333.annotated.out --workers 70\n</code></pre>"},{"location":"megatron/examples/academic_paper_scripts/detxoify_lm/#_6","title":"\u8fc7\u6ee4","text":"<p>\u968f\u540e\u5bf9\u6807\u6ce8\u7ed3\u679c\u8fdb\u884c\u8fc7\u6ee4\uff0c\u4fdd\u7559\u6bd2\u6027\u6700\u4f4e\u7684 50%\u3002</p> <pre><code>python examples/detxoify_lm/annotations/filter-selfgeneration.py --data-path  selfgeneration/unconditional_generation_gpt3-1.3b/2333.annotated.out --out-path  selfgeneration/unconditional_generation_gpt3-1.3b/2333.annotated.nontoxic.out\n</code></pre> <p>\u793a\u4f8b\u4f1a\u8f93\u51fa 500 \u6761\u6bd2\u6027\u6700\u4f4e\u7684\u6587\u672c\uff0c\u5b58\u4e8e <code>selfgeneration/unconditional_generation_gpt3-1.3b/2333.annotated.nontoxic.out</code>\u3002</p>"},{"location":"megatron/examples/academic_paper_scripts/detxoify_lm/#_7","title":"\u9884\u5904\u7406","text":"<p>\u5bf9\u8fc7\u6ee4\u540e\u7684\u6570\u636e\u96c6\u8fdb\u884c\u5904\u7406\uff0c\u4ee5\u4fbf Megatron LM \u5728\u5fae\u8c03\u65f6\u8bfb\u53d6\u3002</p> <pre><code>bash examples/detxoify_lm/annotations/preprocess.sh selfgeneration/unconditional_generation_gpt3-1.3b/2333.annotated.nontoxic.out selfgeneration/unconditional_generation_gpt3-1.3b/2333.annotated.nontoxic\n</code></pre> <p>\u6267\u884c\u540e\u5c06\u751f\u6210\u4ee5\u4e0b\u6587\u4ef6\uff1a</p> <pre><code>selfgeneration/unconditional_generation_gpt3-1.3b/2333.annotated.nontoxic_text_document.idx\nselfgeneration/unconditional_generation_gpt3-1.3b/2333.annotated.nontoxic_text_document.bin\n</code></pre> <p>\u8fd9\u4e9b\u6587\u4ef6\u5c06\u7528\u4e8e\u540e\u7eed\u7684\u9886\u57df\u81ea\u9002\u5e94\u8bad\u7ec3\u3002</p>"},{"location":"megatron/examples/academic_paper_scripts/detxoify_lm/#_8","title":"\u5fae\u8c03","text":"<p>\u4f7f\u7528\u9884\u5904\u7406\u540e\u7684\u6570\u636e\u5bf9 Megatron-LM \u8fdb\u884c\u5fae\u8c03\uff1a</p> <pre><code>#                                                                          [fine-tuning dataset]                                                                      [output-dir]                             [lr]    [bs]      [train-iters]                       [load checkpoint]\nbash examples/detxoify_lm/finetune_gpt_distributed-1.3b.sh    selfgeneration/unconditional_generation_gpt3-1.3b/2333.annotated.nontoxic_text_document         gpt3-1.3b-toy-example-lr-2e-5-bs-512             2e-5     512            78                          checkpoints/gpt3/gpt3-1.3b\n</code></pre> <p>\u6700\u7ec8\u68c0\u67e5\u70b9\u5c06\u4fdd\u5b58\u5728 <code>$SHARE_DATA/gpt3-1.3b-toy-example-lr-2e-5-bs-512</code>\uff08<code>$SHARE_DATA</code> \u9ed8\u8ba4\u4e3a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff09\u3002</p>"},{"location":"megatron/examples/academic_paper_scripts/detxoify_lm/#_9","title":"\u8bc4\u4f30","text":"<p>\u5229\u7528\u5fae\u8c03\u540e\u7684\u6a21\u578b\uff0c\u5bf9 RealToxicityPrompts \u6570\u636e\u96c6\u8fdb\u884c\u6761\u4ef6\u751f\u6210\uff1a</p> <pre><code>#                                                 [input-prompts]                          [model-checkpoint]\nbash examples/detxoify_lm/generate-1.3b.sh     augmented_prompts.jsonl      $SHARE_DATA/gpt3-1.3b-toy-example-lr-2e-5-bs-512\n</code></pre> <p>\u4e0a\u8ff0\u547d\u4ee4\u4f1a\u5728 <code>augmented_prompts.jsonl_output_gpt3-1.3b-toy-example-lr-2e-5-bs-512_seed_31846.jsonl</code> \u4e2d\u751f\u6210\u7eed\u5199\u6587\u672c\uff08<code>seed</code> \u4e3a\u968f\u673a\u6570\uff09\u3002</p> <p>\u6ce8\u610f\uff1a\u8f93\u5165\u63d0\u793a\u4f1a\u88ab\u6269\u589e\uff0c\u6bcf\u4e2a prompt \u91cd\u590d 25 \u6b21\uff0c\u4ee5\u8ba1\u7b97 25 \u6b21\u751f\u6210\u4e0b\u7684\u6700\u5927\u6bd2\u6027\u503c\u4e0e\u6bd2\u6027\u6982\u7387\u3002</p> <p>\u6700\u540e\uff0c\u4f7f\u7528 Perspective API \u8bc4\u4f30 Expected Maximum Toxicity \u4e0e Toxicity Probability\u3002</p> <pre><code>python examples/detxoify_lm/perspective_api.py --data-path \"augmented_prompts.jsonl_output_gpt3-1.3b-toy-example-lr-2e-5-bs-512_seed_31846.jsonl\" --prompt-path prompts.jsonl --workers 30\n</code></pre>"},{"location":"megatron/examples/academic_paper_scripts/msdp/","title":"Multi-Stage Prompting for Knowledgeable Dialogue Generation","text":"<p>\u6b64\u76ee\u5f55\u5305\u542b\u591a\u9636\u6bb5\u63d0\u793a\uff08multi-stage prompting\uff09\u751f\u6210\u77e5\u8bc6\u578b\u5bf9\u8bdd\u7684\u5168\u90e8\u811a\u672c\uff0c\u6db5\u76d6\u6570\u636e\u51c6\u5907\u4ee5\u53ca\u77e5\u8bc6\u4e0e\u56de\u590d\u7684\u751f\u6210\u3002\u8be6\u89c1 <code>knowledgeable</code> \u4efb\u52a1\u76ee\u5f55\u3002</p>"},{"location":"megatron/examples/academic_paper_scripts/sc21/","title":"\u590d\u73b0 SC21 \u8bba\u6587\u4e2d\u7684\u56fe\u8868","text":"<p>\u672c\u76ee\u5f55\u5305\u542b\u7528\u4e8e\u751f\u6210 Megatron \u8bba\u6587 \u4e2d\u7ed3\u679c\u7684\u811a\u672c\uff0c\u8bba\u6587\u53d1\u8868\u4e8e SuperComputing 2021\u3002\u811a\u672c\u57fa\u4e8e Slurm \u4e0e pyxis \u63d2\u4ef6\uff0c\u5982\u9700\u4f7f\u7528\u5176\u4ed6\u8c03\u5ea6\u5668\uff0c\u53ef\u81ea\u884c\u4fee\u6539\u3002</p>"},{"location":"megatron/examples/academic_paper_scripts/sc21/#git-commit","title":"Git commit","text":"<p>\u590d\u73b0\u7ed3\u679c\u8bf7\u4f7f\u7528 Megatron-LM commit\uff1a6985e58938d40ad91ac07b0fddcfad8132e1447e</p>"},{"location":"megatron/examples/academic_paper_scripts/sc21/#_1","title":"\u73af\u5883\u914d\u7f6e","text":"<p>\u4e0e\u96c6\u7fa4\u76f8\u5173\u7684\u53d8\u91cf\u4f4d\u4e8e <code>CONFIG.sh</code>\u3002\u8fd0\u884c\u811a\u672c\u524d\u8bf7\u5c06\u5176\u4e2d\u7684\u5360\u4f4d\u7b26\uff08<code>&lt;...&gt;</code>\uff09\u66ff\u6362\u4e3a\u5b9e\u9645\u503c\u3002</p>"},{"location":"megatron/examples/academic_paper_scripts/sc21/#_2","title":"\u811a\u672c\u8bf4\u660e","text":"<p>\u4ee5\u4e0b\u811a\u672c\u53ef\u7528\u4e8e\u590d\u73b0\u8bba\u6587\u4e2d\u7684\u56fe\u8868\uff1a</p> <ul> <li>run_table_1.sh\uff1a\u8868 1\uff0c\u5c55\u793a 10 \u4ebf\u81f3 1 \u4e07\u4ebf\u53c2\u6570 GPT \u6a21\u578b\u7684\u5f31\u6269\u5c55\u541e\u5410\u3002</li> <li>run_figure_11.sh\uff1a\u56fe 11\uff0c\u5c55\u793a\u6d41\u6c34\u7ebf\u5e76\u884c\u7684\u5f31\u6269\u5c55\u6027\u80fd\u3002</li> <li>run_figure_12.sh\uff1a\u56fe 12\uff0c\u5c55\u793a\u4ea4\u9519\u8c03\u5ea6\u5bf9 175B GPT \u7684\u5f71\u54cd\u3002</li> <li>run_figure_13.sh\uff1a\u56fe 13\uff0c\u5c55\u793a\u4e0d\u540c\u6d41\u6c34\u7ebf\u4e0e\u5f20\u91cf\u5e76\u884c\u5ea6\u5bf9 1622 \u4ebf\u53c2\u6570\u6a21\u578b\u7684\u5f71\u54cd\u3002</li> <li>run_figure_14.sh\uff1a\u56fe 14\uff0c\u5c55\u793a\u4e0d\u540c\u6570\u636e\u5e76\u884c\u4e0e\u6d41\u6c34\u7ebf\u5e76\u884c\u5ea6\u5bf9 59 \u4ebf\u53c2\u6570\u6a21\u578b\u7684\u5f71\u54cd\u3002</li> <li>run_figure_15.sh\uff1a\u56fe 15\uff0c\u5c55\u793a\u4e0d\u540c\u6570\u636e\u5e76\u884c\u4e0e\u5f20\u91cf\u5e76\u884c\u5ea6\u5bf9 59 \u4ebf\u53c2\u6570\u6a21\u578b\u7684\u5f71\u54cd\u3002</li> <li>run_figure_16.sh\uff1a\u56fe 16\uff0c\u5c55\u793a\u5fae\u6279\u5927\u5c0f\u7684\u5f71\u54cd\u3002</li> <li>run_figure_17.sh\uff1a\u56fe 17\uff0c\u5c55\u793a\u6fc0\u6d3b\u91cd\u8ba1\u7b97\u7684\u5f71\u54cd\u3002</li> <li>run_figure_18.sh\uff1a\u56fe 18\uff0c\u5c55\u793a scatter-gather \u901a\u4fe1\u4f18\u5316\u7684\u6548\u679c\u3002</li> </ul>"},{"location":"megatron/examples/bert/","title":"BERT \u6a21\u578b","text":""},{"location":"megatron/examples/bert/#_1","title":"\u76ee\u5f55","text":"<ul> <li>1. \u8bad\u7ec3\u73af\u5883</li> <li>2. \u914d\u7f6e\u53c2\u6570</li> </ul>"},{"location":"megatron/examples/bert/#1","title":"1. \u8bad\u7ec3\u73af\u5883","text":"<p>\u82e5\u901a\u8fc7 Docker \u8fd0\u884c\u6a21\u578b\uff0c\u53ef\u6309\u4ee5\u4e0b\u65b9\u5f0f\u6267\u884c\uff1a</p> <pre><code>PYTORCH_IMAGE=nvcr.io/nvidia/pytorch:24.01-py3\nCHECKPOINT_PATH=\"\" #&lt;Specify path&gt;\nTENSORBOARD_LOGS_PATH=\"\"#&lt;Specify path&gt;\nVOCAB_FILE=\"\" #&lt;Specify path to file&gt;//bert-vocab.txt\nDATA_PATH=\"\" #&lt;Specify path and file prefix&gt;_text_document\n\ndocker run \\\n  --gpus=all \\\n  --ipc=host \\\n  --workdir /workspace/megatron-lm \\\n  -v /path/to/data:/path/to/data \\\n  -v /path/to/megatron-lm:/workspace/megatron-lm \\\n  megatron-lm nvcr.io/nvidia/pytorch:24.01-py3 \\\n  bash examples/bert/train_bert_340m_distributed.sh $CHECKPOINT_PATH $TENSORBOARD_LOGS_PATH $VOCAB_FILE $DATA_PATH \"\n</code></pre> <p>\u6ce8\uff1a\u6839\u636e\u5b9e\u9645\u73af\u5883\uff0c\u547d\u4ee4\u53ef\u80fd\u9700\u8981\u505a\u76f8\u5e94\u8c03\u6574\u3002</p>"},{"location":"megatron/examples/bert/#2","title":"2. \u914d\u7f6e\u53c2\u6570","text":"<p>\u5f53\u524d\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u8fd0\u884c 3.4 \u4ebf\u53c2\u6570\u7684\u6a21\u578b\u3002\u4f60\u4e5f\u53ef\u4ee5\u9009\u62e9\u5176\u4ed6\u914d\u7f6e\uff1a</p>"},{"location":"megatron/examples/bert/#4b","title":"4B","text":"<pre><code>--num-layers 48 \\\n--hidden-size 2560 \\\n--num-attention-heads 32 \\\n--tensor-model-parallel-size 1 \\\n--pipeline-model-parallel-size 1 \\\n</code></pre>"},{"location":"megatron/examples/bert/#20b","title":"20B","text":"<pre><code>--num-layers 48 \\\n--hidden-size 6144 \\\n--num-attention-heads 96 \\\n--tensor-model-parallel-size 4 \\\n--pipeline-model-parallel-size 4 \\\n</code></pre>"},{"location":"megatron/examples/export/","title":"Megatron Core \u5bfc\u51fa","text":"<p>\u8be5\u6a21\u5757\u7528\u4e8e\u5c06 Megatron Core \u6a21\u578b\u5bfc\u51fa\u5230\u4e0d\u540c\u7684\u63a8\u7406\u6846\u67b6\u3002\u76ee\u524d\u652f\u6301 TRT-LLM\uff0c\u672a\u6765\u5c06\u9646\u7eed\u652f\u6301 VLLM \u7b49\u3002</p>"},{"location":"megatron/examples/export/#_1","title":"\u91cf\u5316\u4e0e\u5bfc\u51fa","text":"<p>\u53ef\u53c2\u8003 TensorRT Model Optimizer \u7684\u793a\u4f8b\uff0c\u5148\u6267\u884c\u8bad\u7ec3\u540e\u91cf\u5316\uff0c\u518d\u5bfc\u51fa\u4e3a\u7c7b\u4f3c HF \u7684\u68c0\u67e5\u70b9\uff0c\u4ee5\u4fbf\u90e8\u7f72\u5230 TensorRT-LLM\u3001vLLM\u3001SGLang \u7b49\u6846\u67b6\u3002</p>"},{"location":"megatron/examples/export/#trtllm","title":"TRTLLM \u5bfc\u51fa","text":"<p>\u5982\u53ea\u9700\u5bfc\u51fa\u4e3a TRT-LLM \u68c0\u67e5\u70b9\uff0c\u8bf7\u53c2\u8003 trtllm_export \u4e2d\u7684\u8bf4\u660e\u3002</p>"},{"location":"megatron/examples/export/trtllm_export/","title":"Megatron Core \u5230 TRTLLM \u7684\u5bfc\u51fa\u6307\u5357","text":"<p>\u672c\u6587\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 Megatron Core \u7684\u5bfc\u51fa\u5de5\u5177\uff0c\u5c06\u6a21\u578b\u8f6c\u6362\u4e3a TRT-LLM \u683c\u5f0f\u3002</p>"},{"location":"megatron/examples/export/trtllm_export/#_1","title":"\u76ee\u5f55","text":"<ul> <li>Megatron Core \u5230 TRTLLM \u7684\u5bfc\u51fa\u6307\u5357</li> <li>\u76ee\u5f55</li> <li>1. \u5feb\u901f\u5f00\u59cb<ul> <li>1.1 \u4ee3\u7801\u7ed3\u6784</li> <li>1.2 \u8fd0\u884c\u793a\u4f8b</li> </ul> </li> <li>2. GPU \u5bfc\u51fa</li> <li>3. \u540e\u7eed\u89c4\u5212</li> </ul>"},{"location":"megatron/examples/export/trtllm_export/#1","title":"1. \u5feb\u901f\u5f00\u59cb","text":"<p>\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u5982\u4f55\u5728\u5355\u8bbe\u5907\u6a21\u5f0f\u4e0b\uff0c\u5c06 mcore GPT \u6a21\u578b\u8f6c\u6362\u4e3a TRT-LLM \u683c\u5f0f\u3002\u793a\u4f8b\u811a\u672c\u4f4d\u4e8e gpt_single_device_cpu_export.py\u3002</p> <p>\u6ce8\u610f\uff1a\u82e5\u6a21\u578b\u53ef\u5b8c\u5168\u88c5\u5165 GPU \u5185\u5b58\uff0c\u53ef\u5148\u5c06 state_dict \u9884\u52a0\u8f7d\u5230 GPU\uff0c\u518d\u8c03\u7528 <code>get_trtllm_pretrained_config_and_model_weights</code>\u3002</p> <p></p>"},{"location":"megatron/examples/export/trtllm_export/#11","title":"1.1 \u4ee3\u7801\u7ed3\u6784","text":"<p>\u6b65\u9aa4 1\uff1a\u521d\u59cb\u5316\u6a21\u578b\u5e76\u884c\u53ca\u9ed8\u8ba4\u53c2\u6570 \u6211\u4eec\u5c06 TP \u4e0e PP \u5747\u8bbe\u7f6e\u4e3a 1\uff0c\u4ee5\u4fbf\u5728 CPU \u4e0a\u83b7\u53d6\u5b8c\u6574\u7684 state_dict\uff1a</p> <pre><code>initialize_distributed(tensor_model_parallel_size=1, pipeline_model_parallel_size=1)\n</code></pre> <p>\u6b65\u9aa4 2\uff1a\u901a\u8fc7 model_provider_function \u52a0\u8f7d\u6a21\u578b \u793a\u4f8b\u4e2d\u6784\u5efa\u4e86\u4e00\u4e2a\u7b80\u5355\u7684 GPT \u6a21\u578b\uff1a</p> <pre><code>transformer_config = TransformerConfig(\n    num_layers=2, \n    hidden_size=64, # Needs to be atleast 32 times num_attn_heads\n    num_attention_heads=2, \n    use_cpu_initialization=True, \n    pipeline_dtype=torch.float32,\n)\n\ngpt_model = GPTModel(\n    config=transformer_config, \n    transformer_layer_spec=get_gpt_layer_local_spec(), \n    vocab_size=100, \n    max_sequence_length=_SEQUENCE_LENGTH,\n)\n\n# Optionally you can also load a model using this code \n# sharded_state_dict=gpt_model.sharded_state_dict(prefix='')\n# checkpoint = dist_checkpointing.load(sharded_state_dict=sharded_state_dict, checkpoint_dir=checkpoint_path)\n# gpt_model.load_state_dict(checkpoint)\n</code></pre> <p>\u6b65\u9aa4 3\uff1a\u5b9e\u4f8b\u5316 TRTLLM Helper \u4f7f\u7528 TRTLLM Helper \u751f\u6210 TRT-LLM \u6240\u9700\u7684\u4fe1\u606f\u3002\u5bf9\u4e8e GPT \u6a21\u578b\uff0c\u53ef\u6309\u5982\u4e0b\u65b9\u5f0f\u521b\u5efa\uff1a</p> <pre><code>if hasattr(gpt_model, \"rotary_pos_emb\"):\n    seq_len_interpolation_factor =  gpt_model.rotary_pos_emb.seq_len_interpolation_factor\n\ntrtllm_helper = TRTLLMHelper(\n                    transformer_config=gpt_model.config, \n                    model_type=ModelType.gpt,\n                    position_embedding_type = gpt_model.position_embedding_type, \n                    max_position_embeddings = gpt_model.max_position_embeddings, \n                    rotary_percentage = gpt_model.rotary_percent,\n                    rotary_base = gpt_model.rotary_base,\n                    moe_tp_mode = 2,\n                    multi_query_mode = False,\n                    activation = \"gelu\", \n                    seq_len_interpolation_factor = seq_len_interpolation_factor,\n                    share_embeddings_and_output_weights=gpt_model.share_embeddings_and_output_weights\n                )   \n</code></pre> <p>\u6b65\u9aa4 4\uff1a\u83b7\u53d6 TRTLLM \u6743\u91cd\u4e0e\u914d\u7f6e \u901a\u8fc7 single_device_converter \u5c06\u6a21\u578b\u6743\u91cd\u8f6c\u6362\u4e3a TRT-LLM \u9700\u8981\u7684\u6743\u91cd\u4e0e\u914d\u7f6e\u3002\u5728\u793a\u4f8b\u4e2d\uff0c\u63a8\u7406\u9636\u6bb5\u7684 TP \u8bbe\u7f6e\u4e3a 2\uff1a</p> <pre><code>model_state_dict={}\nfor key , val in gpt_model.state_dict().items():\n    # val is non for _extra_state layers . We filter it out\n    if val is not None:\n        model_state_dict[key] = val\n\nexport_config = ExportConfig(inference_tp_size = 2)\nweight_list, config_list = trtllm_helper.get_trtllm_pretrained_config_and_model_weights(\n    model_state_dict= model_state_dict,\n    dtype = DataType.bfloat16,\n    export_config=export_config\n)\n</code></pre> <p>\u6b65\u9aa4 5\uff1a\u6784\u5efa TRTLLM \u5f15\u64ce \u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u751f\u6210 TRT-LLM \u5f15\u64ce\uff1a</p> <pre><code>for trtllm_model_weights, trtllm_model_config in zip(weight_list, config_list):\n    trtllm_helper.build_and_save_engine(\n        max_input_len=256,\n        max_output_len=256,\n        max_batch_size=8,\n        engine_dir='/opt/megatron-lm/engine',\n        trtllm_model_weights=trtllm_model_weights,\n        trtllm_model_config=trtllm_model_config,\n        lora_ckpt_list=None,\n        use_lora_plugin=None,\n        max_lora_rank=64,\n        lora_target_modules=None,\n        max_prompt_embedding_table_size=0,\n        paged_kv_cache=True,\n        remove_input_padding=True,\n        paged_context_fmha=False,\n        use_refit=False,\n        max_num_tokens=None,\n        max_seq_len=512,\n        opt_num_tokens=None,\n        max_beam_width=1,\n        tokens_per_block=128,\n        multiple_profiles=False,\n        gpt_attention_plugin=\"auto\",\n        gemm_plugin=\"auto\",\n    )\n</code></pre> <p></p>"},{"location":"megatron/examples/export/trtllm_export/#12","title":"1.2 \u8fd0\u884c\u793a\u4f8b","text":"<p>\u793a\u4f8b\u8fd0\u884c\u811a\u672c\u5982\u4e0b\uff1a</p> <pre><code># \u5728\u5de5\u4f5c\u7ad9\u4e0a\nMLM_PATH=/path/to/megatron-lm\nCONTAINER_IMAGE=gitlab-master.nvidia.com:5005/dl/joc/nemo-ci/trtllm_0.12/train:pipe.17669124-x86\n\ndocker run -it --gpus=all --ipc=host -v $MLM_PATH/:/opt/megatron-lm $CONTAINER_IMAGE bash\n\n# \u8fdb\u5165\u5bb9\u5668\u540e\n\ncd /opt/megatron-lm/\n\nCUDA_VISIBLE_DEVICES=0 torchrun --nproc-per-node 1  examples/export/trtllm_export/single_device_export/gpt_single_device_cpu_export.py\n</code></pre> <p></p>"},{"location":"megatron/examples/export/trtllm_export/#2-gpu","title":"2. GPU \u5bfc\u51fa","text":"<p>\u82e5\u9700\u5728\u8bbe\u5907\u4e0a\u9ad8\u6548\u5bfc\u51fa\uff0c\u53ef\u4f7f\u7528 gpt_distributed_gpu_export.py\uff0c\u5185\u90e8\u8c03\u7528 distributed_converter \u5728 GPU \u4e0a\u8f6c\u6362\u6743\u91cd\u3002</p> <p>\u5355\u8bbe\u5907\u7248\u672c\u4f1a\u5c06\u6a21\u578b\u6743\u91cd\u805a\u96c6\u5230 CPU/GPU\uff0c\u4e0a\u8f6c\u6362\u540e\u518d\u5199\u56de\u78c1\u76d8\uff1bGPU \u7248\u672c\u5219\u5728\u5404 GPU \u4e0a\u5206\u522b\u52a0\u8f7d\u5206\u7247\uff0c\u5c06\u5176\u8f6c\u6362\u5e76\u5199\u56de\u78c1\u76d8\u3002</p> <p>\u8fd0\u884c\u65b9\u5f0f\u793a\u4f8b\uff1a</p> <pre><code>CUDA_VISIBLE_DEVICES=0,1 torchrun --nproc-per-node 2  examples/export/trtllm_export/distributed_export/gpt_distributed_gpu_export.py\n</code></pre> <p></p>"},{"location":"megatron/examples/export/trtllm_export/#3","title":"3. \u540e\u7eed\u89c4\u5212","text":"<p>\u9884\u8ba1\u5728\u672a\u6765\u7248\u672c\u63d0\u4f9b\uff1a * \u5bfc\u51fa\u6d41\u7a0b\u652f\u6301\u6d41\u6c34\u7ebf\u5e76\u884c\uff08\u5f00\u53d1\u4e2d\uff09 * \u66f4\u591a\u6a21\u578b\u7684 GPU \u5bfc\u51fa\uff08\u90e8\u5206\u6a21\u578b\u5f00\u53d1\u4e2d\uff09 * Refit \u529f\u80fd * VLLM \u652f\u6301</p>"},{"location":"megatron/examples/gpt3/","title":"GPT-3 \u6a21\u578b","text":""},{"location":"megatron/examples/gpt3/#_1","title":"\u76ee\u5f55","text":"<ul> <li>1. \u8bad\u7ec3\u73af\u5883</li> <li>2. \u914d\u7f6e\u53c2\u6570</li> <li>3. \u8bad\u7ec3\u7ed3\u679c</li> </ul>"},{"location":"megatron/examples/gpt3/#1","title":"1. \u8bad\u7ec3\u73af\u5883","text":"<p>\u82e5\u4f7f\u7528 Docker \u8fd0\u884c\u6a21\u578b\uff0c\u53ef\u6309\u4ee5\u4e0b\u65b9\u5f0f\u6267\u884c\uff1a</p> <pre><code>PYTORCH_IMAGE=nvcr.io/nvidia/pytorch:24.01-py3\nCHECKPOINT_PATH=\"\" #&lt;Specify path&gt;\nTENSORBOARD_LOGS_PATH=\"\"#&lt;Specify path&gt;\nVOCAB_FILE=\"\" #&lt;Specify path to file&gt;/gpt2-vocab.json\nMERGE_FILE=\"\" #&lt;Specify path to file&gt;/gpt2-merges.txt\nDATA_PATH=\"\" #&lt;Specify path and file prefix&gt;_text_document\n\ndocker run \\\n  --gpus=all \\\n  --ipc=host \\\n  --workdir /workspace/megatron-lm \\\n  -v /path/to/data:/path/to/data \\\n  -v /path/to/megatron-lm:/workspace/megatron-lm \\\n  megatron-lm nvcr.io/nvidia/pytorch:24.01-py3 \\\n  bash examples/gpt3/train_gpt3_175b_distributed.sh $CHECKPOINT_PATH $TENSORBOARD_LOGS_PATH $VOCAB_FILE $MERGE_FILE $DATA_PATH \"\n</code></pre> <p>\u6ce8\u610f\uff1a\u6839\u636e\u5177\u4f53\u73af\u5883\uff0c\u8be5\u547d\u4ee4\u53ef\u80fd\u9700\u8981\u8c03\u6574\u3002</p>"},{"location":"megatron/examples/gpt3/#2","title":"2. \u914d\u7f6e\u53c2\u6570","text":"<p>\u793a\u4f8b\u9ed8\u8ba4\u6f14\u793a 175B \u6a21\u578b\u7684\u8bad\u7ec3\uff0c\u9664\u6b64\u4e4b\u5916\u8fd8\u53ef\u4f7f\u7528\u4ee5\u4e0b\u914d\u7f6e:</p>"},{"location":"megatron/examples/gpt3/#345m","title":"345M","text":"<pre><code>--num-layers 12 \\\n--hidden-size 512 \\\n--num-attention-heads 8 \\\n--seq-length 1024 \\\n--tensor-model-parallel-size 1 \\\n--pipeline-model-parallel-size 1 \\\n</code></pre>"},{"location":"megatron/examples/gpt3/#857m","title":"857M","text":"<pre><code>--num-layers 24 \\\n--hidden-size 1024 \\\n--num-attention-heads 16 \\\n--seq-length 2048 \\\n--tensor-model-parallel-size 1 \\\n--pipeline-model-parallel-size 1 \\\n</code></pre>"},{"location":"megatron/examples/inference/","title":"\u63a8\u7406\u5b9e\u8df5","text":""},{"location":"megatron/examples/inference/#megatron-core","title":"Megatron Core \u63a8\u7406\u6307\u5357","text":"<p>\u672c\u6587\u5c55\u793a\u5982\u4f55\u4f7f\u7528 Megatron Core \u8fd0\u884c\u6a21\u578b\u63a8\u7406\u7684\u793a\u4f8b\u6d41\u7a0b\u3002</p>"},{"location":"megatron/examples/inference/#_1","title":"\u76ee\u5f55","text":"<ul> <li>Megatron Core \u63a8\u7406\u6307\u5357</li> <li>\u76ee\u5f55</li> <li>1. \u5feb\u901f\u5f00\u59cb<ul> <li>1.1 \u4ee3\u7801\u89e3\u6790</li> <li>1.2 \u8fd0\u884c\u793a\u4f8b</li> </ul> </li> <li>2. MCore \u540e\u7aef\u6267\u884c\u6d41\u7a0b</li> <li>3. \u81ea\u5b9a\u4e49\u63a8\u7406\u6d41\u6c34\u7ebf<ul> <li>3.1 \u521b\u5efa\u65b0\u7684\u63a8\u7406\u540e\u7aef</li> <li>3.2 \u81ea\u5b9a\u4e49\u6587\u672c\u751f\u6210\u63a7\u5236\u5668</li> <li>3.3 \u652f\u6301\u5176\u4ed6\u6a21\u578b</li> <li>3.4 \u4fee\u6539\u63a8\u7406\u53c2\u6570</li> </ul> </li> <li>4. \u540e\u7eed\u89c4\u5212</li> </ul>"},{"location":"megatron/examples/inference/#1","title":"1. \u5feb\u901f\u5f00\u59cb","text":"<p>\u793a\u4f8b\u811a\u672c\u6f14\u793a\u5982\u4f55\u5bf9 Megatron Core \u8bad\u7ec3\u5f97\u5230\u7684\u6a21\u578b\u6267\u884c\u9759\u6001\u6279\u91cf\u63a8\u7406\uff0c\u5165\u53e3\u4f4d\u4e8e gpt_static_inference.py\u3002\u540c\u6837\u7684\u6d41\u7a0b\u53ef\u6269\u5c55\u5230 gpt_dynamic_inference.py\u3002</p> <p></p>"},{"location":"megatron/examples/inference/#11","title":"1.1 \u4ee3\u7801\u89e3\u6790","text":"<p>\u6b65\u9aa4 1\uff1a\u521d\u59cb\u5316\u6a21\u578b\u5e76\u884c\u53ca\u9ed8\u8ba4\u53c2\u6570 \u5fae\u6279\u5927\u5c0f\u9ed8\u8ba4\u4e3a 1\u3002\u5728\u7eaf\u5f20\u91cf\u5e76\u884c\u573a\u666f\u4e0b\u4e0d\u4f1a\u4f7f\u7528\uff1b\u5728\u6d41\u6c34\u7ebf\u5e76\u884c\u4e2d\u4f1a\u5728\u8fd0\u884c\u65f6\u6839\u636e\u914d\u7f6e\u8ba1\u7b97\u3002</p> <pre><code># Initialize Megatron model using the same model provider from training.\n    initialize_megatron(\n        args_defaults={'no_load_rng': True, 'no_load_optim': True, 'micro_batch_size': 1}\n    )\n</code></pre> <p>\u6b65\u9aa4 2\uff1a\u901a\u8fc7 model_provider_function \u52a0\u8f7d\u6a21\u578b \u8be5\u51fd\u6570\u540c\u65f6\u517c\u5bb9 MCore \u4e0e Legacy \u6a21\u578b\u3002</p> <pre><code># Load the model checkpoint\nmodel = get_model(model_provider, wrap_with_ddp=False)\nload_checkpoint(model, None, None)\nmodel.eval()\nmodel = model[0]\n</code></pre> <p>\u6b65\u9aa4 3\uff1a\u9009\u62e9\u63a8\u7406\u5f15\u64ce \u6587\u672c\u751f\u6210\u4f9d\u8d56\u63a8\u7406\u5f15\u64ce\uff08\u5305\u542b\u8c03\u5ea6\u5668\uff09\u3002\u9ed8\u8ba4\u4f7f\u7528 Megatron Core \u5f15\u64ce \u642d\u914d TextGenerationController\u3002\u672a\u6765\u4f1a\u652f\u6301 TRT-LLM \u5f15\u64ce\u3002</p> <pre><code>    # Create an inference wrapper to setup the model.\n    inference_wrapped_model = GPTInferenceWrapper(model, args)\n\n    # Define a sampling loop.\n    text_generation_controller = TextGenerationController(\n        inference_wrapped_model=inference_wrapped_model, \n        tokenizer=tokenizer\n    )\n\n    # Create a static or dynamic inference engine.\n    inference_engine = StaticInferenceEngine(\n        text_generation_controller=text_generation_controller, \n        max_batch_size=args.max_batch_size\n)\n</code></pre> <p>\u6b65\u9aa4 4\uff1a\u6267\u884c\u6587\u672c\u751f\u6210 SamplingParams \u7ed9\u51fa\u4e86\u63a8\u8350\u9ed8\u8ba4\u503c\uff0c\u53ef\u6309\u9700\u8c03\u6574 top_p\u3001top_k\u3001\u751f\u6210\u957f\u5ea6\u7b49\u3002\u751f\u6210\u7ed3\u679c\u4ee5 InferenceRequest \u5217\u8868\u8fd4\u56de\u3002</p> <pre><code>results: List[InferenceRequest] = inference_engine.generate(\n    prompts=args.prompts, sampling_params=sampling_params\n)\n\nif torch.distributed.get_rank() == 0:\n    for idx, result in enumerate(results):\n        print(f' ------------- RESULT FOR PROMPT {idx} --------------- ')\n        result = {\n            'id': result.request_id,\n            'input_prompt': result.prompt, \n            'generated_text': result.generated_text,\n            'generated_tokens' : result.generated_tokens\n            }\n        print(result)\n</code></pre> <p></p>"},{"location":"megatron/examples/inference/#12","title":"1.2 \u8fd0\u884c\u793a\u4f8b","text":"<p>\u4ee5\u4e0b\u7ed9\u51fa\u4e00\u4e2a Slurm \u811a\u672c\u793a\u4f8b\u3002\u8fd0\u884c\u524d\u8bf7\u914d\u7f6e\u597d tokenizer \u8def\u5f84\u3001\u63a8\u7406\u53c2\u6570\u7b49\u3002\u5173\u4e8e\u91c7\u6837\u53c2\u6570\u7684\u8bf4\u660e\u53ef\u53c2\u8003 \u8fd9\u7bc7\u535a\u5ba2\u3002</p> <pre><code># Slurm cluster settings \nACCOUNT=&lt;account&gt;\nMLM_PATH=/path/to/megatron-lm\nGPT_CKPT=/path/to/gpt/ckpt\nVOCAB_MERGE_FILE_PATH=/path/to/vocab/and/merge/file\nCONTAINER_IMAGE=nvcr.io/ea-bignlp/ga-participants/nemofw-training:23.11\n\nsrun --account $ACCOUNT \\\n--job-name=$ACCOUNT:inference \\\n--partition=batch \\\n--time=01:00:00 \\\n--container-image $CONTAINER_IMAGE \\\n--container-mounts $MLM_PATH:/workspace/megatron-lm/,$GPT_CKPT:/workspace/mcore_gpt_ckpt,$VOCAB_MERGE_FILE_PATH:/workspace/tokenizer \\\n--no-container-mount-home \\\n--pty /bin/bash \\\n\n# Inside the container run the following. \n\ncd megatron-lm/\nexport CUDA_DEVICE_MAX_CONNECTIONS=1\n\nTOKENIZER_ARGS=(\n    --vocab-file /workspace/tokenizer/gpt2-vocab.json\n    --merge-file /workspace/tokenizer/gpt2-merges.txt\n    --tokenizer-type GPT2BPETokenizer\n)\n\nMODEL_ARGS=(\n    --use-checkpoint-args\n    --use-mcore-models\n    --load /workspace/mcore_gpt_ckpt\n)\n\nINFERENCE_SPECIFIC_ARGS=(\n    --attention-dropout 0.0\n    --hidden-dropout 0.0\n    --num-tokens-to-generate 20\n    --max-batch-size 4\n)\n\ntorchrun --nproc-per-node=4 examples/inference/gpt/gpt_static_inference.py \\\n    ${TOKENIZER_ARGS[@]} \\\n    ${MODEL_ARGS[@]} \\\n    ${INFERENCE_SPECIFIC_ARGS[@]} \\\n    --prompts \"prompt one \" \"sample prompt two\" \"sample prompt 3\"\n\nNOTE: Other parameters which can be customized for inference:\n--temperature (Sampling temperature)\n--top_k (top_k sampling)\n--top_p (top_p sampling)\n--num-tokens-to-generate (Number of tokens to generate for each prompt)\n--inference-batch-times-seqlen-threshold (During inference, if batch-size times sequence-length is smaller than this threshold then we will not use microbatched pipelining.')\n--use-dist-ckpt (If using dist checkpoint format for the model)\n--use-legacy-models (If using legacy models instead of MCore models)\n</code></pre> <p>\u4e0a\u8ff0\u547d\u4ee4\u5217\u51fa\u4e86\u63a8\u7406\u9636\u6bb5\u5e38\u89c1\u7684\u53ef\u8c03\u53c2\u6570\uff0c\u5305\u62ec\u6e29\u5ea6\u3001top-k\u3001top-p\u3001\u751f\u6210\u957f\u5ea6\u3001\u5fae\u6279\u9608\u503c\u3001\u662f\u5426\u4f7f\u7528\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\u4ee5\u53ca\u662f\u5426\u52a0\u8f7d\u65e7\u7248\u6a21\u578b\u3002</p> <p></p>"},{"location":"megatron/examples/inference/#2-mcore","title":"2. MCore \u540e\u7aef\u6267\u884c\u6d41\u7a0b","text":"<p>gpt_static_inference.py \u5c55\u793a\u4e86\u9759\u6001\u6279\u63a8\u7406\u7684\u5b8c\u6574\u6d41\u7a0b\uff1a * mcore_engine \u7684 generate() \u51fd\u6570\u63a5\u6536\u8f93\u5165 prompt\u3002 * \u5f15\u64ce\u4e2d\u7684 <code>Scheduler</code> \u4f1a\u5c06 prompt \u52a0\u5165 [active requests] \u6c60\uff08../../megatron/core/inference/inference_request.py\uff09\uff0c\u76f4\u81f3\u8fbe\u5230\u6700\u5927 batch\uff0c\u5176\u4f59\u8bf7\u6c42\u8fdb\u5165\u7b49\u5f85\u6c60\u3002 * \u63a8\u7406\u5f15\u64ce\u4f1a\u6301\u7eed\u8fd0\u884c\u81f3\u6240\u6709\u8bf7\u6c42\uff08\u7b49\u5f85+\u6d3b\u8dc3\uff09\u90fd\u5b8c\u6210\u3002     * \u6d3b\u8dc3\u8bf7\u6c42\u4ea4\u7531\u6587\u672c\u751f\u6210\u63a7\u5236\u5668\u7684 generate_all_output_tokens_static_batch() \u5904\u7406\u3002     * \u8be5\u51fd\u6570\u8c03\u7528 model_inference_wrappers \u7684 prep_model_for_inference()\uff0c\u5e76\u8fdb\u5165\u81ea\u56de\u5f52\u91c7\u6837\u5faa\u73af\u3002     * \u5728\u81ea\u56de\u5f52\u5faa\u73af\u4e2d\uff0c\u63a8\u7406\u5305\u88c5\u5668\u7684 get_batch_for_context_window() \u4f1a\u5207\u5206\u8f93\u5165 token \u4e0e mask\u3002     * \u8f93\u5165 token \u4e0e mask \u4f20\u5165 run_one_forward_step()\uff0c\u8c03\u7528\u6a21\u578b <code>.forward()</code> \u83b7\u5f97 logits\u3002     * \u8f93\u51fa logits \u5728\u6240\u6709\u6d41\u6c34\u7ebf\u5e76\u884c rank\u95f4\u540c\u6b65\u3002     * \u6587\u672c\u751f\u6210\u63a7\u5236\u5668\u4f9d\u636e\u91c7\u6837\u53c2\u6570\u8ba1\u7b97\u5bf9\u6570\u6982\u7387\u5e76\u6267\u884c\u91c7\u6837\u3002     * \u91c7\u6837\u5f97\u5230\u7684 token \u4f1a\u8ffd\u52a0\u5230\u8f93\u5165 prompt \u4e2d\uff0c\u4f9b\u4e0b\u4e00\u8f6e\u8fed\u4ee3\u4f7f\u7528\u3002     * update_generation_status() \u68c0\u67e5\u54ea\u4e9b\u8bf7\u6c42\u5df2\u5b8c\u6210\u6216\u6ee1\u8db3\u7ec8\u6b62\u6761\u4ef6\u3002     * \u63a8\u7406\u5faa\u73af\u7ed3\u675f\u540e\uff0c\u5bf9\u7ed3\u679c\u8fdb\u884c\u53bb\u6807\u8bb0\u5316\uff0c\u5e76\u5b58\u5165 InferenceRequest\uff0c\u540c\u65f6\u6807\u8bb0\u4e3a\u5b8c\u6210\u3002     * \u8c03\u5ea6\u5668\u7684 update_requests_pool() \u5c06\u5b8c\u6210\u7684\u8bf7\u6c42\u653e\u5165\u5b8c\u6210\u6c60\uff0c\u5e76\u628a\u7b49\u5f85\u961f\u5217\u4e2d\u7684\u8bf7\u6c42\u63d0\u5347\u4e3a\u6d3b\u8dc3\u72b6\u6001\u3002</p> <p></p>"},{"location":"megatron/examples/inference/#3","title":"3. \u81ea\u5b9a\u4e49\u63a8\u7406\u6d41\u6c34\u7ebf","text":"<p>\u63a8\u7406\u6d41\u6c34\u7ebf\u652f\u6301\u4ee5\u4e0b\u5c42\u7ea7\u7684\u6269\u5c55\uff1a</p> <ul> <li>\u63a8\u7406\u5f15\u64ce\uff1aMCore \u5f15\u64ce\u652f\u6301\u9759\u6001\u4e0e\u52a8\u6001\u6279\uff0c\u53ef\u6839\u636e\u9700\u8981\u6269\u5c55\u4e3a\u5176\u4ed6\u540e\u7aef\u3002</li> <li>\u6587\u672c\u751f\u6210\u63a7\u5236\u5668\uff1a\u5305\u542b\u4e3b\u91c7\u6837\u5faa\u73af\uff0c\u53ef\u8c03\u6574\u4ee5\u652f\u6301\u81ea\u5b9a\u4e49\u5206\u8bcd\u6216\u91c7\u6837\u7b56\u7565\u3002</li> <li>Inference Wrapped Model\uff1a\u7528\u4e8e\u9002\u914d\u65b0\u7684\u6a21\u578b\u7ed3\u6784\u3002</li> <li>\u63a8\u7406\u53c2\u6570\uff1a\u53ef\u81ea\u5b9a\u4e49 top_p\u3001top_k\u3001\u751f\u6210\u957f\u5ea6\u3001\u6e29\u5ea6\u7b49\u91c7\u6837\u76f8\u5173\u53c2\u6570\u3002</li> </ul> <p></p>"},{"location":"megatron/examples/inference/#31","title":"3.1 \u521b\u5efa\u65b0\u7684\u63a8\u7406\u540e\u7aef","text":"<p>abstract_engine.py \u4e2d\u5b9a\u4e49\u4e86 <code>generate</code> \u65b9\u6cd5\uff0c\u53ef\u7528\u6765\u6269\u5c55\u65b0\u7684\u540e\u7aef\uff1a</p> <pre><code>class AbstractEngine(ABC):\n    @staticmethod\n    def generate(self) -&gt; dict:\n        \"\"\"The abstract backend's generate function. \n\n        To define a new backend, implement this method and return the outputs as a dictionary. \n</code></pre> <p></p>"},{"location":"megatron/examples/inference/#32","title":"3.2 \u81ea\u5b9a\u4e49\u91c7\u6837\u5faa\u73af","text":"<p>TextGenerationController \u662f\u6838\u5fc3\u91c7\u6837\u5faa\u73af\uff0c\u53ef\u4f9d\u636e\u9700\u6c42\u6269\u5c55\u65b0\u7684\u5206\u8bcd\u3001\u53bb\u5206\u8bcd\u6216\u91c7\u6837\u65b9\u6848\u3002</p> <pre><code>class TextGenerationController:\n\n    def tokenize_prompt(self, prompt: str) -&gt; Tuple[torch.Tensor, torch.Tensor]:\n        \"\"\"Utility to tokenize the input prompts\"\"\"\n\n    def sample_from_logits(\n        self,\n        last_token_logits: torch.Tensor,\n        sampling_params: SamplingParams,\n        vocab_size: int,\n        generation_started : Optional[torch.Tensor] = None,\n        top_n_logprobs_dict: Dict[int, List[Dict[str, float]]] = None,\n    ) -&gt; torch.Tensor:\n        \"\"\"Samples the logits to generate outputs\n\n        Given the logits of the last token, this function samples according to the parameters defined in sampling_params and returns the sampled tokens. If sampling_params.top_n_logprobs &gt; 0 \n        at each step it also updates the top_n_logprobs_dict.\n        \"\"\"\n\n    def update_generation_status(\n        self,\n        updated_prompts_tokens: torch.Tensor,\n        generation_started: torch.Tensor,\n        current_context_end_position: int,\n        is_generation_done_tensor: torch.Tensor,\n        generated_sequence_lengths: torch.Tensor,\n    ) -&gt; torch.Tensor:\n        \"\"\"Function to check which prompts have reached an end condition\n\n        We check which prompts have reached an end condition and set the corresponding flags of the is_generation_done_tensor to True . The generated sequence lengths increases as we keep generating, until that prompts hits an eod condition. The generation started status tensor helps us determine which prompts have started generating\n        \"\"\"\n\n    def generate_all_output_tokens_static_batch(\n        self, active_requests: OrderedDict[int, InferenceRequest],\n    ) -&gt; OrderedDict[int, InferenceRequest]:\n        \"\"\"Utility to generate all the output tokens and probabilities for the prompts .\n\n        This utility generates the output tokens for a static batch. It runs the forward steps till all prompts complete generation, updates the status of these requests to completed, adds the generated result and returns these requests\n        \"\"\"\n\n    def detokenize_generations(self, prompt_tokens_with_generated_tokens: torch.Tensor) -&gt; str:\n        \"\"\"Detokenize the output generations\"\"\"\n</code></pre> <p></p>"},{"location":"megatron/examples/inference/#33","title":"3.3 \u652f\u6301\u5176\u4ed6\u6a21\u578b","text":"<p>\u6269\u5c55 abstract_model_inference_wrapper.py \u4ee5\u9002\u914d\u5176\u4ed6\u6a21\u578b\u3002\u62bd\u8c61\u5305\u88c5\u5668\u8d1f\u8d23\uff1a * \u6839\u636e\u6a21\u578b\u5e76\u884c\u914d\u7f6e\u8c03\u7528\u6a21\u578b\u7684 <code>forward</code> * \u521d\u59cb\u5316\u6a21\u578b\u5e76\u8bbe\u4e3a <code>.eval()</code> \u6a21\u5f0f * \u914d\u7f6e\u8f93\u5165\u53c2\u6570\uff08\u6700\u5927 batch\u3001\u5927\u5e8f\u5217\u957f\u5ea6\u7b49\uff09</p> <p>\u9700\u8981\u5b9e\u73b0\u5982\u4e0b\u65b9\u6cd5\uff1a</p> <pre><code>class AbstractModelInferenceWrapper:\n    def prep_model_for_inference(self, prompts_tokens: torch.Tensor):\n        \"\"\"A utility function for preparing model for inference\n\n        The function gets called once before the auto regressive inference loop. It puts the model in eval mode , and gets some model and inference data parameters. Extend this to build position ids ,attention mask etc, so that required slices can be extracted during the forward pass\n        \"\"\"\n\n    @abc.abstractclassmethod\n    def get_batch_for_context_window(self) -&gt; List:\n        \"\"\"Returns the input data for inference \n\n        This function gets called iteratively in the inference loop. It can be used to extract relevant input from the prompt tokens, attention mask etc. required for each step in inference.\n</code></pre> <p>\u53ef\u53c2\u8003 gpt_inference_wrapper.py \u7684\u5b9e\u73b0\u3002</p> <p></p>"},{"location":"megatron/examples/inference/#34","title":"3.4 \u4fee\u6539\u63a8\u7406\u53c2\u6570","text":"<p>\u6587\u672c\u751f\u6210\u4f7f\u7528 SamplingParams\u3002\u53ef\u901a\u8fc7\u8be5\u7c7b\u4fee\u6539 <code>top_p</code>\u3001<code>top_k</code>\u3001\u751f\u6210\u957f\u5ea6\u7b49\u53c2\u6570\uff0c\u5e76\u5728\u63a8\u7406\u5faa\u73af\u4e2d\u6dfb\u52a0\u81ea\u5b9a\u4e49\u5b57\u6bb5\uff1a</p> <pre><code>from megatron.core.inference.sampling_params import SamplingParams\n\nc = SamplingParams(temperature=0.5)\nc.add_attributes({'min_length':4, 'eod_id':153})\n</code></pre> <p></p>"},{"location":"megatron/examples/inference/#4-future-work","title":"4. Future work","text":"<p>\u540e\u7eed\u7248\u672c\u8ba1\u5212\u652f\u6301\uff1a * TRT-LLM \u5f15\u64ce * \u8fde\u7eed\u6279\u5904\u7406\u4f18\u5316 * \u63a8\u6d4b\u5f0f\u89e3\u7801</p>"},{"location":"megatron/examples/llama/","title":"Llama \u6a21\u578b","text":""},{"location":"megatron/examples/llama/#_1","title":"\u76ee\u5f55","text":"<ul> <li>1. \u6982\u89c8</li> <li>2. \u524d\u7f6e\u51c6\u5907</li> <li>3. \u8bad\u7ec3\u73af\u5883</li> <li>4. \u914d\u7f6e\u8bf4\u660e</li> <li>5. \u6d4b\u8bd5\u6570\u636e\u96c6</li> <li>6. FP8 \u8bad\u7ec3\u6ce8\u610f\u4e8b\u9879</li> </ul>"},{"location":"megatron/examples/llama/#1","title":"1. \u6982\u89c8","text":"<p>\u4f7f\u7528 Megatron-Core \u4ee5 FP8 \u7cbe\u5ea6\u8bad\u7ec3 Llama \u6a21\u578b\u3002</p>"},{"location":"megatron/examples/llama/#2","title":"2. \u524d\u7f6e\u51c6\u5907","text":"<pre><code># Clone repository\nexport HOST_MEGATRON_LM_DIR=\"/path/to/your/host/megatron-lm\"\ngit clone https://github.com/NVIDIA/Megatron-LM.git \"$HOST_MEGATRON_LM_DIR\"\ncd \"$HOST_MEGATRON_LM_DIR\"\ngit checkout \"core_r0.12.0\"\n\n# Set paths\nexport HOST_CHECKPOINT_PATH=\"./checkpoints/llama3_8b_fp8\"\nexport HOST_TENSORBOARD_LOGS_PATH=\"./tensorboard_logs/llama3_8b_fp8\"\n\n# Optional: For real data\n# export HOST_TOKENIZER_MODEL_PATH=\"/path/to/host/tokenizer.model\"\n# export HOST_DATA_PREFIX=\"/path/to/host/mydata_prefix\"\n</code></pre>"},{"location":"megatron/examples/llama/#3","title":"3. \u8bad\u7ec3\u73af\u5883","text":""},{"location":"megatron/examples/llama/#_2","title":"\u4f7f\u7528\u6a21\u62df\u6570\u636e","text":"<pre><code>PYTORCH_IMAGE=\"nvcr.io/nvidia/pytorch:25.03-py3\"\n\ndocker run --rm --gpus all --ipc=host --ulimit memlock=-1 \\\n  -v \"${HOST_MEGATRON_LM_DIR}:/workspace/megatron-lm\" \\\n  -v \"${HOST_CHECKPOINT_PATH}:/workspace/checkpoints\" \\\n  -v \"${HOST_TENSORBOARD_LOGS_PATH}:/workspace/tensorboard_logs\" \\\n  --workdir /workspace/megatron-lm \\\n  $PYTORCH_IMAGE \\\n  bash examples/llama/train_llama3_8b_h100_fp8.sh \\\n    /workspace/checkpoints \\\n    /workspace/tensorboard_logs \\\n  2&gt;&amp;1 | tee \"${HOST_TENSORBOARD_LOGS_PATH}/training_mock_$(date +'%y-%m-%d_%H-%M-%S').log\"\n</code></pre>"},{"location":"megatron/examples/llama/#_3","title":"\u4f7f\u7528\u81ea\u5b9a\u4e49\u6570\u636e\u4e0e\u5206\u8bcd\u5668","text":"<pre><code>PYTORCH_IMAGE=\"nvcr.io/nvidia/pytorch:25.03-py3\"\n\ndocker run --rm --gpus all --ipc=host --ulimit memlock=-1 \\\n  -v \"${HOST_MEGATRON_LM_DIR}:/workspace/megatron-lm\" \\\n  -v \"${HOST_CHECKPOINT_PATH}:/workspace/checkpoints\" \\\n  -v \"${HOST_TENSORBOARD_LOGS_PATH}:/workspace/tensorboard_logs\" \\\n  -v \"${HOST_TOKENIZER_MODEL_PATH}:/workspace/tokenizer_model\" \\\n  -v \"$(dirname \"${HOST_DATA_PREFIX}\"):/workspace/data_dir\" \\\n  --workdir /workspace/megatron-lm \\\n  $PYTORCH_IMAGE \\\n  bash examples/llama/train_llama3_8b_h100_fp8.sh \\\n    /workspace/checkpoints \\\n    /workspace/tensorboard_logs \\\n    /workspace/tokenizer_model \\\n    \"/workspace/data_dir/$(basename \"${HOST_DATA_PREFIX}\")\" \\\n  2&gt;&amp;1 | tee \"${HOST_TENSORBOARD_LOGS_PATH}/training_custom_$(date +'%y-%m-%d_%H-%M-%S').log\"\n</code></pre>"},{"location":"megatron/examples/llama/#4","title":"4. \u914d\u7f6e\u8bf4\u660e","text":"<p>\u9ed8\u8ba4\u5e76\u884c\u7b56\u7565\uff1a - \u5f20\u91cf\u5e76\u884c\uff1a1 - \u6d41\u6c34\u7ebf\u5e76\u884c\uff1a1 - \u4e0a\u4e0b\u6587\u5e76\u884c\uff1a2</p> <p>Llama-3-8B \u67b6\u6784\uff1a - 32 \u5c42 - \u9690\u85cf\u7ef4\u5ea6\uff1a4096 - FFN \u9690\u85cf\u7ef4\u5ea6\uff1a14336 - \u6ce8\u610f\u529b\u5934\u6570\uff1a32 - Query \u5206\u7ec4\uff1a8 - \u5e8f\u5217\u957f\u5ea6\uff1a8192 - RMSNorm + SwiGLU + RoPE</p> <p>\u5173\u952e\u8bad\u7ec3\u53c2\u6570\uff1a - \u5fae\u6279\u5927\u5c0f\uff1a1 - \u5168\u5c40\u6279\u5927\u5c0f\uff1a128 - \u5b66\u4e60\u7387\uff1a1.5e-4 - \u6700\u5c0f\u5b66\u4e60\u7387\uff1a1.0e-5 - \u6743\u91cd\u8870\u51cf\uff1a0.1 - FP8 \u6a21\u5f0f\uff1ahybrid</p> <p>\u53ef\u76f4\u63a5\u5728 <code>train_llama3_8b_h100_fp8.sh</code> \u4e2d\u4fee\u6539\u8fd9\u4e9b\u53c2\u6570\u3002\u8be5\u914d\u7f6e\u4e0e NeMo Framework \u6027\u80fd\u811a\u672c\u4e2d\u5b9a\u4e49\u7684\u53c2\u6570\u4e00\u81f4\uff0c\u8be6\u89c1 https://github.com/NVIDIA/NeMo/tree/main/scripts/performance\u3002</p>"},{"location":"megatron/examples/llama/#fp8","title":"FP8 \u6027\u80fd","text":"Model #-GPUs GBS MBS Seq Length TP PP CP VP EP GA Tokens/sec/GPU TFLOP/sec/GPU LLAMA3-8B 8 128 1 8192 1 1 2 1 1 32 13812 800 LLAMA3-70B 64 128 1 8192 4 8 1 5 1 64 1621 780 LLAMA3-405B 1024 512 1 8192 8 8 2 8 1 64 315 834 <p>\u8bf4\u660e\uff1a - GBS\uff1a\u5168\u5c40\u6279\u5927\u5c0f - MBS\uff1a\u5fae\u6279\u5927\u5c0f - TP\uff1a\u5f20\u91cf\u5e76\u884c\u5ea6 - PP\uff1a\u6d41\u6c34\u7ebf\u5e76\u884c\u5ea6 - CP\uff1a\u4e0a\u4e0b\u6587\u5e76\u884c\u5ea6 - VP\uff1a\u865a\u62df\u6d41\u6c34\u7ebf\u9636\u6bb5\u6570 - EP\uff1a\u4e13\u5bb6\u5e76\u884c\u5ea6 - GA\uff1a\u68af\u5ea6\u7d2f\u79ef\u6b65\u6570</p> <p>NeMo \u57fa\u4e8e Megatron-Core\uff0c\u5b9e\u73b0\u6700\u65b0\u6027\u80fd\u6307\u6807\u8bf7\u53c2\u8003\u5b98\u65b9 NeMo \u6587\u6863\u3002</p>"},{"location":"megatron/examples/llama/#5","title":"5. \u6d4b\u8bd5\u6570\u636e\u96c6","text":"<p>\u63a8\u8350\u6570\u636e\u96c6\uff1a 1. WikiText-103\uff1ahttps://huggingface.co/datasets/Salesforce/wikitext</p> <p>\u9884\u5904\u7406\u793a\u4f8b\uff1a <pre><code>python \"${HOST_MEGATRON_LM_DIR}/tools/preprocess_data.py\" \\\n       --input your_dataset.json \\\n       --output-prefix test_dataset \\\n       --tokenizer-type HuggingFaceTokenizer \\\n       --tokenizer-model /path/to/tokenizer.model \\\n       --append-eod\n</code></pre></p>"},{"location":"megatron/examples/llama/#6-fp8","title":"6. FP8 \u8bad\u7ec3\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li> <p>\u786c\u4ef6\u8981\u6c42\uff1a\u9700\u4f7f\u7528 NVIDIA Hopper\u3001Ada \u6216 Blackwell GPU \u624d\u80fd\u542f\u7528 FP8\u3002</p> </li> <li> <p>\u95ee\u9898\u6392\u67e5\uff1a\u82e5 FP8 \u8bad\u7ec3\u51fa\u73b0 NaN \u6216\u4e0d\u7a33\u5b9a\uff0c\u53ef\u53c2\u8003 Transformer Engine\u3002</p> </li> </ul>"},{"location":"megatron/examples/mamba/","title":"\u57fa\u4e8e Mamba \u7684\u8bed\u8a00\u6a21\u578b","text":""},{"location":"megatron/examples/mamba/#_1","title":"\u4ecb\u7ecd","text":"<p>\u672c\u6587\u6863\u662f\u8bba\u6587 An Empirical Study of Mamba-based Language Models \u6240\u4f7f\u7528\u4ee3\u7801\u7684\u5165\u53e3\u3002</p> <p>\u6211\u4eec\u901a\u8fc7 HuggingFace \u53d1\u5e03\u4e86\u90e8\u5206\u6a21\u578b\u53c2\u6570\u3002<code>main</code> \u5206\u652f\u5df2\u4e0d\u518d\u517c\u5bb9 <code>Mamba2-*</code> \u68c0\u67e5\u70b9\uff0c\u5982\u9700\u52a0\u8f7d\uff0c\u53ef\u4f7f\u7528 \u8bba\u6587\u4e2d\u56fa\u5b9a\u7684\u4ee3\u7801\u5feb\u7167\u3002</p>"},{"location":"megatron/examples/mamba/#_2","title":"\u5b89\u88c5","text":"<p>\u4f7f\u7528\u63d0\u4f9b\u7684 Dockerfile \u6784\u5efa\u5e76\u8fd0\u884c\u5bb9\u5668\uff1a</p> <pre><code>docker build -t your_image_name:your_tag .\ndocker run --gpus all -it --rm \\\n  -v /path/to/megatron:/workspace/megatron \\\n  -v /path/to/dataset:/workspace/dataset \\\n  -v /path/to/checkpoints:/workspace/checkpoints \\\n  -w /workspace/megatron/examples/mamba \\\n  your_image_name:your_tag\n</code></pre>"},{"location":"megatron/examples/mamba/#_3","title":"\u8bad\u7ec3","text":"<p><code>train.sh</code> \u6f14\u793a\u4e86\u5355\u8282\u70b9\u9884\u8bad\u7ec3\u6d41\u7a0b\u3002\u901a\u8fc7\u8bbe\u7f6e <code>MODEL_SCALE</code> \u9009\u62e9 800M \u6216 8B \u89c4\u6a21\u30028B \u6df7\u5408\u6a21\u578b\u67b6\u6784\u4e0e\u8bba\u6587\u4e2d\u63cf\u8ff0\u7684\u8bbe\u7f6e\u4e00\u81f4\u3002</p>"},{"location":"megatron/examples/mamba/#_4","title":"\u6587\u672c\u751f\u6210","text":"<p>\u4f7f\u7528 <code>run_text_gen_server_8b.sh</code> \u53ef\u57fa\u4e8e 8B \u6df7\u5408\u6a21\u578b\u68c0\u67e5\u70b9\u542f\u52a8\u6587\u672c\u751f\u6210\u670d\u52a1\u3002\u9ed8\u8ba4\u5f20\u91cf\u5e76\u884c\u5ea6\u4e3a 1\u3002</p> <p>\u82e5\u4f7f\u7528\u4e0d\u540c\u7684\u5e76\u884c\u8bbe\u7f6e\u6216\u6a21\u578b\u67b6\u6784\uff0c\u8bf7\u4fee\u6539\u811a\u672c\u4e2d\u7684\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u8fd0\u884c 8B \u7eaf Mamba-2 \u6a21\u578b\u65f6\uff0c\u5c06 <code>--hybrid-attention-ratio</code> \u4e0e <code>--hybrid-mlp-ratio</code> \u8bbe\u7f6e\u4e3a 0.0\uff08\u6216\u5220\u9664\u8be5\u53c2\u6570\uff09\u3002</p> <p>\u4f7f\u7528 <code>run_text_gen_server_8b_gpt3.sh</code> \u53ef\u542f\u52a8 8B \u53c2\u8003 Transformer \u6a21\u578b\u7684\u751f\u6210\u670d\u52a1\u3002</p>"},{"location":"megatron/examples/mamba/#_5","title":"\u68c0\u67e5\u70b9\u683c\u5f0f","text":"<p>\u63a8\u7406\u65f6\u9700\u786e\u4fdd\u6a21\u578b\u914d\u7f6e\u4e0e\u68c0\u67e5\u70b9\u4e00\u81f4\uff0c\u5305\u62ec\u6df7\u5408\u5c42\u914d\u7f6e\u4e0e\u5e76\u884c\u7b56\u7565\u3002</p> <p>\u5982\u9700\u5c06\u6df7\u5408\u6a21\u578b\u68c0\u67e5\u70b9\u8f6c\u6362\u4e3a\u4e0d\u540c\u7684\u5f20\u91cf/\u6d41\u6c34\u7ebf\u5e76\u884c\u5ea6\uff0c\u53ef\u4f7f\u7528 hybrid_conversion.py\uff0c\u811a\u672c\u672b\u5c3e\u63d0\u4f9b\u4e86\u793a\u4f8b\u547d\u4ee4\u3002</p> <p>\u8fd0\u884c\u524d\u8bf7\u5c06 Megatron-LM \u4ed3\u5e93\u6839\u76ee\u5f55\u52a0\u5165 <code>PYTHONPATH</code>\uff1a</p> <pre><code>export PYTHONPATH=&lt;path-to-megatron&gt;:PYTHONPATH\n</code></pre>"},{"location":"megatron/examples/mamba/#_6","title":"\u6df7\u5408\u6a21\u578b\u9009\u9879","text":"<p><code>--hybrid-attention-ratio ATT</code>\uff1a\u6307\u5b9a\u6ce8\u610f\u529b\u5c42\u5360\u6bd4\u3002\u4f8b\u5982 48 \u5c42\u4e2d\u6709 4 \u5c42\u6ce8\u610f\u529b\uff0c\u5219\u4f7f\u7528 <code>--hybrid-attention-ratio 0.08</code>\u3002</p> <p><code>--hybrid-mlp-ratio MLP</code>\uff1a\u6307\u5b9a MLP \u5c42\u5360\u6bd4\u3002\u4f8b\u5982 48 \u5c42\u4e2d\u6709 24 \u5c42 MLP\uff0c\u5219\u4f7f\u7528 <code>--hybrid-mlp-ratio 0.5</code>\u3002</p> <ul> <li><code>ATT + MLP</code> \u5fc5\u987b\u5c0f\u4e8e\u6216\u7b49\u4e8e 1.0\u3002</li> <li><code>1.0 - ATT - MLP</code> \u5373 Mamba \u5c42\u6bd4\u4f8b\u3002</li> <li><code>ATT = MLP = 0</code> \u4e3a\u7eaf Mamba \u6a21\u578b\u3002</li> <li><code>ATT = MLP = 0.5</code> \u4e3a Transformer \u6a21\u578b\u3002</li> </ul> <p>\u5f53 <code>ATT</code> \u6216 <code>MLP</code> \u5927\u4e8e 0.0\uff0c\u6216\u6307\u5b9a <code>--hybrid-override-pattern</code> \u65f6\uff0c\u65e5\u5fd7\u4f1a\u8bb0\u5f55\u6240\u4f7f\u7528\u7684\u6df7\u5408\u5c42\u6a21\u5f0f\u3002<code>--hybrid-override-pattern</code> \u53ef\u7528\u4e8e\u81ea\u5b9a\u4e49\u5c42\u5206\u5e03\u3002</p>"},{"location":"megatron/examples/mamba/#mamba-mamba-2","title":"Mamba \u4e0e Mamba-2","text":"<p>\u5f53\u524d\u4ee3\u7801\u5e93\u4ec5\u652f\u6301 Mamba-2\u3002\u5982\u9700\u8fd0\u884c\u539f\u59cb\u7248\u672c\u7684 Mamba\uff0c\u8bf7\u4f7f\u7528 \u8bba\u6587\u4e2d\u56fa\u5b9a\u7684\u4ee3\u7801\u5feb\u7167\u3002</p>"},{"location":"megatron/examples/mixtral/","title":"Mixtral 8x7B \u63a8\u7406\u4e0e\u5fae\u8c03\u6307\u5357","text":""},{"location":"megatron/examples/mixtral/#mixtral-8x7b_1","title":"\u4e0b\u8f7d Mixtral 8x7B \u68c0\u67e5\u70b9","text":"<p>\u53ef\u4ece HF Hub \u83b7\u53d6 Mixtral 8x7B \u7684 HF \u683c\u5f0f\u68c0\u67e5\u70b9\u3002</p> <p>\u4e5f\u53ef\u6267\u884c\u4ee5\u4e0b\u811a\u672c\uff0c\u5c06\u6a21\u578b\u4e0b\u8f7d\u5230\u6307\u5b9a\u76ee\u5f55\uff1a</p> <pre><code>from huggingface_hub import snapshot_download\nSAVED_DIR = \"\" # Specify the saved directory\n# Download HF checkpoints\nsnapshot_download(repo_id=\"mistralai/Mixtral-8x7B-v0.1\", ignore_patterns=[\"*.pt\"], local_dir=SAVED_DIR, local_dir_use_symlinks=False)\n</code></pre>"},{"location":"megatron/examples/mixtral/#mixtral-8x7b-hf-mcore","title":"\u5c06 Mixtral 8x7B \u68c0\u67e5\u70b9\u7531 HF \u8f6c\u6362\u4e3a MCore","text":"<p>\u4f7f\u7528\u63d0\u4f9b\u7684\u8f6c\u6362\u811a\u672c\u53ef\u5c06 HF \u68c0\u67e5\u70b9\u8f6c\u6362\u4e3a Megatron \u683c\u5f0f\uff0c\u9700\u8981\u660e\u786e\u76ee\u6807\u7684\u6a21\u578b\u5e76\u884c\u914d\u7f6e\uff08TP/PP/EP\uff09\u3002</p> <p>\u76ee\u524d\u8f6c\u6362\u5668\u5c1a\u672a\u652f\u6301\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\uff0c\u56e0\u6b64\u4e0d\u540c\u5e76\u884c\u914d\u7f6e\u9700\u751f\u6210\u72ec\u7acb\u7684\u68c0\u67e5\u70b9\u3002 - \u8bad\u7ec3\u63a8\u8350\u4f7f\u7528 TP1EP8PP4 - \u63a8\u7406\u63a8\u8350\u4f7f\u7528 TP1EP1PP2</p> <pre><code>TOKENIZER_MODEL=/workspace/checkpoints/mixtral-hf/tokenizer.model\nMEGATRON_PATH=\"/workspace/megatron-lm\"\nexport PYTHONPATH=$MEGATRON_PATH:$PYTHONPATH\nexport CUDA_DEVICE_MAX_CONNECTIONS=1\n\nTARGET_TP_SIZE=\"\"\nTARGET_EP_SIZE=\"\"\nTARGET_PP_SIZE=\"\"\n\nHF_FORMAT_DIR=/workspace/checkpoints/mixtral-hf\nMEGATRON_FORMAT_DIR=/workspace/checkpoints/mixtral-mcore-TP${TARGET_TP_SIZE}PP${TARGET_PP_SIZE}EP${TARGET_EP_SIZE}\n\npython tools/checkpoint/convert.py \\\n--model-type GPT \\\n--loader loader_mixtral_hf \\\n--saver mcore \\\n--target-tensor-parallel-size ${TARGET_TP_SIZE} \\\n--target-pipeline-parallel-size ${TARGET_PP_SIZE} \\\n--target-expert-parallel-size ${TARGET_EP_SIZE} \\\n--load-dir ${HF_FORMAT_DIR} \\\n--save-dir ${MEGATRON_FORMAT_DIR} \\\n--tokenizer-model ${TOKENIZER_MODEL}\n</code></pre>"},{"location":"megatron/examples/mixtral/#mixtral-8x7b_2","title":"Mixtral 8x7B \u6587\u672c\u751f\u6210","text":"<p>\u63a8\u7406\u81f3\u5c11\u9700\u8981\u4e24\u5f20 GPU\uff0c\u56e0\u6b64\u9700\u4f7f\u7528\u4e0a\u4e00\u6b65\u751f\u6210\u7684 EP&gt;=2 \u6216 PP&gt;=2 \u7684\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\u3002</p> <p>Megatron-LM \u63d0\u4f9b\u4e86\u7b80\u5355\u7684 REST \u670d\u52a1 <code>tools/run_text_generation_server.py</code>\uff0c\u53ef\u901a\u8fc7\u4ee5\u4e0b\u811a\u672c\u542f\u52a8\uff1a</p> <pre><code>#!/bin/bash\n# This example will start serving the Mixtral 8x7B model.\nDISTRIBUTED_ARGS=\"--nproc_per_node 2 \\\n                  --nnodes 1 \\\n                  --node_rank 0 \\\n                  --master_addr localhost \\\n                  --master_port 6000\"\n\nCHECKPOINT=&lt;Path to checkpoint&gt;\nTOKENIZER_MODEL=&lt;Path to tokenizer (e.g. /tokenizer.model)&gt;\n\nexport CUDA_DEVICE_MAX_CONNECTIONS=1\n\npip install flask-restful\n\ntorchrun $DISTRIBUTED_ARGS tools/run_text_generation_server.py   \\\n       --tensor-model-parallel-size 1  \\\n       --pipeline-model-parallel-size 2  \\\n       --expert-model-parallel-size 1 \\\n       --load ${CHECKPOINT}  \\\n       --tokenizer-type Llama2Tokenizer \\\n       --tokenizer-model $TOKENIZER_MODEL \\\n       --use-mcore-models \\\n       --max-position-embeddings 32768 \\\n       --num-layers 32 \\\n       --hidden-size 4096 \\\n       --ffn-hidden-size 14336 \\\n       --num-attention-heads 32 \\\n       --normalization RMSNorm \\\n       --disable-bias-linear \\\n       --position-embedding-type rope \\\n       --no-position-embedding \\\n       --swiglu \\\n       --untie-embeddings-and-output-weights \\\n       --group-query-attention \\\n       --num-query-groups 8 \\\n       --bf16  \\\n       --micro-batch-size 1  \\\n       --seq-length 1024  \\\n       --seed 42 \\\n       --num-experts 8 \\\n       --moe-router-topk 2 \\\n       --moe-token-dispatcher-type alltoall \\\n       --moe-grouped-gemm \\\n       --mock-data \\\n       --rotary-base 1000000\n</code></pre> <p>\u670d\u52a1\u542f\u52a8\u540e\uff0c\u53ef\u901a\u8fc7 <code>tools/text_generation_cli.py</code> \u8fdb\u884c\u6d4b\u8bd5\uff1a</p> <pre><code>python tools/text_generation_cli.py localhost:5000\n</code></pre>"},{"location":"megatron/examples/mixtral/#mixtral-8x7b_3","title":"\u57fa\u4e8e Mixtral 8x7B \u7684\u5fae\u8c03","text":"<p>\u4f7f\u7528\u4ee5\u4e0b\u811a\u672c\u5fae\u8c03\u9884\u8bad\u7ec3\u7684 Mixtral 8x7B\uff1a</p> <pre><code>PYTORCH_IMAGE=nvcr.io/nvidia/pytorch:24.04-py3\nCHECKPOINT_PATH=\"\" # Speicfy path to checkpoint dir\nTOKENIZER_MODEL=\"\" # Specify path to tokenizer.model\nDATA_PATH=\"\" # Specify path to data\n\ndocker run \\\n    --gpus=all \\\n    --ipc=host \\\n    --workdir /workspace/megatron-lm \\\n    -v /path/to/data:/path/to/data \\\n    -v /path/to/megatron-lm:/workspace/megatron-lm \\\n    $PYTORCH_IMAGE \\\n    bash examples/mixtral/train_mixtral_8x7b_distributed.sh $CHECKPOINT_PATH $TOKENIZER_MODEL $DATA_PATH\n</code></pre> <p>\u4e0a\u8ff0\u6d41\u7a0b\u540c\u6837\u9002\u7528\u4e8e Mixtral 8x22B\uff0c\u8bf7\u6839\u636e\u5b98\u65b9 config \u8c03\u6574 <code>hidden_size</code>\u3001<code>num_layers</code>\u3001<code>ffn_hidden_size</code> \u7b49\u53c2\u6570\u3002</p>"},{"location":"megatron/examples/mixtral/#_1","title":"\u9e23\u8c22","text":"<p>\u4ee5\u4e0b\u8d21\u732e\u8005\u6765\u81ea NVIDIA \u4e4b\u5916\uff0c\u4e3a Megatron-Core \u63d0\u4f9b\u4e86 HuggingFace \u8f6c\u6362\u5668\u4e0e Mixtral \u793a\u4f8b\uff1a - Peng Li jerry.lp@alibaba-inc.com - Jun Huang huangjun.hj@alibaba-inc.com</p>"},{"location":"megatron/examples/multimodal/","title":"\u591a\u6a21\u6001\u793a\u4f8b","text":"<p>\u6ce8\u610f\uff1a\u8be5\u793a\u4f8b\u4ecd\u5728\u79ef\u6781\u5f00\u53d1\u4e2d\uff0c\u540e\u7eed\u53ef\u80fd\u53d1\u751f\u53d8\u5316\u3002</p> <p>\u672c\u793a\u4f8b\u5b8c\u6574\u5c55\u793a\u5982\u4f55\u9884\u8bad\u7ec3\u5e76\u6307\u4ee4\u5fae\u8c03\u57fa\u4e8e Llava \u67b6\u6784\u7684\u89c6\u89c9\u8bed\u8a00\u6a21\u578b\u3002\u82e5\u5e0c\u671b\u590d\u73b0\u6587\u672b\u7684\u57fa\u51c6\u6210\u7ee9\uff0c\u8bf7\u4e25\u683c\u6309\u6b65\u9aa4\u64cd\u4f5c\u3002</p> <p>\u793a\u4f8b\u5728 A100 DGX \u96c6\u7fa4\u4e0a\u9a8c\u8bc1\uff1a\u9884\u8bad\u7ec3\u4e0e\u6307\u4ee4\u5fae\u8c03\u5206\u522b\u8017\u65f6\u7ea6 1 \u5929\u4e0e 11 \u5c0f\u65f6\uff0c\u603b\u8ba1\u4f7f\u7528 64 \u5f20 GPU\uff0c\u5f20\u91cf\u5e76\u884c\u5ea6\u8bbe\u4e3a 4\uff08tp=4\uff09\u3002\u603b\u4f53\u901f\u5ea6\u968f GPU \u6570\u91cf\u8fd1\u4f3c\u7ebf\u6027\u7f29\u653e\u3002</p> <p>Megatron \u7684\u591a\u6a21\u6001\u652f\u6301\u4ecd\u5728\u5b8c\u5584\u4e2d\u3002\u672c\u793a\u4f8b\u76ee\u6807\u4e0d\u662f\u4ea7\u51fa\u6700\u4f18\u6a21\u578b\uff08\u9700\u8981\u66f4\u591a\u6570\u636e\u4e0e\u6a21\u578b\u8c03\u4f18\uff09\uff0c\u800c\u662f\u6f14\u793a Megatron \u7684\u591a\u6a21\u6001\u529f\u80fd\u3002\u5982\u9047\u95ee\u9898\uff0c\u6b22\u8fce\u63d0\u4ea4 issue\u3002</p>"},{"location":"megatron/examples/multimodal/#_2","title":"\u73af\u5883\u51c6\u5907","text":""},{"location":"megatron/examples/multimodal/#docker","title":"Docker \u5bb9\u5668","text":"<p>\u53ef\u4f7f\u7528 <code>examples/multimodal/Dockerfile</code> \u6784\u5efa\u5e76\u8fd0\u884c\u793a\u4f8b\u6240\u9700\u7684\u5bb9\u5668\u3002</p>"},{"location":"megatron/examples/multimodal/#_3","title":"\u8bed\u8a00\u6a21\u578b","text":"<p>\u6309\u7167 Mistral \u6587\u6863 \u4e0b\u8f7d Mistral-7B-Instruct-v0.3\uff0c\u5e76\u8f6c\u6362\u4e3a mcore \u683c\u5f0f\uff0c\u5f20\u91cf\u5e76\u884c\u5ea6\u4e3a 4\u3002\u8bf7\u4f7f\u7528 HuggingFace \u63d0\u4f9b\u7684 tokenizer\u3002</p>"},{"location":"megatron/examples/multimodal/#_4","title":"\u89c6\u89c9\u6a21\u578b","text":"<p>\u793a\u4f8b\u4f7f\u7528 OpenAI CLIP <code>ViT-L/14@336px</code>\u3002\u4e0b\u8f7d\u6743\u91cd\u5e76\u8f6c\u6362\u4e3a Megatron \u53ef\u52a0\u8f7d\u7684\u683c\u5f0f\uff1a</p> <pre><code>python examples/multimodal/model_converter/clip_converter.py --download-root /some/download/folder --output /some/output/folder --tensor-parallel-size 4 --use-te\n</code></pre>"},{"location":"megatron/examples/multimodal/#_5","title":"\u5408\u5e76\u6a21\u578b\u68c0\u67e5\u70b9","text":"<p>\u66f4\u65b0\u8def\u5f84\u540e\uff0c\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\uff0c\u5c06 Mistral \u4e0e CLIP \u6a21\u578b\u5408\u5e76\u4e3a\u5355\u4e2a\u591a\u6a21\u6001\u68c0\u67e5\u70b9\u76ee\u5f55\uff1a</p> <pre><code>examples/multimodal/combine_lm_vision_checkpoints.sh /path/to/mistral/model /path/to/clip/model /output/dir\n</code></pre>"},{"location":"megatron/examples/multimodal/#_6","title":"\u8bad\u7ec3","text":""},{"location":"megatron/examples/multimodal/#_7","title":"\u9884\u8bad\u7ec3","text":"<ol> <li>\u4ece HuggingFace \u4e0b\u8f7d LLavA-Pretrain \u6570\u636e\u96c6\u5e76\u89e3\u538b\u56fe\u7247\uff08\u7ea6 79GB\uff09\uff1a</li> </ol> <pre><code>git clone https://huggingface.co/datasets/liuhaotian/LLaVA-Pretrain\ncd LLaVA-Pretrain\nunzip images.zip\n</code></pre> <ol> <li>\u5c06\u6570\u636e\u8f6c\u6362\u4e3a webdataset \u683c\u5f0f\uff1a</li> </ol> <pre><code>cd &lt;megatron-lm dir&gt;\npython examples/multimodal/convert_llava_pretrain_to_wds.py\n</code></pre> <ol> <li>\u8f6c\u6362\u4e3a megatron-energon \u683c\u5f0f\uff1a</li> </ol> <pre><code>cd &lt;LLaVA-Pretrain dir&gt;/wds\nenergon prepare ./\n</code></pre> <pre><code>\u6839\u636e\u63d0\u793a\u8f93\u5165\u4ee5\u4e0b\u5185\u5bb9\uff1a\n</code></pre> <pre><code>&gt; Please enter a desired train/val/test split like \"0.5, 0.2, 0.3\" or \"8,1,1\": 9,1,0\n&gt; Do you want to create a dataset.yaml interactively? [Y/n]: Y\n&gt; Please enter a number to choose a class: 10 (VQAWebdataset)\n&gt; Do you want to set a simple field_map[Y] (or write your own sample_loader [n])? [Y/n]: Y\n&gt; Please enter a webdataset field name for 'image' (&lt;class 'torch.Tensor'&gt;): jpg\n&gt; Please enter a webdataset field name for 'context' (&lt;class 'str'&gt;): json[0][value]\n&gt; Please enter a webdataset field name for 'answers' (typing.Optional[typing.List[str]], default: None): json[1][value]\n&gt; Please enter a webdataset field name for 'answer_weights' (typing.Optional[torch.Tensor], default: None):\n</code></pre> <ol> <li> <p>\u4fee\u6539 <code>pretrain_dataset.yaml</code>\uff0c\u4f7f\u5176\u4e2d\u7684 <code>path</code> \u6307\u5411 <code>LLaVA-Pretrain/wds</code>\u3002</p> </li> <li> <p>\u8fd0\u884c\u9884\u8bad\u7ec3\u811a\u672c\uff1a</p> </li> </ol> <pre><code>cd &lt;megatron-lm dir&gt;\nexamples/multimodal/pretrain_mistral_clip.sh\n</code></pre> <p>\u82e5\u8bad\u7ec3\u987a\u5229\uff0c\u53ef\u770b\u5230\u5982\u4e0b\u7684\u635f\u5931\u66f2\u7ebf\uff08\u6279\u5927\u5c0f\u4e3a 256\uff09\uff1a</p> <p></p> <p>\u4fee\u6539\u6279\u5927\u5c0f\u53ef\u80fd\u4f1a\u6539\u53d8\u66f2\u7ebf\u5f62\u6001\u3002\u5bf9\u4e8e Llava \u6a21\u578b\uff0c\u635f\u5931\u66f2\u7ebf\u5f80\u5f80\u4e0d\u80fd\u51c6\u786e\u9884\u6d4b\u4e0b\u6e38\u8868\u73b0\uff0c\u56e0\u6b64\u9700\u901a\u8fc7\u8bc4\u6d4b\u4efb\u52a1\u91cf\u5316\u6a21\u578b\u8d28\u91cf\u3002\u6211\u4eec\u8ba1\u5212\u5728\u672a\u6765\u7248\u672c\u52a0\u5165\u8bad\u7ec3\u671f\u95f4\u7684\u96f6\u6837\u672c\u8bc4\u4f30\u3002</p> <p>\u9884\u8bad\u7ec3\u811a\u672c\u53ef\u591a\u6b21\u6267\u884c\u4ee5\u6062\u590d\u8bad\u7ec3\uff1b\u6062\u590d\u65f6\u4f1a\u52a0\u8f7d\u6700\u65b0\u7684\u6a21\u578b\u3001\u4f18\u5316\u5668\u4e0e\u6570\u636e\u52a0\u8f7d\u5668\u72b6\u6001\u3002</p>"},{"location":"megatron/examples/multimodal/#sft","title":"\u6307\u4ee4\u5fae\u8c03\uff08SFT\uff09","text":"<ol> <li>\u51c6\u5907\u7b26\u5408 Megatron-Energon \u683c\u5f0f \u7684\u5fae\u8c03\u6570\u636e\u96c6\uff08\u672c\u793a\u4f8b\u4e0d\u63d0\u4f9b\u8be6\u7ec6\u8bf4\u660e\uff09\u3002</li> <li>\u4fee\u6539 <code>sft_dataset.yaml</code>\uff0c\u4f7f <code>path</code> \u6307\u5411\u8bad\u7ec3\u4e0e\u9a8c\u8bc1\u6570\u636e\u3002</li> </ol> <p>\u6267\u884c\u6307\u4ee4\u5fae\u8c03\u811a\u672c\uff1a</p> <pre><code>examples/multimodal/sft_mistral_clip.sh\n</code></pre> <p>\u540c\u6837\u53ef\u591a\u6b21\u8fd0\u884c\u4ee5\u6062\u590d\u8bad\u7ec3\u3002</p>"},{"location":"megatron/examples/multimodal/#_8","title":"\u8bc4\u4f30","text":""},{"location":"megatron/examples/multimodal/#_9","title":"\u6587\u672c\u751f\u6210","text":"<p>\u8fd0\u884c\uff1a</p> <pre><code>examples/multimodal/text_generation_mistral_clip.sh --input-image-path /path/to/input/images --output-path /some/output/directory \\\n    --model-path /path/to/model.pt --gt-path /path/to/groundtruth/file --task generation-task-name\n</code></pre> <p>\u5176\u4e2d <code>--task generation-task-name</code> \u6307\u5b9a\u8bc4\u6d4b\u4efb\u52a1\u540d\u79f0\uff08\u5982 <code>captioning</code>\u3001<code>MMMU</code>\uff09\u3002</p>"},{"location":"megatron/examples/multimodal/#_10","title":"\u9884\u8bad\u7ec3\u540e","text":""},{"location":"megatron/examples/multimodal/#coco","title":"COCO \u56fe\u50cf\u63cf\u8ff0","text":"<ol> <li>\u4e0b\u8f7d COCO 2014 \u6d4b\u8bd5\u96c6\u56fe\u7247\uff1a</li> </ol> <pre><code>wget http://images.cocodataset.org/zips/test2014.zip\n</code></pre> <ol> <li>\u4e0b\u8f7d\u6d4b\u8bd5\u6807\u6ce8\uff1a</li> </ol> <pre><code>wget https://storage.googleapis.com/sfr-vision-language-research/datasets/coco_karpathy_test.json\n</code></pre> <ol> <li> <p>\u4f7f\u7528 <code>--task captioning</code> \u8fd0\u884c\u751f\u6210\u811a\u672c\u3002</p> </li> <li> <p>\u6267\u884c\u8bc4\u4f30\uff1a</p> </li> </ol> <pre><code>python examples/multimodal/evaluate_coco.py --input-path /output/directory/from/generation --groundtruth-path /path/to/groundtruth/file\n</code></pre> <p>\u5bf9 Mistral-7B-Instruct+CLIP Llava \u6a21\u578b\uff0cCOCO CIDEr \u7ea6\u4e3a 94\u3002</p>"},{"location":"megatron/examples/multimodal/#_11","title":"\u5fae\u8c03\u540e","text":""},{"location":"megatron/examples/multimodal/#mmmu","title":"MMMU","text":"<p>\u5f53\u524d MMMU \u5b98\u65b9\u4ed3\u5e93\u65e0\u6cd5\u901a\u8fc7 pip \u5b89\u88c5\uff0c\u8bf7\u5728 <code>examples/multimodal</code> \u4e0b\u514b\u9686\uff1a</p> <pre><code>git clone https://github.com/MMMU-Benchmark/MMMU.git\n</code></pre> <p>\u6570\u636e\u96c6\u4f1a\u5728 HuggingFace \u4e0a\u81ea\u52a8\u4e0b\u8f7d\u3002\u5148\u4f7f\u7528 <code>--task MMMU</code> \u751f\u6210\uff0c\u518d\u8fd0\u884c\uff1a</p> <pre><code>python examples/multimodal/evaluate_mmmu.py --input-path /output/directory/from/generation\n</code></pre> <p>\u5bf9\u5fae\u8c03\u540e\u7684 Mistral-7B-Instruct+CLIP Llava \u6a21\u578b\uff0cMMMU \u5f97\u5206\u7ea6\u4e3a 38\u3002</p>"},{"location":"megatron/examples/multimodal/llama_3p1_nemotron_nano_vl_8b_v1/","title":"Llama-3.1-Nemotron-Nano-VL-8B-V1","text":"<p>\u8be6\u7ec6\u4fe1\u606f\u53ef\u53c2\u8003 Hugging Face\u3002</p>"},{"location":"megatron/examples/multimodal/llama_3p1_nemotron_nano_vl_8b_v1/#_1","title":"\u68c0\u67e5\u70b9","text":"<p>HuggingFace \u7248\u672c</p> <p>Megatron-Core \u7248\u672c</p>"},{"location":"megatron/examples/multimodal/llama_3p1_nemotron_nano_vl_8b_v1/#_2","title":"\u73af\u5883\u51c6\u5907","text":""},{"location":"megatron/examples/multimodal/llama_3p1_nemotron_nano_vl_8b_v1/#docker","title":"Docker \u955c\u50cf","text":"<p>\u53c2\u89c1 <code>examples/multimodal/llama_3p1_nemotron_nano_vl_8b_v1/Dockerfile</code>\u3002</p>"},{"location":"megatron/examples/multimodal/llama_3p1_nemotron_nano_vl_8b_v1/#_3","title":"\u6570\u636e\u96c6\u51c6\u5907","text":"<p>\u591a\u6a21\u6001\u6570\u636e\u52a0\u8f7d\u4f7f\u7528 Megatron Energon\u3002</p>"},{"location":"megatron/examples/multimodal/llama_3p1_nemotron_nano_vl_8b_v1/#_4","title":"\u6a21\u578b","text":"<p>\u53ef\u76f4\u63a5\u4ece \u6b64\u5904 \u4e0b\u8f7d\u5f20\u91cf\u5e76\u884c\u5ea6 1 \u6216 4 \u7684 Megatron \u68c0\u67e5\u70b9\u3002\u4e5f\u53ef\u53c2\u7167\u4e0b\u6587\u7684 \u6a21\u578b\u8f6c\u6362 \u4e0e \u8bad\u7ec3 \u6b65\u9aa4\uff0c\u4ece\u96f6\u5f00\u59cb\u9884\u8bad\u7ec3\u4e0e\u5fae\u8c03\u3002</p>"},{"location":"megatron/examples/multimodal/llama_3p1_nemotron_nano_vl_8b_v1/#_5","title":"\u6a21\u578b\u8f6c\u6362","text":""},{"location":"megatron/examples/multimodal/llama_3p1_nemotron_nano_vl_8b_v1/#_6","title":"\u8bed\u8a00\u6a21\u578b\u8f6c\u6362","text":"<p>\u8d77\u59cb\u6a21\u578b\u4e3a HuggingFace \u7684 meta-llama/Llama-3.1-8B-Instruct\u3002\u4e0b\u8f7d\u540e\u6267\u884c\uff1a</p> <pre><code>export LLAMA_DOWNLOAD_DIR=&lt;downloaded hf model directory&gt;\nCUDA_DEVICE_MAX_CONNECTIONS=1 python tools/checkpoint/convert.py --bf16 --model-type GPT --loader llama_mistral --saver core \\\n    --target-tensor-parallel-size 4 --checkpoint-type hf \\\n    --load-dir $LLAMA_DOWNLOAD_DIR --save-dir llama3p1 --tokenizer-model $LLAMA_DOWNLOAD_DIR \\\n    --saver-transformer-impl transformer_engine --model-size llama3\n</code></pre>"},{"location":"megatron/examples/multimodal/llama_3p1_nemotron_nano_vl_8b_v1/#_7","title":"\u89c6\u89c9\u6a21\u578b\u8f6c\u6362","text":"<p>\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u5c06 RADIO \u6a21\u578b\u8f6c\u6362\u4e3a mcore \u53ef\u7528\u683c\u5f0f\uff1a</p> <pre><code>python examples/multimodal/model_converter/radio_converter.py --output radio_tp_4 --tensor-parallel-size 4 --use-te \\\n    --version c-radio_v2-vlm-h --model-type radio_v2.5-h\n</code></pre>"},{"location":"megatron/examples/multimodal/llama_3p1_nemotron_nano_vl_8b_v1/#_8","title":"\u5408\u5e76\u68c0\u67e5\u70b9","text":"<p>\u8fd0\u884c\u811a\u672c\u5408\u5e76\u8bed\u8a00\u4e0e\u89c6\u89c9\u6a21\u578b\uff1a</p> <pre><code>examples/multimodal/combine_lm_vision_checkpoints.sh &lt;language model directory&gt; &lt;vision model directory&gt; &lt;output directory&gt;\n</code></pre>"},{"location":"megatron/examples/multimodal/llama_3p1_nemotron_nano_vl_8b_v1/#_9","title":"\u8bad\u7ec3","text":"<ol> <li>\u9884\u8bad\u7ec3\u811a\u672c\uff1a<code>examples/multimodal/llama_3p1_nemotron_nano_vl_8b_v1/pretraining_llama_3p1_nemotron_nano_vl_8b_v1.sh</code></li> <li>\u6307\u4ee4\u5fae\u8c03\u811a\u672c\uff1a<code>examples/multimodal/llama_3p1_nemotron_nano_vl_8b_v1/sft_llama_3p1_nemotron_nano_vl_8b_v1.sh</code></li> </ol>"},{"location":"megatron/examples/multimodal/llama_3p1_nemotron_nano_vl_8b_v1/#_10","title":"\u63a8\u7406\u4e0e\u8bc4\u4f30","text":"<p>\u7b80\u5355\u63a8\u7406\u793a\u4f8b\uff1a</p> <pre><code>export LLAMA_NEMOTRON_NANO_VL_PATH=&lt;path to the megatron tp=4 checkpoint&gt;\nexamples/multimodal/llama_3p1_nemotron_nano_vl_8b_v1/text_generation.sh --model-path $LLAMA_NEMOTRON_NANO_VL_PATH \\\n    --task inference --output-path inference-example --tensor-model-parallel-size 4\n</code></pre> <p>\u5982\u9700\u8bc4\u4f30\uff0c\u53ef\u5c06 <code>--task</code> \u66ff\u6362\u4e3a <code>MMMU</code>\u3001<code>TextVQA</code> \u7b49\u4efb\u52a1\u540d\u79f0\u3002</p>"},{"location":"megatron/examples/multimodal/nvlm/","title":"NVLM","text":"<p>\u8be6\u7ec6\u4ecb\u7ecd\u8bf7\u53c2\u89c1 NVLM \u8bba\u6587\u3002</p> <p>\u6ce8\u610f\uff1aMegatron \u4e2d\u7684 VLM \u4ecd\u5728\u79ef\u6781\u5f00\u53d1\uff0c\u540e\u7eed\u53ef\u80fd\u8c03\u6574\u3002</p>"},{"location":"megatron/examples/multimodal/nvlm/#_1","title":"\u68c0\u67e5\u70b9","text":"<p>NVLM 1.0 \u6a21\u578b\u6743\u91cd\u5df2\u5728 HuggingFace \u4e0e Megatron \u683c\u5f0f\u516c\u5f00\uff1a</p> <ul> <li>NVLM-1.0-D 72B HuggingFace \u7248\u672c</li> <li>NVLM-1.0-D 72B Megatron-Core \u7248\u672c </li> </ul>"},{"location":"megatron/examples/multimodal/nvlm/#_2","title":"\u73af\u5883\u51c6\u5907","text":""},{"location":"megatron/examples/multimodal/nvlm/#docker","title":"Docker \u955c\u50cf","text":"<p>\u4f7f\u7528 <code>examples/multimodal/Dockerfile</code>\u3002</p>"},{"location":"megatron/examples/multimodal/nvlm/#_3","title":"\u6570\u636e\u96c6\u51c6\u5907","text":"<p>\u9884\u8bad\u7ec3\u4e0e\u5fae\u8c03\u6570\u636e\u96c6\u5217\u8868\u53c2\u89c1\u8bba\u6587\u8868 4 \u4e0e\u8868 6\u3002\u6570\u636e\u683c\u5f0f\u8f6c\u6362\u53ef\u53c2\u8003 https://nvidia.github.io/Megatron-Energon/data_prep.html\u3002</p>"},{"location":"megatron/examples/multimodal/nvlm/#_4","title":"\u6a21\u578b\u8f6c\u6362","text":""},{"location":"megatron/examples/multimodal/nvlm/#_5","title":"\u89c6\u89c9\u6a21\u578b","text":"<p>NVLM 1.0 \u4f7f\u7528 HuggingFace \u7684 OpenGVLab/InternViT-6B-448px-V1-5\u3002\u4e0b\u8f7d\u540e\u6267\u884c\uff1a</p> <pre><code>python examples/multimodal/model_converter/internvit_converter.py --output-dir &lt;some output dir&gt; --use-te --tensor-parallel-size 8\n</code></pre>"},{"location":"megatron/examples/multimodal/nvlm/#34b","title":"34B \u8bed\u8a00\u6a21\u578b","text":"<p>\u4ee5 HuggingFace \u7684 NousResearch/Nous-Hermes-2-Yi-34B \u4e3a\u8d77\u70b9\uff1a</p> <pre><code>python tools/checkpoint/convert.py --bf16 --model-type GPT --loader llama_mistral --saver mcore --target-tensor-parallel-size 8 --checkpoint-type hf \\\n    --load-dir &lt;hf model directory&gt; --save-dir &lt;output dir&gt; --tokenizer-model &lt;hf model name/directory&gt; \\\n    --saver-transformer-impl transformer_engine --model-size yi-34B --make-vocab-size-divisible-by 1\n</code></pre>"},{"location":"megatron/examples/multimodal/nvlm/#72b","title":"72B \u8bed\u8a00\u6a21\u578b","text":"<p>\u4ee5 HuggingFace \u7684 Qwen/Qwen2-72B-Instruct \u4e3a\u8d77\u70b9\uff1a</p> <pre><code>python tools/checkpoint/convert.py --bf16 --model-type GPT --loader llama_mistral --saver mcore --target-tensor-parallel-size 8 --checkpoint-type hf \\\n    --load-dir &lt;hf model directory&gt; --save-dir &lt;output directory&gt; --tokenizer-model &lt;hf model name/directory&gt; \\\n    --saver-transformer-impl transformer_engine --model-size qwen2.5-72Bf\n</code></pre>"},{"location":"megatron/examples/multimodal/nvlm/#_6","title":"\u5408\u5e76\u68c0\u67e5\u70b9","text":"<p>\u5c06 InternViT \u4e0e 34B \u6216 72B \u8bed\u8a00\u6a21\u578b\u5408\u5e76\uff1a</p> <pre><code>examples/multimodal/combine_lm_vision_checkpoints.sh &lt;language model directory&gt; &lt;vision model directory&gt; &lt;output directory&gt; nvlm\n</code></pre>"},{"location":"megatron/examples/multimodal/nvlm/#_7","title":"\u8bad\u7ec3","text":""},{"location":"megatron/examples/multimodal/nvlm/#34b_1","title":"34B","text":"<ol> <li>\u9884\u8bad\u7ec3\uff1a\u6267\u884c <code>examples/multimodal/nvlm/pretrain_yi_34b_internvit_6b.sh</code>\uff0c\u5e76\u4f7f\u7528\u5408\u5e76\u540e\u7684 InternViT+34B \u68c0\u67e5\u70b9\u4e0e HuggingFace tokenizer\u3002</li> <li>\u6307\u4ee4\u5fae\u8c03\uff1a\u6267\u884c <code>examples/multimodal/nvlm/sft_34b_internvit.sh</code>\u3002</li> </ol>"},{"location":"megatron/examples/multimodal/nvlm/#72b_1","title":"72B","text":"<ol> <li>\u9884\u8bad\u7ec3\uff1a\u6267\u884c <code>examples/multimodal/nvlm/pretrain_qwen20_72b_internvit_6b.sh</code>\uff0c\u4f7f\u7528\u5408\u5e76\u540e\u7684 InternViT+72B \u68c0\u67e5\u70b9\u4e0e HuggingFace tokenizer\u3002</li> <li>\u5c06\u9884\u8bad\u7ec3\u68c0\u67e5\u70b9\u8f6c\u6362\u4e3a\u6d41\u6c34\u7ebf\u5e76\u884c\u5ea6 4\uff0c\u4ee5\u4fbf\u5fae\u8c03\uff1a</li> </ol> <pre><code>examples/multimodal/nvlm/pp_checkpoint_converter.py --input &lt;pretrained checkpoint directory&gt; \\\n--input-pipeline-parallel 1 --output &lt;some output dir&gt; --output-pipeline-parallel 4 \\\n--tensor-parallel 8\n</code></pre> <ol> <li>\u6307\u4ee4\u5fae\u8c03\uff1a\u6267\u884c <code>examples/multimodal/nvlm/sft_qwen20_72b_internvit_6b.sh</code>\u3002</li> <li>\u82e5\u9700\u8bc4\u4f30\uff0c\u5c06\u6d41\u6c34\u7ebf\u5e76\u884c\u5ea6 4 \u7684\u68c0\u67e5\u70b9\u8f6c\u6362\u56de 1\uff1a</li> </ol> <pre><code>examples/multimodal/nvlm/pp_checkpoint_converter.py --input &lt;sft checkpoint directory&gt; \\\n--input-pipeline-parallel 4 --output &lt;some output dir&gt; --output-pipeline-parallel 1 \\\n--tensor-parallel 8\n</code></pre>"},{"location":"megatron/examples/multimodal/nvlm/#_8","title":"\u8bc4\u4f30","text":"<p>\u6267\u884c\u6587\u672c\u751f\u6210\u811a\u672c\uff1a - 34B <pre><code>examples/multimodal/nvlm/run_text_generation_yi_34b_internvit_6b.sh --input-image-path /path/to/input/images --output-path /some/output/directory \\\n    --model-path /path/to/model.pt --gt-path /path/to/groundtruth/file --task generation-task-name --use-tiling\n</code></pre> - 72B <pre><code>examples/multimodal/nvlm/run_text_generation_qwen20_72b_internvit_6b.sh --input-image-path /path/to/input/images --output-path /some/output/directory \\\n    --model-path /path/to/model.pt --gt-path /path/to/groundtruth/file --task generation-task-name --use-tiling\n</code></pre></p> <p>\u53c2\u6570 <code>--task generation-task-name</code> \u53ef\u8bbe\u4e3a <code>captioning</code>\u3001<code>MMMU</code>\u3001<code>TextVQA</code> \u7b49\u8bc4\u6d4b\u4efb\u52a1\u3002</p> <p>\u968f\u540e\u8fd0\u884c\u76f8\u5e94\u8bc4\u4f30\u811a\u672c\uff0c\u4f8b\u5982\uff1a</p> <pre><code>python examples/multimodal/evaluate_mmmu.py --input-path /output/directory/from/generation\n</code></pre>"},{"location":"megatron/examples/post_training/modelopt/","title":"\u6982\u89c8","text":"# TensorRT Model Optimizer \u96c6\u6210\u793a\u4f8b   [TensorRT Model Optimizer](https://github.com/NVIDIA/TensorRT-Model-Optimizer) | [\u672c\u5730\u73af\u5883\u793a\u4f8b](#\u672c\u5730\u73af\u5883\u5feb\u901f\u5165\u95e8) | [\u914d\u7f6e\u8bf4\u660e](ADVANCED.md#learn-more-about-configuration) | [Slurm \u793a\u4f8b](ADVANCED.md#slurm-examples) | [\u63a8\u6d4b\u5f0f\u89e3\u7801](speculative.md) | [\u9ad8\u7ea7\u4e3b\u9898](ADVANCED.md)   <p>TensorRT Model Optimizer\uff08ModelOpt, \u5305\u540d <code>nvidia-modelopt</code>\uff09\u4e3a NVIDIA \u786c\u4ef6\u63d0\u4f9b\u7aef\u5230\u7aef\u6a21\u578b\u4f18\u5316\uff0c\u5305\u62ec\u91cf\u5316\uff08\u771f\u5b9e\u6216\u6a21\u62df\uff09\u3001\u7a00\u758f\u5316\u3001\u84b8\u998f\u3001\u526a\u679d\u3001\u795e\u7ecf\u67b6\u6784\u641c\u7d22\u53ca\u63a8\u6d4b\u5f0f\u89e3\u7801\u3002</p>"},{"location":"megatron/examples/post_training/modelopt/#_1","title":"\u4e3b\u8981\u7279\u6027","text":"<ul> <li>\u652f\u6301\u4ece Hugging Face \u9884\u8bad\u7ec3\u68c0\u67e5\u70b9\u4e00\u952e\u8f6c\u6362\u3002</li> <li>\u517c\u5bb9\u5404\u79cd\u6a21\u578b\u5e76\u884c\u65b9\u5f0f\uff08TP\u3001EP\u3001ETP\u3001PP\uff09\u3002</li> <li>\u5bfc\u51fa\u7edf\u4e00\u68c0\u67e5\u70b9\uff0c\u53ef\u76f4\u63a5\u7528\u4e8e TensorRT-LLM\u3001vLLM\u3001SGLang\u3002</li> </ul>"},{"location":"megatron/examples/post_training/modelopt/#_2","title":"\u652f\u6301\u77e9\u9635 {\u6a21\u578b}\u00d7{\u7279\u6027}","text":"\u6a21\u578b (<code>conf/</code>) \u91cf\u5316 EAGLE3 \u526a\u679d\uff08\u4ec5 PP\uff09 \u84b8\u998f <code>moonshotai/Kimi-K2-Instruct</code> \u2705 \u2705 - - <code>Qwen/Qwen3-{30B-A3B, 235B-A22B}</code> WAR \u2705 - - <code>Qwen/Qwen3-{0.6B, 8B}</code> \u2705 \u2705 \u2705 \u2705 <code>deepseek-ai/DeepSeek-R1</code> \u2705 \u2705 - - <code>meta-llama/Llama-{3.1-8B, 3.1-405B, 3.2-1B}-Instruct</code> \u2705 \u2705 \u2705 \u2705"},{"location":"megatron/examples/post_training/modelopt/#_3","title":"\u672c\u5730\u73af\u5883\u5feb\u901f\u5165\u95e8","text":"<p>\u901a\u8fc7 PyPI \u5b89\u88c5 <code>nvidia-modelopt</code>\uff1a <pre><code>pip install -U nvidia-modelopt\n</code></pre> \u4e5f\u53ef\u4ece \u6e90\u7801 \u5b89\u88c5\u4f53\u9a8c\u6700\u65b0\u529f\u80fd\u3002</p>"},{"location":"megatron/examples/post_training/modelopt/#nvfp4","title":"\u2b50 NVFP4 \u91cf\u5316\u3001\u91cf\u5316\u611f\u77e5\u8bad\u7ec3\u4e0e\u6a21\u578b\u5bfc\u51fa","text":"<p>\u8bbe\u7f6e\u9884\u8bad\u7ec3\u68c0\u67e5\u70b9\u8def\u5f84 <code>${HF_MODEL_CKPT}</code>\uff0c\u4ee5\u53ca\u7528\u4e8e\u4fdd\u5b58 Megatron \u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\u7684 <code>${MLM_MODEL_SAVE}</code>\u3002\u82e5\u9700\u5bfc\u51fa\u4f9b TensorRT-LLM\u3001vLLM\u3001SGLang \u4f7f\u7528\u7684 Hugging Face \u6837\u5f0f\u91cf\u5316\u68c0\u67e5\u70b9\uff0c\u8bf7\u5c06 <code>${EXPORT_DIR}</code> \u4f20\u9012\u7ed9 <code>export.sh</code>\u3002</p> <p>\ud83d\udcd9 \u6ce8\u610f\uff1a ModelOpt \u652f\u6301\u591a\u79cd\u91cf\u5316\u683c\u5f0f\u3002\u9ed8\u8ba4\u91c7\u7528\u6a21\u62df\u4f4e\u7cbe\u5ea6\uff08fake-quant\uff09\uff0c\u9002\u7528\u4e8e\u7b97\u529b\u5927\u4e8e 80 \u7684 GPU\u3002\u771f\u5b9e\u4f4e\u7cbe\u5ea6\u6743\u91cd\uff08\u5982 <code>E4M3</code>\u3001<code>E2M1</code>\uff09\u4e0e\u4f4e\u7cbe\u5ea6\u8ba1\u7b97\uff08\u5982 <code>FP8Linear</code>\uff09\u4e5f\u53d7\u652f\u6301\uff0c\u5177\u4f53\u53d6\u51b3\u4e8e GPU \u80fd\u529b\u3002\u8be6\u89c1 \u9ad8\u7ea7\u4e3b\u9898\u3002</p> <pre><code>\\\n    TP=1 \\\n    HF_MODEL_CKPT=&lt;pretrained_model_name_or_path&gt; \\\n    MLM_MODEL_SAVE=/tmp/Llama-3.2-1B-Instruct_quant \\\n    ./quantize.sh meta-llama/Llama-3.2-1B-Instruct nvfp4\n\n\\\n    PP=1 \\\n    HF_MODEL_CKPT=&lt;pretrained_model_name_or_path&gt; \\\n    MLM_MODEL_CKPT=/tmp/Llama-3.2-1B-Instruct_quant \\\n    EXPORT_DIR=/tmp/Llama-3.2-1B-Instruct_export \\\n    ./export.sh meta-llama/Llama-3.2-1B-Instruct\n</code></pre> <p>\u2757 \u91cd\u8981\uff1a \u811a\u672c\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u53c2\u6570\uff08\u5982 <code>meta-llama/Llama-3.2-1B-Instruct</code>\uff09\u7528\u4e8e\u5339\u914d <code>conf/</code> \u5185\u7684\u914d\u7f6e\u3002\u9884\u8bad\u7ec3\u68c0\u67e5\u70b9\u9700\u63d0\u524d\u4e0b\u8f7d\u5e76\u901a\u8fc7 <code>${HF_MODEL_CKPT}</code> \u6307\u5b9a\u3002</p> <p>\u52a0\u8f7d\u4fdd\u5b58\u7684\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\u540e\uff0c\u53ef\u7ee7\u7eed\u6267\u884c\u63a8\u7406\uff08\u751f\u6210\u6216\u8bc4\u4f30\uff09\u6216\u8bad\u7ec3\uff08SFT/PEFT\uff09\u3002\u66f4\u591a\u7ec6\u8282\u53c2\u89c1 \u9ad8\u7ea7\u4e3b\u9898\u3002\u8bbe\u8ba1\u8bf4\u660e\u6b63\u5728\u64b0\u5199\u4e2d\u3002</p> <pre><code>\\\n    TP=1 \\\n    MLM_MODEL_CKPT=/tmp/Llama-3.2-1B-Instruct_quant \\\n    ./generate.sh meta-llama/Llama-3.2-1B-Instruct\n\n\\\n    TP=1 \\\n    MLM_MODEL_CKPT=/tmp/Llama-3.2-1B-Instruct_quant \\\n    ./mmlu.sh meta-llama/Llama-3.2-1B-Instruct\n\n\\\n    TP=1 \\\n    MLM_MODEL_CKPT=/tmp/Llama-3.2-1B-Instruct_quant \\\n    ./finetune.sh meta-llama/Llama-3.2-1B-Instruct\n</code></pre>"},{"location":"megatron/examples/post_training/modelopt/#bf16-eagle3","title":"\u2b50 \u5728\u7ebf BF16 EAGLE3 \u8bad\u7ec3","text":"<p>\u5728\u7ebf EAGLE3 \u8bad\u7ec3\u4f1a\u540c\u65f6\u52a0\u8f7d\u76ee\u6807\u6a21\u578b\uff08\u51bb\u7ed3\uff09\u4e0e\u8349\u7a3f\u6a21\u578b\uff0c\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u52a8\u6001\u751f\u6210\u6240\u9700 <code>hidden_states</code>\u3002\u7cfb\u7edf\u4f1a\u5b9a\u671f\u5728 MT-Bench \u63d0\u793a\u4e0a\u8bc4\u4f30\u63a5\u53d7\u957f\u5ea6\uff08AL\uff0c\u8d8a\u9ad8\u8d8a\u597d\uff09\u3002\u4f7f\u7528\u540c\u4e00\u4e2a <code>export.sh</code> \u5373\u53ef\u5bfc\u51fa\u4f9b\u90e8\u7f72\u4f7f\u7528\u3002</p> <pre><code>\\\n    TP=1 \\\n    HF_MODEL_CKPT=&lt;pretrained_model_name_or_path&gt; \\\n    MLM_MODEL_SAVE=/tmp/Llama-3.2-1B-Eagle3 \\\n    ./eagle3.sh meta-llama/Llama-3.2-1B-Instruct\n\n\\\n    PP=1 \\\n    HF_MODEL_CKPT=&lt;pretrained_model_name_or_path&gt; \\\n    MLM_MODEL_CKPT=/tmp/Llama-3.2-1B-Eagle3 \\\n    EXPORT_DIR=/tmp/Llama-3.2-1B-Eagle3-Export \\\n    ./export.sh meta-llama/Llama-3.2-1B-Instruct\n</code></pre> <p>\u66f4\u591a\u793a\u4f8b\uff08\u5982 <code>moonshotai/Kimi-K2-Instruct</code> \u7684 Slurm \u4f5c\u4e1a\uff09\u53ef\u53c2\u8003 \u9ad8\u7ea7\u4e3b\u9898\u3002</p>"},{"location":"megatron/examples/post_training/modelopt/#_4","title":"\u2b50 \u526a\u679d","text":"<p>\u526a\u679d\u5165\u95e8\u4e0e\u53c2\u6570\u914d\u7f6e\u8be6\u89c1 ModelOpt \u526a\u679d\u6587\u6863\u3002</p> <p>\u76ee\u524d\u652f\u6301 GPT \u4e0e Mamba \u6a21\u578b\uff0c\u53c2\u6570\u5305\u62ec\uff1a - <code>TARGET_FFN_HIDDEN_SIZE</code> - <code>TARGET_HIDDEN_SIZE</code> - <code>TARGET_NUM_ATTENTION_HEADS</code> - <code>TARGET_NUM_QUERY_GROUPS</code> - <code>TARGET_MAMBA_NUM_HEADS</code> - <code>TARGET_MAMBA_HEAD_DIM</code> - <code>TARGET_NUM_LAYERS</code> - <code>LAYERS_TO_DROP</code>\uff081 \u8d77\u59cb\u5c42\u53f7\uff0c\u9017\u53f7\u5206\u9694\uff09</p> <p>\u4f8b\u5982\uff0c\u5c06 Qwen3-8B \u6df1\u5ea6\u4ece 36 \u5c42\u526a\u5230 24 \u5c42\uff1a</p> <pre><code>PP=1 \\\nTARGET_NUM_LAYERS=24 \\\nHF_MODEL_CKPT=&lt;pretrained_model_name_or_path&gt; \\\nMLM_MODEL_SAVE=Qwen3-8B-Pruned \\\n./prune.sh qwen/Qwen3-8B\n</code></pre> <p>\u63d0\u793a</p> <p>\u82e5\u6a21\u578b\u5c42\u6570\u65e0\u6cd5\u88ab\u6d41\u6c34\u7ebf\u5e76\u884c\u5ea6\u6574\u9664\uff0c\u53ef\u901a\u8fc7 <code>MLM_EXTRA_ARGS=\"--decoder-first-pipeline-num-layers &lt;X&gt; --decoder-last-pipeline-num-layers &lt;Y&gt;\"</code> \u8bbe\u7f6e\u4e0d\u5747\u5300 PP\u3002</p>"},{"location":"megatron/examples/post_training/modelopt/#_5","title":"\u9ad8\u7ea7\u7528\u6cd5","text":"<p>\u5f85\u8865\u5145\u3002</p>"},{"location":"megatron/examples/post_training/modelopt/ADVANCED/","title":"\u8fdb\u9636","text":"# TensorRT Model Optimizer \u96c6\u6210\u9ad8\u7ea7\u4e3b\u9898  [\u672c\u5730\u73af\u5883\u793a\u4f8b](#\u672c\u5730\u73af\u5883\u5feb\u901f\u5165\u95e8) | [\u914d\u7f6e\u8bf4\u660e](#\u914d\u7f6e\u8bf4\u660e) | [Slurm \u793a\u4f8b](ADVANCED.md#slurm-examples) | [\u9ad8\u7ea7\u4e3b\u9898](ADVANCED.md) | [Megatron-LM \u96c6\u6210](https://github.com/NVIDIA/Megatron-LM/tree/main/examples/post_training/modelopt)"},{"location":"megatron/examples/post_training/modelopt/speculative/","title":"\u63a8\u6d4b\u89e3\u7801","text":"# \u63a8\u6d4b\u5f0f\u89e3\u7801   <p>Medusa \u4e0e EAGLE \u7684\u8bad\u7ec3\u4e0e\u6a21\u578b\u5bfc\u51fa\u5747\u53d7\u652f\u6301\uff08\u9ad8\u901f\u89e3\u7801\u53ef\u901a\u8fc7 TensorRT-LLM \u5b9e\u73b0\uff09\u3002</p> <p>\u6bcf\u6b65\u90fd\u4f1a\u62a5\u544a Medusa \u5934\u90e8\u7684 top-1 \u7cbe\u5ea6\u3002\u6ce8\u610f\uff1a\u6b64\u5904\u7cbe\u5ea6\u5e76\u975e\u8bba\u6587\u4e2d\u7684\u63a5\u53d7\u7387\uff0c\u4f46\u7b2c\u4e00\u4e2a\u5934\u7684 top-1 \u80fd\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53cd\u6620\u8bad\u7ec3\u6536\u655b\u60c5\u51b5\u3002</p>"},{"location":"megatron/examples/post_training/modelopt/speculative/#_1","title":"\u8bad\u7ec3\u4e0e\u5bfc\u51fa\u6d41\u7a0b","text":"<p>\u5b9e\u8df5\u4e2d\uff0c\u5e94\u7ed3\u5408\u6743\u91cd/kv-cache \u91cf\u5316\u4ee5\u5728\u4e0d\u5f71\u54cd\u6a21\u578b\u8d28\u91cf\u7684\u524d\u63d0\u4e0b\u6700\u5927\u5316 TPS\u3002\u4e0b\u6587\u7ed9\u51fa\u5e26\u81ea\u84b8\u998f\u7684\u91cf\u5316\u611f\u77e5\u8bad\u7ec3\uff08QAT\uff09\u6d41\u7a0b\u3002</p>"},{"location":"megatron/examples/post_training/modelopt/speculative/#_2","title":"\u6a21\u578b\u8f6c\u6362","text":"<p>\u4e3a\u907f\u514d\u8d28\u91cf\u4e0b\u964d\uff0c\u6211\u4eec\u56fa\u5b9a\u57fa\u5ea7\u6a21\u578b\uff0c\u4ec5\u5c06\u8349\u7a3f\u6a21\u578b\u4f5c\u4e3a\u9644\u52a0\u7ec4\u4ef6\u3002\u5bf9\u4e8e Medusa\uff0c\u8bbe\u7f6e <code>--export-algorithm medusa</code> \u5e76\u63d0\u4f9b <code>--export-num-medusa-heads</code>\uff1b\u5bf9\u4e8e EAGLE\uff0c\u8bbe\u7f6e <code>--export-algorithm eagle</code> \u5e76\u63d0\u4f9b <code>--export-eagle-algorithm</code>\u3002\u8f6c\u6362\u540e\u7684 <code>${MLM_MODEL_SAVE}</code> \u5c06\u5305\u542b\u968f\u673a\u521d\u59cb\u5316\u7684\u8349\u7a3f\u6a21\u578b\u6743\u91cd\u3002</p> <pre><code>python examples/post_training/modelopt/convert_model.py \\\n    --export-algorithm eagle \\\n    --export-eagle-algorithm eagle3 \\\n    --load ${MLM_MODEL_CKPT} --save ${MLM_MODEL_SAVE} ${MLM_EXTRA_ARGS}\n</code></pre>"},{"location":"megatron/examples/post_training/modelopt/speculative/#_3","title":"\u5408\u6210\u6570\u636e\u751f\u6210","text":"<p>\u8349\u7a3f\u6a21\u578b\u9700\u8981\u62df\u5408\u57fa\u5ea7\u6a21\u578b\u7684\u8f93\u51fa\uff0c\u56e0\u6b64\u81ea\u751f\u6210\u6570\u636e\u5bf9\u63d0\u5347\u7cbe\u5ea6\u548c\u63a5\u53d7\u7387\u81f3\u5173\u91cd\u8981\u3002</p> <p>\u4e3a\u7b80\u5316\u6d41\u7a0b\uff0c\u6211\u4eec\u4f7f\u7528 <code>vllm serve --quantization modelopt</code> \u90e8\u7f72\u91cf\u5316\u6a21\u578b\uff0c\u5e76\u4ee5\u591a\u8f6e\u5bf9\u8bdd\u6570\u636e\u4f5c\u4e3a\u8f93\u5165\u751f\u6210\u56de\u7b54\u3002\u8be6\u7ec6\u6d41\u7a0b\u53c2\u8003 ModelOpt \u793a\u4f8b\uff08https://github.com/NVIDIA/TensorRT-Model-Optimizer/tree/main/speculative_decoding\uff09\u3002\u751f\u6210\u7ed3\u679c\u4ee5 OpenAI Chat Completion \u683c\u5f0f\u7684 jsonlines \u4fdd\u5b58\u3002</p>"},{"location":"megatron/examples/post_training/modelopt/speculative/#qat","title":"\u91cf\u5316\u611f\u77e5\u8bad\u7ec3\uff08QAT\uff09","text":"<p>QAT \u6d41\u7a0b\u5305\u62ec <code>bf16 \u8bad\u7ec3</code>\u3001<code>\u6a21\u62df\u91cf\u5316</code>\u3001<code>QAT \u5fae\u8c03</code>\u3002\u7531\u4e8e\u57fa\u5ea7\u6a21\u578b\u88ab\u51bb\u7ed3\uff0c\u521d\u59cb\u8bad\u7ec3\u4e3b\u8981\u7528\u4e8e\u4f30\u8ba1\u8349\u7a3f\u6a21\u578b\u6fc0\u6d3b/\u6743\u91cd\u8303\u56f4\u3002\u968f\u540e\u4fdd\u5b58\u5e26\u91cf\u5316\u56e0\u5b50\u7684\u68c0\u67e5\u70b9\uff0c\u5e76\u7ee7\u7eed\u5728\u5047\u91cf\u5316\u6a21\u5f0f\u4e0b\u5fae\u8c03\u76f4\u81f3\u6536\u655b\u3002</p> <pre><code>python examples/post_training/modelopt/finetune.py \\\n    --load ${MLM_MODEL_SAVE} --save ${MLM_MODEL_SAVE} ${MLM_EXTRA_ARGS}\npython examples/post_training/modelopt/quantize.py \\\n    --export-quant-cfg fp8 \\\n    --load ${MLM_MODEL_SAVE} --save ${MLM_QUANT_SAVE} ${MLM_EXTRA_ARGS}\npython examples/post_training/modelopt/finetune.py \\\n    --load ${MLM_QUANT_SAVE} --save ${MLM_QUANT_SAVE} ${MLM_EXTRA_ARGS}\n</code></pre>"},{"location":"megatron/examples/post_training/modelopt/speculative/#_4","title":"\u5bfc\u51fa\u68c0\u67e5\u70b9","text":"<p>\u6700\u540e\u5bfc\u51fa Medusa \u5934\u6216 EAGLE \u6a21\u5757\uff0c\u4ee5\u4fbf\u5728 TensorRT-LLM \u7b49\u63a8\u7406\u6846\u67b6\u4e2d\u90e8\u7f72\u3002</p> <pre><code>python examples/post_training/modelopt/export.py \\\n    --export-dir ${CKPT_DIR} \\\n    -export-extra-modules \\\n    --load ${MLM_QUANT_SAVE} ${MLM_EXTRA_ARGS}\n</code></pre>"},{"location":"megatron/examples/post_training/modelopt/speculative/#tensorrt-llm","title":"TensorRT-LLM \u90e8\u7f72","text":"<p>\u4f7f\u7528 TensorRT-LLM \u670d\u52a1\u5bfc\u51fa\u540e\u7684\u68c0\u67e5\u70b9\u793a\u4f8b\uff1a</p> <pre><code>trtllm-serve &lt;exported checkpoint&gt; --host 0.0.0.0 --port 8000 --backend pytorch --max_batch_size 32 --max_num_tokens 8192 --max_seq_len 8192 --tp_size 8 --extra_llm_api_options extra-llm-api-config.yml\n</code></pre> <p><code>extra-llm-api-config.yml</code> \u793a\u4f8b\uff1a</p> <pre><code>enable_attention_dp: false\ndisable_overlap_scheduler: true\nenable_autotuner: false\n\ncuda_graph_config:\n    max_batch_size: 1\n\nspeculative_config:\n    decoding_type: Eagle\n    max_draft_len: 3\n    speculative_model_dir: &lt;eagle3 checkpoint&gt;\n\nkv_cache_config:\n    enable_block_reuse: false\n</code></pre>"},{"location":"megatron/examples/retro/","title":"RETRO \u6a21\u578b","text":""},{"location":"megatron/examples/retro/#_1","title":"\u76ee\u5f55","text":"<ul> <li>1. \u8bad\u7ec3\u73af\u5883</li> <li>2. \u6570\u636e\u9884\u5904\u7406</li> <li>3. \u914d\u7f6e\u53c2\u6570</li> </ul>"},{"location":"megatron/examples/retro/#1","title":"1. \u8bad\u7ec3\u73af\u5883","text":"<p>\u82e5\u901a\u8fc7 Docker \u8fd0\u884c\u6a21\u578b\uff0c\u53ef\u6267\u884c\uff1a</p> <pre><code>PYTORCH_IMAGE=nvcr.io/nvidia/pytorch:23.09-py3\nCHECKPOINT_PATH=\"\" #&lt;Specify path&gt;\nTENSORBOARD_LOGS_PATH=\"\"#&lt;Specify path&gt;\n\ndocker run \\\n  --gpus=all \\\n  --ipc=host \\\n  --workdir /workspace/megatron-lm \\\n  -v /path/to/data:/path/to/data \\\n  -v /path/to/megatron-lm:/workspace/megatron-lm \\\n  megatron-lm nvcr.io/nvidia/pytorch:23.09-py3 \\\n  bash examples/retro/train_retro_2b_distributed.sh $CHECKPOINT_PATH $TENSORBOARD_LOGS_PATH\"\n</code></pre> <p>\u6ce8\u610f\uff1a\u6839\u636e\u5b9e\u9645\u73af\u5883\uff0c\u547d\u4ee4\u53ef\u80fd\u9700\u8981\u8c03\u6574\u3002</p> <p>Retro \u5728\u8bad\u7ec3\u5f00\u59cb\u524d\u4f1a\u5bf9\u9884\u8bad\u7ec3\u6570\u636e\u8fdb\u884c\u9884\u5904\u7406\u4e0e\u7f13\u5b58\uff0c\u90e8\u5206\u53c2\u6570\u4f1a\u81ea\u52a8\u4ece\u914d\u7f6e\u4e2d\u52a0\u8f7d\uff0c\u5305\u62ec\uff1a</p> <ul> <li><code>--data-path</code></li> <li><code>--data-cache-path</code></li> <li><code>--eval-interval</code></li> <li><code>--eval-iters</code></li> <li><code>--global-batch-size</code></li> <li><code>--tokenizer-type</code></li> <li><code>--tokenizer-model</code></li> <li><code>--vocab-file</code></li> <li><code>--merge-file</code></li> <li><code>--seed</code></li> <li><code>--seq-length</code></li> <li><code>--train-samples</code></li> </ul>"},{"location":"megatron/examples/retro/#2","title":"2. \u6570\u636e\u9884\u5904\u7406","text":"<p>Retro \u4f1a\u5148\u5efa\u7acb\u68c0\u7d22\u5e93\u5e76\u4e3a\u6bcf\u4e2a\u6837\u672c\u67e5\u8be2\u90bb\u5c45 ID\uff0c\u9884\u5904\u7406\u811a\u672c\u53ef\u53c2\u8003 <code>preprocess_data.sh</code>\u3002\u8be6\u7ec6\u6587\u6863\u89c1 tools/retro/README.md\u3002</p>"},{"location":"megatron/examples/retro/#3","title":"3. \u914d\u7f6e\u53c2\u6570","text":"<p>\u5f53\u524d\u793a\u4f8b\u5c55\u793a 20 \u4ebf\u53c2\u6570\u6a21\u578b\u3002\u5176\u4ed6\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a</p>"},{"location":"megatron/examples/retro/#857m","title":"857M","text":"<pre><code>--num-layers 24 \\\n--hidden-size 1024 \\\n--num-attention-heads 16 \\\n--seq-length 2048 \\\n--tensor-model-parallel-size 1 \\\n--pipeline-model-parallel-size 1 \\\n</code></pre>"},{"location":"megatron/examples/retro/#4b","title":"4B","text":"<pre><code>--num-layers 48 \\\n--hidden-size 2560 \\\n--num-attention-heads 32 \\\n--tensor-model-parallel-size 1 \\\n--pipeline-model-parallel-size 1 \\\n</code></pre>"},{"location":"megatron/examples/rl/","title":"Megatron \u4e2d\u7684\u5f3a\u5316\u5b66\u4e60","text":"<p>\u672c\u793a\u4f8b\u5c55\u793a\u4e86 Megatron-LM \u4e2d\u7684 GRPO \u5b9e\u73b0\u3002\u5b9e\u73b0\u7ec6\u8282\u53ef\u53c2\u8003 <code>train_rl.py</code> \u4e0e <code>megatron/rl/rl_utils.py</code>\uff0c\u73af\u5883\u914d\u7f6e\u4f4d\u4e8e <code>megatron.rl</code> \u6a21\u5757\u3002</p> <p>\u5b9e\u9a8c\u8bbe\u7f6e\uff1a\u5728 DAPO17k \u6570\u636e\u96c6\u4e0a\u8bad\u7ec3 Qwen 2.5 32B\uff0c\u5e76\u5728 AIME2024 \u4e0a\u8bc4\u4f30\u3002\u7ea6 300 \u6b65\u540e\u53ef\u5f97\u5230\u7ea6 0.7 \u7684 pass@32\uff0c\u5e73\u5747\u8bad\u7ec3\u5956\u52b1\u7ea6 0.6\u3002</p>"},{"location":"megatron/examples/rl/#_1","title":"\u73af\u5883","text":"<p>\u4f7f\u7528 <code>nvcr.io/nvidia/pytorch:25.06-py3</code> \u955c\u50cf\u8fd0\u884c <code>qwen2p5_32b_grpo.sh</code>\uff0c\u9700\u989d\u5916\u5b89\u88c5\uff1a</p> <pre><code>pip install flask-restful uvloop datasets evaluate\n</code></pre> <p>\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u5e76\u521b\u5efa\u76ee\u5f55\uff1a</p> <pre><code>export CUDA_DEVICE_MAX_CONNECTIONS=1\n\nCHECKPOINT=\"\" # &lt;Specify path to the base model checkpoint&gt;\nRUN_DIR=\"\" # &lt;Specify path for bookkeeping&gt;\nWANDB_PROJECT=\"\" # &lt;Specify&gt;\nWANDB_EXP_NAME=\"\" # &lt;Specify&gt;\n\nLOG_DIR=$RUN_DIR/logs\nDATA_CACHE_DIR=$RUN_DIR/data_cache\nCHECKPOINT_DIR=$RUN_DIR/checkpoints\nTB_DIR=$RUN_DIR/tensorboard\n</code></pre>"},{"location":"megatron/examples/rl/#_2","title":"\u8f6c\u6362\u68c0\u67e5\u70b9","text":"<p>\u901a\u8fc7 <code>megatron-lm/tools/checkpoint/convert.py</code> \u5c06 HuggingFace Qwen \u68c0\u67e5\u70b9 \u8f6c\u6362\u4e3a Megatron \u683c\u5f0f\uff1a</p> <pre><code>TP=8\nHF_FORMAT_DIR=&lt;PATH_TO_HF_FORMAT_DIR&gt;\nMEGATRON_FORMAT_DIR=&lt;PATH_TO_MEGATRON_FORMAT_DIR&gt;\nTOKENIZER_MODEL=HF_FORMAT_DIR\n\npython ./tools/checkpoint/convert.py \\\n    --bf16 \\\n    --model-type GPT \\\n    --loader llama_mistral \\\n    --saver core \\\n    --target-tensor-parallel-size ${TP} \\\n    --checkpoint-type hf \\\n    --load-dir ${HF_FORMAT_DIR} \\\n    --save-dir ${MEGATRON_FORMAT_DIR} \\\n    --tokenizer-model ${TOKENIZER_MODEL} \\\n    --model-size qwen2.5 \\\n    --loader-transformer-impl transformer_engine \\\n    --make-vocab-size-divisible-by 128 \\\n</code></pre>"},{"location":"megatron/examples/rl/#_3","title":"\u8fd0\u884c\u547d\u4ee4","text":"<p>\u6ce8\u610f\uff1a\u6839\u636e\u5b9e\u9645\u73af\u5883\uff0c\u811a\u672c\u53ef\u80fd\u9700\u8981\u8c03\u6574\u3002</p> <pre><code>COMMON_OPTIONS=\"\\\n    --tensor-model-parallel-size $TP  \\\n    --pipeline-model-parallel-size $PP  \\\n    --use-mcore-models \\\n    --transformer-impl transformer_engine \\\n    --bf16 \\\n    --te-rng-tracker \\\n    --cuda-graph-impl local \\\n    --inference-dynamic-batching-num-cuda-graphs 1 \\\n    --inference-dynamic-batching-buffer-size-gb 20 \\\n    --data-parallel-random-init \\\n    --attention-backend flash \\\n    --timing-log-level 1 \\\n    --log-timers-to-tensorboard \\\n    --initialize-socket-comms \\\n    \"\n\nGRPO_CLAMP_EPS_LOWER=0.2\nGRPO_CLAMP_EPS_UPPER=0.28\nMAX_INFERENCE_BS=32\nGRPO_GROUP_SIZE=16\nGRPO_PROMPTS_PER_STEP=64\nGRPO_ITERATIONS=1\nGRPO_KL_BETA=\"0.0\"\nTRAINING_BATCH_SIZE=1024\nMICRO_BATCH_SIZE=1\nMAX_SEQ_LENGTH=11999\n\nMODEL_OPTIONS=\"\\\n  --ckpt-format torch \\\n  --seq-length $MAX_SEQ_LENGTH \\\n  --inference-max-seq-length $MAX_SEQ_LENGTH \\\n  --inference-max-batch-size $MAX_INFERENCE_BS \\\n  --pretrained-checkpoint $CHECKPOINT \\\n  --untie-embeddings-and-output-weights \\\n  --disable-bias-linear \\\n  --add-qkv-bias \\\n  --normalization RMSNorm \\\n  --norm-epsilon 1e-5 \\\n  --group-query-attention \\\n  --num-query-groups 8 \\\n  --no-masked-softmax-fusion \\\n  --attention-softmax-in-fp32 \\\n  --attention-dropout 0.0 \\\n  --hidden-dropout 0.0 \\\n  --weight-decay 0.0 \\\n  --position-embedding-type rope \\\n  --rotary-percent 1.0 \\\n  --rotary-base 1000000 \\\n  --use-rotary-position-embeddings \\\n  --swiglu \\\n  --num-layers 64  \\\n  --hidden-size 5120  \\\n  --ffn-hidden-size 27648 \\\n  --num-attention-heads 40  \\\n  --max-position-embeddings 131072 \\\n  --tokenizer-type HuggingFaceTokenizer \\\n  --tokenizer-model unsloth/Qwen2.5-32B \\\n  --lr 1e-6 \\\n  --lr-warmup-samples 0 \\\n  --make-vocab-size-divisible-by 128 \\\n  --clip-grad 1.0 \\\n  --recompute-granularity selective \\\n  --recompute-activations \"\n\nENV_DEPENDENT=\"\\\n  --langrl-env-config \"examples/rl/environment_configs/dapo.yaml\" \\\n  --micro-batch-size $MICRO_BATCH_SIZE \\\n  --global-batch-size $TRAINING_BATCH_SIZE \\\n  --grpo-group-size $GRPO_GROUP_SIZE \\\n  --grpo-prompts-per-step $GRPO_PROMPTS_PER_STEP \\\n  --grpo-iterations $GRPO_ITERATIONS \\\n  --grpo-clamp-eps-lower $GRPO_CLAMP_EPS_LOWER \\\n  --grpo-clamp-eps-upper $GRPO_CLAMP_EPS_UPPER \\\n  --grpo-kl-beta $GRPO_KL_BETA \\\n  --env-config $ENV_CONFIG \"\n\n\ntorchrun \\\n    --nproc-per-node=8 \\\n    --nnodes=8 \\\n    train_rl.py \\\n    --mock-data \\\n    --distributed-timeout-minutes 60 \\\n    --train-samples 48828125 \\\n    --log-interval 10 \\\n    --log-progress  \\\n    --timing-log-option minmax \\\n    --log-params-norm \\\n    --log-num-zeros-in-grad \\\n    --log-throughput \\\n    --adam-beta1 0.9 \\\n    --adam-beta2 0.95 \\\n    --adam-eps 1e-8 \\\n    --no-create-attention-mask-in-dataloader \\\n    --accumulate-allreduce-grads-in-fp32 \\\n    --calculate-per-token-loss \\\n    --log-straggler \\\n    --disable-straggler-on-startup \\\n    --perform-rl-step \\\n    --use-distributed-optimizer \\\n    --straggler-minmax-count 16 \\\n    --eval-interval 20 \\\n    --rl-prompts-per-eval 32 \\\n    --tensorboard-log-interval 1 \\\n    --empty-unused-memory-level 2 \\\n    --data-cache-path ${DATA_CACHE_DIR} \\\n    --save $CHECKPOINT_DIR \\\n    --load $CHECKPOINT_DIR \\\n    --tensorboard-dir $TB_DIR \\\n    --langrl-inference-server-type inplace_megatron \\\n    --seed $SEED \\\n    --sequence-parallel \\\n    --finetune \\\n    --save-interval 20 \\\n    --wandb-project $WANDB_PROJECT \\\n    --wandb-exp-name $WANDB_EXP_NAME \\\n    ${MODEL_OPTIONS} \\\n    ${COMMON_OPTIONS} \\\n    ${ENV_DEPENDENT} $@\n</code></pre>"},{"location":"megatron/examples/rl/environments/countdown/","title":"Countdown Agentic \u73af\u5883","text":"<p><code>CountdownAgenticEnv</code> \u57fa\u4e8e https://github.com/Jiayi-Pan/TinyZero \u63d0\u51fa\u7684\u5012\u8ba1\u65f6\u4efb\u52a1\u3002\u6a21\u578b\u9700\u8981\u7ed9\u51fa\u4e00\u4e2a\u4ee3\u6570\u8868\u8fbe\u5f0f\uff0c\u7ec4\u5408\u7ed9\u5b9a\u7684\u6570\u5b57\u4ee5\u5f97\u5230\u76ee\u6807\u6570\u503c\u3002</p> <p>\u6570\u636e\u6765\u81ea\u4ee5\u4e0b HuggingFace \u6570\u636e\u96c6\uff0c\u8bc4\u4f30\u4ee3\u7801\uff08<code>countdown.py</code>\uff09\u4ea6\u7ee7\u627f\u81ea\u539f\u4ed3\u5e93\uff1a</p> <p>https://huggingface.co/datasets/Jiayi-Pan/Countdown-Tasks-3to4</p> <p>\u8be5\u73af\u5883\u5b9e\u73b0\u4e86 <code>megatron.rl.agent.reward_only_agent</code>\uff0c\u53ef\u4f5c\u4e3a\u53ea\u9700\u5956\u52b1\u8ba1\u7b97\u4efb\u52a1\u7684\u53c2\u8003\u6a21\u677f\u3002</p>"},{"location":"megatron/examples/t5/","title":"T5 \u6a21\u578b","text":""},{"location":"megatron/examples/t5/#_1","title":"\u76ee\u5f55","text":"<ul> <li>1. \u8bad\u7ec3\u73af\u5883</li> <li>2. \u914d\u7f6e\u53c2\u6570</li> <li>3. \u8bad\u7ec3\u7ed3\u679c</li> </ul>"},{"location":"megatron/examples/t5/#1","title":"1. \u8bad\u7ec3\u73af\u5883","text":"<p>\u5728 Slurm \u96c6\u7fa4\u4e0a\u8fd0\u884c\u793a\u4f8b\uff1a <pre><code>PYTORCH_IMAGE=nvcr.io/nvidia/pytorch:23.09-py3\nACCOUNT_NAME=\"\" \nPARTITION=\"\"\nJOB_NAME=\"\"\nNUM_NODES=1\nCHECKPOINT_PATH=\"\" #&lt;Specify path to checkpoint&gt;\nTENSORBOARD_LOGS_PATH=\"\"#&lt;Specify path to tensorboard log&gt;\nVOCAB_FILE=\"\" #&lt;Specify path to file&gt;/bert-large-cased-vocab.txt\nDATA_PATH=\"\" #&lt;Specify path and file prefix&gt;_text_document\n\nsrun -N $NUM_NODES --container-image $PYTORCH_IMAGE --container-mounts \"/path/to/data:/path/to/data,/path/to/megatron-lm:/workspace/megatron-lm\" --account $ACCOUNT -N 1 -J $JOB_NAME  -p $PARTITION --no-container-mount-home  -c \"\n  cd /workspace/megatron-lm\n  ./examples/t5/train_t5_220m_distributed.sh $CHECKPOINT_PATH $TENSORBOARD_LOGS_PATH $VOCAB_FILE $DATA_PATH\"\n</code></pre></p>"},{"location":"megatron/examples/t5/#2","title":"2. \u914d\u7f6e\u53c2\u6570","text":"<p>\u4ee5\u4e0b\u53c2\u6570\u5bf9\u5e94 T5 220M \u6a21\u578b\uff1a</p>"},{"location":"megatron/examples/t5/#220m","title":"220M","text":"<pre><code>--num-layers 12 \\\n--hidden-size 768 \\\n--num-attention-heads 12 \\\n--kv-channels 64 \\\n--ffn-hidden-size 3072 \\\n--encoder-seq-length 512 \\\n--decoder-seq-length 128 \\\n--max-position-embeddings 512 \\\n--tensor-model-parallel-size 1 \\\n--pipeline-model-parallel-size 1 \\\n</code></pre>"},{"location":"megatron/examples/t5/#3","title":"3. \u8bad\u7ec3\u7ed3\u679c","text":"<p>\u4e0b\u56fe\u5c55\u793a\u4e86 220M \u6a21\u578b\u5728 Pile \u6570\u636e\u96c6\u4e0a\u7684\u8bad\u7ec3\u66f2\u7ebf\u3002\u4f7f\u7528 32 \u5f20 GPU\uff0c\u6279\u5927\u5c0f 2048\uff0c\u8bad\u7ec3\u7ea6 4 \u5929\u3002</p> <p>\u5728 SQUAD \u6570\u636e\u96c6\u4e0a\u5fae\u8c03\u540e\uff0c\u9a8c\u8bc1\u96c6\u51c6\u786e\u7387\u7ea6\u4e3a 63.44%\u3002  </p> <p> </p>"},{"location":"megatron/megatron/core/","title":"Megatron Core","text":"<p>\u9762\u5411\u751f\u4ea7\u7684\u5b9a\u5236\u8bad\u7ec3\u6846\u67b6\u6784\u5efa\u5e93</p>"},{"location":"megatron/megatron/core/#_1","title":"\u5feb\u901f\u4e0a\u624b","text":"<pre><code># Install Megatron Core with required dependencies\npip install --no-build-isolation megatron-core[dev]\n\n# Distributed training example (2 GPUs, mock data)\ntorchrun --nproc_per_node=2 examples/run_simple_mcore_train_loop.py\n</code></pre>"},{"location":"megatron/megatron/core/#megatron-core_1","title":"\u4ec0\u4e48\u662f Megatron Core\uff1f","text":"<p>Megatron Core \u662f\u57fa\u4e8e PyTorch \u7684\u5f00\u6e90\u5e93\uff0c\u805a\u5408\u4e86 GPU \u4f18\u5316\u6280\u672f\u4e0e\u7cfb\u7edf\u7ea7\u524d\u6cbf\u4f18\u5316\uff0c\u5e76\u5c01\u88c5\u4e3a\u53ef\u7ec4\u5408\u3001\u6a21\u5757\u5316\u7684 API\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u4e0e\u7814\u7a76\u4eba\u5458\u5728 NVIDIA \u52a0\u901f\u8ba1\u7b97\u57fa\u7840\u8bbe\u65bd\u4e0a\u7075\u6d3b\u5730\u8bad\u7ec3\u81ea\u5b9a\u4e49 Transformer\u3002</p>"},{"location":"megatron/megatron/core/#_2","title":"\u6838\u5fc3\u7ec4\u4ef6","text":""},{"location":"megatron/megatron/core/#gpu","title":"GPU \u4f18\u5316\u6784\u5efa\u6a21\u5757","text":"<ul> <li>Transformer \u7ec4\u4ef6\uff1a\u6ce8\u610f\u529b\u673a\u5236\u3001MLP\u3001\u5d4c\u5165\u5c42</li> <li>\u5185\u5b58\u7ba1\u7406\uff1a\u6fc0\u6d3b\u91cd\u8ba1\u7b97</li> <li>FP8 \u7cbe\u5ea6\uff1a\u9488\u5bf9 NVIDIA Hopper\u3001Ada\u3001Blackwell GPU \u4f18\u5316</li> </ul>"},{"location":"megatron/megatron/core/#_3","title":"\u5e76\u884c\u7b56\u7565","text":"<ul> <li>\u5f20\u91cf\u5e76\u884c (TP)\uff1a\u6309\u5c42\u62c6\u5206\uff08\u7ed3\u5408\u5e8f\u5217\u5e76\u884c\u53ef\u8fdb\u4e00\u6b65\u964d\u4f4e\u6fc0\u6d3b\u5185\u5b58\uff09</li> <li>\u6d41\u6c34\u7ebf\u5e76\u884c (PP)\uff1a\u6309\u6df1\u5ea6\u62c6\u5206\u6a21\u578b\u5e76\u6d41\u6c34\u5316\u5fae\u6279\u5904\u7406</li> <li>\u4e0a\u4e0b\u6587\u5e76\u884c (CP)\uff1a\u5904\u7406\u957f\u5e8f\u5217\uff08\u6587\u6863\uff09</li> <li>\u4e13\u5bb6\u5e76\u884c (EP)\uff1a\u5728\u591a\u5757 GPU \u95f4\u62c6\u5206 MoE \u6a21\u578b\u7684\u4e13\u5bb6</li> </ul>"},{"location":"megatron/megatron/core/#_4","title":"\u793a\u4f8b\u4e0e\u6587\u6863","text":"<p>\u793a\u4f8b\uff1a - Simple Training Loop - \u57fa\u672c\u7528\u6cd5 - Multimodal Training - \u89c6\u89c9\u8bed\u8a00\u6a21\u578b - Mixture-of-Experts - MoE \u793a\u4f8b - Mamba Models - \u72b6\u6001\u7a7a\u95f4\u6a21\u578b</p> <p>\u6587\u6863\uff1a - API Guide - \u5b8c\u6574 API \u6587\u6863 - Developer Guide - \u5b9a\u5236\u6846\u67b6\u5f00\u53d1\u6307\u5357</p> <p>\u5b8c\u6574\u5b89\u88c5\u8bf4\u660e\u3001\u6027\u80fd\u57fa\u51c6\u4e0e\u751f\u6001\u4ecb\u7ecd\uff0c\u8bf7\u53c2\u9605\u4e3b\u4ed3\u5e93 README\u3002</p>"},{"location":"megatron/megatron/core/MSC_Integration/","title":"MSC \u96c6\u6210","text":""},{"location":"megatron/megatron/core/MSC_Integration/#multi-storage-client-msc","title":"Multi-Storage Client (MSC) \u96c6\u6210","text":"<p>Multi-Storage Client\uff08MSC\uff09\u63d0\u4f9b\u7edf\u4e00\u63a5\u53e3\uff0c\u53ef\u4ece\u6587\u4ef6\u7cfb\u7edf\uff08\u4f8b\u5982\u672c\u5730\u78c1\u76d8\u3001NFS\u3001Lustre\uff09\u4ee5\u53ca\u5bf9\u8c61\u5b58\u50a8\uff08\u5982 S3\u3001GCS\u3001OCI\u3001Azure\u3001AIStore\u3001SwiftStack\uff09\u8bfb\u53d6\u6570\u636e\u96c6\u5e76\u5b58\u50a8\u68c0\u67e5\u70b9\u3002</p> <p>\u672c\u6307\u5357\u5c06\u5e2e\u52a9\u4f60\u5b8c\u6210\u4ee5\u4e0b\u4efb\u52a1\uff1a</p> <ol> <li>\u5b89\u88c5\u5e76\u914d\u7f6e MSC</li> <li>\u76f4\u63a5\u4f7f\u7528\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u96c6\u8bad\u7ec3\u6a21\u578b</li> <li>\u5728\u5bf9\u8c61\u5b58\u50a8\u4e2d\u4fdd\u5b58\u4e0e\u52a0\u8f7d\u6a21\u578b\u68c0\u67e5\u70b9</li> </ol>"},{"location":"megatron/megatron/core/MSC_Integration/#_1","title":"\u5b89\u88c5","text":"<p>MSC \u5728 PyPI \u4e0a\u4ee5 <code>multi-storage-client</code> \u5305\u63d0\u4f9b\u3002</p> <p>\u57fa\u7840 client \u9ed8\u8ba4\u652f\u6301 POSIX \u6587\u4ef6\u7cfb\u7edf\uff1b\u9488\u5bf9\u6bcf\u79cd\u5b58\u50a8\u670d\u52a1\u8fd8\u63d0\u4f9b\u989d\u5916\u4f9d\u8d56\u5305\uff0c\u4ee5\u4fbf\u8bbf\u95ee\u5bf9\u5e94\u7684\u5bf9\u8c61\u5b58\u50a8\u3002</p> <pre><code># POSIX \u6587\u4ef6\u7cfb\u7edf\npip install multi-storage-client\n\n# AWS S3 \u53ca\u517c\u5bb9\u5bf9\u8c61\u5b58\u50a8\npip install \"multi-storage-client[boto3]\"\n\n# Google Cloud Storage (GCS)\npip install \"multi-storage-client[google-cloud-storage]\"\n</code></pre>"},{"location":"megatron/megatron/core/MSC_Integration/#_2","title":"\u914d\u7f6e\u6587\u4ef6","text":"<p>MSC \u4f7f\u7528 YAML \u914d\u7f6e\u6587\u4ef6\u5b9a\u4e49\u4e0e\u5bf9\u8c61\u5b58\u50a8\u7684\u8fde\u63a5\u65b9\u5f0f\u3002\u4f60\u53ef\u4ee5\u5728\u5176\u4e2d\u58f0\u660e\u4e00\u4e2a\u6216\u591a\u4e2a\u5b58\u50a8 profile\uff0c\u6bcf\u4e2a profile \u90fd\u5bf9\u5e94\u4e00\u4e2a\u5b58\u50a8\u540e\u7aef\u6216\u6876\u3002\u901a\u8fc7\u96c6\u4e2d\u7ba1\u7406\u914d\u7f6e\uff0c\u8bad\u7ec3\u811a\u672c\u65e0\u9700\u786c\u7f16\u7801\u5bc6\u94a5\u3001\u6876\u540d\u6216\u5176\u4ed6\u4f9b\u5e94\u5546\u53c2\u6570\uff0c\u5c31\u80fd\u4fdd\u6301\u6574\u6d01\u4e0e\u53ef\u79fb\u690d\u6027\u3002</p> <p>\u793a\u4f8b\u914d\u7f6e\u5982\u4e0b\uff1a</p> <pre><code>profiles:\n  my-profile:\n    storage_provider:\n      type: s3\n      options:\n        # base_path \u8bbe\u4e3a\u6876/\u5bb9\u5668\u540d\u79f0\n        base_path: my-bucket\n        region_name: us-west-2\n    # \u53ef\u9009\u51ed\u636e\uff08S3 \u4e5f\u53ef\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u83b7\u53d6\uff09\n    credentials_provider:\n      type: S3Credentials\n      options:\n        access_key: ${AWS_ACCESS_KEY}\n        secret_key: ${AWS_SECRET_KEY}\n\ncache:\n  size: 500G               # \u7f13\u5b58\u6700\u5927\u5bb9\u91cf\n  location: /tmp/msc_cache # \u7f13\u5b58\u76ee\u5f55\n</code></pre> <p>\u5728\u8fd0\u884c Megatron-LM \u811a\u672c\u524d\uff0c\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e\uff1a</p> <pre><code>export MSC_CONFIG=/path/to/msc_config.yaml\n</code></pre>"},{"location":"megatron/megatron/core/MSC_Integration/#msc-url","title":"MSC URL \u683c\u5f0f","text":"<p>MSC \u4f7f\u7528\u81ea\u5b9a\u4e49 URL \u65b9\u6848\u6765\u8bbf\u95ee\u4e0d\u540c\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6587\u4ef6\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>msc://&lt;profile-name&gt;/&lt;path/to/object&gt;\n</code></pre> <p>\u7ec4\u6210\u90e8\u5206\uff1a</p> <ul> <li><code>msc://</code>\uff1a\u8868\u793a\u8be5\u8def\u5f84\u7531 MSC \u89e3\u6790\u3002</li> <li><code>&lt;profile-name&gt;</code>\uff1a\u5bf9\u5e94 YAML \u914d\u7f6e\u4e2d <code>profiles</code> \u4e0b\u7684 profile \u540d\u79f0\uff0c\u5305\u542b\u5b58\u50a8\u7c7b\u578b\u3001\u51ed\u636e\u3001\u57fa\u7840\u8def\u5f84\u7b49\u4fe1\u606f\u3002</li> <li><code>&lt;path/to/object&gt;</code>\uff1a\u76f8\u5bf9\u4e8e profile \u4e2d <code>base_path</code> \u7684\u5bf9\u8c61\u6216\u76ee\u5f55\u8def\u5f84\uff0c\u7c7b\u4f3c\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84\uff0c\u4f46\u5728\u5e95\u5c42\u6620\u5c04\u5230\u5bf9\u8c61\u5b58\u50a8\u7684\u952e\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> <pre><code>profiles:\n  my-profile:\n    storage_provider:\n      type: s3\n      options:\n        base_path: my-bucket\n</code></pre> <p>\u4f7f\u7528\u4ee5\u4e0b MSC URL\uff1a</p> <pre><code>msc://my-profile/dataset/train/data.bin\n</code></pre> <p>MSC \u4f1a\u8bbf\u95ee S3 \u6876 <code>my-bucket</code> \u4e2d\u952e\u4e3a <code>dataset/train/data.bin</code> \u7684\u5bf9\u8c61\u3002\u5982\u679c\u6539\u4e3a GCS \u6216 OCI profile\uff0cMSC \u4f1a\u81ea\u52a8\u5207\u6362\u81f3\u5bf9\u5e94\u540e\u7aef\u903b\u8f91\uff0c\u800c\u5e94\u7528\u4ee3\u7801\u65e0\u9700\u6539\u52a8\u3002</p> <p>\u501f\u52a9\u8fd9\u4e00\u62bd\u8c61\uff0c\u8bad\u7ec3\u811a\u672c\u53ea\u9700\u5207\u6362\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 profile\uff0c\u5373\u53ef\u5728 AWS\u3001GCP\u3001Oracle\u3001Azure \u7b49\u73af\u5883\u4e4b\u95f4\u7edf\u4e00\u8bbf\u95ee\u8d44\u6e90\u3002</p>"},{"location":"megatron/megatron/core/MSC_Integration/#_3","title":"\u4f7f\u7528\u5bf9\u8c61\u5b58\u50a8\u8bad\u7ec3","text":"<p>\u5c06 MSC URL \u4e0e <code>--data-path</code> \u53c2\u6570\u7ed3\u5408\uff0c\u5373\u53ef\u8bbf\u95ee\u5b58\u50a8\u5728\u5bf9\u8c61\u5b58\u50a8\u4e2d\u7684\u6570\u636e\u96c6\u3002\u6b64\u5916\uff0cMegatron-LM \u5728\u8bfb\u53d6\u5bf9\u8c61\u5b58\u50a8\u65f6\u9700\u8981\u6307\u5b9a <code>--object-storage-cache-path</code>\uff0c\u7528\u4e8e\u7f13\u5b58 IndexedDataset \u7684 <code>.idx</code> \u6587\u4ef6\u3002</p> <pre><code>python pretrain_gpt.py                                      \\\n    --object-storage-cache-path /path/to/object_store_cache \\\n    --data-cache-path /path/to/data_cache                   \\\n    --data-path msc://my-profile/datasets/text_document     \\\n    --no-mmap-bin-files\n</code></pre> <p>\u6ce8\u610f\uff1a \u4f7f\u7528 MSC \u8bfb\u53d6\u5bf9\u8c61\u5b58\u50a8\u6570\u636e\u96c6\u65f6\uff0c\u4e0a\u8ff0\u56db\u4e2a\u53c2\u6570\u90fd\u5fc5\u4e0d\u53ef\u5c11\u3002</p>"},{"location":"megatron/megatron/core/MSC_Integration/#_4","title":"\u5728\u5bf9\u8c61\u5b58\u50a8\u4e2d\u4fdd\u5b58\u4e0e\u52a0\u8f7d\u68c0\u67e5\u70b9","text":"<p>\u901a\u8fc7\u5728 <code>--save</code> \u4e0e <code>--load</code> \u53c2\u6570\u4e2d\u4f7f\u7528 MSC URL\uff0c\u53ef\u76f4\u63a5\u5728\u5bf9\u8c61\u5b58\u50a8\u4e2d\u8bfb\u5199\u6a21\u578b\u68c0\u67e5\u70b9\uff1a</p> <pre><code>python pretrain_gpt.py                \\\n  --save msc://my-profile/checkpoints \\\n  --load msc://my-profile/checkpoints \\\n  --save-interval 1000\n</code></pre> <p>\u6ce8\u610f\uff1a \u5f53\u524d\u4ec5\u5728\u4f7f\u7528 MSC URL \u65f6\u652f\u6301 <code>torch_dist</code> \u68c0\u67e5\u70b9\u683c\u5f0f\u3002</p>"},{"location":"megatron/megatron/core/MSC_Integration/#msc","title":"\u7981\u7528 MSC","text":"<p>\u5b89\u88c5 <code>multi-storage-client</code> \u540e\uff0cMSC \u96c6\u6210\u529f\u80fd\u9ed8\u8ba4\u542f\u7528\u3002\u5373\u4f7f\u8def\u5f84\u4e3a\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\uff08\u4f8b\u5982 <code>--data-path</code>\u3001<code>--save</code> \u6216 <code>--load</code> \u4f20\u5165 <code>/filesystem_mountpoint/path</code>\uff09\uff0c\u4e5f\u4f1a\u901a\u8fc7 MSC \u5904\u7406\u3002\u8be5\u62bd\u8c61\u5c42\u5bf9\u5e38\u89c4\u8def\u5f84\u7684\u6027\u80fd\u5f71\u54cd\u6781\u5c0f\uff0c\u56e0\u6b64\u901a\u5e38\u65e0\u9700\u7981\u7528\u3002\u5982\u9700\u5173\u95ed\uff0c\u53ef\u4f7f\u7528 <code>--disable-msc</code>\uff1a</p> <pre><code>python pretrain_gpt.py --disable-msc\n</code></pre>"},{"location":"megatron/megatron/core/MSC_Integration/#_5","title":"\u6027\u80fd\u6ce8\u610f\u4e8b\u9879","text":"<p>\u4f7f\u7528 MSC \u8bbf\u95ee\u5bf9\u8c61\u5b58\u50a8\u65f6\u5e94\u5173\u6ce8\u4ee5\u4e0b\u6027\u80fd\u5f71\u54cd\uff1a</p> <p>\u8bfb\u53d6\u6570\u636e\u96c6</p> <p>\u76f4\u63a5\u4ece\u5bf9\u8c61\u5b58\u50a8\u8bfb\u53d6\u8bad\u7ec3\u6570\u636e\u901a\u5e38\u6bd4\u672c\u5730\u78c1\u76d8\u66f4\u6162\uff0c\u4e3b\u8981\u539f\u56e0\u5305\u62ec\uff1a * \u5bf9\u8c61\u5b58\u50a8\u5728\u5c0f\u5757\u6216\u968f\u673a\u8bfb\u53d6\u65f6\u5ef6\u8fdf\u8f83\u9ad8\uff08\u4f8b\u5982\u8bbf\u95ee <code>.bin</code> \u6837\u672c\uff09\u3002 * \u5bf9\u8c61\u5b58\u50a8\u4f7f\u7528\u57fa\u4e8e HTTP \u7684\u534f\u8bae\uff08\u5982 S3 GET + range \u8bf7\u6c42\uff09\uff0c\u901f\u5ea6\u4f4e\u4e8e\u672c\u5730\u6587\u4ef6\u7cfb\u7edf I/O\u3002</p> <p>\u4e3a\u5f25\u8865\u5ef6\u8fdf\uff0c\u5efa\u8bae\u901a\u8fc7 <code>--num-workers</code> \u53c2\u6570\u589e\u52a0\u6570\u636e\u52a0\u8f7d\u8fdb\u7a0b\u6570\uff1a</p> <pre><code>python pretrain_gpt.py --num-workers 8 ...\n</code></pre> <p>\u66f4\u591a worker \u80fd\u5b9e\u73b0\u66f4\u9ad8\u7684\u5e76\u884c\u8bfb\u53d6\uff0c\u4ee5\u63a9\u76d6 I/O \u5ef6\u8fdf\u5e76\u4fdd\u6301 GPU \u9ad8\u5229\u7528\u7387\u3002</p> <p>\u52a0\u8f7d\u68c0\u67e5\u70b9</p> <p>\u4f7f\u7528 MSC \u4ece\u5bf9\u8c61\u5b58\u50a8\u52a0\u8f7d\u68c0\u67e5\u70b9\u65f6\uff0c\u5e94\u5728 MSC \u914d\u7f6e\u4e2d\u542f\u7528\u7f13\u5b58\uff0c\u4ee5\u7f13\u5b58\u4e0b\u8f7d\u7684\u68c0\u67e5\u70b9\u6570\u636e\u4e0e\u5143\u6570\u636e\uff0c\u4ece\u800c\u663e\u8457\u7f29\u77ed\u52a0\u8f7d\u65f6\u95f4\u5e76\u964d\u4f4e\u5185\u5b58\u5360\u7528\u3002\u4f8b\u5982\uff1a</p> <pre><code>cache:\n  size: 500G\n  location: /tmp/msc_cache\n</code></pre> <p>\u5efa\u8bae\u5c06\u7f13\u5b58\u76ee\u5f55\u914d\u7f6e\u5728\u9ad8\u901f\u672c\u5730\u5b58\u50a8\uff08\u5982 NVMe SSD\uff09\u4e0a\u3002</p>"},{"location":"megatron/megatron/core/MSC_Integration/#_6","title":"\u66f4\u591a\u8d44\u6e90\u4e0e\u9ad8\u7ea7\u914d\u7f6e","text":"<p>\u5b8c\u6574\u914d\u7f6e\u9009\u9879\u8bf7\u53c2\u8003 MSC \u914d\u7f6e\u6587\u6863\uff0c\u5176\u4e2d\u5305\u542b\u5173\u4e8e\u652f\u6301\u7684\u5b58\u50a8\u63d0\u4f9b\u65b9\u3001\u51ed\u636e\u7ba1\u7406\u4e0e\u9ad8\u7ea7\u7f13\u5b58\u7b56\u7565\u7684\u8be6\u7ec6\u8bf4\u660e\u3002</p> <p>MSC \u652f\u6301\u91c7\u96c6\u53ef\u89c2\u6d4b\u6027\u6307\u6807\u4e0e\u8ffd\u8e2a\uff0c\u4ee5\u5e2e\u52a9\u76d1\u63a7\u3001\u8c03\u8bd5\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u6570\u636e\u8bbf\u95ee\u6a21\u5f0f\uff0c\u8bc6\u522b\u6570\u636e\u7ba1\u7ebf\u74f6\u9888\u3001\u4f18\u5316\u7f13\u5b58\u7b56\u7565\uff0c\u5e76\u5728\u4f7f\u7528\u5bf9\u8c61\u5b58\u50a8\u8bad\u7ec3\u5927\u89c4\u6a21\u6570\u636e\u96c6\u65f6\u76d1\u63a7\u8d44\u6e90\u5229\u7528\u7387\u3002\u66f4\u591a\u4fe1\u606f\u89c1 MSC \u53ef\u89c2\u6d4b\u6027\u6587\u6863\u3002</p> <p>MSC \u8fd8\u63d0\u4f9b\u5b9e\u9a8c\u6027\u7684 Rust \u5ba2\u6237\u7aef\uff0c\u53ef\u7ed5\u8fc7 Python GIL\uff0c\u5728\u591a\u7ebf\u7a0b I/O \u64cd\u4f5c\u4e2d\u663e\u8457\u63d0\u5347\u6027\u80fd\u3002\u8be5\u5ba2\u6237\u7aef\u652f\u6301 AWS S3\u3001SwiftStack \u4e0e Google Cloud Storage\uff0c\u5b9e\u73b0\u771f\u6b63\u7684\u5e76\u53d1\u6267\u884c\u3002\u82e5\u8981\u542f\u7528\uff0c\u5728\u5b58\u50a8\u63d0\u4f9b\u65b9\u914d\u7f6e\u4e2d\u6dfb\u52a0 <code>rust_client: {}</code>\u3002\u8be6\u60c5\u89c1 MSC Rust \u5ba2\u6237\u7aef\u6587\u6863\u3002</p>"},{"location":"megatron/megatron/core/QuickStart/","title":"\u5feb\u901f\u5f00\u59cb","text":""},{"location":"megatron/megatron/core/QuickStart/#_1","title":"\u5feb\u901f\u4e0a\u624b","text":"<p>\u672c\u6307\u5357\u5c06\u5e26\u4f60\u5728 Megatron Core \u4e2d\u5b8c\u6210\u4ee5\u4e0b\u4efb\u52a1\uff1a</p> <ul> <li>\u5728\u4e24\u5757 GPU \u4e0a\u521d\u59cb\u5316 Megatron Core\u3002</li> <li>\u6784\u5efa\u4e00\u4e2a\u5f20\u91cf\u5e76\u884c\u5ea6\u4e3a 2\u3001\u6d41\u6c34\u7ebf\u5e76\u884c\u5ea6\u4e3a 1 \u7684 GPT \u6a21\u578b\u3002</li> <li>\u4f7f\u7528 Megatron Core \u7684\u8c03\u5ea6\u8fd0\u884c 5 \u6b21\u8bad\u7ec3\u8fed\u4ee3\u3002</li> <li>\u4ee5\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\u683c\u5f0f\u4fdd\u5b58\u6a21\u578b\u3002</li> <li>\u52a0\u8f7d\u6a21\u578b\u3002</li> </ul> <p>\u6ce8\u610f\uff1a \u4ee5\u4e0b\u793a\u4f8b\u57fa\u4e8e Megatron Core 0.8.0 \u4e0e NGC PyTorch \u5bb9\u5668 24.02 \u7248\u672c\u6d4b\u8bd5\u3002</p>"},{"location":"megatron/megatron/core/QuickStart/#_2","title":"\u73af\u5883\u51c6\u5907","text":"<ol> <li>\u542f\u52a8\u65b0\u7684 Docker \u5bb9\u5668\u3002</li> <li>\u5728\u5bb9\u5668\u5185\u514b\u9686 Megatron \u4ed3\u5e93\uff1a</li> </ol> <pre><code>docker run --ipc=host --shm-size=512m --gpus 2 -it nvcr.io/nvidia/pytorch:24.02-py3\n\ngit clone https://github.com/NVIDIA/Megatron-LM.git\ncd Megatron-LM\npip install -U setuptools packaging\npip install --no-build-isolation .[dev]\n</code></pre> <pre><code>&lt;br&gt;\n</code></pre> <p>\u66f4\u591a\u5b89\u88c5\u65b9\u5f0f\u53ef\u53c2\u8003 Installation Guide\u3002</p>"},{"location":"megatron/megatron/core/QuickStart/#_3","title":"\u7f16\u5199\u9996\u4e2a\u8bad\u7ec3\u5faa\u73af","text":"<p>\u5728\u672c\u4efb\u52a1\u4e2d\uff0c\u4f60\u5c06\u5728\u4e24\u5757 GPU \u4e0a\u6309\u5f20\u91cf\u7ef4\u5ea6\u5207\u5206\uff08Tensor model parallel\uff09\u6784\u5efa\u4e00\u4e2a GPT \u6a21\u578b\uff0c\u5e76\u4f7f\u7528 Megatron Core \u4e2d\u7684 MockGPT \u6570\u636e\u96c6\u8f85\u52a9\u7c7b\u8fd0\u884c\u4e00\u6b21\u524d\u5411\u8ba1\u7b97\u3002</p> <p></p> <p>\u6ce8\u610f\uff1a \u4ee5\u4e0b\u6b65\u9aa4\u90fd\u5df2\u5305\u542b\u5728 run_simple_mcore_train_loop.py \u811a\u672c\u4e2d\u3002\u82e5\u8981\u76f4\u63a5\u8fd0\u884c\u811a\u672c\uff0c\u6267\u884c\uff1a</p> <pre><code>PYTHONPATH=$PYTHON_PATH:./megatron torchrun --nproc-per-node 2 examples/run_simple_mcore_train_loop.py\n</code></pre> <ol> <li> <p>\u521d\u59cb\u5316\u5206\u5e03\u5f0f\u8bad\u7ec3\u5e76\u8bbe\u7f6e\u6a21\u578b\u5e76\u884c\uff1a</p> <p>\u8c03\u7528\u4e0b\u9762\u7684\u5de5\u5177\u51fd\u6570\u53ef\u5b8c\u6210\u5206\u5e03\u5f0f\u73af\u5883\u521d\u59cb\u5316\uff1a</p> </li> </ol> <pre><code>import os\nimport torch\nfrom megatron.core import parallel_state\n\ndef initialize_distributed(tensor_model_parallel_size = 1, pipeline_model_parallel_size = 1):\n    # Initialize PyTorch distributed training\n    rank = int(os.environ['LOCAL_RANK'])\n    world_size = torch.cuda.device_count()\n    torch.cuda.set_device(rank)\n    torch.distributed.init_process_group(world_size=world_size, rank=rank)\n\n    # Initialize Megatron Core model parallelism\n    parallel_state.initialize_model_parallel(tensor_model_parallel_size, pipeline_model_parallel_size)\n</code></pre> <pre><code>&lt;br&gt;\n</code></pre> <ol> <li> <p>\u6784\u5efa GPT \u6a21\u578b\uff1a</p> <p>\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa GPT \u6a21\u578b\u3002\u66f4\u591a\u53ef\u9009\u914d\u7f6e\u53ef\u67e5\u770b transformer_config.py\u3002</p> </li> </ol> <pre><code>from megatron.core.transformer.transformer_config import TransformerConfig\nfrom megatron.core.models.gpt.gpt_model import GPTModel\nfrom megatron.core.models.gpt.gpt_layer_specs import get_gpt_layer_local_spec\n\ndef model_provider():\n    \"\"\"Build the model.\"\"\"\n\n    transformer_config = TransformerConfig(\n        num_layers=2, \n        hidden_size=12, \n        num_attention_heads=4, \n        use_cpu_initialization=True, \n        pipeline_dtype=torch.float32)\n\n    gpt_model = GPTModel(\n        config=transformer_config, \n        transformer_layer_spec=get_gpt_layer_local_spec(), \n        vocab_size=100, \n        max_sequence_length=64)\n\n    return gpt_model\n</code></pre> <pre><code>&lt;br&gt;\n</code></pre> <ol> <li> <p>\u51c6\u5907 GPT \u6a21\u62df\u6570\u636e\u96c6\uff1a</p> <p>\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u4f53\u9a8c\u6a21\u62df\u6570\u636e\u96c6\u5de5\u5177\u3002</p> <ul> <li>\u82e5\u9700\u4f7f\u7528\u81ea\u6709\u6570\u636e\u8bad\u7ec3\uff0c\u8bf7\u4f7f\u7528 gpt_dataset.py \u4e2d\u7684 <code>GPTDataset</code>\u3002</li> <li>\u66f4\u591a\u6570\u636e\u7ba1\u7ebf\u4fe1\u606f\u53c2\u89c1 data pipeline readme.md\u3002</li> </ul> </li> </ol> <pre><code>import torch\nfrom torch.utils.data import DataLoader\n\nfrom megatron.core.datasets.blended_megatron_dataset_builder import BlendedMegatronDatasetBuilder\nfrom megatron.core.datasets.gpt_dataset import GPTDatasetConfig, MockGPTDataset\nfrom megatron.training.tokenizer.tokenizer import _NullTokenizer\nfrom megatron.core.datasets.utils import compile_helpers\n\n_SEQUENCE_LENGTH = 64\n\ndef get_train_data_iterator():\n    if torch.distributed.is_available() and torch.distributed.is_initialized():\n        if torch.distributed.get_rank() == 0:\n            compile_helpers()\n        torch.distributed.barrier()\n    else:\n        compile_helpers()\n\n    config = GPTDatasetConfig(\n        random_seed=0,\n        sequence_length=_SEQUENCE_LENGTH,\n        reset_position_ids=False,\n        reset_attention_mask=False,\n        eod_mask_loss=False,\n        tokenizer=_NullTokenizer(vocab_size=_SEQUENCE_LENGTH),\n    )\n\n    datasets = BlendedMegatronDatasetBuilder(\n        MockGPTDataset, [1000, None, None], lambda: True, config\n    ).build()\n\n    train_dataloader = DataLoader(datasets[0], batch_size=8, shuffle=True)\n\n    train_iterator = iter(train_dataloader)\n\n    return train_iterator\n</code></pre> <pre><code>&lt;br&gt;\n</code></pre> <ol> <li> <p>\u6dfb\u52a0\u524d\u5411\u6b65\u9aa4\u51fd\u6570\uff1a</p> <p>Megatron Core \u4f7f\u7528 schedules.py \u9a71\u52a8\u6a21\u578b\u6267\u884c\u3002\u5b9a\u4e49\u4e00\u4e2a\u524d\u5411\u6b65\u9aa4\u51fd\u6570\uff0c\u63a5\u6536\u6570\u636e\u8fed\u4ee3\u5668\u4e0e\u6a21\u578b\uff0c\u8f93\u51fa\u5f20\u91cf\u53ca\u635f\u5931\u51fd\u6570\u3002</p> </li> </ol> <pre><code>from functools import partial\n\ndef forward_step_func(data_iterator, model):\n\n    def loss_func(loss_mask: torch.Tensor, output_tensor: torch.Tensor):\n\n        losses = output_tensor.float()\n        loss_mask = loss_mask.view(-1).float()\n        loss = torch.sum(losses.view(-1) * loss_mask) / loss_mask.sum()\n        # Aggregate loss across data-parallel ranks when applicable.\n        # In pipeline parallelism, only the last stage computes the loss.\n\n        return loss, {'lm loss': loss}\n\n    data = next(data_iterator)\n    tokens = data['tokens'].to(device)\n    attention_mask = data['attention_mask'].to(device)\n    position_ids = data['position_ids'].to(device)\n    labels = data['labels'].to(device)\n    loss_mask = data['loss_mask'].to(device)\n\n    output_tensor = model(tokens, position_ids, attention_mask,\n                        labels=labels)\n\n    return output_tensor, partial(loss_func, loss_mask)   \n</code></pre> <pre><code>&lt;br&gt;\n</code></pre> <ol> <li> <p>\u5b9a\u4e49\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\u7684\u4fdd\u5b58\u4e0e\u52a0\u8f7d\uff1a</p> <p>Megatron Core \u4f7f\u7528\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\u4fdd\u5b58\u4e0e\u52a0\u8f7d\u6a21\u578b\uff0c\u8fd9\u6837\u53ef\u4ee5\u5728\u52a0\u8f7d\u65f6\u5207\u6362\u5e76\u884c\u914d\u7f6e\u3002\u4f8b\u5982\uff0c\u5f20\u91cf\u5e76\u884c\u5ea6\u4e3a 2 \u7684\u6a21\u578b\u53ef\u4ee5\u5728\u52a0\u8f7d\u540e\u8f6c\u6362\u4e3a\u5f20\u91cf\u5e76\u884c\u5ea6\u4e3a 4 \u7684\u6a21\u578b\u3002</p> </li> </ol> <pre><code>from megatron.core import dist_checkpointing\n\ndef save_distributed_checkpoint(checkpoint_path, gpt_model):\n    sharded_state_dict = gpt_model.sharded_state_dict(prefix='')\n    dist_checkpointing.save(sharded_state_dict=sharded_state_dict, checkpoint_dir=checkpoint_path)\n\ndef load_distributed_checkpoint(checkpoint_path, gpt_model):\n    sharded_state_dict=gpt_model.sharded_state_dict(prefix='')\n    checkpoint = dist_checkpointing.load(sharded_state_dict=sharded_state_dict, checkpoint_dir=checkpoint_path)\n    gpt_model.load_state_dict(checkpoint)\n    return gpt_model\n</code></pre> <pre><code>&lt;br&gt;\n</code></pre> <ol> <li> <p>\u6dfb\u52a0\u4e3b\u51fd\u6570\uff1a</p> <p>\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u662f\u811a\u672c\u6240\u9700\u7684\u4e3b\u51fd\u6570\uff0c\u4f1a\u8fd0\u884c\u6a21\u578b 5 \u4e2a\u8fed\u4ee3\uff0c\u968f\u540e\u4fdd\u5b58\u5e76\u91cd\u65b0\u52a0\u8f7d\u6a21\u578b\u3002</p> </li> </ol> <pre><code>from pathlib import Path\nfrom torch.optim import Adam\nfrom megatron.core.pipeline_parallel.schedules import get_forward_backward_func\nfrom megatron.core.tensor_parallel.random import model_parallel_cuda_manual_seed\n\nif __name__ == \"__main__\":\n    initialize_distributed(tensor_model_parallel_size=2, pipeline_model_parallel_size=1)\n    model_parallel_cuda_manual_seed(123)\n\n    gpt_model = model_provider()\n    device = torch.device(\"cuda\")\n    gpt_model.to(device)\n\n    optim = Adam(gpt_model.parameters())\n\n    train_iterator = get_train_data_iterator()\n\n    forward_backward_func = get_forward_backward_func()\n\n    # Run five iterations\n    for _ in range(5):\n        optim.zero_grad()\n\n        losses_reduced = forward_backward_func(\n            forward_step_func=forward_step_func,\n            data_iterator=train_iterator,\n            model=gpt_model,\n            num_microbatches=1,\n            seq_length=64,\n            micro_batch_size=8,\n            decoder_seq_length=64,\n            forward_only=False)\n\n        optim.step()\n\n        print(f'Losses reduced :  {losses_reduced}')\n\n    # Save the model\n    save_distributed_checkpoint(gpt_model=gpt_model, checkpoint_path='/workspace/ckpt')\n\n    # Load the model\n    gpt_model = load_distributed_checkpoint(gpt_model=gpt_model, checkpoint_path='/workspace/ckpt')\n    gpt_model.to(device)\n    print('Successfully loaded the model')  \n</code></pre> <pre><code>&lt;br&gt;\n</code></pre>"},{"location":"megatron/megatron/core/QuickStart/#_4","title":"\u67e5\u9605\u66f4\u591a\u9ad8\u7ea7\u793a\u4f8b","text":"<p>\u82e5\u9700\u4e86\u89e3\u66f4\u590d\u6742\u7684\u8bad\u7ec3\u5faa\u73af\uff0c\u8bf7\u53c2\u8003 pretrain_gpt.py\u3002\u8be5\u811a\u672c\u6db5\u76d6\u66f4\u5168\u9762\u7684 Megatron Core \u529f\u80fd\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u6d41\u6c34\u7ebf\u5e76\u884c</li> <li>\u4e0a\u4e0b\u6587\u5e76\u884c</li> <li>RoPE \u5d4c\u5165</li> <li>Mixture of Experts (MoE)</li> </ul>"},{"location":"megatron/megatron/core/README_STRAGGLER/","title":"Straggler \u68c0\u6d4b","text":""},{"location":"megatron/megatron/core/README_STRAGGLER/#tp-stragglerdetector","title":"\u9488\u5bf9 TP \u7ec4\u7684 StragglerDetector","text":"<p><code>megatron/core/utils.py</code> \u4e2d\u7684 <code>StragglerDetector</code> \u7c7b\u652f\u6301\u4e0a\u4e0b\u6587\u7ba1\u7406\uff0c\u53ef\u7528\u4e8e\u57fa\u4e8e TP \u7ec4\u5404 rank \u7684 RTT \u627e\u51fa\u6162\u8282\u70b9\u3002\u540c\u65f6\u8fd8\u80fd\u91c7\u96c6 GPU \u7684\u529f\u8017\u3001\u6e29\u5ea6\u3001\u5229\u7528\u7387\u7b49\u6307\u6807\uff0c\u65b9\u4fbf\u5b9a\u4f4d\u5230\u5177\u4f53 GPU\uff08\u4f8b\u5982\u7531\u786c\u4ef6\u5f02\u5e38\u5bfc\u81f4\u7684\u62d6\u6162\uff09\u3002 \u8be5\u7c7b\u8fd8\u652f\u6301\u9488\u5bf9\u540c\u4e00\u8fed\u4ee3\u7684\u4e0d\u540c\u6b65\u9aa4\u8bb0\u5f55\u65f6\u95f4\u4e8b\u4ef6\uff0c\u6bcf\u4e2a rank \u4f1a\u6301\u7eed\u6536\u96c6\u6570\u636e\u3002\u5f53\u5728\u65e5\u5fd7\u95f4\u9694\u5185\u8c03\u7528 reporter \u65f6\uff0c\u4f1a\u8ba1\u7b97\u5404\u6307\u6807\u5728\u6240\u6709 rank \u4e0a\u7684\u6700\u5c0f\u503c\u4e0e\u6700\u5927\u503c\uff0c\u5e76\u6309\u5982\u4e0b\u683c\u5f0f\u8bb0\u5f55\uff1a</p> <pre><code> 0: INFO:megatron.core.utils:[2024-03-14 23:07:56] | MnRtt/Rnk: 3453.08ms/8 | MxRtt/Rnk: 3468.20ms/0 | MnPwr/Rnk: 601796W/8 | MxPwr/Rnk: 683801W/18 | MnTmp/Rnk: 52C/0 | MxTmp/Rnk: 65C/21 | MnUtl/Rnk: 97%/8 | MxUtl/Rnk: 100%/6 | MnClk/Rnk: 1950MHz/28 | MxClk/Rnk: 1980MHz/0 | MnDRtt/Rnk: 14.27ms/23 | MxDRtt/Rnk: 34.65ms/3 | MnEtpt/Rnk: 296.02TF/0 | MxEtpt/Rnk: 297.32TF/8\n</code></pre>"},{"location":"megatron/megatron/core/README_STRAGGLER/#_1","title":"\u6307\u6807\u8bf4\u660e","text":"<p>\u6bcf\u4e2a\u6307\u6807\u524d\u7f00 <code>Mn</code> \u6216 <code>Mx</code> \u5206\u522b\u8868\u793a\u6700\u5c0f\u503c\u6216\u6700\u5927\u503c\uff0c\u540e\u7f00\u4e3a\u5bf9\u5e94\u7684 rank\u3002\u6307\u6807\u5728\u65e5\u5fd7\u95f4\u9694\u5185\u6c42\u5e73\u5747\uff0c\u683c\u5f0f\u4e3a\u201c\u6307\u6807\u540d\u79f0/Rank\u201d\u3002\u5e38\u89c1\u6307\u6807\u5982\u4e0b\uff1a</p> <ul> <li>Rtt\uff1aRoundTrip Time\uff08\u672c\u6b21\u8fed\u4ee3\u4e2d\u6240\u6709\u88ab\u8ddf\u8e2a\u64cd\u4f5c\u7684\u8017\u65f6\uff09</li> <li>Pwr\uff1aGPU \u529f\u8017</li> <li>Tmp\uff1aGPU \u6e29\u5ea6</li> <li>Utl\uff1aGPU \u5229\u7528\u7387</li> <li>Clk\uff1aGPU \u65f6\u949f\u9891\u7387</li> <li>DRtt\uff1a<code>get_batch</code> \u5ef6\u8fdf</li> <li>Etpt\uff1a\u4f30\u7b97\u541e\u5410\u91cf\u3002\u7531\u5b9e\u9645\u8ba1\u7b97\u541e\u5410\u91cf\u9664\u4ee5 Rtt \u5f97\u5230\u3002\u7531\u4e8e\u672a\u7edf\u8ba1\u53cd\u5411\u4f20\u64ad\u8017\u65f6\uff0c\u989d\u5916\u9664\u4ee5 3 \u4f5c\u4e3a\u4f30\u7b97\u503c\u3002</li> </ul>"},{"location":"megatron/megatron/core/README_STRAGGLER/#_2","title":"\u547d\u4ee4\u884c\u542f\u7528","text":"<p>\u4f7f\u7528 StragglerDetector \u65f6\u9700\u4f20\u5165 <code>--log-straggler</code>\u3002\u53e6\u5916\u8fd8\u6709\u4e24\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u9ed8\u8ba4\u5173\u95ed\uff1a - <code>--disable-straggler-on-startup</code>\uff1a\u542f\u52a8\u65f6\u662f\u5426\u4fdd\u6301\u7981\u7528\uff0c\u9ed8\u8ba4\u4e3a\u542f\u7528\u3002 - <code>--straggler-ctrlr-port</code>\uff1a\u901a\u8fc7\u5411 <code>curl Rank0Host:port</code> \u53d1\u9001\u8bf7\u6c42\u5373\u53ef\u5207\u6362\u542f\u7528/\u7981\u7528\uff0c\u9ed8\u8ba4\u7aef\u53e3 65535\u3002 - <code>--straggler-minmax-count</code>\uff1a\u82e5\u8bbe\u7f6e\u4e3a\u5927\u4e8e 1 \u7684\u503c N\uff0c\u4f1a\u989d\u5916\u8f93\u51fa N \u4e2a\u6700\u4f4e\u4e0e\u6700\u9ad8 Etpt/Rank\uff0c\u793a\u4f8b\uff1a <pre><code> 0: INFO:megatron.core.utils:^^^^ Bottom 4 Ranks with lowest  Etpt(TF): 296.02/0, 296.17/2, 296.23/1, 296.23/4,\n 0: INFO:megatron.core.utils:^^^^ Top    4 Ranks with highest Etpt(TF): 297.28/15, 297.28/11, 297.32/12, 297.32/8,\n</code></pre></p>"},{"location":"megatron/megatron/core/README_STRAGGLER/#stragglerdetector","title":"StragglerDetector \u7f16\u7a0b\u65b9\u5f0f","text":"<p><code>StragglerDetector</code> \u652f\u6301\u4e0a\u4e0b\u6587\u534f\u8bae\uff0c\u4e14\u5b9e\u73b0\u4e3a Singleton\u3002 - \u521d\u59cb\u5316\uff1a</p> <pre><code># Import and construct the detector where it will be used\nfrom megatron.core.utils import StragglerDetector\nstimer = StragglerDetector()\n</code></pre> <ul> <li>\u6bcf\u4e2a rank \u9700\u8981\u8fdb\u884c\u4e00\u6b21\u914d\u7f6e\uff1a</li> </ul> <pre><code># Call once before the training loop starts\nstimer.configure(world, rank, enabled=True, port=65545)\n\n# Arguments:\n#     world   : Total number of ranks\n#     rank    : Rank for this trainer\n#     mmcnt   : (Optional) Number of ranks to show for min/max Etpt\n#     amp     : (Optional) Set to 3.0 if only forward timers are used\n#     port    : (Optional) Control port, typically only for rank 0\n#     prefill : (Optional) Number of events to pre-populate\n#     enabled : (Optional) Whether collection is enabled on startup\n</code></pre> <ul> <li>\u8bb0\u5f55\u65f6\u95f4\uff1a</li> </ul> <pre><code># Wrap sections that need timing\nwith stimer:\n    do_operation()\n\n# Special case for timing get_batch\nwith stimer(bdata=True):\n     input,... = get_batch(iterator,...)\n</code></pre> <ul> <li>\u5728\u4e3b\u8bad\u7ec3\u5faa\u73af\u4e2d\u8bb0\u5f55\u65e5\u5fd7\uff1a</li> </ul> <pre><code># Example logging inside the training loop\ntotal_flops = 0.0\niteration = 0\n# Main training loop\nwhile training:\n     iteration += 1\n     do_step()\n      total_flops += get_computed_flops()\n      if iteration % log_interval:\n         stimer.report(total_flops, log_interval)\n         total_flops = 0.0\n</code></pre>"},{"location":"megatron/megatron/core/datasets/readme/","title":"\u6570\u636e\u7ba1\u7ebf","text":""},{"location":"megatron/megatron/core/datasets/readme/#_2","title":"\u6570\u636e\u9884\u5904\u7406","text":"<p>\u6570\u636e\u9884\u5904\u7406\u56f4\u7ed5\u4ee5\u4e0b\u7c7b\u6784\u5efa\uff1a</p> <ol> <li><code>IndexedDatasetBuilder</code></li> <li><code>IndexedDataset</code></li> </ol> <p>\u76ee\u524d\u7aef\u5230\u7aef\u7684\u6570\u636e\u9884\u5904\u7406\u6d41\u7a0b\u4ecd\u9700\u7528\u6237\u81ea\u884c\u5b9e\u73b0\uff0c\u66f4\u591a\u7ec6\u8282\u53ef\u53c2\u9605\u7c7b\u7684\u6587\u6863\u5b57\u7b26\u4e32\u3002</p>"},{"location":"megatron/megatron/core/datasets/readme/#indexeddatasetbuilder","title":"IndexedDatasetBuilder","text":"<p><code>IndexedDatasetBuilder</code> \u8d1f\u8d23\u6784\u5efa\u5e76\u5408\u5e76\u591a\u4e2a <code>IndexedDataset</code> \u5b9e\u4f8b\u3002</p>"},{"location":"megatron/megatron/core/datasets/readme/#indexeddataset","title":"IndexedDataset","text":"<p><code>IndexedDataset</code> \u662f Megatron Core \u4e2d\u6700\u4f4e\u5c42\u7684\u6570\u636e\u63a5\u53e3\u3002\u5185\u90e8\u5f15\u7528\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a\u6570\u636e\u6587\u4ef6\uff08<code>.bin</code>\uff09\u5b58\u50a8\u6587\u6863/\u5e8f\u5217\u5185\u5bb9\uff0c\u7d22\u5f15\u6587\u4ef6\uff08<code>.idx</code>\uff09\u5b58\u50a8\u6587\u6863/\u5e8f\u5217\u7684\u5143\u6570\u636e\u3002</p> <p>\u7d22\u5f15\u6587\u4ef6\u9996\u5148\u4fdd\u5b58\u6570\u636e\u96c6\u7ea7\u522b\u7684\u5143\u4fe1\u606f\uff1a - \u7d22\u5f15\u5934\uff08\u7528\u4e8e\u517c\u5bb9\u65e7\u7248\u672c\uff09 - \u7d22\u5f15\u7248\u672c\uff08\u7528\u4e8e\u517c\u5bb9\u65e7\u7248\u672c\uff09 - \u5199\u5165\u6570\u636e\u6587\u4ef6\u65f6\u4f7f\u7528\u7684\u6570\u636e\u7c7b\u578b\u7f16\u7801 - \u6570\u636e\u96c6\u4e2d\u7684\u5e8f\u5217\u6570\u91cf - \u6570\u636e\u96c6\u4e2d\u7684\u6587\u6863\u6570\u91cf</p> <p>\u968f\u540e\u8bb0\u5f55\u6587\u6863\u7ea7\u4e0e\u5e8f\u5217\u7ea7\u5143\u6570\u636e\uff1a - \u6309\u987a\u5e8f\u8bb0\u5f55\u6bcf\u4e2a\u5e8f\u5217\u5305\u542b\u7684\u5143\u7d20\u6570\u91cf - \u6309\u987a\u5e8f\u8bb0\u5f55\u6bcf\u4e2a\u5e8f\u5217\u7684\u5b57\u8282\u504f\u79fb\u91cf - \u6309\u987a\u5e8f\u8bb0\u5f55\u6bcf\u4e2a\u6587\u6863\u5bf9\u5e94\u7684\u8fde\u7eed\u5e8f\u5217\u533a\u95f4 <code>[...)</code> - \u6309\u987a\u5e8f\u8bb0\u5f55\u6bcf\u4e2a\u5e8f\u5217\u7684\u6a21\u5f0f\uff08\u591a\u6a21\u6001\u573a\u666f\u4e0b\u4f7f\u7528\uff09</p>"},{"location":"megatron/megatron/core/datasets/readme/#_3","title":"\u6570\u636e\u52a0\u8f7d\uff1a\u6784\u5efa\u6d41\u7a0b","text":"<p>\u6784\u5efa\u6570\u636e\u52a0\u8f7d\u5668\u662f\u4e00\u4e2a\u5177\u5907\u5206\u5e03\u5f0f\u611f\u77e5\u7684\u8fc7\u7a0b\uff0c\u6d89\u53ca\u4ee5\u4e0b\u7c7b\uff1a</p> <ol> <li><code>BlendedMegatronDatasetConfig</code></li> <li><code>BlendedMegatronDatasetBuilder</code></li> <li><code>IndexedDataset</code></li> <li><code>MegatronDataset</code></li> <li><code>BlendedDataset</code></li> </ol> <p>\u8be6\u7ec6\u4fe1\u606f\u53ef\u53c2\u9605\u7c7b\u6587\u6863\u3002</p>"},{"location":"megatron/megatron/core/datasets/readme/#blendedmegatrondatasetconfig","title":"BlendedMegatronDatasetConfig\uff08\u53ef\u6269\u5c55\uff09","text":"<p><code>BlendedMegatronDatasetConfig</code> \u7528\u4e8e\u53c2\u6570\u5316 <code>BlendedMegatronDatasetBuilder</code>\uff0c\u8fdb\u800c\u9a71\u52a8 <code>MegatronDataset</code> \u4e0e <code>BlendedDataset</code>\u3002</p> <p>\u4e0d\u540c\u7684\u8bad\u7ec3/\u63a8\u7406\u573a\u666f\u9700\u8981\u6269\u5c55\u8be5\u914d\u7f6e\u7c7b\uff0c\u4f8b\u5982 <code>GPTDatasetConfig</code>\u3002</p>"},{"location":"megatron/megatron/core/datasets/readme/#blendedmegatrondatasetbuilder","title":"BlendedMegatronDatasetBuilder","text":"<p><code>BlendedMegatronDatasetBuilder</code> \u7528\u4e8e\u6784\u5efa Megatron Core \u4e2d\u6700\u9ad8\u5c42\u7684\u6570\u636e\u63a5\u53e3\u3002</p> <p>\u6ce8\u610f\uff1a \u6240\u6709 rank \u90fd\u9700\u8981\u5c1d\u8bd5\u901a\u8fc7 <code>BlendedMegatronDatasetBuilder</code> \u6784\u5efa\u6570\u636e\u96c6\uff0c\u5426\u5219\u7a0b\u5e8f\u4f1a\u963b\u585e\u3002\u5177\u4f53\u7531\u54ea\u4e9b rank \u5b9e\u9645\u6267\u884c\u6784\u5efa\uff0c\u53ef\u901a\u8fc7 <code>BlendedMegatronDatasetConfig</code> \u63a7\u5236\u3002</p>"},{"location":"megatron/megatron/core/datasets/readme/#indexeddataset_1","title":"IndexedDataset","text":"<p><code>IndexedDataset</code> \u662f Megatron Core \u6700\u5e95\u5c42\u7684\u6570\u636e\u63a5\u53e3\uff0c\u5728\u6784\u5efa\u9ad8\u5c42\u6570\u636e\u63a5\u53e3\u4e4b\u524d\uff0c\u5fc5\u987b\u786e\u4fdd\u5bf9\u5e94\u7684 <code>.bin/.idx</code> \u6587\u4ef6\u5df2\u5b58\u5728\u3002</p>"},{"location":"megatron/megatron/core/datasets/readme/#megatrondataset","title":"MegatronDataset\uff08\u53ef\u6269\u5c55\uff09","text":"<p><code>MegatronDataset</code> \u62bd\u8c61\u7c7b\u662f\u57fa\u4e8e <code>IndexedDataset</code> \u7684\u9ad8\u5c42\u6570\u636e\u63a5\u53e3\u3002\u4e0d\u540c\u573a\u666f\u53ef\u6269\u5c55\u51fa\u5404\u81ea\u7684\u6570\u636e\u96c6\uff0c\u4f8b\u5982 <code>GPTDataset</code>\u3002</p>"},{"location":"megatron/megatron/core/datasets/readme/#blendeddataset","title":"BlendedDataset","text":"<p><code>BlendedDataset</code> \u57fa\u4e8e <code>MegatronDataset</code> \u63d0\u4f9b\u66f4\u9ad8\u5c42\u7684\u6570\u636e\u63a5\u53e3\u3002\u5f53\u9700\u8981\u5c06\u591a\u4e2a\u6570\u636e\u5206\u5e03\uff08\u5373\u591a\u4e2a <code>MegatronDataset</code> \u5b9e\u4f8b\uff09\u6309\u7167\u4e00\u5b9a\u6bd4\u4f8b\u6df7\u5408\u5230\u67d0\u4e2a\u6570\u636e\u5212\u5206\u65f6\u624d\u9700\u4f7f\u7528\uff0c\u53ef\u901a\u8fc7 <code>BlendedMegatronDatasetConfig</code> \u63a7\u5236\u6df7\u5408\u6743\u91cd\u3002</p>"},{"location":"megatron/megatron/core/datasets/readme/#_4","title":"\u6570\u636e\u52a0\u8f7d\uff1a\u5b9e\u73b0\u7ec6\u8282","text":""},{"location":"megatron/megatron/core/datasets/readme/#gptdataset","title":"GPTDataset","text":"<p><code>GPTDataset</code> \u7531\u4ee5\u4e0b\u53d8\u91cf\u53c2\u6570\u5316\uff1a\u5e95\u5c42 <code>IndexedDataset</code> \u5b9e\u4f8b <code>indexed_dataset</code>\uff0c\u5212\u5206\u7d22\u5f15 <code>indexed_indices</code>\uff08\u8bad\u7ec3/\u9a8c\u8bc1/\u6d4b\u8bd5\u6240\u7528\u8fde\u7eed\u6587\u6863\u6216\u5e8f\u5217\u7d22\u5f15\u5b50\u96c6\uff09\uff0c\u6837\u672c\u6570\u91cf <code>N</code>\uff0c\u5e8f\u5217\u957f\u5ea6 <code>S</code>\uff0c\u968f\u673a\u79cd\u5b50 <code>R</code>\u3002</p> <p><code>GPTDataset</code> \u521b\u5efa\u4e09\u4e2a\u7d22\u5f15\u4ee5\u652f\u6301\u5feb\u901f\u67e5\u627e\uff1a\uff081\uff09\u6587\u6863\u7d22\u5f15\u3001\uff082\uff09\u6837\u672c\u7d22\u5f15\u3001\uff083\uff09\u4e71\u5e8f\u7d22\u5f15\u3002</p> <ol> <li>\u6587\u6863\u7d22\u5f15 Do_idx \u662f\u957f\u5ea6\u4e3a <code>E * |indexed_indices|</code> \u7684\u4e00\u7ef4\u6570\u7ec4\uff08<code>E</code> \u4e3a\u6700\u5c0f\u6ee1\u8db3 <code>E * |indexed_indices| &gt;= N</code> \u7684 epoch \u6570\uff09\uff0c\u7528\u4e8e\u6620\u5c04\u5230\u6587\u6863\u7d22\u5f15\uff0c\u6309\u7167\u968f\u673a\u79cd\u5b50 <code>R</code> \u8fdb\u884c\u4e71\u5e8f\u3002</li> </ol> <pre><code>\u5df2\u77e5\uff1a\n\nN = 15\nindexed_indices = [5, 6, 7, 8, 9]\nE = 3\n\n\u5219\u793a\u4f8b\uff1a\n\nDo_idx = [8, 8, 9, 6, 7, 5, 8, 5, 6, 6, 5, 9, 7, 7, 9]\n</code></pre> <ol> <li>\u6837\u672c\u7d22\u5f15 Sa_idx \u662f\u5f62\u72b6\u4e3a <code>[N + 1, 2]</code> \u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7528\u4e8e\u5c06\u6837\u672c\u7f16\u53f7 j \u6620\u5c04\u5230\u4e8c\u5143\u7ec4\uff08i, Do_idx[ i ] \u7684\u504f\u79fb\uff09\u3002\u7b2c j \u884c\u548c\u7b2c j + 1 \u884c\u5206\u522b\u8868\u793a\u7b2c j \u4e2a\u6837\u672c\u7684\u5de6\u53f3\u8fb9\u754c\u3002</li> </ol> <pre><code>\u5df2\u77e5\uff1a\n\nS = 1024\n\n\u5219\u793a\u4f8b\uff1a\n\nSa_idx[0] = (0, 0)\nSa_idx[1] = (0, 1024)       =&gt; Do_idx[0] \u957f\u5ea6\u5927\u4e8e S\nSa_idx[2] = (1, 512)        =&gt; Do_idx[0] \u957f\u5ea6\u4e3a 1536\nSa_idx[3] = (2, 0)          =&gt; Do_idx[1] \u957f\u5ea6\u4e3a 1536\nSa_idx[4] = (5, 300)        =&gt; Do_idx[2:5] \u76f8\u6bd4 Do_idx[0:2] \u66f4\u77ed\nSa_idx[5] = (6, 24)         =&gt; Do_idx[5] \u957f\u5ea6\u4e3a 1300\n</code></pre> <ol> <li>\u4e71\u5e8f\u7d22\u5f15 Sh_idx \u662f\u957f\u5ea6\u4e3a <code>N</code> \u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u5c06 k \u6620\u5c04\u5230 j\uff0c\u540c\u6837\u6309\u7167 <code>R</code> \u8fdb\u884c\u4e71\u5e8f\u3002</li> </ol> <pre><code>\u5df2\u77e5\uff1a\n\nN = 10\n\n\u5219\u793a\u4f8b\uff1a\n\nSh_idx = [4, 0, 2, 6, 1, 9, 5, 8, 7, 3]\n</code></pre> <p>\u82e5\u8981\u67e5\u8be2\u7b2c k \u4e2a\u6837\u672c\uff1a</p> <ul> <li>\u4f7f\u7528\u4e71\u5e8f\u7d22\u5f15\u83b7\u53d6\u6837\u672c\u7d22\u5f15\u4f4d\u7f6e j\uff1a</li> </ul> <p><pre><code>j = Sh_idx[k]\n</code></pre> - \u4f7f\u7528\u6837\u672c\u7d22\u5f15\u5f97\u5230\u5bf9\u5e94\u7684\u6587\u6863\u7d22\u5f15\u8fb9\u754c\u4e0e\u504f\u79fb\uff1a</p> <p><pre><code>i, offset = Sa_idx[j]\ni_next, offset_next = Sa_idx[j + 1]\n</code></pre> - \u6839\u636e\u6587\u6863\u7d22\u5f15\u4ece\u8fde\u7eed\u7684\u6587\u6863\u4e2d\u53d6\u51fa\u957f\u5ea6\u4e3a <code>S</code> \u7684 token\uff1a</p> <pre><code>sample = []\nsample += indexed_dataset[Do_idx[i]][offset:]\nif i != i_next:\n    sample += indexed_dataset[Do_idx[i + 1:i_next]]\nsample += indexed_dataset[Do_idx[i_next]][:offset_next]\n</code></pre> <p>\u4e3a\u52a0\u901f\u521d\u59cb\u5316\uff0c\u5404\u7d22\u5f15\u4f1a\u5728\u5355\u4e2a\u8fdb\u7a0b\u987a\u5e8f\u6784\u5efa\u4e0e\u7f13\u5b58\uff0c\u5176\u4f59\u8fdb\u7a0b\u5e76\u884c\u8bfb\u53d6\u7f13\u5b58\u3002\u7f13\u5b58\u6587\u4ef6\u540d\u57fa\u4e8e <code>MegatronDataset.__init__</code> \u5185\u751f\u6210\u7684\u54c8\u5e0c\u503c\u3002</p>"},{"location":"megatron/megatron/core/datasets/readme/#blendeddataset_1","title":"BlendedDataset","text":"<p><code>BlendedDataset</code> \u7531\u4ee5\u4e0b\u53d8\u91cf\u53c2\u6570\u5316\uff1a\u5e95\u5c42 <code>MegatronDataset</code> \u5217\u8868 <code>D</code>\uff0c\u5bf9\u5e94\u6743\u91cd <code>W</code>\uff08\u6bcf\u4e2a\u6570\u636e\u96c6\u4e00\u4e2a\uff09\uff0c\u4ee5\u53ca\u6df7\u5408\u540e\u7684\u76ee\u6807\u5927\u5c0f <code>S</code>\u3002\u91c7\u6837\u65f6\u4f1a\u6309\u6743\u91cd\u6bd4\u4f8b\u4ece\u5404\u6570\u636e\u96c6\u62bd\u6837\uff0c\u76f4\u5230\u5f97\u5230\u6307\u5b9a\u89c4\u6a21\u7684\u6df7\u5408\u6570\u636e\u96c6\u3002\u6bcf\u6b21\u91c7\u6837\u90fd\u4f1a\u9009\u62e9\u5f53\u524d\u91c7\u6837\u8bef\u5dee\u6700\u5927\u7684\u90a3\u4e2a\u6570\u636e\u96c6\u53d6\u6837\u3002</p> <p><code>BlendedDataset</code> \u4f7f\u7528\u4e24\u7c7b\u7d22\u5f15\uff1a\uff081\uff09\u6570\u636e\u96c6\u7d22\u5f15\u3001\uff082\uff09\u6570\u636e\u96c6\u6837\u672c\u7d22\u5f15\u3002</p> <ol> <li>\u6570\u636e\u96c6\u7d22\u5f15 Da_idx \u662f\u957f\u5ea6\u4e3a <code>S</code> \u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u5c06 i \u6620\u5c04\u5230\u6570\u636e\u96c6\u7f16\u53f7\u3002</li> </ol> <pre><code>\u5df2\u77e5\n\nD = [d0, d1, d2]\nW = [1/2, 1/4, 1/4]\nS = 4\n\n\u5219\u793a\u4f8b\uff1a\n\nDa_idx = [0, 1, 2, 0]\n</code></pre> <ol> <li>\u6570\u636e\u96c6\u6837\u672c\u7d22\u5f15 Sa_idx \u662f\u957f\u5ea6\u4e3a <code>S</code> \u7684\u4e00\u7ef4\u6570\u7ec4\uff0c\u5c06 i \u6620\u5c04\u5230 <code>Da_idx[i]</code> \u5bf9\u5e94\u6570\u636e\u96c6\u4e2d\u7684\u6837\u672c\u7f16\u53f7\u3002</li> </ol> <pre><code>\u5df2\u77e5\n\nDa_idx = [0, 1, 2, 0]\n\n\u5219\u793a\u4f8b\uff1a\n\nSa_idx = [0, 0, 0, 1]\n</code></pre> <p>\u82e5\u8981\u67e5\u8be2\u7b2c k \u4e2a\u6837\u672c\uff1a</p> <ul> <li>\u4f7f\u7528\u6570\u636e\u96c6\u7d22\u5f15\u786e\u5b9a\u6570\u636e\u96c6\uff0c\u5e76\u4f7f\u7528\u6570\u636e\u96c6\u6837\u672c\u7d22\u5f15\u83b7\u53d6\u6837\u672c\uff1a</li> </ul> <pre><code>sample = D[Da_idx[k]][Sa_idx[k]]\n</code></pre> <p>\u540c\u6837\u5730\uff0c\u8fd9\u4e9b\u7d22\u5f15\u4f1a\u5728\u5355\u4e2a\u8fdb\u7a0b\u4e2d\u987a\u5e8f\u6784\u5efa\u4e0e\u7f13\u5b58\uff0c\u518d\u7531\u5176\u4ed6\u8fdb\u7a0b\u5e76\u884c\u52a0\u8f7d\u3002\u7f13\u5b58\u6587\u4ef6\u540d\u57fa\u4e8e <code>BlendedDataset.__init__</code> \u4e2d\u751f\u6210\u7684\u54c8\u5e0c\u503c\u3002</p>"},{"location":"megatron/megatron/core/distributed/","title":"\u5206\u5e03\u5f0f FSDP","text":""},{"location":"megatron/megatron/core/distributed/#pytorch-fsdp2","title":"\u5982\u4f55\u4f7f\u7528 PyTorch FSDP2\uff1f","text":"<p>\u542f\u7528 Torch FSDP2 \u65f6\u8bf7\u6dfb\u52a0\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <pre><code>--use-torch-fsdp2\n--no-gradient-accumulation-fusion\n--ckpt-format torch_dist\n</code></pre> <p>\u9700\u8981\u6ce8\u610f\uff0c\u4e3a\u4fdd\u8bc1 FSDP \u901a\u4fe1\u4e0e\u4e3b\u6d41\u4e0a\u7684\u8ba1\u7b97\u53ef\u4ee5\u5b8c\u5168\u5e76\u884c\u5316\uff0c\u4e0d\u5e94\u8bbe\u7f6e <code>CUDA_MAX_CONNECTIONS=1</code>\u3002</p>"},{"location":"megatron/megatron/core/distributed/fsdp/src/","title":"\u81ea\u5b9a\u4e49 FSDP \u7ec4\u4ef6","text":"# Megatron-FSDP     [![Python 3.10+](https://img.shields.io/badge/python-3.10+-blue.svg)](https://www.python.org/downloads/release/python-3100/)"},{"location":"megatron/megatron/core/distributed/fsdp/src/#megatron-fsdp","title":"Megatron-FSDP \u7b80\u4ecb","text":"<p>Megatron-FSDP \u662f NVIDIA \u5f00\u53d1\u7684 PyTorch \u6269\u5c55\uff0c\u63d0\u4f9b Fully Sharded Data Parallelism (FSDP) \u7684\u9ad8\u6027\u80fd\u5b9e\u73b0\u3002\u5b83\u4e0e\u4e3b\u6d41\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u548c\u5e76\u884c\u5e93\u9ad8\u5ea6\u517c\u5bb9\uff0c\u53ef\u5e2e\u52a9\u4f60\u8f7b\u677e\u5728\u591a GPU \u4e0e\u591a\u8282\u70b9\u73af\u5883\u4e2d\u6269\u5c55 PyTorch \u6a21\u578b\u3002</p> <p>\u4e0e FSDP2 \u76f8\u6bd4\uff0cMegatron-FSDP \u53ef\u5e26\u6765\u6700\u9ad8\u7ea6 25% \u7684\u901f\u5ea6\u63d0\u5347\u4e0e 23% \u7684\u663e\u5b58\u8282\u7701\u3002</p>"},{"location":"megatron/megatron/core/distributed/fsdp/src/#_1","title":"\u517c\u5bb9\u6027","text":"<ul> <li>PyTorch DTensor</li> <li>Megatron Core</li> <li>TransformerEngine</li> </ul>"},{"location":"megatron/megatron/core/distributed/fsdp/src/#_2","title":"\u529f\u80fd\u4eae\u70b9","text":"<ul> <li>\u6613\u4e8e\u96c6\u6210\uff1a\u901a\u8fc7\u7b80\u5355\u7684 <code>fully_shard</code> \u51fd\u6570\u5373\u53ef\u5feb\u901f\u5b8c\u6210\u6a21\u578b\u5e76\u884c\u5316</li> <li>\u9ad8\u6027\u80fd\uff1a\u9488\u5bf9 NVIDIA GPU \u8fdb\u884c\u4e86\u6027\u80fd\u4f18\u5316\u4e0e\u9ad8\u6548\u5185\u5b58\u7ba1\u7406</li> <li>\u8de8\u6846\u67b6\u4e92\u64cd\u4f5c\uff1a\u53ef\u65e0\u7f1d\u914d\u5408 PyTorch\u3001Huggingface Transformers\u3001Megatron-LM\u3001Megatron Bridge \u4e0e TransformerEngine</li> <li>\u9ad8\u6269\u5c55\u6027\uff1a\u540c\u65f6\u652f\u6301\u5355\u673a\u591a\u5361\u4e0e\u591a\u8282\u70b9\u5206\u5e03\u5f0f\u8bad\u7ec3</li> <li>\u7075\u6d3b\u914d\u7f6e\uff1a\u53ef\u81ea\u5b9a\u4e49\u5206\u7247\u7b56\u7565\u4e0e\u901a\u4fe1\u8fdb\u7a0b\u7ec4</li> </ul>"},{"location":"megatron/megatron/core/distributed/fsdp/src/#_3","title":"\u6027\u80fd\u4f18\u5316","text":"<ul> <li>\u9ad8\u7ea7\u5206\u6876\u673a\u5236\uff1a\u57fa\u4e8e\u6570\u636e\u7c7b\u578b\u7684\u5206\u6876\u7b56\u7565\uff0c\u964d\u4f4e\u901a\u4fe1\u96c6\u4f53\u64cd\u4f5c\u7684\u5f00\u9500</li> <li>\u7f13\u51b2\u533a\u7ba1\u7406\uff1a\u901a\u8fc7 <code>ParamAndGradBuffer</code> \u7c7b\u91cd\u6392\u53c2\u6570\u4e0e\u4e3b\u68af\u5ea6\u7684\u5b58\u50a8\uff0c\u5b9e\u73b0\u96f6\u62f7\u8d1d\u901a\u4fe1</li> <li>\u901a\u4fe1\u4e0e\u8ba1\u7b97\u91cd\u53e0\uff1a\u6539\u8fdb\u53c2\u6570 all-gather \u4e0e\u68af\u5ea6 reduce-scatter \u7684\u91cd\u53e0\u6548\u7387</li> <li>\u57fa\u4e8e\u7528\u6237\u7f13\u51b2\u6ce8\u518c\u7684 NCCL \u901a\u4fe1\uff1a\u5c06 NCCL \u901a\u4fe1\u5378\u8f7d\u5230 NVL/IB SHARP\uff0c\u964d\u4f4e\u901a\u4fe1\u65f6\u5bf9 GPU SM \u7684\u5360\u7528</li> <li>\u7ed3\u5408 Transformer Engine \u7684 FP8 \u6df7\u5408\u7cbe\u5ea6\uff1a\u4e0e Transformer Engine \u517c\u5bb9\uff0c\u652f\u6301\u9ad8\u6548\u7684 FP8 \u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3</li> <li>\u7ed3\u5408 Transformer Engine \u7684\u68af\u5ea6\u7d2f\u79ef\u878d\u5408\uff1a\u5728\u53cd\u5411\u4f20\u64ad\u4e2d\u79fb\u9664\u663e\u5f0f\u7684\u68af\u5ea6\u62f7\u8d1d\u5230\u901a\u4fe1\u7f13\u51b2\u533a</li> </ul>"},{"location":"megatron/megatron/core/distributed/fsdp/src/#_4","title":"\u5b89\u88c5","text":"<pre><code>pip install megatron-fsdp\n</code></pre> <ul> <li>PyPI: https://pypi.org/project/megatron-fsdp/</li> <li>\u6e90\u7801\u4ed3\u5e93: https://github.com/NVIDIA/Megatron-LM/tree/main/megatron/core/distributed/fsdp/src</li> </ul>"},{"location":"megatron/megatron/core/distributed/fsdp/src/#_5","title":"\u5feb\u901f\u4e0a\u624b","text":""},{"location":"megatron/megatron/core/distributed/fsdp/src/#_6","title":"\u57fa\u672c\u7528\u6cd5","text":"<p>\u53ea\u9700\u51e0\u884c\u4ee3\u7801\u5373\u53ef\u8ba9\u4f60\u7684 PyTorch \u6a21\u578b\u5177\u5907 Fully Sharded Data Parallelism \u80fd\u529b\uff1a</p> <pre><code>import torch\nfrom megatron_fsdp import fully_shard\n\n# Your existing model and optimizer\nmodel = YourModel()\noptimizer = torch.optim.Adam(model.parameters(), lr=1e-3)\n\n# Enable FSDP with Megatron-FSDP.\n# Alternatively, you can use fully_shard_model() followed by fully_shard_optimizer()!\nmodel, optimizer = fully_shard(\n    model,\n    optimizer,\n    device_mesh=device_mesh, # Your global DeviceMesh.\n    dp_shard_dim=\"dp_shard_cp\", # Sharding across the flattened DP-CP mesh.\n    fsdp_unit_modules=[YourTransformerBlock], # Modules to shard.\n)\n\n# Your model is now ready for distributed training!\n</code></pre>"},{"location":"megatron/megatron/core/distributed/fsdp/src/#fsdp-2","title":"\u4e0e FSDP-2 \u7684\u5bf9\u6bd4","text":"<p><code>fully_shard</code> / <code>fully_shard_model</code> / <code>fully_shard_optimizer</code> \u63d0\u4f9b\u4e86\u8fdb\u5165 <code>MegatronFSDP</code> \u7684\u7b80\u5355\u5165\u53e3\u3002</p> <ul> <li>\u65e0\u9700\u5bf9\u6240\u6709\u5b50\u6a21\u5757\u9010\u4e2a\u8c03\u7528 <code>fully_shard</code>\uff0c\u53ea\u8981\u4f20\u5165\u9700\u8981\u5206\u7247\u7684\u5b50\u6a21\u5757\u7c7b\u6216\u5bfc\u5165\u8def\u5f84\u5373\u53ef\u3002</li> <li>\u901a\u8fc7\u4e00\u884c\u914d\u7f6e\u5373\u53ef\u5207\u6362\u5206\u7247\u65b9\u6848\uff0c\u540c\u65f6\u5b8c\u6574\u4fdd\u7559\u539f\u8bad\u7ec3\u5faa\u73af\u7684\u7ed3\u6784\u4e0e\u8bed\u4e49\u3002</li> </ul> <p>\u4e0e FSDP2 \u7684\u7528\u6cd5\u5bf9\u6bd4\uff1a</p> <pre><code>import torch\nfrom torch.distributed.fsdp import fully_shard\n\n# Your existing model and optimizer\nmodel = YourModel()\noptimizer = torch.optim.Adam(model.parameters(), lr=1e-3)\n\n# Enable FSDP with FSDP2\nfor module in model.modules():\n    if isinstance(module, YourTransformerBlock): # Sub-Modules to shard\n        fully_shard(module)\nfully_shard(model)\n\n# Your model is now ready for distributed training!\n</code></pre>"},{"location":"megatron/megatron/core/distributed/fsdp/src/#fully_shard-megatronfsdp-api-","title":"<code>fully_shard</code> / <code>MegatronFSDP</code> API - \u9ad8\u7ea7\u529f\u80fd","text":"<pre><code>import torch\nfrom megatron_fsdp import fully_shard\n\n# Initialize DeviceMesh.\ndevice_mesh = torch.distributed.device_mesh.init_device_mesh(\n    \"cuda\",\n    mesh_shape=(dp_outer_size, dp_shard_size, cp_size, tp_size),\n    mesh_dim_names=(\"dp_outer\", \"dp_shard\", \"cp\", \"tp\"),\n)\n# Only relevant when using HSDP, where we also need the full DP group for data parallelism,\n# This sub-mesh can be provided to distributed samplers or dataloaders.\ndevice_mesh[(\"dp_outer\", \"dp_shard\")]._flatten(\"dp\")\n# Only required if using CP. Otherwise, just pass dp_shard to FSDP.\ndevice_mesh[(\"dp_shard\", \"cp\")]._flatten(\"dp_shard_cp\")\n# Only required if using HSDP. Otherwise, don't pass hybrid_fsdp_group.\ndevice_mesh[(\"dp_outer\", \"dp_shard\", \"cp\")]._flatten(\"hsdp\")\nhsdp_group = device_mesh[\"hsdp\"].get_group()\n\n# Fully-shards your model and distributes your optimizer.\nmodel, optimizer = fully_shard(\n    # PyTorch (Root) Module\n    model,\n    # PyTorch Optimizer\n    optimizer,\n    # Device Mesh\n    device_mesh=device_mesh\n    # Always required for FSDP or HSDP.\n    dp_shard_dim=\"dp_shard_cp\",\n    # Set this required argument to use HSDP instead of FSDP. Otherwise, set this to None.\n    dp_outer_dim=\"dp_outer\",\n    # Only required for TP-sensitive models (i.e. Megatron-LM / TransformerEngine) or when using DTensor-based TP.\n    # Otherwise, set this to None.\n    tp_dim=\"tp\",\n    # Only required when using HSDP. Otherwise, set this to None.\n    hybrid_fsdp_group=hsdp_group,\n    # FSDP Sharding Strategy: no_shard (0) / optim (1) / optim_grads (2) / optim_grads_params (3)\n    zero_dp_strategy=3,\n    outer_dp_sharding_strategy=1,\n    # Sharded Modules\n    fsdp_unit_modules=[...],\n    # Initialize the model on devices in shards to avoid OOM. Requires device(\"meta\")-init for model.\n    init_model_with_meta_device=True,\n    # Reduce gradients in FP32.\n    grad_reduce_in_fp32=False,\n    # Store distributed optimization state in FP32.\n    preserve_fp32_weights=True,\n    # Sync parameters and gradients each step. Allows for gradient transformations after backward pass,\n    # and synchronizes parameters and gradients across HSDP groups, but deactivates compute-communication\n    # overlap going into the subsequent training step.\n    sync_model_each_microbatch=True,\n    # Preprocess state dict for DCP checkpointing. Required for Torch Distributed Checkpoint.\n    preproc_state_dict_for_dcp_ckpt=True,\n)\n\n# Save model and optimizer state.\ntorch.distributed.checkpoint.save({\"model\": model.state_dict(), \"optimizer\": optimizer.state_dict()}, checkpoint_id=str(CKPT_DIR))\n\n# Load model and optimizer state.\nckpt_state_dict = {\"model\": model.state_dict(), \"optimizer\": optimizer.state_dict()}\ntorch.distributed.checkpoint.load(state_dict=ckpt_state_dict, checkpoint_id=str(CKPT_DIR))\n# model.load_state_dict(strict=False) is only necessary to ignore TE FP8 extra state\n# that is missing from the DCP checkpoint but present in TEBaseModule.\n# Megatron-FSDP does not support TE FP8 extra state checkpointing with DCP.\nmodel.load_state_dict(ckpt_state_dict[\"model\"], strict=False)\noptimizer.load_state_dict(ckpt_state_dict[\"optimizer\"])\n</code></pre> <ul> <li><code>zero_dp_strategy</code>\uff08\u4ee5\u53ca <code>outer_dp_sharding_strategy</code>\uff09\u7528\u4e8e\u914d\u7f6e\u4e0d\u540c\u7ea7\u522b\u7684\u96f6\u5197\u4f59\u6570\u636e\u5e76\u884c\u7b56\u7565\uff0c\u8be6\u60c5\u53ef\u53c2\u9605 ZeRO (Zero Redundancy Optimizer)\u3002\u5b83\u901a\u8fc7\u5728 DP <code>ProcessGroup</code> \u5185\u5206\u5e03\u5f0f\u5b58\u653e\u6a21\u578b\u53c2\u6570\u3001\u68af\u5ea6\u4e0e\u4f18\u5316\u5668\u72b6\u6001\uff0c\u5e76\u5728\u9700\u8981\u65f6\u6309\u9700\u805a\u5408\uff0c\u6765\u964d\u4f4e\u8bad\u7ec3\u9636\u6bb5\u7684 CUDA \u663e\u5b58\u5360\u7528\u3002\u5206\u7247\u8d8a\u6fc0\u8fdb\u901a\u4fe1\u5f00\u9500\u8d8a\u5927\uff1b<code>no_shard</code> \u663e\u5b58\u6548\u7387\u6700\u4f4e\u5374\u901a\u4fe1\u6548\u7387\u6700\u4f73\uff0c<code>optim_grads_params</code> \u5219\u663e\u5b58\u6548\u7387\u6700\u9ad8\u4f46\u901a\u4fe1\u5f00\u9500\u6700\u5927\u3002<code>outer_dp_sharding_strategy</code> \u9762\u5411 Hybrid-Sharded Data Parallelism (HSDP) \u7684 \u201couter\u201d DP \u7ec4\uff08<code>dp_outer_dim</code> / <code>hybrid_fsdp_group</code>\uff09\uff0c\u4ec5\u652f\u6301 <code>no_shard</code>\uff08DP \u5168\u91cf\u590d\u5236\uff09\u4e0e <code>optim</code>\uff08\u8981\u6c42 <code>zero_dp_strategy='optim_grads_params'</code> \u7684\u4f18\u5316\u5668\u72b6\u6001\u6df7\u5408\u5206\u7247\uff09\u3002</li> <li>\u9ed8\u8ba4\u503c\uff1a<code>zero_dp_strategy</code> \u4e3a <code>optim_grads_params</code> \u6216 <code>3</code>\uff0c<code>outer_dp_sharding_strategy</code> \u4e3a <code>no_shard</code> \u6216 <code>0</code></li> <li><code>0</code> \u6216 <code>no_shard</code> \u8868\u793a\u6a21\u578b\u672a\u5206\u7247\uff0c\u663e\u5b58\u5360\u7528\u4e0e <code>DDP</code> \u7c7b\u4f3c</li> <li><code>1</code> \u6216 <code>optim</code> \u8868\u793a\u5bf9\u4f18\u5316\u5668\u72b6\u6001\u8fdb\u884c\u5206\u7247\uff0c\u7c7b\u4f3c\u4e8e <code>ZeRO-DP</code> \u7684\u4f18\u5316\u5668\u72b6\u6001\u5206\u7247</li> <li><code>2</code> \u6216 <code>optim_grads</code> \u8868\u793a\u4f18\u5316\u5668\u72b6\u6001\u4e0e\u68af\u5ea6\u5747\u88ab\u5206\u7247\uff0c\u7c7b\u4f3c <code>ZeRO-2</code></li> <li><code>3</code> \u6216 <code>optim_grads_params</code> \u8868\u793a\u4f18\u5316\u5668\u72b6\u6001\u3001\u68af\u5ea6\u4e0e\u8bad\u7ec3\u53c2\u6570\u5168\u90e8\u5206\u7247\uff0c\u7c7b\u4f3c <code>ZeRO-3</code></li> <li><code>fsdp_unit_modules</code> \u662f\u5e0c\u671b\u7531 <code>MegatronFSDP</code> \u5b8c\u6574\u5206\u7247\u7684\u5b50\u6a21\u5757\u7c7b\u6216 <code>str</code> \u5bfc\u5165\u8def\u5f84\u5217\u8868\u3002</li> <li>\u5f53\u5206\u7247\u7b56\u7565\u4e3a <code>1</code>\u3001<code>2</code> \u6216 <code>3</code> \u65f6\u4e3a\u5fc5\u586b\u9879\u3002\u9ed8\u8ba4\u503c\u4e3a <code>None</code>\u3002</li> <li><code>device_mesh</code> \u662f <code>torch.distributed.DeviceMesh</code>\uff0c\u7528\u4e8e\u7ed3\u5408\u786c\u4ef6\u62d3\u6251\u4e0e\u5176\u4ed6\u5e76\u884c\u7b56\u7565\u5411 <code>MegatronFSDP</code> \u63d0\u4f9b\u5206\u7247\u4e0a\u4e0b\u6587\u3002</li> <li><code>dp_shard_dim</code> \u4e3a FSDP \u5206\u7247\u6240\u9700\u7684\u5b50\u7f51\u540d\u79f0\uff0c\u901a\u5e38\u662f\u6570\u636e\u5e76\u884c (DP) \u4e0e\u4e0a\u4e0b\u6587\u5e76\u884c (CP) \u5b50\u7f51\u5c55\u5e73\u540e\u7684\u7ec4\u5408\u3002<ul> <li>\u5f53\u6a21\u578b\u53c2\u6570\u5728\u53cd\u5411\u4f20\u64ad\u671f\u95f4\u5728 DP-CP \u4e0a\u590d\u5236\u65f6\uff0cDP \u4e0e CP \u8fdb\u7a0b\u4e0a\u7684\u68af\u5ea6\u4f1a\u540c\u6b65\u5f52\u7ea6\uff0c\u5e76\u6309\u7167 DP-CP \u7684 world size \u5f52\u4e00\u5316\u3002\u5173\u4e8e\u73af\u5f62\u6ce8\u610f\u529b\u5982\u4f55\u5728 Transformer \u7684\u6ce8\u610f\u529b\u5c42\u4e0e\u975e\u6ce8\u610f\u529b\u5c42\u6309\u5e8f\u5217\u7ef4\u5ea6\u5206\u7247\uff0c\u53ef\u53c2\u8003\u8bba\u6587 Ring Attention with Blockwise Transformers for Near-Infinite Context\u3002</li> </ul> </li> <li><code>dp_outer_dim</code> \u4e3a HSDP \u590d\u5236\u6216\u5206\u7247\u6240\u9700\u7684 \u201couter\u201d DP \u5b50\u7f51\u540d\u79f0\uff1b\u82e5\u6307\u5b9a\u8be5\u53c2\u6570\uff0c<code>fully_shard</code> \u4f1a\u6267\u884c HSDP\u3002</li> <li><code>tp_dim</code> \u4e3a\u5f20\u91cf\u5e76\u884c (TP) \u5b50\u7f51\u540d\u79f0\uff0c\u5728 Megatron-LM \u6216\u57fa\u4e8e DTensor \u7684 TP \u573a\u666f\u4e2d\u7528\u4e8e <code>(FSDP, TP)</code> \u4ea4\u9519\u5206\u7247\u3002<ul> <li>\u5173\u4e8e\u5f20\u91cf\u5e76\u884c\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u53ef\u53c2\u8003\u8bba\u6587 Megatron-LM: Training Multi-Billion Parameter Language Models Using Model Parallelism\u3002</li> </ul> </li> <li><code>hybrid_fsdp_group</code> \u662f\u4e00\u4e2a <code>ProcessGroup</code>\uff0c\u5305\u542b\u5c55\u5e73\u540e\u7684 <code>dp_shard_dim</code> \u4e0e <code>dp_outer_dim</code> \u5b50\u7f51\u4e0a\u7684\u6240\u6709 rank\uff0c\u7528\u4e8e\u786e\u5b9a\u6743\u91cd\u4e0e\u68af\u5ea6\u7f13\u51b2\u533a\u7684 <code>(DP-Outer, DP-Shard)</code> \u5750\u6807\u7cfb\u3002HSDP \u9700\u8981\u8bbe\u7f6e\u8be5\u53c2\u6570\u3002</li> <li><code>init_model_with_meta_device</code> \u8ba9 <code>MegatronFSDP</code> \u5728\u6bcf\u5f20 CUDA \u8bbe\u5907\u4e0a\u4ee5\u5206\u7247\u65b9\u5f0f\u521d\u59cb\u5316 <code>meta</code> \u8bbe\u5907\u4e0a\u7684\u6a21\u578b\uff0c\u907f\u514d\u8d85\u5927\u6a21\u578b\u521d\u59cb\u5316\u65f6\u7684 OOM\u3002\u7528\u6237\u53ef\u5148\u5728 <code>meta</code> \u8bbe\u5907 \u4e0a\u6784\u5efa\u6a21\u578b\uff08<code>with torch.device('meta'): ...</code>\uff09\uff0c<code>MegatronFSDP</code> \u4f1a\u6309\u5c42\u5206\u7247\u5e76\u8c03\u7528\u53ef\u5b9a\u5236\u7684 <code>module.reset_parameters</code>\uff0c\u4ece\u800c\u5728\u8fd0\u884c\u65f6\u4efb\u4f55\u65f6\u523b\u90fd\u65e0\u9700\u5c06\u5b8c\u6574\u6a21\u578b\u9a7b\u7559\u5728\u663e\u5b58\u4e2d\u3002<ul> <li>\u9ed8\u8ba4\u503c\u4e3a <code>False</code>\u3002</li> <li>\u5f53 <code>init_model_with_meta_device=True</code> \u65f6\uff0c\u7528\u4e8e\u5c06\u6a21\u578b\u521d\u59cb\u5316\u5230\u7279\u5b9a\u8bbe\u5907\u6216 rank \u7684 <code>device</code> \u53c2\u6570\u4f1a\u88ab\u5ffd\u7565\u3002</li> </ul> </li> <li><code>grad_reduce_in_fp32</code> \u4f1a\u4f7f\u7528 <code>FP32</code> \u7cbe\u5ea6\u5f52\u7ea6\u68af\u5ea6\uff08\u533a\u522b\u4e8e\u8bad\u7ec3\u65f6\u5e38\u7528\u7684 <code>BF16</code> \u6216 <code>FP8</code> \u7cbe\u5ea6\uff09\u3002<ul> <li>\u9ed8\u8ba4\u503c\u4e3a <code>False</code>\u3002</li> <li>\u5373\u5c06\u652f\u6301 <code>torch.distributed.fsdp.MixedPrecisionPolicy</code>\u3002</li> </ul> </li> <li><code>preserve_fp32_weights</code> \u4f1a\u4fdd\u7559\u4e00\u4efd <code>FP32</code> \u7cbe\u5ea6\u7684\u6a21\u578b\u53c2\u6570\uff0c\u7528\u4e8e\u4f18\u5316\u6b65\u9aa4\u3002<ul> <li>\u9ed8\u8ba4\u503c\u4e3a <code>True</code>\u3002</li> <li>\u5373\u5c06\u652f\u6301 <code>torch.distributed.fsdp.MixedPrecisionPolicy</code>\u3002</li> </ul> </li> <li><code>overlap_grad_reduce</code> \u4e0e <code>overlap_param_gather</code> \u4f1a\u901a\u8fc7\u5f02\u6b65\u8c03\u7528\u4e0e\u9884\u53d6\uff0c\u5c06\u68af\u5ea6 <code>reduce-scatter</code> \u4e0e\u53c2\u6570 <code>all-gather</code> \u7684\u901a\u4fe1\u4e0e\u524d\u5411\u3001\u53cd\u5411\u8ba1\u7b97\u91cd\u53e0\u3002\uff08\u5728 <code>no_shard</code> \u60c5\u51b5\u4e0b\u4e0d\u4f1a\u8fdb\u884c\u53c2\u6570\u805a\u5408\uff0c\u4f46\u4f1a\u91cd\u53e0\u68af\u5ea6 <code>all-reduce</code>\u3002\uff09<ul> <li>\u4e24\u8005\u9ed8\u8ba4\u503c\u5747\u4e3a <code>True</code>\u3002</li> </ul> </li> <li><code>sync_model_each_microbatch</code> \u4f1a\u5728\u6bcf\u6b21\u524d\u5411-\u53cd\u5411\u5b8c\u6210\u540e\u89e6\u53d1\u4e00\u6b21 <code>wait</code>\uff08<code>MegatronFSDP.finish_grad_sync()</code>\uff09\uff0c\u786e\u4fdd\u68af\u5ea6\u5f52\u7ea6\u3001\u53c2\u6570\u91ca\u653e\u4ee5\u53ca\u4f18\u5316\u5668\u53c2\u6570/\u68af\u5ea6\u5c31\u4f4d\uff08\u7528\u4e8e\u540e\u7eed\u7684 <code>optimizer.step()</code>\uff09\u3002\u5728 HSDP \u573a\u666f\u4e0b\uff0c\u53c2\u6570\u4e0e\u68af\u5ea6\u4f1a\u5728\u6bcf\u6b21\u8bad\u7ec3\u6b65\u800c\u975e\u6bcf\u6b21\u4f18\u5316\u5468\u671f\u4e0a\u4e8e \u201couter\u201d DP \u7ec4\u5b8c\u6210 all-gather \u4e0e\u5f52\u7ea6\u3002\u8be5\u884c\u4e3a\u4f7f\u8bad\u7ec3\u5faa\u73af\u66f4\u52a0\u900f\u660e\uff0c\u4fbf\u4e8e\u5728\u53cd\u5411\u540e\u6267\u884c\u68af\u5ea6\u53d8\u6362\u5e76\u4fdd\u6301\u5e72\u51c0\u7684\u8ba1\u7b97/\u5185\u5b58\u72b6\u6001\uff0c\u4f46\u5728\u9700\u8981\u5ef6\u8fdf\u4f18\u5316\uff08\u4f8b\u5982\u68af\u5ea6\u7d2f\u79ef\uff09\u7684\u573a\u666f\u4e0b\u4f1a\u635f\u5931\u6027\u80fd\uff0c\u56e0\u4e3a\u65e0\u6cd5\u5c06\u4e0a\u4e00\u8f6e\u8fed\u4ee3\u7684\u901a\u4fe1\u4e0e\u4e0b\u4e00\u8f6e\u7684\u8ba1\u7b97\u91cd\u53e0\u3002\u5f53\u76f4\u63a5\u4f7f\u7528 <code>MegatronFSDP</code> \u7c7b\u65f6\u8be5\u53c2\u6570\u9ed8\u8ba4\u503c\u4e3a <code>False</code>\u3002<ul> <li>\u5bf9 <code>fully_shard</code> \u9ed8\u8ba4\u503c\u4e3a <code>True</code>\uff0c\u76f4\u63a5\u4f7f\u7528 <code>MegatronFSDP</code> \u65f6\u9ed8\u8ba4\u4e3a <code>False</code>\u3002</li> </ul> </li> <li><code>keep_fp8_transpose_cache_when_using_custom_fsdp</code> \u4f1a\u5728\u4f7f\u7528 <code>MegatronFSDP</code> \u65f6\u4fdd\u7559 FP8 \u8f6c\u7f6e\u7f13\u5b58\u3002\u8be5\u9009\u9879\u4f1a\u589e\u52a0\u7ea6\u300c\u53c2\u6570\u6570\u91cf \u00d7 1 Byte\u300d\u7684\u5185\u5b58\u5f00\u9500\uff0c\u4f46\u80fd\u8df3\u8fc7\u53cd\u5411\u4f20\u64ad\u4e2d\u7684\u6743\u91cd\u8f6c\u7f6e\u64cd\u4f5c\u3002Blackwell \u67b6\u6784\u4e0a\u4e0d\u4f1a\u5e26\u6765\u6536\u76ca\u3002<ul> <li>\u4ec5\u5728\u4f7f\u7528 Megatron-LM \u65f6\u751f\u6548\u3002</li> <li>\u9ed8\u8ba4\u503c\u4e3a <code>False</code>\u3002</li> </ul> </li> <li><code>nccl_ub</code> \u4f1a\u4e3a\u53c2\u6570\u4e0e\u68af\u5ea6\u7f13\u51b2\u533a\u5206\u914d\u5e76\u6ce8\u518c NCCL user buffer\u3002\u8be5\u9009\u9879\u53ef\u542f\u7528\u66f4\u9ad8 SM \u5229\u7528\u7387\u7684 NCCL \u7b97\u6cd5\uff0c\u5728\u901a\u4fe1\u4e0e\u8ba1\u7b97\u91cd\u53e0\u573a\u666f\u4e2d\u6539\u5584\u6027\u80fd\u3002\u5982\u679c FSDP \u901a\u4fe1\u540c\u65f6\u8986\u76d6 NVL \u4e0e IB \u57df\uff0c\u4e0e SHARP \u7ed3\u5408\u53ef\u83b7\u5f97\u66f4\u591a\u6536\u76ca\u3002\u542f\u7528\u8be5\u9009\u9879\u9700\u8981\u540c\u65f6\u542f\u7528 <code>fsdp_double_buffer</code>\uff0c\u56e0\u6b64\u4f1a\u589e\u52a0\u989d\u5916\u663e\u5b58\u5360\u7528\u3002<ul> <li>\u4ec5\u5728\u4f7f\u7528 Megatron-LM \u65f6\u751f\u6548\u3002</li> <li>\u9ed8\u8ba4\u503c\u4e3a <code>False</code>\u3002</li> </ul> </li> <li><code>fsdp_double_buffer</code> \u4f1a\u4e3a <code>MegatronFSDP</code> \u901a\u4fe1\u6240\u9700\u7684\u4e34\u65f6\u5185\u5b58\u4f7f\u7528\u5e38\u9a7b\u7684\u53cc\u7f13\u51b2\u3002\u867d\u7136\u8fd9\u53ef\u80fd\u63d0\u5347\u663e\u5b58\u5cf0\u503c\u5360\u7528\uff0c\u4f46\u5728\u6ce8\u518c NCCL user buffer (<code>nccl_ub=True</code>) \u65f6\u4e3a\u5fc5\u9700\u6761\u4ef6\u3002\u76ee\u524d\u4ec5\u5728 GPT \u7b49\u7ed3\u6784\u8f83\u4e3a\u89c4\u6574\u7684\u6a21\u578b\u4e0a\u5f97\u5230\u652f\u6301\u3002<ul> <li>\u4ec5\u5728\u4f7f\u7528 Megatron-LM \u65f6\u751f\u6548\u3002</li> <li>\u9ed8\u8ba4\u503c\u4e3a <code>False</code>\u3002\u5f53\u542f\u7528 <code>nccl_ub</code> \u65f6\u4f1a\u81ea\u52a8\u6539\u4e3a <code>True</code>\u3002</li> </ul> </li> <li><code>preproc_state_dict_for_dcp_ckpt</code> \u4f1a\u5728 <code>model.state_dict()</code> \u4e0e <code>optimizer.state_dict()</code> \u4e0a\u6ce8\u518c\u540e\u5904\u7406\u94a9\u5b50\uff0c\u4e3a <code>torch.distributed.checkpoint.{save,load}</code>\uff08Torch DCP\uff09\u505a\u51c6\u5907\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5b83\u4e3a\u76f8\u5173\u5f20\u91cf\u6dfb\u52a0 <code>__create_write_items__</code> \u4e0e <code>__create_chunk_list__</code> \u65b9\u6cd5\uff0c\u4ee5\u4fbf\u5728\u4fdd\u5b58\u4e0e\u52a0\u8f7d\u6a21\u578b\u3001\u4f18\u5316\u5668\u68c0\u67e5\u70b9\u65f6\u5b8c\u6210\u518d\u5206\u5e03\u3002\u82e5\u9700\u81ea\u5b9a\u4e49\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\u65b9\u6848\uff0c\u53ef\u5173\u95ed\u8be5\u9009\u9879\u3002<ul> <li>\u9ed8\u8ba4\u503c\u4e3a <code>True</code>\u3002</li> </ul> </li> </ul>"},{"location":"megatron/megatron/core/models/mimo/","title":"MIMO\uff1a\u591a\u6a21\u6001\u8f93\u5165/\u8f93\u51fa\u6a21\u578b","text":""},{"location":"megatron/megatron/core/models/mimo/#mimo_1","title":"\u4ec0\u4e48\u662f MIMO\uff1f","text":"<p>MIMO \u662f\u4e00\u79cd\u5e2e\u52a9\u8bed\u8a00\u6a21\u578b\u7406\u89e3\u4e0e\u751f\u6210\u591a\u79cd\u6a21\u6001\uff08\u6587\u672c\u3001\u56fe\u50cf\u3001\u97f3\u9891\u7b49\uff09\u7684\u67b6\u6784\uff0c\u5176\u6838\u5fc3\u601d\u8def\u5305\u62ec\uff1a</p> <ul> <li>\u4e00\u4e2a\u5904\u7406\u7edf\u4e00\u5d4c\u5165\u7684\u8bed\u8a00\u6a21\u578b</li> <li>\u6a21\u6001\u7279\u5b9a\u7684\u5b50\u6a21\u5757\uff0c\u7528\u4e8e\uff1a</li> <li>\u5c06\u539f\u59cb\u8f93\u5165\u7f16\u7801\u6210\u5d4c\u5165\uff08\u5982\u56fe\u50cf \u2192 embeddings\uff09</li> <li>\u5c06\u5d4c\u5165\u89e3\u7801\u56de\u8f93\u51fa\uff08\u5982 embeddings \u2192 \u56fe\u50cf\uff09</li> <li>\u5728\u6a21\u6001\u7a7a\u95f4\u4e0e\u8bed\u8a00\u6a21\u578b\u7a7a\u95f4\u4e4b\u95f4\u6295\u5c04</li> <li><code>MimoModel</code> \u8d1f\u8d23\uff1a</li> <li>\u5728\u5e8f\u5217\u4e2d\u7684\u7279\u5b9a token \u4f4d\u7f6e\u5bf9\u9f50\u6a21\u6001\u5d4c\u5165</li> <li>\u5c06\u7ec4\u5408\u540e\u7684\u5d4c\u5165\u9001\u5165\u8bed\u8a00\u6a21\u578b\u5904\u7406</li> </ul> <p>\u901a\u8fc7\u7075\u6d3b\u7684\u914d\u7f6e\uff0cMIMO \u53ef\u6269\u5c55\u4e3a\u591a\u79cd\u591a\u6a21\u6001\u6a21\u578b\uff0c\u4f8b\u5982\uff1a</p> <ul> <li>\u89c6\u89c9\u8bed\u8a00\u6a21\u578b\uff08VLM\uff09</li> <li>\u97f3\u9891\u89c6\u89c9\u8bed\u8a00\u6a21\u578b</li> <li>\u591a\u6a21\u6001\u7406\u89e3\u4e0e\u751f\u6210\u6a21\u578b</li> </ul>"},{"location":"megatron/megatron/core/models/mimo/#_1","title":"\u5de5\u4f5c\u539f\u7406","text":"<p>\u6574\u4f53\u67b6\u6784\u5305\u542b\u4e24\u5927\u7ec4\u4ef6\uff1a</p> <ol> <li>\u8bed\u8a00\u6a21\u578b</li> <li>\u6a21\u6001\u5b50\u6a21\u5757</li> </ol> <p>\u5b8c\u6574\u7684\u6570\u636e\u6d41\u5982\u4e0b\uff1a</p> <pre><code>Input \u2192 Encoder \u2192 Projection \u2192 Align input embeddings \u2192 Language Model \u2192 Hidden states for special generation tokens -&gt;  Output Projection \u2192 Decoder \u2192 Output\n</code></pre> <ol> <li>\u7f16\u7801\u9636\u6bb5\uff1a</li> <li>\u6a21\u6001\u5b50\u6a21\u5757\u5c06\u8f93\u5165\u8f6c\u6362\u4e3a\u5d4c\u5165\uff08\u4f8b\u5982\u56fe\u50cf \u2192 embeddings\uff09\u3002</li> <li><code>MimoModel</code> \u5c06\u6240\u6709\u6a21\u6001\u5d4c\u5165\u4e0e\u6587\u672c\u5d4c\u5165\u6309\u7167 token \u4f4d\u7f6e\u5bf9\u9f50\u3002</li> <li> <p>\u8bed\u8a00\u6a21\u578b\u5904\u7406\u7edf\u4e00\u540e\u7684\u5d4c\u5165\u5e8f\u5217\u3002</p> </li> <li> <p>\u89e3\u7801\u9636\u6bb5\uff1a</p> </li> <li>\u9009\u62e9\u5bf9\u5e94\u7279\u5b9a\u6a21\u6001\u751f\u6210 token \u7684\u9690\u85cf\u72b6\u6001\u3002</li> <li>\u6a21\u6001\u5b50\u6a21\u5757\u5c06\u5d4c\u5165\u8fd8\u539f\u4e3a\u8f93\u51fa\uff08\u4f8b\u5982 embeddings \u2192 \u56fe\u50cf\uff09\u3002</li> </ol>"},{"location":"megatron/megatron/core/models/mimo/#_2","title":"\u7ec4\u4ef6\u8be6\u89e3","text":""},{"location":"megatron/megatron/core/models/mimo/#_3","title":"\u8bed\u8a00\u6a21\u578b","text":"<p>\u8bed\u8a00\u6a21\u578b\u662f\u5904\u7406\u5404\u6a21\u6001\u4fe1\u606f\u7684\u6838\u5fc3\uff0c\u8d1f\u8d23\uff1a</p> <ul> <li>\u5728\u5171\u4eab\u8bcd\u8868\u4e2d\u4f5c\u4e3a\u6240\u6709\u6a21\u6001\u7684\u4e2d\u592e\u5904\u7406\u5668</li> <li>\u5904\u7406\u5305\u542b\u6587\u672c\u4e0e\u6a21\u6001 token \u7684\u6df7\u5408\u5e8f\u5217</li> </ul>"},{"location":"megatron/megatron/core/models/mimo/#_4","title":"\u6a21\u6001\u5b50\u6a21\u5757","text":"<p><code>ModalitySubmodules</code> \u8d1f\u8d23\u8fde\u63a5\u539f\u59cb\u6a21\u6001\u6570\u636e\u4e0e\u8bed\u8a00\u6a21\u578b\uff1a</p> <ul> <li>\u6bcf\u4e2a\u5b50\u6a21\u5757\u90fd\u5904\u7406 \u7f16\u7801\uff08\u6a21\u6001 \u2192 embeddings\uff09\u4e0e \u89e3\u7801\uff08embeddings \u2192 \u6a21\u6001\uff09</li> <li>\u7ba1\u7406\u6a21\u6001\u7a7a\u95f4\u4e0e\u8bed\u8a00\u6a21\u578b\u7ef4\u5ea6\u4e4b\u95f4\u7684 \u6295\u5c04</li> </ul> <pre><code># Base class constructor with named encoders and decoders\nclass ModalitySubmodules(ABC, nn.Module):\n    def __init__(\n        self,\n        encoders: Optional[Dict[str, nn.Module]] = None,\n        decoders: Optional[Dict[str, nn.Module]] = None,\n        input_projections: Optional[List[nn.Module]] = None,\n        output_projections: Optional[List[nn.Module]] = None,\n    ):\n</code></pre> <p>MIMO \u63d0\u4f9b\u9ed8\u8ba4\u5b9e\u73b0\uff08<code>VisionModalitySubmodules</code>\u3001<code>AudioModalitySubmodules</code>\uff09\uff0c\u4e5f\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u81ea\u5b9a\u4e49\uff1a</p> <pre><code># Custom implementation example\nclass CustomVisionSubmodules(ModalitySubmodules):\n    def encode(self, inputs):\n        # Custom encoding logic\n        return projected_embeddings\n\n# Use custom submodules when building the model\nmodel = MimoModel(\n    mimo_config,\n    modality_submodules={\"images\": ModuleSpec(module=CustomVisionSubmodules, params={...})}\n)\n</code></pre>"},{"location":"megatron/megatron/core/models/mimo/#_5","title":"\u5d4c\u5165\u5bf9\u9f50","text":"<p><code>MimoModel</code> \u7684 <code>align_embeddings_by_token_positions</code> \u65b9\u6cd5\u8d1f\u8d23\u6574\u5408\u4e0d\u540c\u6a21\u6001\u7684\u5d4c\u5165\uff1a</p> <ul> <li>\u6839\u636e\u7279\u6b8a token \u4f4d\u7f6e\u5c06\u6a21\u6001\u5d4c\u5165\u63d2\u5165\u8f93\u5165\u5e8f\u5217</li> <li>\u5904\u7406\u7ef4\u5ea6\u5339\u914d\u4e0e\u4f4d\u7f6e\u8ffd\u8e2a</li> </ul> <p>\u5185\u90e8\u793a\u4f8b\uff1a</p> <pre><code># Internal logic inside MimoModel forward\naligned_embeddings = self.align_embeddings_by_token_positions(\n    modality_embeddings={\"text\": text_emb, \"images\": image_emb},\n    input_ids=tokens,\n    special_token_ids={\"images\": 32000}\n)\n</code></pre>"},{"location":"megatron/megatron/core/models/mimo/#_6","title":"\u914d\u7f6e\u4e0e\u4f7f\u7528","text":""},{"location":"megatron/megatron/core/models/mimo/#mimomodel","title":"<code>MimoModel</code> \u53c2\u6570","text":"<pre><code>MimoModel(\n    config: MimoModelConfig,    # Required model configuration\n)\n</code></pre>"},{"location":"megatron/megatron/core/models/mimo/#_7","title":"\u914d\u7f6e\u8be6\u60c5","text":"<p><code>MimoModelConfig</code> \u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <ol> <li>\u8bed\u8a00\u6a21\u578b\u7684\u914d\u7f6e</li> <li>\u6a21\u6001\u540d\u79f0\u5230\u5b50\u6a21\u5757\u914d\u7f6e\u7684\u6620\u5c04</li> </ol> <pre><code>MimoModelConfig(\n    language_model: ModuleSpec,                         # Specification for the language model\n    modality_submodules: Dict[str, ModuleSpec],         # Modality name to submodule specification\n    special_token_ids: Dict[str, int] = {}              # Special token IDs for each modality\n)\n</code></pre>"},{"location":"megatron/megatron/core/models/mimo/#vlm","title":"\u793a\u4f8b\uff1a\u6784\u5efa\u89c6\u89c9\u8bed\u8a00\u6a21\u578b\uff08VLM\uff09","text":"<pre><code># Language model specification\nlm_spec = ModuleSpec(\n    module=GPTModel,\n    params={\n        \"config\": language_config,\n        \"transformer_layer_spec\": get_mock_language_layer_spec(),\n        \"vocab_size\": 50304,\n    }\n)\n\n# Vision modality specification\nvision_submodule_spec = ModuleSpec(\n    module=VisionModalitySubmodules,\n    params={\n        # Optional general parameters for the submodule\n    },\n    submodules={\n        \"encoders\": {\n            \"clip_encoder\": ModuleSpec(\n                module=CLIPViTModel,\n                params={\n                    \"transformer_config\": vision_config,\n                    \"transformer_layer_spec\": get_mock_vision_layer_spec(),\n                    \"patch_dim\": 16,\n                    \"img_h\": 224,\n                    \"img_w\": 224,\n                }\n            ),\n        },\n        \"input_projections\": [\n            ModuleSpec(\n                module=MultimodalProjector,\n                params={\n                    \"config\": get_mock_projection_config(),\n                    \"submodules\": get_mock_projection_layer_spec().submodules,\n                    \"projector_type\": \"mlp\",\n                    \"input_size\": 128\n                }\n            ),\n        ],\n    }\n)\n\n# Instantiate the model\nvlm = MimoModel(\n    MimoModelConfig(\n        language_model=lm_spec,\n        modality_submodules={\"images\": vision_submodule_spec},\n        special_token_ids={\"images\": 32000}\n    )\n)\n</code></pre>"},{"location":"megatron/megatron/core/models/mimo/#mimo_2","title":"MIMO \u524d\u5411\u8c03\u7528\u793a\u4f8b","text":"<pre><code># Prepare multimodal inputs; keys must match the initialization config\nmodality_inputs = {\n    \"images\": {\n        \"clip_encoder\": {\"pixel_values\": images},  # Encoder-specific input\n        \"vit_encoder\": {\"images\": vit_images}\n    },\n    \"audio\": {\n        \"whisper_encoder\": {\"input_features\": audio_features}\n    }\n}\n\n# \u8c03\u7528 forward\noutputs, _ = mimo_model(\n    input_ids=input_ids,\n    position_ids=position_ids,\n    modality_inputs=modality_inputs,\n)\n</code></pre>"},{"location":"megatron/megatron/core/optimizer/cpu_offloading/","title":"\u4f18\u5316\u5668 CPU Offload","text":""},{"location":"megatron/megatron/core/optimizer/cpu_offloading/#_1","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<p>\u5728 MCore \u4e2d\u542f\u7528\u4f18\u5316\u5668 CPU offload \u65f6\u8bf7\u6dfb\u52a0\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <pre><code>--optimizer-cpu-offload\n--optimizer-offload-fraction 1.0\n--use-precision-aware-optimizer\n</code></pre>"},{"location":"megatron/megatron/core/optimizer/cpu_offloading/#_2","title":"\u914d\u7f6e\u5efa\u8bae","text":"<p>\u68af\u5ea6\u4ece GPU \u590d\u5236\u5230 CPU\u3001\u5728 CPU \u4e0a\u6267\u884c\u4f18\u5316\u5668\u6b65\u9aa4\u3001\u518d\u5c06\u53c2\u6570\u590d\u5236\u56de GPU \u7684\u8fc7\u7a0b\u4f1a\u8017\u8d39\u65f6\u95f4\u3002\u5efa\u8bae\u52a0\u4e0a <code>--overlap-cpu-optimizer-d2h-h2d</code>\uff0c\u4ee5\u5e76\u884c\u6267\u884c\u8fd9\u4e9b\u64cd\u4f5c\u3002</p>"},{"location":"megatron/megatron/core/transformer/moe/","title":"Megatron Core MoE","text":"<p>Megatron-Core MoE \u63d0\u4f9b\u5b8c\u6574\u7684\u5e76\u884c\u7b56\u7565\uff0c\u5c06\u4e13\u5bb6\u5e76\u884c\u65e0\u7f1d\u878d\u5408\u5230\u5f20\u91cf\u3001\u6570\u636e\u3001\u5e8f\u5217\u4e0e\u6d41\u6c34\u7ebf\u5e76\u884c\u4e2d\u3002\u5728 MCore v0.9 \u4e2d\uff0c\u6211\u4eec\u5df2\u5b9e\u73b0 468 TFLOPS \u7684 Mixtral 8x7B bf16 \u8bad\u7ec3\u6027\u80fd\uff0c\u5e76\u652f\u6301 DeepSeek-V3\u3001Qwen-MoE \u7b49\u6700\u65b0\u7684 MoE \u67b6\u6784\u3002</p>"},{"location":"megatron/megatron/core/transformer/moe/#_1","title":"\u6700\u65b0\u7279\u6027","text":"<ul> <li>\u652f\u6301 DeepSeek-V3 \u67b6\u6784</li> <li>\u4e3a MLA \u4e0e DeepSeek-V3 \u542f\u7528 TP</li> <li>\u4e3a MLA \u4e0e DeepSeek-V3 \u542f\u7528 CP<ul> <li>\u9700\u8981 TransformerEngine &gt;= 2.5.0</li> <li>\u7279\u522b\u611f\u8c22\u6765\u81ea\u5c0f\u7ea2\u4e66\u7684 SuperCB \u548c\u817e\u8baf\u5fae\u4fe1\u57fa\u7840\u8bbe\u65bd\u56e2\u961f\u7684 RandMist \u7684\u8d21\u732e</li> </ul> </li> <li>\u652f\u6301\u65e0\u8f85\u52a9\u635f\u5931\uff08aux-loss-free\uff09\u7684\u8d1f\u8f7d\u5747\u8861\u7b56\u7565</li> <li>\u652f\u6301 node-limited routing</li> <li>\u652f\u6301 Multi-Token Prediction (MTP)</li> <li>\u6279\u7ea7\u91cd\u53e0\u4ee5\u9690\u85cf EP-A2A \u901a\u4fe1</li> <li>\u96c6\u6210 DeepSeek \u7684 DeepEP\uff0c\u5b9e\u73b0\u9ad8\u6548 token \u5206\u53d1\u4e0e\u805a\u5408</li> <li>\u65b0\u589e token permutation/unpermutation \u878d\u5408</li> <li>\u652f\u6301\u4e0d\u5747\u5300\u7684\u865a\u62df\u6d41\u6c34\u7ebf\u5e76\u884c\u62c6\u5206</li> <li>\u652f\u6301\u5728\u90e8\u5206\u5b50\u6a21\u5757\u4e0a\u4e22\u5f03\u8f93\u51fa\u7684\u68c0\u67e5\u70b9\u7b56\u7565</li> </ul>"},{"location":"megatron/megatron/core/transformer/moe/#_2","title":"\u5e76\u884c\u7b56\u7565","text":"<ul> <li>\u4e13\u5bb6\u5e76\u884c\uff08Expert Parallelism\uff09<ul> <li>\u9488\u5bf9 MoE \u6a21\u578b\u7684\u4e13\u7528\u5e76\u884c\u65b9\u5f0f\uff0c\u4e13\u5bb6\u88ab\u5207\u5206\u5230\u4e0d\u540c worker\uff0c\u6bcf\u4e2a worker \u5904\u7406\u4e0d\u540c\u6279\u6b21\u7684\u8bad\u7ec3\u6837\u672c\uff0c\u5e76\u5728\u6bcf\u4e2a MoE \u5c42\u4e0a\u8d1f\u8d23\u4e00\u4e2a\u6216\u591a\u4e2a\u4e13\u5bb6\u3002</li> </ul> </li> <li>3D \u5e76\u884c\uff1a\u6570\u636e\u5e76\u884c\u3001\u5f20\u91cf\u5e76\u884c\u3001\u6d41\u6c34\u7ebf\u5e76\u884c<ul> <li>\u6ce8\u610f\uff1a\u5f53\u540c\u65f6\u4f7f\u7528\u4e13\u5bb6\u5e76\u884c\u4e0e\u5f20\u91cf\u5e76\u884c\u65f6\uff0c\u5fc5\u987b\u542f\u7528\u5e8f\u5217\u5e76\u884c\uff08sequence parallelism\uff09\u3002</li> </ul> </li> <li>\u4e0a\u4e0b\u6587\u5e76\u884c\uff08Context Parallelism\uff09<ul> <li>\u62c6\u5206\u5e8f\u5217\u7ef4\u5ea6\uff0c\u652f\u6301\u957f\u4e0a\u4e0b\u6587\u8bad\u7ec3\u3002</li> </ul> </li> <li>\u66f4\u4e30\u5bcc\u7684\u6620\u5c04\u65b9\u5f0f\uff1aEP \u53ef\u4e0e DP/TP/PP/CP \u7ec4\u5408\uff0c\u4ee5\u5e94\u5bf9\u66f4\u5927\u578b\u7684 MoE \u53d8\u4f53\u3002</li> <li>MoE Parallel Folding\uff1a\u53ef\u4e3a\u6ce8\u610f\u529b\u4e0e MoE \u7ec4\u4ef6\u8bbe\u7f6e\u4e0d\u540c\u7684\u5e76\u884c\u7b56\u7565\uff0c\u5b9e\u73b0\u66f4\u52a0\u7075\u6d3b\u9ad8\u6548\u7684\u6a21\u578b\u5207\u5206\uff0c\u8be6\u89c1\u4e0b\u6587\u3002</li> <li>\u5168\u9762\u652f\u6301\u5206\u5e03\u5f0f\u4f18\u5316\u5668\u3002</li> </ul>"},{"location":"megatron/megatron/core/transformer/moe/#_3","title":"\u8def\u7531\u4e0e\u8d1f\u8f7d\u5747\u8861","text":"<ul> <li>\u8def\u7531\u7c7b\u578b\uff1a<ul> <li>Top-K MLP router</li> </ul> </li> <li>\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\uff1a<ul> <li>Sinkhorn\uff08S-BASE\uff09</li> <li>\u8f85\u52a9\u635f\u5931 / \u8d1f\u8f7d\u5747\u8861\u635f\u5931</li> <li>\u65e0\u8f85\u52a9\u635f\u5931\u7684\u8d1f\u8f7d\u5747\u8861\u7b56\u7565</li> </ul> </li> <li>CUDA \u878d\u5408\u8def\u7531\u4e0e\u8d1f\u8f7d\u5747\u8861\u5185\u6838</li> </ul>"},{"location":"megatron/megatron/core/transformer/moe/#_4","title":"\u6027\u80fd\u4f18\u5316","text":"<ul> <li>\uff08\u5b9e\u9a8c\u7279\u6027\uff09\u96c6\u6210 DeepEP\uff0c\u7528\u4e8e\u5927\u89c4\u6a21 MoE \u8bad\u7ec3\u4e2d\u7684\u9ad8\u6548 token \u901a\u4fe1\u3002</li> <li>\u5f53\u672c\u5730\u4e13\u5bb6\u6570 &gt; 1 \u65f6\u542f\u7528 GroupedGEMM<ul> <li>\u652f\u6301 dtype\uff1abf16</li> <li>\u63d0\u5347\u5927\u578b MoE \u6a21\u578b\u6027\u80fd</li> </ul> </li> <li>\u4e3a MoE \u542f\u7528 <code>--tp-comm-overlap</code></li> <li>\u652f\u6301 FP8 \u8bad\u7ec3</li> </ul>"},{"location":"megatron/megatron/core/transformer/moe/#token","title":"Token \u5206\u53d1\u673a\u5236","text":"<ul> <li>\u65e0\u4e22\u5f03 / Dropless</li> <li>Token \u4e22\u5f03\uff0c\u53ef\u9009\u62e9\u662f\u5426\u586b\u5145\u81f3\u5bb9\u91cf</li> <li>Token permutation / unpermutation \u878d\u5408</li> </ul>"},{"location":"megatron/megatron/core/transformer/moe/#_5","title":"\u6613\u7528\u6027","text":"<ul> <li>\u63d0\u4f9b Mixtral \u6a21\u578b\u7684\u68c0\u67e5\u70b9\u8f6c\u6362\u5de5\u5177\uff0c\u8be6\u89c1 \u793a\u4f8b\u3002</li> <li>MoE \u5c42\u9891\u7387\uff08MoE Layer Frequency\uff09\u53ef\u81ea\u5b9a\u4e49\u6df7\u5408\u7684 MoE/Dense \u67b6\u6784\u3002</li> <li>\u652f\u6301\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9</li> <li>\u652f\u6301\u6309\u5c42\u65e5\u5fd7</li> <li>\u652f\u6301 Upcycling</li> </ul>"},{"location":"megatron/megatron/core/transformer/moe/#_6","title":"\u4f7f\u7528\u6307\u5357","text":""},{"location":"megatron/megatron/core/transformer/moe/#_7","title":"\u4f7f\u7528\u65b9\u6cd5","text":""},{"location":"megatron/megatron/core/transformer/moe/#_8","title":"\u5feb\u901f\u4e0a\u624b","text":"<p>\u82e5\u8981\u8bad\u7ec3\u4e00\u4e2a top-2\u3001\u5305\u542b 8 \u4e2a\u4e13\u5bb6\u5e76\u542f\u7528\u8f85\u52a9\u635f\u5931\u7684 MoE \u6a21\u578b\uff0c\u53ef\u6dfb\u52a0\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <pre><code>--num-experts 8\n--expert-model-parallel-size 8\n--moe-grouped-gemm\n--moe-permute-fusion\n--moe-router-load-balancing-type aux_loss # Options: aux_loss, sinkhorn, none (default: aux_loss)\n--moe-router-topk 2\n--moe-aux-loss-coeff 1e-2\n--use-distributed-optimizer\n--moe-token-dispatcher-type alltoall\n</code></pre> <p>\u82e5\u8981\u542f\u7528\u7c7b GShard\u3001SwitchTransformer \u7684 token drop \u673a\u5236\uff0c\u53ef\u989d\u5916\u8bbe\u7f6e\uff1a</p> <pre><code>--moe-expert-capacity-factor 1.0\n--moe-pad-expert-input-to-capacity # Optional\n</code></pre> <p>\u4e0b\u56fe\u5c55\u793a\u4e86 MCore \u4e2d\u4e0d\u540c\u7684\u4e22\u5f03\u7b56\u7565\uff1a</p> <ol> <li>\u9ed8\u8ba4\u7684 dropless \u7b56\u7565\u4e0d\u4f1a\u4e22\u5f03\u6216\u586b\u5145 token\u3002</li> <li>\u8bbe\u7f6e <code>--moe-expert-capacity-factor</code> \u540e\uff0c\u8d85\u8fc7\u5bb9\u91cf\u7684 token \u4f1a\u6309\u9009\u4e2d\u7684\u6982\u7387\u88ab\u4e22\u5f03\u3002\u82e5 EP &gt; 1\uff0c\u4e22\u5f03\u53d1\u751f\u5728 EP rank \u4e4b\u95f4\u8fdb\u884c token \u4ea4\u6362\u4e4b\u524d\u3002\u5bb9\u91cf\u8ba1\u7b97\u516c\u5f0f\u4e3a <code>capacity = num_tokens_per_rank * topk * capacity_factor / num_experts</code>\u3002</li> <li>\u8bbe\u7f6e <code>--moe-pad-expert-input-to-capacity</code> \u540e\uff0ctoken \u5c11\u4e8e\u5bb9\u91cf\u7684\u4e13\u5bb6\u4f1a\u81ea\u52a8\u586b\u5145\u5230\u5bb9\u91cf\u3002</li> </ol>"},{"location":"megatron/megatron/core/transformer/moe/#mixtral","title":"\u5fae\u8c03 Mixtral \u6a21\u578b","text":"<p>Megatron-Core \u5b8c\u5168\u652f\u6301 Mixtral MoE \u6a21\u578b\uff0c\u5e76\u63d0\u4f9b\u4ece HuggingFace \u683c\u5f0f\u8f6c\u6362\u4e3a MCore \u683c\u5f0f\u7684\u68c0\u67e5\u70b9\u5de5\u5177\u3002</p>"},{"location":"megatron/megatron/core/transformer/moe/#_9","title":"\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9","text":"<p>MCore v0.7 \u5f15\u5165\u4e86\u5b8c\u5168\u5e76\u884c\u4e14\u5f02\u6b65\u7684\u4fdd\u5b58\u80fd\u529b\uff0c\u53ef\u5728\u4fdd\u5b58\u671f\u95f4\u4e0e\u8bad\u7ec3\u8ba1\u7b97\u91cd\u53e0\uff0c\u663e\u8457\u7f29\u77ed\u8bad\u7ec3\u6682\u505c\u65f6\u95f4\u3002</p>"},{"location":"megatron/megatron/core/transformer/moe/#moe-parallel-folding","title":"MoE Parallel Folding","text":"<p>MoE Parallel Folding \u5141\u8bb8\u4f60\u4e3a\u6ce8\u610f\u529b\u4e0e MoE \u90e8\u5206\u8bbe\u7f6e\u4e0d\u540c\u7684\u5e76\u884c\u7b56\u7565\u3002\u901a\u8fc7 <code>--transformer-impl transformer_engine --moe-enable-moe-pf</code> \u7b49\u53c2\u6570\uff0c\u53ef\u8ba9\u6ce8\u610f\u529b\u5c42\u4e0e MLP/\u4e13\u5bb6\u5c42\u91c7\u7528\u4e0d\u540c\u7684\u6620\u5c04\u65b9\u5f0f\uff0c\u4ece\u800c\u83b7\u5f97\u66f4\u7075\u6d3b\u7684\u6a21\u578b\u5207\u5206\u3002\u4f8b\u5982\u5728 DeepSeek-V3 \u4e2d\uff0c\u53ef\u5c06\u6ce8\u610f\u529b\u6620\u5c04\u5230\uff08TP, PP\uff09\uff0c\u800c MoE \u5219\u6620\u5c04\u5230\uff08EP, CP, PP\uff09\u3002</p>"},{"location":"megatron/megatron/core/transformer/moe/#moedense","title":"\u6df7\u5408 MoE/Dense \u67b6\u6784","text":"<p>MoE \u5c42\u9891\u7387\u5141\u8bb8\u5728\u5168\u6a21\u578b\u4e2d\u4ea4\u66ff\u63d2\u5165 Dense \u5c42\u4e0e MoE \u5c42\uff0c\u901a\u8fc7 <code>--moe-layer-freq</code> \u6307\u5b9a\u5468\u671f\u3002\u4f8b\u5982\u8bbe\u7f6e\u4e3a <code>4</code> \u8868\u793a\u6bcf 4 \u5c42 Transformer \u63d2\u5165\u4e00\u4e2a MoE \u5c42\uff0c\u5176\u4f59\u4e3a Dense \u5c42\uff0c\u53ef\u6784\u5efa\u6df7\u5408\u67b6\u6784\u3002</p>"},{"location":"megatron/megatron/core/transformer/moe/#ep-a2a","title":"\u6279\u7ea7 EP-A2A \u91cd\u53e0","text":"<p>\u542f\u7528\u6279\u7ea7\u7684 All-to-All \u91cd\u53e0\uff08\u7075\u611f\u6765\u81ea DeepSeek-V3 \u7684 DualPipe \u5b9e\u73b0\uff09\u53ef\u901a\u8fc7 <code>--moe-batch-level-a2a-overlap</code> \u7b49\u53c2\u6570\u5b9e\u73b0\u3002\u5176\u7279\u6027\u5305\u62ec\uff1a - \u901a\u8fc7\u6279\u7ea7\u91cd\u53e0\u9690\u85cf EP A2A \u901a\u4fe1 - \u5c06\u6743\u91cd\u68af\u5ea6\u4e0e\u6fc0\u6d3b\u68af\u5ea6\u8ba1\u7b97\u62c6\u5206\uff0c\u4ee5\u4fbf\u4e0e\u901a\u4fe1\u66f4\u597d\u5730\u91cd\u53e0 - \u652f\u6301\u4ea4\u9519\u6d41\u6c34\u7ebf\u5e76\u884c - \u652f\u6301 FP8 \u8bad\u7ec3 - \u652f\u6301 MTP\uff08\u76ee\u524d\u4ec5\u652f\u6301 <code>--mtp-num-layers 1</code>\uff09</p> <p>\u4f7f\u7528\u65b9\u5f0f\uff1a <pre><code># Add the following flags to the training script\n--moe-batch-level-a2a-overlap\n--pipeline-parallel-schedule-lbfs\n--num-lbfs-batches 8\n</code></pre></p>"},{"location":"megatron/megatron/core/transformer/moe/#token-dispatcher","title":"Token Dispatcher \u7c7b\u578b","text":"<p>Megatron-Core \u652f\u6301\u591a\u79cd token dispatcher\uff1a - <code>alltoall</code>\uff1a\u7ecf\u5178\u7684 All-to-All token \u5206\u53d1 - <code>flex</code>\uff1a\u652f\u6301 DeepEP \u7684\u7075\u6d3b\u5206\u53d1\uff0c\u5b9e\u73b0\u8de8\u8282\u70b9\u9ad8\u6027\u80fd\u901a\u4fe1</p> <p>\u901a\u8fc7 <code>--moe-token-dispatcher-type</code> \u6307\u5b9a\uff0c\u82e5\u642d\u914d <code>--moe-enable-deepep</code> \u5219\u542f\u7528 DeepEP\u3002</p>"},{"location":"megatron/megatron/core/transformer/moe/#deepseek-deepep","title":"DeepSeek \u7684 DeepEP","text":"<ul> <li>DeepSeek-DeepEP \u63d0\u4f9b\u9488\u5bf9\u5927\u89c4\u6a21 MoE \u8bad\u7ec3\u4f18\u5316\u7684 token \u5206\u53d1\u4e0e\u805a\u5408\u5b9e\u73b0\u3002</li> <li>\u7279\u522b\u9002\u5408 DeepSeek-V3 \u7b49\u5927\u89c4\u6a21\u7ec6\u7c92\u5ea6 MoE \u67b6\u6784\u3002</li> <li>\u542f\u7528\u65b9\u5f0f\uff1a\u5728\u547d\u4ee4\u4e2d\u6dfb\u52a0 <code>--moe-token-dispatcher-type=flex --moe-enable-deepep</code>\u3002</li> </ul>"},{"location":"megatron/megatron/core/transformer/moe/#cuda-graph","title":"CUDA Graph \u652f\u6301","text":"<p>\u901a\u8fc7 <code>--cuda-graph-impl</code> \u53c2\u6570\u542f\u7528 CUDA Graph\uff0c\u6709\u4e24\u79cd\u5b9e\u73b0\uff1a</p> <ol> <li><code>--cuda-graph-impl=local</code>\uff1a\u4f7f\u7528 MCore \u5185\u90e8\u7684 CUDA Graph \u7ba1\u7406\u5668\u3002</li> <li><code>--cuda-graph-impl=transformer_engine</code>\uff1a\u4f7f\u7528 TransformerEngine \u7684 <code>make_graphed_callables()</code> \u63a5\u53e3\u3002</li> </ol> <p>\u4f7f\u7528\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u9700\u5728\u8bad\u7ec3\u811a\u672c\u4e2d\u8c03\u7528 <code>TECudaGraphHelper.create_cudagraphs()</code> \u4e0e <code>TECudaGraphHelper.cuda_graph_set_manual_hooks()</code>\uff0c\u793a\u4f8b\u89c1 <code>megatron/training/training.py</code>\u3002</p> <p>\u5bf9\u4e8e MoE \u6a21\u578b\uff0c\u5982\u679c\u672a\u8bbe\u7f6e <code>--moe-expert-capacity-factor</code> \u4e0e <code>--moe-pad-expert-input-to-capacity</code>\uff0c\u5176\u52a8\u6001\u5f62\u72b6\u4f1a\u963b\u6b62\u5bf9 MoE \u5c42\u8fdb\u884c CUDA Graph \u6355\u83b7\u3002\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7 <code>--cuda-graph-scope=attn</code> \u53ea\u5bf9\u6ce8\u610f\u529b\u90e8\u5206\uff08<code>TransformerLayer._forward_attention()</code>\uff09\u542f\u7528 CUDA Graph\uff0c\u800c\u8ba9 MoE \u90e8\u5206\uff08<code>TransformerLayer._forward_mlp()</code>\uff09\u4fdd\u6301\u539f\u72b6\u3002</p>"},{"location":"megatron/megatron/core/transformer/moe/#checkpointing","title":"Checkpointing","text":"<p>\u65b0\u589e\u7684\u201c\u4e22\u5f03\u8f93\u51fa\u201d\u68c0\u67e5\u70b9\u7b56\u7565\u5141\u8bb8\u5728\u524d\u5411\u8fc7\u7a0b\u4e2d\u4e22\u5f03\u7279\u5b9a\u5b50\u6a21\u5757\u7684\u8f93\u51fa\uff0c\u5e76\u5728\u53cd\u5411\u9636\u6bb5\u91cd\u65b0\u8ba1\u7b97\uff0c\u4ee5\u8282\u7701\u5185\u5b58\u3002\u53ef\u901a\u8fc7 <code>--recompute-granularity selective --recompute-modules [submodule1, submodule2, ...]</code> \u542f\u7528\uff0c\u652f\u6301\u7684\u5b50\u6a21\u5757\u5305\u62ec\uff1a</p> <ul> <li><code>moe_act</code>\uff1a\u91cd\u65b0\u8ba1\u7b97 GroupedMLP \u6fc0\u6d3b\u51fd\u6570</li> <li><code>layernorm</code>\uff1a\u91cd\u65b0\u8ba1\u7b97 <code>input_layernorm</code> \u4e0e <code>pre_mlp_layernorm</code>\uff08\u5728\u5b83\u4eec\u4e0d\u662f <code>IdentityOp</code> \u65f6\uff09</li> <li><code>mla_up_proj</code>\uff1a\u91cd\u65b0\u8ba1\u7b97 MLA \u4e0a\u6295\u4e0e RoPE \u5e94\u7528\u90e8\u5206</li> <li><code>core_attn</code>\uff1a\u91cd\u65b0\u8ba1\u7b97\u6838\u5fc3\u6ce8\u610f\u529b\u5b50\u6a21\u5757\uff08\u4f7f\u7528\u6807\u51c6\u68c0\u67e5\u70b9\u65b9\u5f0f\uff09</li> <li><code>mlp</code>\uff1a\u91cd\u65b0\u8ba1\u7b97\u7a20\u5bc6 MLP \u5b50\u6a21\u5757\uff08\u4f7f\u7528\u6807\u51c6\u68c0\u67e5\u70b9\u65b9\u5f0f\uff09\uff0c\u9002\u5408 DeepSeek-V3 \u7b49\u6df7\u5408\u6a21\u578b</li> <li><code>moe</code>\uff1a\u91cd\u65b0\u8ba1\u7b97 MoE \u5c42\u5b50\u6a21\u5757\uff08\u4f7f\u7528\u6807\u51c6\u68c0\u67e5\u70b9\u65b9\u5f0f\uff09</li> </ul>"},{"location":"megatron/megatron/core/transformer/moe/#upcycling","title":"Upcycling","text":"<p>\u901a\u8fc7 <code>--moe-use-upcycling</code> \u53ef\u542f\u7528 upcycling\uff1a\u4ece <code>--load</code> \u76ee\u5f55\u52a0\u8f7d\u7a20\u5bc6\u6a21\u578b\uff0c\u5728\u8fd0\u884c\u65f6\u8f6c\u6362\u4e3a MoE \u6a21\u578b\u5e76\u5f00\u59cb\u8bad\u7ec3\u3002\u8f6c\u6362\u540e\u7684\u6a21\u578b\u4f1a\u5728\u8bad\u7ec3\u524d\u4fdd\u5b58\u81f3 <code>--save</code> \u8def\u5f84\u3002\u8be5\u80fd\u529b\u57fa\u4e8e\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\u6784\u5efa\uff0c\u652f\u6301\u4e0e\u539f\u7a20\u5bc6\u68c0\u67e5\u70b9\u4e0d\u540c\u7684\u5e76\u884c\u6a21\u5f0f\uff0c\u8bad\u7ec3\u65f6\u53ef\u4f7f\u7528\u4efb\u610f\u4e13\u5bb6\u5e76\u884c\u5ea6\u3002</p> <p>\u6b64\u5916\u8fd8\u652f\u6301\u5728\u6700\u65b0\u7814\u7a76\u6210\u679c\u57fa\u7840\u4e0a\u7684\u66f4\u7ec6\u7c92\u5ea6 upcycling \u7b56\u7565\uff08\u8be6\u89c1\u8bba\u6587\uff09\u3002\u9ed8\u8ba4\u7b56\u7565\u662f\u5c06\u73b0\u6709 MLP \u590d\u5236\u4e3a\u591a\u4e2a\u4e13\u5bb6\uff1b\u7ec6\u7c92\u5ea6\u7b56\u7565\u901a\u8fc7 <code>--moe-upcycling-granularity</code> \u6307\u5b9a\u4e13\u5bb6\u9690\u85cf\u5c42\u76f8\u5bf9\u4e8e\u539f\u7a20\u5bc6 FFN \u7684\u7f29\u653e\u500d\u6570\u3002\u5c06\u8be5\u53c2\u6570\u8bbe\u4e3a\u6b63\u6574\u6570\u5373\u53ef\u542f\u7528\uff1b\u82e5\u8bbe\u4e3a 1\uff0c\u5219\u7b49\u540c\u4e8e\u9ed8\u8ba4\u7b56\u7565\u3002\u4f7f\u7528\u7ec6\u7c92\u5ea6\u7b56\u7565\u65f6\uff0cMoE \u7684 FFN \u9690\u85cf\u7ef4\u5ea6\u5e94\u4e3a\u7a20\u5bc6 FFN \u9690\u85cf\u7ef4\u5ea6\u9664\u4ee5 <code>--moe-upcycling-granularity</code>\u3002</p> <p>\u6ce8\u610f\uff1aMoE \u6a21\u578b\u7ed3\u6784\u901a\u8fc7\u811a\u672c\u53c2\u6570\u5b9a\u4e49\u3002\u6240\u6709 MoE \u76f8\u5173\u53c2\u6570\uff08\u5982 <code>--num-experts</code>\uff09\u90fd\u53ef\u81ea\u5b9a\u4e49\uff0c\u4f46\u5176\u4f59\u7ed3\u6784\u53c2\u6570\u9700\u4e0e\u539f\u7a20\u5bc6\u6a21\u578b\u4fdd\u6301\u4e00\u81f4\u3002</p>"},{"location":"megatron/megatron/core/transformer/moe/#_10","title":"\u6027\u80fd\u5efa\u8bae","text":"<ul> <li>\u5f53\u672c\u5730\u4e13\u5bb6\u6570\u8f83\u5927\u65f6\uff0c\u8bf7\u542f\u7528 <code>--moe-grouped-gemm</code> \u4e0e <code>--moe-permute-fusion</code>\u3002</li> <li>\u4f7f\u7528 <code>--moe-router-load-balancing-type sinkhorn</code> \u53ef\u83b7\u5f97\u66f4\u5747\u8861\u7684 token \u5206\u914d\uff0c\u4f46\u8ba1\u7b97\u5f00\u9500\u66f4\u9ad8\u3002</li> <li>\u4e3a\u51cf\u5c11\u901a\u4fe1\u74f6\u9888\uff0c\u5efa\u8bae\u642d\u914d <code>--tp-comm-overlap</code> \u4e0e\u6279\u7ea7 A2A \u91cd\u53e0\u3002</li> <li>\u5bf9\u4e8e\u957f\u5e8f\u5217\u4efb\u52a1\uff0c\u53ef\u7ed3\u5408\u4e0a\u4e0b\u6587\u5e76\u884c\uff08<code>--context-parallel-size</code>\uff09\u4e0e\u4e13\u5bb6\u5e76\u884c\u83b7\u53d6\u66f4\u9ad8\u6548\u7387\u3002</li> </ul>"},{"location":"megatron/megatron/core/transformer/moe/#_11","title":"\u76d1\u63a7\u4e0e\u8c03\u8bd5","text":"<ul> <li>\u53ef\u901a\u8fc7 <code>--log-throughput</code> \u4e0e <code>--log-layerwise-times</code> \u7b49\u53c2\u6570\u76d1\u63a7 MoE \u5c42\u6027\u80fd\u3002</li> <li>\u542f\u7528 <code>--capture-environment-metrics</code> \u53ef\u8bb0\u5f55 GPU \u529f\u8017\u7b49\u4fe1\u606f\uff0c\u8f85\u52a9\u5b9a\u4f4d\u6027\u80fd\u74f6\u9888\u3002</li> </ul>"},{"location":"megatron/post_training/docs/distillation/","title":"Megatron-LM ModelOpt \u84b8\u998f\u96c6\u6210","text":""},{"location":"megatron/post_training/docs/distillation/#_1","title":"\u76ee\u5f55","text":"<p>[[TOC]]</p>"},{"location":"megatron/post_training/docs/distillation/#_2","title":"\u4f7f\u7528\u65b9\u6cd5","text":""},{"location":"megatron/post_training/docs/distillation/#_3","title":"\u524d\u7f6e\u6761\u4ef6","text":"<p>\u5728\u7ed9\u5b9a\u6570\u636e\u96c6\u4e0a\u6267\u884c\u8f6f\u6807\u7b7e\u77e5\u8bc6\u84b8\u998f\u65f6\uff0c\u9700\u8981\u4e00\u4e2a\u5df2\u5145\u5206\u8bad\u7ec3\u7684\u5927\u6a21\u578b\u4f5c\u4e3a\u6559\u5e08\uff0c\u5229\u7528\u5176 logits \u4e3a\u5c0f\u6a21\u578b\u63d0\u4f9b\u6807\u7b7e\u3002</p> <p>\u6240\u9700\u6570\u636e\uff1a * \u6559\u5e08\u6a21\u578b\u6743\u91cd * \u5b66\u751f\u6a21\u578b\u6743\u91cd\uff08\u82e5\u975e\u4ece\u5934\u8bad\u7ec3\uff09 * \u6559\u5e08\u6a21\u578b\u7684 NeMo \u683c\u5f0f\u914d\u7f6e\u6587\u4ef6 * \u84b8\u998f\u8fd0\u884c\u914d\u7f6e\u6587\u4ef6 * \u5206\u8bcd\u5668 * \u6570\u636e\u96c6</p> <p>\u6b64\u5916\u9700\u8981\u5b89\u88c5 NVIDIA Model Optimizer \u5e93\uff08\u6700\u4f4e\u7248\u672c 0.15\uff09\u3002</p>"},{"location":"megatron/post_training/docs/distillation/#_4","title":"\u6559\u5e08\u68c0\u67e5\u70b9\u683c\u5f0f","text":"<p>\u6559\u5e08\u6a21\u578b\u53c2\u6570\u901a\u8fc7 NeMo \u6837\u5f0f\u7684 <code>model_config.yaml</code> \u63cf\u8ff0\uff0c\u5b58\u653e\u4e8e\u6559\u5e08\u6743\u91cd\u6839\u76ee\u5f55\u3002\u8be5\u6587\u4ef6\u7684\u5185\u5bb9\u4f1a\u8986\u76d6\u5b66\u751f\u6a21\u578b\u7684\u547d\u4ee4\u884c\u53c2\u6570\u540e\u518d\u4f20\u5165\u6559\u5e08\u6784\u9020\u51fd\u6570\u3002Megatron-LM \u9ed8\u8ba4\u4e0d\u5305\u542b\u8be5\u6587\u4ef6\uff0c\u9700\u8981\u624b\u52a8\u521b\u5efa\u3002</p> <p>\u6ce8\u610f\uff1aNeMo \u5f0f YAML \u4e2d\u7684\u952e\u5e76\u4e0d\u4e0e Megatron-LM \u53c2\u6570\u5b8c\u5168\u4e00\u4e00\u5bf9\u5e94\uff0c\u8f6c\u6362\u903b\u8f91\u4f4d\u4e8e <code>megatron/inference/gpt/model_provider.py</code>\u3002</p>"},{"location":"megatron/post_training/docs/distillation/#_5","title":"\u84b8\u998f\u914d\u7f6e\u6587\u4ef6","text":"<p>\u84b8\u998f\u6d41\u7a0b\u901a\u8fc7\u5355\u72ec\u7684 YAML \u6587\u4ef6\u914d\u7f6e\uff0c\u4f8b\u5982\uff1a</p> <pre><code>logit_layers: [\"output_layer\", \"output_layer\"]\nintermediate_layer_pairs:\n  - [\"decoder.layers.0.input_layernorm\", \"decoder.layers.0.input_layernorm\"]\n  - [\"decoder.final_layernorm\", \"decoder.layers.30.input_layernorm\"]\nskip_lm_loss: true\nkd_loss_scale: 10.0\n</code></pre> <ul> <li><code>logit_layers</code>\uff1a\u6307\u5b9a\u5b66\u751f\u4e0e\u6559\u5e08 logits \u6240\u5728\u7684\u5b50\u6a21\u5757\u540d\u79f0\u3002</li> <li><code>intermediate_layer_pairs</code>\uff1a\u53ef\u914d\u7f6e\u82e5\u5e72\u5bf9\u4e2d\u95f4\u6fc0\u6d3b\u8ba1\u7b97\u989d\u5916\u635f\u5931\u3002</li> <li><code>skip_lm_loss</code>\uff1a\u662f\u5426\u8df3\u8fc7\u539f\u59cb LM \u635f\u5931\uff0c\u4ec5\u4f7f\u7528 KD \u635f\u5931\u3002</li> <li><code>kd_loss_scale</code>\uff1a\u82e5\u4fdd\u7559 LM \u635f\u5931\uff0c\u5728\u5408\u5e76\u524d\u5bf9 KD \u635f\u5931\u8fdb\u884c\u7f29\u653e\u3002</li> </ul>"},{"location":"megatron/post_training/docs/distillation/#_6","title":"\u8bad\u7ec3","text":"<p>\u5728 <code>pretrain_gpt.py</code> \u4e2d\u6dfb\u52a0\u5982\u4e0b\u53c2\u6570\u5373\u53ef\u89e6\u53d1\u84b8\u998f\uff1a</p> <pre><code>--kd-teacher-load &lt;path-to-teacher-checkpoint&gt;\n--kd-distill-cfg &lt;path-to-distill-config-yaml-file&gt;\n--export-te-mcore-model\n</code></pre> <p>\u6ce8\u610f\uff1a\u82e5\u6559\u5e08\u68c0\u67e5\u70b9\u683c\u5f0f\u4e0e\u5b66\u751f\u4e0d\u540c\uff08\u5b66\u751f\u683c\u5f0f\u7531 <code>--ckpt-format</code> \u6307\u5b9a\uff09\uff0c\u53ef\u989d\u5916\u4f7f\u7528 <code>--export-kd-teacher-ckpt-format</code> \u6307\u5b9a\u6559\u5e08\u683c\u5f0f\u3002</p>"},{"location":"megatron/post_training/docs/distillation/#api","title":"\u84b8\u998f API \u4e0e\u8bbe\u8ba1","text":"<p>\u84b8\u998f\u901a\u8fc7 NVIDIA Model Optimizer \u5e93 \u5b9e\u73b0\u3002</p> <p>\u6a21\u578b\u6784\u5efa\u65f6\uff0c\u5c06\u5b66\u751f\u6a21\u578b\u5305\u88c5\u4e3a <code>modelopt.torch.distill.DistillationModel</code>\uff0c\u5185\u90e8\u5305\u542b\u6559\u5e08\u6a21\u578b\u3002\u635f\u5931\u51fd\u6570\u6839\u636e\u84b8\u998f\u914d\u7f6e\u6587\u4ef6\u4e2d\u7ed9\u5b9a\u7684\u5b66\u751f\u4e0e\u6559\u5e08\u6a21\u5757\u540d\u751f\u6210\u3002</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0clogits \u4f7f\u7528 KL \u6563\u5ea6\u635f\u5931\uff0c\u4e2d\u95f4\u7279\u5f81\u4f7f\u7528\u4f59\u5f26\u76f8\u4f3c\u5ea6\uff0c\u5b9a\u4e49\u5728 <code>megatron/inference/algos/distillation.py</code>\u3002</p>"},{"location":"megatron/post_training/docs/distillation/#_7","title":"\u9650\u5236","text":"<ul> <li>\u6682\u4e0d\u652f\u6301\u4ea4\u9519\u6d41\u6c34\u7ebf\u5e76\u884c\u3002</li> <li>\u4ec5\u652f\u6301 Megatron-Core \u6a21\u578b\uff08\u4e0d\u652f\u6301 Legacy \u7248\u672c\uff09\u3002</li> </ul>"},{"location":"megatron/post_training/docs/distillation/#_8","title":"\u5df2\u77e5\u95ee\u9898","text":"<ul> <li>\u8f6c\u6362\u4e3a <code>modelopt.torch.distill.DistillationModel</code> \u65f6\uff0c\u6bcf\u4e2a\u5fae\u6279\u4f1a\u989d\u5916\u5360\u7528\u5c11\u91cf\u663e\u5b58\u3002\u5982\u542f\u7528 <code>--manual-gc</code>\uff0c\u53ef\u80fd\u5728\u82e5\u5e72\u6b65\u540e\u89e6\u53d1 OOM\u3002</li> <li>\u5b58\u5728 CUDA \u5185\u6838\u95ee\u9898\uff1a\u4e0e\u5355\u72ec\u8fd0\u884c\u5b66\u751f\u6a21\u578b\u76f8\u6bd4\uff0c\u5b66\u751f\u524d\u5411\u5ef6\u8fdf\u660e\u663e\u589e\u52a0\uff0c\u8bad\u7ec3\u8fed\u4ee3\u65f6\u95f4\u53ef\u80fd\u6bd4\u9884\u671f\u957f\u7ea6 40%\u3002</li> </ul>"},{"location":"megatron/rl/","title":"Megatron-RL","text":""},{"location":"megatron/rl/#_1","title":"\u72b6\u6001","text":"<p>2025/08/27\uff1aMegatron-RL \u6b63\u5728\u79ef\u6781\u5f00\u53d1\u4e2d\u3002\u76ee\u524d\u5df2\u5728 NVIDIA \u5185\u90e8\u4f7f\u7528\uff0c\u4f46\u5916\u90e8\u7528\u6237\u6682\u4e0d\u53ef\u76f4\u63a5\u4f7f\u7528\uff0c\u56e0\u4e3a\u5c1a\u672a\u53d1\u5e03\u5168\u90e8\u5fc5\u8981\u4ee3\u7801\u3002\u968f\u7740\u5f00\u53d1\u63a8\u8fdb\uff0c\u73b0\u6709\u4ee3\u7801\u4e0e\u793a\u4f8b\u53ef\u80fd\u4f1a\u66f4\u65b0\u3002Megatron-RL \u7684\u89c4\u5212\u53ef\u53c2\u8003 #1776\u3002</p>"},{"location":"megatron/rl/#_2","title":"\u6982\u89c8","text":"<p>Megatron-RL \u5728 Megatron-LM \u4e2d\u5f15\u5165\u539f\u751f\u7684\u5f3a\u5316\u5b66\u4e60\u540e\u8bad\u7ec3\u6846\u67b6\uff0c\u4e3a\u5b9a\u4e49\u73af\u5883/Agent \u63d0\u4f9b\u7075\u6d3b\u5e93\uff0c\u5e76\u6269\u5c55\u8bad\u7ec3\u5faa\u73af\u4ee5\u652f\u6301 RL \u7b97\u6cd5\u3002</p> <p>\u5927\u90e8\u5206\u65b0\u4ee3\u7801\u4f4d\u4e8e <code>megatron/rl</code>\u3002\u6b64\u5916\uff1a - Megatron Core \u63a8\u7406\u4ee3\u7801\u8fdb\u884c\u4e86\u8f83\u5927\u6539\u52a8\u3002 - Megatron-LM \u8bad\u7ec3\u5faa\u73af\u8fdb\u884c\u4e86\u5fc5\u8981\u8c03\u6574\u4ee5\u652f\u6301 Megatron-RL\u3002</p> <p>\u793a\u4f8b\u73af\u5883\u4f4d\u4e8e <code>examples/rl</code>\u3002</p> <p>Megatron-RL \u9762\u5411\u9700\u8981\u5728\u6700\u65b0 NVIDIA \u786c\u4ef6\u4e0a\u5bf9\u5927\u6a21\u578b\u8fdb\u884c RL \u540e\u8bad\u7ec3\u7684\u7814\u7a76\u56e2\u961f\u3002</p> <p>\u5b83\u4e0d\u662f\u4f01\u4e1a\u7ea7\u6846\u67b6\uff0c\u65e0\u6cd5\u4fdd\u8bc1\u5f00\u7bb1\u5373\u7528\u5730\u652f\u6301\u4efb\u610f\u5f00\u6e90\u6a21\u578b\u3002\u5982\u9700\u8fd9\u7c7b\u80fd\u529b\uff0c\u8bf7\u53c2\u8003 NeMo RL\u3002</p>"},{"location":"megatron/rl/#_3","title":"\u8bbe\u8ba1","text":"<p>Megatron-RL \u7684\u6838\u5fc3\u7406\u5ff5\u662f\u5c3d\u53ef\u80fd\u5c06 Agent/\u73af\u5883\u8bbe\u8ba1\u4e0e\u5177\u4f53 RL \u5b9e\u73b0\u89e3\u8026\uff1a - \u73af\u5883\u8d1f\u8d23\u5b9a\u4e49\u201cAgent Environment\u201d\uff0c\u63a5\u6536\u63a8\u7406\u63a5\u53e3\uff08\u652f\u6301 <code>.generate(prompt, **generation_args)</code>\uff09\u5e76\u8fd4\u56de\u5305\u542b\u5956\u52b1\u7684\u7ecf\u9a8c\u56de\u5408\u3002 - RL \u8bad\u7ec3\u7cfb\u7edf\u8d1f\u8d23\u6279\u91cf\u63a8\u7406\u8bf7\u6c42\u3001\u6258\u7ba1\u63a8\u7406\u53ca\u8bad\u7ec3\u8c03\u5ea6\u7b49\u4efb\u52a1\u3002</p> <p>\u4e3b\u8981\u7ec4\u4ef6\u53ca\u804c\u8d23\u5982\u4e0b\uff1a</p>"},{"location":"megatron/rl/#agent-agent","title":"Agent \u4e0e\u73af\u5883\uff08\u7edf\u79f0 Agent\uff09","text":"<ul> <li>\u63a5\u6536 <code>InferenceInterface</code> \u53e5\u67c4\u3002</li> <li>\u8fd4\u56de <code>Rollout</code> \u6216 <code>EvaluationResponse</code>\u3002</li> <li>\u8d1f\u8d23\u91c7\u6837\u53c2\u6570\u3001\u914d\u7f6e\u81ea\u5b9a\u4e49\u751f\u6210\u53c2\u6570\uff08\u5982\u505c\u6b62\u6761\u4ef6\u3001\u5185\u8054\u8bc4\u4f30\uff09\u7b49\u3002</li> </ul>"},{"location":"megatron/rl/#trainerevaluator","title":"Trainer/Evaluator","text":"<ul> <li>\u7ba1\u7406\u56de\u5408\u751f\u6210\u4e0e\u8bc4\u4f30\u7684\u6d41\u7a0b\u3002</li> <li>\u534f\u8c03\u6574\u4f53\u63a8\u7406\u63a5\u53e3\u4e0e Agent\u3002</li> </ul>"},{"location":"megatron/rl/#inference-interface","title":"Inference Interface","text":"<ul> <li>\u4e3a <code>AgenticEnvironment</code> \u63d0\u4f9b <code>.generate(prompt, **generation_args)</code> \u80fd\u529b\u3002</li> <li>\u53ef\u57fa\u4e8e\u591a\u79cd\u540e\u7aef\uff08\u5982 Megatron\u3001OpenAI\u3001HF\uff09\uff0c\u5e76\u652f\u6301\u591a\u79cd\u914d\u7f6e\u3002</li> </ul>"},{"location":"megatron/rl/#_4","title":"\u793a\u4f8b","text":"<p>\u53c2\u89c1 <code>examples/rl</code>\uff0c\u5176\u4e2d\u5c55\u793a\u4e86\uff1a - \u81ea\u5b9a\u4e49 <code>InferenceInterface</code> \u7aef\u70b9 - \u793a\u4f8b <code>Agents</code></p>"},{"location":"megatron/tests/functional_tests/test_cases/gpt/gpt3_mr_mcore_reruns_resume_check_grads/","title":"\u6d4b\u8bd5\u6848\u4f8b\uff1a\u68af\u5ea6\u6821\u9a8c","text":""},{"location":"megatron/tests/functional_tests/test_cases/gpt/gpt3_mr_mcore_reruns_resume_check_grads/#_1","title":"\u68af\u5ea6\u6d4b\u8bd5","text":""},{"location":"megatron/tests/functional_tests/test_cases/gpt/gpt3_mr_mcore_reruns_resume_check_grads/#_2","title":"\u6d4b\u8bd5\u7ec4\u4ef6\u6982\u89c8","text":"<ul> <li>\u8bad\u7ec3\u4e00\u6b65\u5e76\u8bb0\u5f55\u68af\u5ea6\u3002</li> <li>\u68af\u5ea6\u4fdd\u5b58\u5728\u68c0\u67e5\u70b9\u7684\u4f18\u5316\u5668\u72b6\u6001\u4e2d\u3002\u53ef\u901a\u8fc7\u5c06 Adam \u7684 b1\u3001b2 \u8bbe\u4e3a 0 \u6765\u5b9e\u73b0\uff0c\u4f7f\u6bcf\u4e00\u6b65\u8986\u76d6\u4e4b\u524d\u7684\u72b6\u6001\uff1b\u4e0a\u4e00\u8f6e\u68af\u5ea6\u5b58\u50a8\u5728\u4e00\u9636\u52a8\u91cf\u4e2d\u3002\u8fd0\u884c\u65f6\u9700\u52a0\u4e0a <code>--adam-beta1: 0.0</code> \u548c <code>--adam-beta2: 0.0</code>\u3002</li> <li>\u5f53\u524d\uff082025/09/16\uff09\u7684\u68af\u5ea6\u5bf9\u6bd4\u811a\u672c\u9488\u5bf9 GPT \u505a\u4e86\u9002\u914d\u3002\u82e5\u7528\u4e8e\u5176\u4ed6\u6a21\u578b\uff0c\u9700\u8981\u8c03\u6574\u8bc6\u522b\u884c\u5e76\u884c\u7ebf\u6027\u5c42\u7684\u903b\u8f91\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u5c42\u7684\u5206\u7247\u65b9\u5f0f\u4e0d\u540c\uff0c\u9700\u8981\u4e0d\u540c\u7684 reshape \u6765\u5bf9\u9f50\u5355\u5361\u4e0e\u5e76\u884c\u573a\u666f\u7684\u68af\u5ea6\u3002\u811a\u672c\u4f4d\u4e8e <code>tests/functional_tests/python_test_utils/test_optimizer_grads_match.py</code>\u3002</li> <li>\u811a\u672c\u4f9d\u8d56\u65e7\u7248\u4f18\u5316\u5668\u68c0\u67e5\u70b9\u683c\u5f0f\uff0c\u8fd0\u884c\u6d4b\u8bd5\u65f6\u9700\u6dfb\u52a0 <code>--dist-ckpt-save-pre-mcore-014: true</code>\u3002</li> <li>\u9700\u5173\u95ed dropout \u7b49\u968f\u673a\u5316\u64cd\u4f5c\uff0c\u5426\u5219\u5355\u4e2a\u5168\u5c40 batch \u4e0e\u6a21\u578b/\u6570\u636e\u5e76\u884c\u5207\u5206\u540e\u7684\u7279\u5f81\u6a21\u5f0f\u4f1a\u4e0d\u4e00\u81f4\u3002</li> <li>\u8be5\u65b9\u6cd5\u4e0d\u4ec5\u53ef\u9a8c\u8bc1\u6a21\u578b\u5e76\u884c\u914d\u7f6e\uff0c\u4e5f\u53ef\u68c0\u6d4b\u7406\u8bba\u4e0a\u68af\u5ea6\u5e94\u4e00\u81f4\u7684\u4efb\u610f\u914d\u7f6e\u3002</li> <li>\u5982\u9700\u65b0\u589e\u540c\u7c7b\u6d4b\u8bd5\uff0c\u53ef\u590d\u5236\u4fee\u6539\u6b64\u76ee\u5f55\uff0c\u5e76\u5728 <code>tests/functional_tests/test_utils/recipes/gpt-grads.yaml</code> \u7b49\u914d\u7f6e\u4e2d\u6ce8\u518c\u3002</li> </ul>"},{"location":"megatron/tests/functional_tests/test_cases/gpt/gpt_static_inference_tp1_pp1_16b_multiprompt_tokensmatch/","title":"\u6d4b\u8bd5\u6848\u4f8b\uff1a\u9759\u6001\u63a8\u7406","text":""},{"location":"megatron/tests/functional_tests/test_cases/gpt/gpt_static_inference_tp1_pp1_16b_multiprompt_tokensmatch/#_1","title":"\u57fa\u51c6\u63d0\u793a","text":"<p>\u8fd9\u4e9b\u57fa\u51c6\u63d0\u793a\u65e8\u5728\u9a8c\u8bc1\u6a21\u578b\u80fd\u5426\u7ed9\u51fa\u9884\u671f\u8865\u5168\uff0c\u800c\u975e\u8bbe\u5907\u7279\u5b9a\u7684\u8f93\u51fa\u3002\u672c\u793a\u4f8b\u9009\u53d6\u4e24\u6bb5\u5e38\u89c1\u8bb8\u53ef\u8bc1\u6587\u672c\u7684\u5f00\u5934\uff0c\u68c0\u67e5\u6a21\u578b\u80fd\u5426\u51c6\u786e\u7eed\u5199\u81f3\u5c11\u4e0b\u4e00\u6bb5\u5185\u5bb9\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u5f53\u9047\u5230\u6bb5\u843d\u6362\u884c\uff08\u9996\u6b21\u51fa\u73b0 <code>\\n\\n</code>\uff09\u65f6\uff0c\u6709\u4e9b\u6a21\u578b\u7684\u8f93\u51fa\u5f00\u59cb\u51fa\u73b0\u5dee\u5f02\u3002</p> <p>\u8bf7\u52ff\u8f7b\u6613\u4fee\u6539 A100/H100 \u7684\u57fa\u51c6\u7ed3\u679c\uff0c\u9664\u975e\u7ecf\u8fc7\u5145\u5206\u9a8c\u8bc1\u4ecd\u5c5e\u201c\u6b63\u786e\u201d\u8f93\u51fa\u3002\u8fd9\u4e9b\u7ed3\u679c\u5e76\u975e\u968f\u673a\u6587\u672c\uff0c\u800c\u662f\u57fa\u4e8e\u8bad\u7ec3\u96c6\u4e2d\u9ad8\u9891\u51fa\u73b0\u7684\u516c\u5171\u6587\u672c\uff0c\u5177\u5907\u8db3\u591f\u80fd\u529b\u7684\u6a21\u578b\u7406\u5e94\u53ef\u4ee5\u7cbe\u51c6\u8865\u5168\u3002</p>"},{"location":"megatron/tools/retro/","title":"Retro \u4e0e InstructRetro","text":"<p>Retro (Borgeaud et al., 2022) \u662f\u4e00\u79cd\u91c7\u7528\u68c0\u7d22\u589e\u5f3a\u9884\u8bad\u7ec3\u7684\u81ea\u56de\u5f52\u89e3\u7801\u5668\u5f0f\u8bed\u8a00\u6a21\u578b\u3002 \u501f\u52a9\u68c0\u7d22\u80fd\u529b\uff0cRetro \u53ef\u4ee5\u4ece\u4e07\u4ebf\u7ea7\u522b\u7684\u6807\u6ce8\u8bed\u6599\u4e2d\u68c0\u7d22\uff0c\u4ece\u96f6\u5f00\u59cb\u5b8c\u6210\u5927\u89c4\u6a21\u9884\u8bad\u7ec3\uff0c\u5e76\u5728\u5b9e\u9645\u90e8\u7f72\u4e2d\u5177\u5907\u826f\u597d\u7684\u6269\u5c55\u6027\u3002 \u4e0e\u4ec5\u4f9d\u8d56\u6a21\u578b\u53c2\u6570\u9690\u5f0f\u5b58\u50a8\u4e8b\u5b9e\u77e5\u8bc6\u7684\u6807\u51c6 GPT \u76f8\u6bd4\uff0c\u5f15\u5165\u68c0\u7d22\u53ef\u4ee5\u66f4\u9ad8\u6548\u5730\u5b58\u50a8\u4e8b\u5b9e\u77e5\u8bc6\uff0c\u4ece\u800c\u5728\u663e\u8457\u964d\u4f4e\u53c2\u6570\u91cf\u7684\u540c\u65f6\u5b9e\u73b0\u66f4\u4f4e\u7684\u56f0\u60d1\u5ea6\u3002 \u6b64\u5916\uff0c\u901a\u8fc7\u66f4\u65b0\u68c0\u7d22\u6570\u636e\u5e93\u5373\u53ef\u66f4\u65b0\u8bed\u8a00\u6a21\u578b\u4e2d\u7684\u77e5\u8bc6 (Wang et al., 2023a)\uff0c\u65e0\u9700\u91cd\u65b0\u8bad\u7ec3\u6a21\u578b\u3002</p> <p>InstructRetro (Wang et al., 2023b) \u5728 Retro \u7684\u57fa\u7840\u4e0a\u8fdb\u4e00\u6b65\u6269\u5c55\u81f3 480 \u4ebf\u53c2\u6570\uff0c\u662f\u622a\u81f3 2023 \u5e74 12 \u6708\u6700\u5927\u7684\u68c0\u7d22\u589e\u5f3a\u5f0f\u9884\u8bad\u7ec3\u8bed\u8a00\u6a21\u578b\u3002 \u7ecf\u8fc7\u6307\u4ee4\u5fae\u8c03\u7684 InstructRetro \u5728\u96f6\u6837\u672c\u573a\u666f\u4e0b\u663e\u8457\u4f18\u4e8e\u540c\u7b49\u89c4\u6a21\u7684 GPT\uff1a\u5728 8 \u4e2a\u77ed\u6587\u672c\u95ee\u7b54\u4efb\u52a1\u4e0a\u5e73\u5747\u63d0\u5347 7%\uff0c\u5728 4 \u4e2a\u9ad8\u96be\u5ea6\u957f\u6587\u672c\u95ee\u7b54\u4efb\u52a1\u4e0a\u63d0\u5347 10%\uff0c\u5728 3 \u4e2a\u6458\u8981\u4efb\u52a1\u4e0a\u63d0\u5347 16%\u3002 \u6211\u4eec\u8fd8\u53d1\u73b0\uff0c\u79fb\u9664 InstructRetro \u7684\u7f16\u7801\u5668\u5e76\u76f4\u63a5\u5c06\u5176\u89e3\u7801\u5668\u9aa8\u67b6\u4f5c\u4e3a GPT \u4f7f\u7528\uff0c\u4ecd\u53ef\u83b7\u5f97\u4e0e\u539f\u6a21\u578b\u76f8\u5f53\u7684\u6548\u679c\u3002</p> <p>\u672c\u6587\u6863\u63d0\u4f9b\u4e86\u4e00\u4e2a\u590d\u73b0 Retro \u4e0e InstructRetro \u7684\u7aef\u5230\u7aef\u6559\u7a0b\u3002</p>"},{"location":"megatron/tools/retro/#_1","title":"\u76ee\u5f55","text":"<ul> <li>\u68c0\u67e5\u70b9</li> <li>\u7aef\u5230\u7aef\u590d\u73b0\u6307\u5357<ul> <li>\u6b65\u9aa4 0\uff1a\u73af\u5883\u51c6\u5907<ul> <li>Docker \u955c\u50cf</li> <li>\u5b89\u88c5\u4f9d\u8d56</li> </ul> </li> <li>\u6b65\u9aa4 1\uff1a\u6784\u5efa\u68c0\u7d22\u6570\u636e\u5e93</li> <li>\u6b65\u9aa4 2\uff1a\u9884\u8bad\u7ec3</li> <li>\u6b65\u9aa4 3\uff1a\u56f0\u60d1\u5ea6\u8bc4\u4f30</li> <li>\u6b65\u9aa4 4\uff1a\u6307\u4ee4\u5fae\u8c03</li> <li>\u6b65\u9aa4 5\uff1a\u4e0b\u6e38\u4efb\u52a1\u8bc4\u4f30</li> </ul> </li> <li>\u5f15\u7528</li> </ul>"},{"location":"megatron/tools/retro/#_2","title":"\u68c0\u67e5\u70b9","text":"<p>\u4e0b\u8868\u7ed9\u51fa\u4e86 Retro \u4e0e InstructRetro \u7684\u9884\u8bad\u7ec3\u68c0\u67e5\u70b9\uff0c\u53ef\u901a\u8fc7\u4ee5\u4e0b\u94fe\u63a5\u4e0b\u8f7d\uff1a</p> \u6a21\u578b \u53c2\u6570\u89c4\u6a21 \u6307\u4ee4\u5fae\u8c03 \u4e0b\u8f7d\u94fe\u63a5 1 \u4e0b\u8f7d\u94fe\u63a5 2 \u4e0b\u8f7d\u94fe\u63a5 3 <code>retro-8b-base-4k</code> 8B Huggingface NGC Google Drive <code>retro-8b-instruct-4k</code> 8B \u662f Huggingface NGC Google Drive <code>retro-48b-base-4k</code> 48B Huggingface NGC Google Drive <code>retro-48b-instruct-4k</code> 48B \u662f Huggingface NGC Google Drive"},{"location":"megatron/tools/retro/#_3","title":"\u7aef\u5230\u7aef\u590d\u73b0\u6307\u5357","text":"<p>\u672c\u6559\u7a0b\u8986\u76d6\u4e86 InstructRetro \u7aef\u5230\u7aef\u590d\u73b0\u7684\u5404\u4e2a\u73af\u8282\uff1a\u5305\u62ec\u5927\u89c4\u6a21\u68c0\u7d22\u6784\u5efa\u3001\u9884\u8bad\u7ec3\u3001\u56f0\u60d1\u5ea6\u8bc4\u4f30\u3001\u6307\u4ee4\u5fae\u8c03\u4ee5\u53ca\u4e0b\u6e38\u4efb\u52a1\u8bc4\u4f30\u3002</p> <p>\u5982\u679c\u4f60\u53ea\u5173\u6ce8\u8bc4\u4f30\uff0c\u53ef\u76f4\u63a5\u4e0b\u8f7d\u6211\u4eec\u516c\u5f00\u7684\u68c0\u67e5\u70b9\uff0c\u5e76\u8df3\u5230 \u6b65\u9aa4 5 \u8fdb\u884c\u4e0b\u6e38\u4efb\u52a1\u8bc4\u4f30\u3002</p>"},{"location":"megatron/tools/retro/#0","title":"\u6b65\u9aa4 0\uff1a\u73af\u5883\u51c6\u5907","text":"<p>\u5efa\u8bae\u5728 Docker \u73af\u5883\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u6d41\u7a0b\u3002</p>"},{"location":"megatron/tools/retro/#docker","title":"Docker \u955c\u50cf","text":"<p>\u6211\u4eec\u5728 tools/retro/examples/Dockerfile \u63d0\u4f9b\u4e86\u7528\u4e8e\u590d\u73b0\u7684 Docker \u6784\u5efa\u6587\u4ef6\uff0c\u57fa\u4e8e NGC Docker <code>nvcr.io/nvidia/pytorch:23.09-py3</code> \u955c\u50cf\u3002</p>"},{"location":"megatron/tools/retro/#_4","title":"\u5b89\u88c5\u4f9d\u8d56","text":"<p>\u514b\u9686 Megatron \u4ed3\u5e93\uff1a</p> <pre><code>git clone --branch InstructRetro https://github.com/NVIDIA/Megatron-LM.git\n</code></pre> <p>\u5982\u679c\u65e0\u6cd5\u4f7f\u7528 Docker\uff0c\u5efa\u8bae\u4ece\u5e72\u51c0\u7684 Conda \u73af\u5883\u5f00\u59cb\uff0c\u5e76\u5b89\u88c5\u4ee5\u4e0b\u8fd0\u884c\u65f6\u4f9d\u8d56\uff1a</p> <ul> <li>Python 3.10</li> <li>NVIDIA CUDA\u00ae 12.2.1</li> <li>NVIDIA cuBLAS 12.2.5.6</li> <li>NVIDIA cuDNN 8.9.5</li> <li>NVIDIA NCCL 2.18.5</li> <li>PyTorch 2.1.0a0+32f93b1</li> </ul> <p>\u968f\u540e\u5b89\u88c5 Retro \u76f8\u5173\u4f9d\u8d56\uff1a</p> <pre><code>pip install -U faiss-gpu\npip install -U transformers\npip install -U sentencepiece\npip install -U h5py\npip install -U nltk\npip install -U einops\n</code></pre>"},{"location":"megatron/tools/retro/#1","title":"\u6b65\u9aa4 1\uff1a\u6784\u5efa\u68c0\u7d22\u6570\u636e\u5e93","text":"<p>\u672c\u6b65\u9aa4\u901a\u8fc7 Faiss \u6784\u5efa\u7528\u4e8e InstructRetro \u7684\u5927\u89c4\u6a21\u68c0\u7d22\u6570\u636e\u5e93\uff0c\u4ece\u4e07\u4ebf token \u4e2d\u68c0\u7d22\uff0c\u5e76\u9884\u5904\u7406\uff08\u53ca\u4fdd\u5b58\uff09\u4f9b\u9884\u8bad\u7ec3\u4f7f\u7528\u7684\u68c0\u7d22\u90bb\u5c45\u3002</p> <p>\u8be6\u89c1 tools/retro/build_db.md\u3002</p>"},{"location":"megatron/tools/retro/#2","title":"\u6b65\u9aa4 2\uff1a\u9884\u8bad\u7ec3","text":"<p>\u52a1\u5fc5\u5148\u5b8c\u6210\u6b65\u9aa4 1 \u4e2d\u7684\u68c0\u7d22\u6570\u636e\u5e93\u6784\u5efa\uff0c\u4ee5\u786e\u4fdd\u9884\u5904\u7406\u7684\u68c0\u7d22\u90bb\u5c45\u4e0e\u9884\u8bad\u7ec3\u8bed\u6599\u5b8c\u5168\u5339\u914d\u3002</p> <p>\u9884\u8bad\u7ec3\u9636\u6bb5\u540c\u65f6\u652f\u6301\u4ece\u96f6\u8bad\u7ec3 Retro \u4ee5\u53ca\u5728\u5df2\u8bad\u7ec3\u7684 GPT \u6a21\u578b\u4e0a\u7ee7\u7eed\u9884\u8bad\u7ec3\u3002</p> <p>\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u793a\u4f8b\u811a\u672c\u7528\u4e8e\u4ece\u96f6\u8bad\u7ec3 8.43 \u4ebf\u53c2\u6570\u7684 Retro\u3002\u8bf7\u6839\u636e\u81ea\u8eab\u914d\u7f6e\u4fee\u6539 tools/retro/examples/pretrain_model.sh\uff0c\u5e76\u786e\u4fdd\u6570\u636e\u8def\u5f84\u4e0e\u6b65\u9aa4 1 \u4f7f\u7528\u7684\u8def\u5f84\u4e00\u81f4\uff0c\u4ee5\u4fbf\u68c0\u7d22\u90bb\u5c45\u4e0e\u8bed\u6599\u5bf9\u5e94\u3002</p> <pre><code>bash tools/retro/examples/pretrain_model.sh\n</code></pre> <p>\u9884\u8bad\u7ec3\u5b8c\u6210\u540e\uff0c\u5982\u679c\u5728 <code>pretrain_model.sh</code> \u4e2d\u6307\u5b9a\u4e86 <code>--save</code>\uff0c\u6a21\u578b\u68c0\u67e5\u70b9\u4f1a\u4fdd\u5b58\u5230\u8be5\u76ee\u5f55\u3002</p> <p>\u82e5\u5e0c\u671b\u5728\u5df2\u6709\u7684 GPT \u6a21\u578b\u4e0a\u7ee7\u7eed\u8bad\u7ec3\u5e26\u68c0\u7d22\u7684 Retro\uff0c\u8bf7\u5728 <code>pretrain_model.sh</code> \u4e2d\u914d\u7f6e <code>--load</code> \u6307\u5411 GPT \u68c0\u67e5\u70b9\uff08GPT \u4e0e Retro \u7684\u9690\u85cf\u5c3a\u5bf8\u3001\u5c42\u6570\u3001\u6fc0\u6d3b\u51fd\u6570\u7b49\u67b6\u6784\u9700\u5b8c\u5168\u4e00\u81f4\uff09\u3002\u540c\u65f6\u9700\u8981\u8bbe\u7f6e <code>--no-load-optim --finetune</code>\uff0c\u786e\u4fdd\u4e0d\u4f1a\u52a0\u8f7d GPT \u7684\u4f18\u5316\u5668\u72b6\u6001\uff0c\u4ece\u4e00\u4e2a\u5e72\u51c0\u7684\u68c0\u7d22\u589e\u5f3a\u8bad\u7ec3\u5f00\u59cb\u3002 \u9996\u4e2a\u4f5c\u4e1a/\u9996\u8f6e\u8fd0\u884c\u5b8c\u6210\u540e\uff0c\u53ef\u7ee7\u7eed\u4ece\u6700\u65b0\u68c0\u67e5\u70b9\u63a5\u7eed\u8bad\u7ec3\u3002\u5728\u540e\u7eed\u4f5c\u4e1a\u4e2d\uff0c\u5e94\u53bb\u6389 <code>--no-load-optim --finetune</code>\uff0c\u4ee5\u4fbf\u6b63\u786e\u52a0\u8f7d\u4e0a\u4e00\u6b21\u4f5c\u4e1a\u7684\u4f18\u5316\u5668\u72b6\u6001\u3002</p>"},{"location":"megatron/tools/retro/#3","title":"\u6b65\u9aa4 3\uff1a\u56f0\u60d1\u5ea6\u8bc4\u4f30","text":"<p>\u9884\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u7a0b\u5e8f\u4f1a\u6309\u7167 <code>--eval-interval</code> \u95f4\u9694\u81ea\u52a8\u5728\u6307\u5b9a\u7684\u9a8c\u8bc1\u8bed\u6599\u4e0a\u8bc4\u4f30\u56f0\u60d1\u5ea6\u3002\u8be5\u9a8c\u8bc1\u8bed\u6599\u9700\u4e0e\u6b65\u9aa4 1 \u4e2d\u4f7f\u7528\u7684\u8bed\u6599\u5b8c\u5168\u4e00\u81f4\uff0c\u4ee5\u786e\u4fdd\u68c0\u7d22\u90bb\u5c45\u5339\u914d\u3002</p> <p>\u5982\u679c\u53ea\u60f3\u8bc4\u4f30\u5df2\u8bad\u7ec3\u6a21\u578b\u7684\u56f0\u60d1\u5ea6\uff0c\u53ef\u5728 <code>pretrain_model.sh</code> \u4e2d\u6dfb\u52a0 <code>--skip-train</code>\uff0c\u8df3\u8fc7\u8bad\u7ec3\u9636\u6bb5\uff0c\u4ec5\u5bf9 <code>--load</code> \u6307\u5b9a\u7684\u6a21\u578b\u5728\u9a8c\u8bc1\u96c6\u4e0a\u8ba1\u7b97\u56f0\u60d1\u5ea6\u3002\u518d\u6b21\u8fd0\u884c\u4e0a\u8ff0\u547d\u4ee4\u5373\u53ef\u3002</p> <pre><code>bash tools/retro/examples/pretrain_model.sh\n</code></pre>"},{"location":"megatron/tools/retro/#4","title":"\u6b65\u9aa4 4\uff1a\u6307\u4ee4\u5fae\u8c03","text":"<p>\u5728\u8be5\u6b65\u9aa4\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u6307\u4ee4\u6570\u636e\u5bf9\u9884\u8bad\u7ec3\u6a21\u578b\u8fdb\u884c\u5fae\u8c03\uff0c\u5e76\u63d0\u4f9b\u793a\u4f8b\u811a\u672c\u5fae\u8c03 8.43 \u4ebf\u53c2\u6570\u7684 Retro\u3002</p> <p>\u6211\u4eec\u8fd8\u5f00\u6e90\u4e86\u4e00\u5957\u53ef\u6df7\u5408\u4f7f\u7528\u7684\u6307\u4ee4\u5fae\u8c03\u6570\u636e\u96c6\uff0c\u53ef\u5728\u6b64\u94fe\u63a5\u4e0b\u8f7d\u3002\u8be5\u6570\u636e\u96c6\u5305\u542b\u4ee5\u4e0b\u5f00\u6e90\u6307\u4ee4\u8c03\u4f18\u8bed\u6599\uff1a</p>"},{"location":"megatron/tools/retro/#_5","title":"\u6307\u4ee4\u5fae\u8c03\u6570\u636e\u96c6\u6784\u6210","text":"\u6570\u636e\u96c6 \u6837\u672c\u6570 \u8f6e\u6570 \u91c7\u6837\u6982\u7387 soda 2560 0.005 0.020 eli5 2561 0.055 0.020 self_instruct_short 1280 0.043 0.010 self_instruct_long 2560 0.333 0.020 unnatural-instructions 2560 0.024 0.020 flan_cot 1280 0.093 0.010 dolly 6400 0.938 0.050 oasst-skip-noncode 104558 1.839 0.817 oasst-skip-code 4243 1.839 0.033 <p>\u5982\u9700\u4e86\u89e3\u5404\u6307\u4ee4\u6570\u636e\u96c6\u7684\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u53c2\u9605\u4e0a\u8868\u6240\u5217\u8bba\u6587\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u4e0a\u8ff0\u6307\u4ee4\u6570\u636e\u96c6\u5747\u6765\u81ea\u516c\u5f00\u8d44\u6e90\uff0c\u4e0e InstructRetro \u4f7f\u7528\u7684\u6570\u636e\u96c6\u7565\u6709\u5dee\u5f02\uff1b\u540e\u8005\u5305\u542b\u90e8\u5206\u79c1\u6709\u4e0e\u5546\u4e1a\u6570\u636e\u96c6\uff0c\u56e0\u6b64\u5728\u4e0b\u6e38\u4efb\u52a1\u4e0a\u53ef\u80fd\u5b58\u5728 1-2% \u7684\u7cbe\u5ea6\u5dee\u5f02\u3002</p>"},{"location":"megatron/tools/retro/#_6","title":"\u6307\u4ee4\u5fae\u8c03\u811a\u672c","text":"<p>\u5c06\u6df7\u5408\u6307\u4ee4\u6570\u636e\u96c6\u4e0b\u8f7d\u5230\u6570\u636e\u76ee\u5f55 <code>$DATA_HOME</code>\uff0c\u5e76\u4fee\u6539 tools/retro/sft/sft_retro_lm.sh \u793a\u4f8b\u811a\u672c\u3002</p> <p>\u4ee5\u4e0b\u793a\u4f8b\u547d\u4ee4\u6f14\u793a\u4e86\u5982\u4f55\u5728 8.43 \u4ebf\u53c2\u6570\u7684 Retro \u4e0a\u8fdb\u884c\u6307\u4ee4\u5fae\u8c03\uff1a</p> <pre><code>                                      [blend-dataset-name] [model-size] [batch-size]  [lr]    [checkpoints]\nbash tools/retro/sft/sft_retro_lm.sh       open_inst               843m            128    5e-6  &lt;path/to/pretrained/retro&gt;\n</code></pre> <p><code>blend_dataset_name</code> \u53c2\u6570\u4f1a\u6839\u636e <code>${blend_dataset_name}.sh</code> \u4e2d\u5b9a\u4e49\u7684\u6743\u91cd\u4e0e\u914d\u7f6e\uff08\u793a\u4f8b\u4e2d\u7684 open_inst.sh\uff09\u5bf9 <code>$DATA_HOME</code> \u5185\u7684\u6570\u636e\u96c6\u8fdb\u884c\u52a0\u6743\u6df7\u5408\u3002 \u5fae\u8c03\u540e\u7684\u68c0\u67e5\u70b9\u5c06\u4fdd\u5b58\u81f3 <code>--save</code> \u6307\u5b9a\u76ee\u5f55\uff0c\u4f8b\u5982 <code>&lt;SFT_HOME&gt;/checkpoints/applications/retro-sft_pp1_same_format_ctx1_843m_128_5e-6</code>\u3002</p>"},{"location":"megatron/tools/retro/#5","title":"\u6b65\u9aa4 5\uff1a\u4e0b\u6e38\u4efb\u52a1\u8bc4\u4f30","text":"<p>\u672c\u6b65\u9aa4\u5c55\u793a\u5982\u4f55\u5728\u96f6\u6837\u672c\u8bbe\u5b9a\u4e0b\u8bc4\u4f30 InstructRetro \u5728\u95ee\u7b54\u7b49\u4e0b\u6e38\u4efb\u52a1\u4e0a\u7684\u8868\u73b0\u3002\u6211\u4eec\u63d0\u4f9b\u4e86\u7ecf\u8fc7\u7edf\u4e00\u683c\u5f0f\u9884\u5904\u7406\u7684\u5f00\u6e90\u8bc4\u6d4b\u6570\u636e\u96c6\uff0c\u53ef\u4ece\u6b64\u94fe\u63a5\u4e0b\u8f7d\u3002\u8bf7\u6cbf\u7528\u6b65\u9aa4 0-4 \u4e2d\u7684 retro \u5de5\u4f5c\u76ee\u5f55\uff0c\u786e\u4fdd\u68c0\u7d22\u90bb\u5c45\u4e0e\u9884\u8bad\u7ec3\u8bed\u6599\u5339\u914d\u3002 \u5982\u679c\u53ea\u6267\u884c\u6b65\u9aa4 5\uff0c\u53ef\u53c2\u8003\u793a\u4f8b retro \u5de5\u4f5c\u76ee\u5f55\u53ca 8 \u4ebf\u53c2\u6570\u6a21\u578b\u7684 <code>args.json</code>\uff08\u4e0b\u8f7d\u94fe\u63a5\u5728\u8fd9\u91cc\uff09\uff0c\u547d\u4ee4\u884c\u53c2\u6570\u53ef\u8986\u76d6 JSON \u4e2d\u7684\u8bbe\u7f6e\u3002</p> <p>\u4e0b\u65b9\u793a\u4f8b\u547d\u4ee4\u6f14\u793a\u4e86\u4f7f\u7528 InstructRetro \u68c0\u67e5\u70b9\u5728 Natural Question (NQ) \u4efb\u52a1\u4e0a\u7684\u751f\u6210\u8fc7\u7a0b\uff0c\u9002\u7528\u4e8e\u6b65\u9aa4 4 \u83b7\u5f97\u7684 8.43 \u4ebf\u53c2\u6570 InstructRetro\u3002\u8bf7\u6839\u636e\u5b9e\u9645\u6570\u636e\u96c6\u8def\u5f84\u8fdb\u884c\u4fee\u6539\uff0c\u5e76\u5728\u4f7f\u7528\u5176\u5b83\u68c0\u67e5\u70b9\u65f6\u8c03\u6574\u547d\u4ee4\u3002</p> <pre><code>bash tools/retro/text_generation/retro_generate.sh nq 843m greedy test  0 20000 1000 5 pp1 &lt;SFT_HOME&gt;/checkpoints/applications/retro-sft_pp1_same_format_ctx1_843m_128_5e-6 2\n</code></pre> <p>\u751f\u6210\u7684\u7ed3\u679c\u4f1a\u4fdd\u5b58\u5230\u5bf9\u5e94\u68c0\u67e5\u70b9\u76ee\u5f55\uff0c\u4f8b\u5982\uff1a <code>&lt;SFT_HOME&gt;/checkpoints/applications/retro-sft_pp1_same_format_ctx1_843m_128_5e-6/retro-generate-nq_5_2_843m_test_greedy_0_20000_1000.txt</code>\u3002</p> <p>\u5982\u679c\u9700\u8981\u8ba1\u7b97 F1 / Exact Match (EM) \u5206\u6570\uff0c\u53ef\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\uff08\u8bf7\u6839\u636e\u4efb\u52a1\u4e0e\u68c0\u67e5\u70b9\u66f4\u65b0\u6570\u636e\u96c6\u8def\u5f84\uff09\uff1a</p> <pre><code>python3 tools/retro/text_generation/evaluate.py\n</code></pre>"},{"location":"megatron/tools/retro/#_7","title":"\u5f15\u7528","text":"<p>\u66f4\u591a\u6280\u672f\u7ec6\u8282\u53ef\u53c2\u9605\u4ee5\u4e0b\u8bba\u6587\uff1a</p> <p>Shall we Pretrain Autoregressive Language Models with Retrieval? A Comprehensive Study.</p> <p>Boxin Wang, Wei Ping, Peng Xu, Lawrence McAfee, Zihan Liu, Mohammad Shoeybi, Yi Dong, Oleksii Kuchaiev, Bo Li, Chaowei Xiao, Anima Anandkumar, Bryan Catanzaro.\uff08EMNLP 2023\uff09</p> <p>InstructRetro: Instruction Tuning post Retrieval-Augmented Pretraining.</p> <p>Boxin Wang, Wei Ping, Lawrence McAfee, Peng Xu, Bo Li, Mohammad Shoeybi, Bryan Catanzaro.</p> <p>\u82e5\u4f60\u5728\u7814\u7a76\u6216\u9879\u76ee\u4e2d\u4f7f\u7528\u4e86\u672c\u4ed3\u5e93\u7684\u6570\u636e\u6216\u4ee3\u7801\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u683c\u5f0f\u5f15\u7528\uff1a</p> <pre><code>@inproceedings{wang2023shall,\n    title   = {Shall We Pretrain Autoregressive Language Models with Retrieval? A Comprehensive Study},\n    author  = {Boxin Wang and Wei Ping and Peng Xu and Lawrence McAfee and Zihan Liu and Mohammad Shoeybi and Yi Dong and Oleksii Kuchaiev and Bo Li and Chaowei Xiao and Anima Anandkumar and Bryan Catanzaro},\n    journal = {The 2023 Conference on Empirical Methods in Natural Language Processing},\n    year    = {2023}\n}\n\n@article{wang2023instructretro,\n    title   = {InstructRetro: Instruction Tuning post Retrieval-Augmented Pretraining},\n    author  = {Boxin Wang and Wei Ping and Lawrence McAfee and Peng Xu and Bo Li and Mohammad Shoeybi and Bryan Catanzaro},\n    year    = {2023},\n    journal = {arXiv preprint arXiv: 2310.07713}\n}\n</code></pre>"},{"location":"megatron/tools/retro/build_db/","title":"Retro \u6570\u636e\u5e93\u6784\u5efa","text":"<p>\u672c\u76ee\u5f55\u5305\u542b\u7528\u4e8e\u6784\u5efa Retro \u68c0\u7d22\u5e93\u4e0e\u9884\u8bad\u7ec3\u90bb\u5c45\u7684\u5de5\u5177\u96c6\u5408\u3002\u6574\u4e2a\u9884\u5904\u7406\u6d41\u6c34\u7ebf\u5206\u4e3a\u4e09\u4e2a\u9636\u6bb5\uff1a</p> <ol> <li>\u6784\u5efa\u68c0\u7d22\u5757\u6570\u636e\u5e93\uff1a\u751f\u6210\u7528\u4e8e\u68c0\u7d22\u90bb\u5c45\u4e0e\u7eed\u5199\u5757\u7684\u6570\u636e\u5e93\uff0c\u518d\u4ea4\u7ed9\u68c0\u7d22\u7f16\u7801\u5668\u5904\u7406\u3002</li> <li>\u6784\u5efa\u76f8\u4f3c\u5ea6\u68c0\u7d22\u7d22\u5f15\uff1a\u8bad\u7ec3\u5e76\u6784\u5efa\u68c0\u7d22\u7d22\u5f15\uff0c\u7528\u4e8e\u67e5\u8be2\u5757\u7684\u90bb\u5c45\u3002</li> <li>\u67e5\u8be2\u9884\u8bad\u7ec3\u90bb\u5c45\uff1a\u5c06\u9884\u8bad\u7ec3\u6837\u672c\u5339\u914d\u5230\u6570\u636e\u5e93\u5757\u3002\u8bad\u7ec3\u3001\u9a8c\u8bc1\u3001\u6d4b\u8bd5\u96c6\u5c06\u5206\u522b\u751f\u6210\u90bb\u5c45\u3002</li> </ol> <p>\u4e0b\u6587\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u6d41\u6c34\u7ebf\u3001\u4ee3\u7801\u7ed3\u6784\u3001\u4f7f\u7528\u65b9\u5f0f\u4ee5\u53ca\u9884\u8bad\u7ec3\u6d41\u7a0b\u3002</p>"},{"location":"megatron/tools/retro/build_db/#_1","title":"\u76ee\u5f55","text":"<ul> <li>\u5feb\u901f\u5f00\u59cb</li> <li>\u6559\u5b66\u793a\u4f8b</li> <li>\u4ee3\u7801\u7ed3\u6784</li> <li>\u547d\u4ee4\u884c\u53c2\u6570 </li> </ul>"},{"location":"megatron/tools/retro/build_db/#_2","title":"\u5feb\u901f\u5f00\u59cb","text":"<p>\u5173\u952e\u811a\u672c\uff1a</p> <ul> <li><code>main.py</code>\uff1a\u9884\u5904\u7406\u5165\u53e3\u3002</li> <li><code>examples/preprocess_data.sh</code>\uff1a\u793a\u4f8b\u9884\u5904\u7406\u811a\u672c\uff08\u8c03\u7528 <code>main.py</code>\uff09\u3002</li> <li><code>examples/pretrain_data.sh</code>\uff1a\u793a\u4f8b\u9884\u8bad\u7ec3\u811a\u672c\uff08\u8c03\u7528 <code>pretrain_retro.py</code>\uff09\u3002</li> </ul> <p>\u901a\u8fc7 <code>--retro-tasks</code> \u63a7\u5236\u9884\u5904\u7406\u9636\u6bb5\uff1a</p> <ul> <li>\u6700\u7b80\u6d41\u7a0b\uff08\u4e00\u6b21\u6027\u5168\u90e8\u5b8c\u6210\uff09\uff1a<code>--retro-tasks build</code></li> <li>\u5982\u9700\u6309\u7167\u8d44\u6e90\u8c03\u5ea6\u5206\u522b\u8fd0\u884c\uff1a</li> <li>\u6784\u5efa\u68c0\u7d22\u6570\u636e\u5e93\uff1a<code>--retro-tasks db-build</code></li> <li>\u6784\u5efa\u68c0\u7d22\u7d22\u5f15\uff1a<code>--retro-tasks index-build</code></li> <li>\u67e5\u8be2\u90bb\u5c45\uff1a<code>--retro-tasks pretraining-query-neighbors</code></li> </ul> <p>\u6267\u884c\u6d41\u7a0b\u6982\u89c8\uff1a</p> <ul> <li><code>main.py</code>\uff1a\u5165\u53e3\uff08\u4f8b\u5982\u6307\u5b9a <code>--retro-tasks X</code>\uff09\u3002</li> <li><code>db/build.py</code>\uff1a\u6784\u5efa\u68c0\u7d22\u6570\u636e\u5e93\u3002</li> <li><code>index/build.py</code>\uff1a\u6784\u5efa\u68c0\u7d22\u7d22\u5f15\uff0c\u5185\u90e8\u8c03\u7528\uff1a</li> <li><code>index/train.py</code>\uff1a\u5728\u6570\u636e\u5e93\u5b50\u96c6\u4e0a\u8bad\u7ec3\u7d22\u5f15\u3002</li> <li><code>index/add.py</code>\uff1a\u5c06\u6570\u636e\u5e93\u5757\u5199\u5165\u7d22\u5f15\u3002</li> <li><code>pretraining/query.py</code>\uff1a\u4e3a\u9884\u8bad\u7ec3\u6837\u672c\u67e5\u8be2\u90bb\u5c45\uff08\u5199\u5165\u78c1\u76d8\uff0c\u4f9b\u8bad\u7ec3\u65f6\u52a0\u8f7d\uff09\u3002</li> </ul>"},{"location":"megatron/tools/retro/build_db/#_3","title":"\u6559\u5b66\u793a\u4f8b","text":"<p>\u4ee5\u4e0b\u4ee5\u7ef4\u57fa\u767e\u79d1\u8bed\u6599\u4e3a\u4f8b\uff0c\u6f14\u793a\u5982\u4f55\u6784\u5efa\u68c0\u7d22\u6570\u636e\u5e93\u4e0e\u7d22\u5f15\uff0c\u5e76\u4e3a\u9884\u8bad\u7ec3\u6570\u636e\u67e5\u8be2\u90bb\u5c45\u3002</p>"},{"location":"megatron/tools/retro/build_db/#1","title":"\u6b65\u9aa4 1\uff1a\u51c6\u5907\u68c0\u7d22\u8bed\u6599","text":"<p>\u8bed\u6599\u683c\u5f0f\u4e0e Megatron \u8bad\u7ec3\u6570\u636e\u4e00\u81f4\u3002\u82e5\u9700\u4ece JSON \u8f6c\u6362\u4e3a mmap \u683c\u5f0f\uff0c\u8bf7\u53c2\u8003 \u6570\u636e\u9884\u5904\u7406\u3002</p> <p>\u5047\u8bbe\u7ef4\u57fa\u8bed\u6599\u5b58\u50a8\u5982\u4e0b\uff1a</p> <pre><code>&lt;retrieval/db/path&gt;/Wikipedia_shuf_text_document.bin\n&lt;retrieval/db/path&gt;/Wikipedia_shuf_text_document.idx\n</code></pre> <p>\u68c0\u7d22\u5e93\u4e5f\u53ef\u4ee5\u7531\u591a\u79cd\u8bed\u6599\u6df7\u5408\u6784\u6210\u3002</p>"},{"location":"megatron/tools/retro/build_db/#2","title":"\u6b65\u9aa4 2\uff1a\u6784\u5efa\u68c0\u7d22\u5757\u6570\u636e\u5e93","text":"<p>\u8be5\u201c\u6570\u636e\u5e93\u201d\u5b9e\u8d28\u4e0a\u662f\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff08\u975e\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff09\uff0c\u5b58\u50a8\u4ece GPT Token \u6570\u636e\u96c6\u4e2d\u62bd\u53d6\u7684\u5757\uff08\u901a\u5e38\u957f\u5ea6\u4e3a 64\uff09\u3002\u6bcf\u4e2a\u6587\u6863\u4f1a\u88ab\u5207\u5206\u4e3a\u8fde\u7eed\u3001\u4e0d\u91cd\u53e0\u7684\u5757\uff1b\u5757\u7684\u957f\u5ea6\u6ee1\u8db3 1 &lt;= chunk_length &lt;= max_chunk_length\uff08\u5757\u4e0d\u4f1a\u8de8\u6587\u6863\uff09\u3002 \u5728\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\uff08\u7ea6\u5341\u4e07\u5206\u4e4b\u4e00\uff09\uff0c\u67d0\u4e9b\u5757\u4f1a\u8f6c\u6362\u4e3a\u7a7a\u7684 Bert \u5e8f\u5217\uff0c\u6211\u4eec\u4f1a\u76f4\u63a5\u4e22\u5f03\u3002\u56e0\u6b64\u5b9e\u9645\u5757\u6570\u7565\u5c0f\u4e8e\u7b80\u5355\u4f30\u7b97\u3002</p> <p>\u4ee5\u7ef4\u57fa\u8bed\u6599\u4e3a\u4f8b\uff0c\u51c6\u5907\u4ee5\u4e0b\u53c2\u6570\u5e76\u5728 tools/retro/examples/preprocess_data.sh \u4e2d\u4fee\u6539\u6a21\u677f\uff1a - <code>--retro-workdir</code>\uff1a\u6d41\u6c34\u7ebf\u4fdd\u5b58\u6570\u636e\u4e0e\u914d\u7f6e\u6587\u4ef6\u7684\u76ee\u5f55\u3002\u5728\u6574\u4e2a\u6d41\u7a0b\u53ca\u9884\u8bad\u7ec3\u9636\u6bb5\u9700\u4fdd\u6301\u4e00\u81f4\u3002 - <code>--data-path</code>\uff1a\u7528\u4e8e\u6784\u5efa\u68c0\u7d22\u6570\u636e\u5e93\u7684\u8bed\u6599\u8def\u5f84\uff0c\u4f8b\u5982\uff1a <pre><code>WIK=\"${DATA_HOME}/Wikipedia_shuf_text_document\"\n\nDATA_BLEND=\" \\\n  1 ${WIK} \\\n\"\n</code></pre> - <code>--load</code>\uff1aBert \u7f16\u7801\u5668\u6743\u91cd\u8def\u5f84 - <code>--vocab-file</code> \u4e0e <code>--retro-bert-vocab-file</code>\uff1aBert \u8bcd\u8868 - <code>--retro-gpt-tokenizer-model</code>\uff1aGPT \u5206\u8bcd\u5668\u6a21\u578b\u6587\u4ef6</p> <p>\u6267\u884c\u811a\u672c\uff1a <pre><code>bash tools/retro/examples/preprocess_data.sh db-build\n</code></pre></p> <p>\u5b8c\u6210\u540e\u8f93\u51fa\u5305\u62ec\uff1a - \u542f\u52a8\u53c2\u6570\u5199\u5165 <code>&lt;retro-workdir&gt;/args.json</code>\uff0c\u4f9b\u540e\u7eed\u6b65\u9aa4\u4f7f\u7528\u3002 - \u68c0\u7d22\u5757\u6570\u636e\u5e93\u4fdd\u5b58\u5728 <code>&lt;retro-workdir&gt;/db/</code>\uff0c\u6570\u636e\u96c6\u4fe1\u606f\u5199\u5165 <code>&lt;retro-workdir&gt;/db/indexed_dataset_infos.json</code>\u3002</p>"},{"location":"megatron/tools/retro/build_db/#3","title":"\u6b65\u9aa4 3\uff1a\u6784\u5efa\u76f8\u4f3c\u5ea6\u68c0\u7d22\u7d22\u5f15","text":"<p>\u4e3a\u4e86\u5c06\u9884\u8bad\u7ec3\u5757\u5339\u914d\u5230\u6570\u636e\u5e93\u5757\uff0c\u9700\u8981\u6784\u5efa\u68c0\u7d22\u7d22\u5f15\u3002\u6211\u4eec\u4f7f\u7528 Faiss (https://github.com/facebookresearch/faiss)\u3002\u7d22\u5f15\u901a\u5e38\u5728\u6570\u636e\u5e93\u5b50\u96c6\u4e0a\u8bad\u7ec3\uff08\u901a\u8fc7 <code>--retro-index-ntrain</code> \u6307\u5b9a\uff09\uff0c\u8bad\u7ec3\u5b8c\u6210\u540e\u5c06\u6240\u6709\u5757\u5199\u5165\u7d22\u5f15\u4ee5\u4fbf\u67e5\u8be2\u3002</p> <p>\u5f53\u5728\u540e\u7eed\u6b65\u9aa4\u67e5\u8be2\u90bb\u5c45\u65f6\uff0c\u9700\u8981\u786e\u4fdd\u7d22\u5f15\u80fd\u591f\u88ab\u6b63\u786e\u52a0\u8f7d\u5e76\u5339\u914d\u5230\u6570\u636e\u5e93\u3002\u6709\u5173\u7d22\u5f15\u53c2\u6570\u53ef\u53c2\u8003 Faiss \u6587\u6863\u3002</p>"},{"location":"megatron/tools/retro/build_db/#4","title":"\u6b65\u9aa4 4\uff1a\u67e5\u8be2\u9884\u8bad\u7ec3\u90bb\u5c45","text":"<p>\u4e3a\u4e86\u52a0\u901f\u8bad\u7ec3\uff0c\u4f1a\u63d0\u524d\u4e3a\u9884\u8bad\u7ec3\u6570\u636e\uff08\u8bad\u7ec3/\u9a8c\u8bc1/\u6d4b\u8bd5\uff09\u751f\u6210\u90bb\u5c45\u5e76\u5b58\u76d8\u3002\u5177\u4f53\u6b65\u9aa4\uff1a 1. \u904d\u5386\u9884\u8bad\u7ec3\u6570\u636e\uff0c\u5c06\u6bcf\u4e2a\u6837\u672c\u5212\u5206\u4e3a\u5757\uff1b 2. \u4f7f\u7528 Bert \u5c06\u5757\u7f16\u7801\uff1b 3. \u67e5\u8be2\u7d22\u5f15\u5f97\u5230\u90bb\u5c45\u5e76\u5199\u5165\u78c1\u76d8\u3002</p> <p>\u751f\u6210\u7684\u90bb\u5c45\u4f1a\u643a\u5e26\u6570\u636e\u96c6\u5c5e\u6027\uff08\u5982 seed\u3001\u5e8f\u5217\u957f\u5ea6\u3001\u6837\u672c\u6570\u7b49\uff09\uff0c\u4ee5\u4fdd\u8bc1\u9884\u5904\u7406\u4e0e\u8bad\u7ec3\u914d\u7f6e\u5bf9\u9f50\u3002</p> <p>\u53ef\u4ee5\u8c03\u8282\u67e5\u8be2\u65f6\u7684\u8d85\u53c2\u6570\u4ee5\u63d0\u5347\u90bb\u5c45\u8d28\u91cf\uff0c\u4f8b\u5982 <code>RETRO_QUERY_EF_SEARCH</code> \u4e0e <code>RETRO_QUERY_NPROBE</code>\u3002\u6700\u91cd\u8981\u7684\u662f <code>RETRO_QUERY_NPROBE</code>\uff0c\u5b83\u51b3\u5b9a\u4e86\u67e5\u8be2\u65f6\u641c\u7d22\u7684\u805a\u7c7b\u6570\u91cf\u3002\u5efa\u8bae\u53c2\u8003 Faiss \u8c03\u53c2\u6307\u5357\u3002</p> <p>\u4ecd\u4ee5\u7ef4\u57fa\u8bed\u6599\u4e3a\u4f8b\uff1a</p> <pre><code>bash tools/retro/examples/preprocess_data.sh query-pretraining-neighbors\n</code></pre> <p>\u8f93\u51fa\u5305\u62ec\uff1a - <code>&lt;retro-workdir&gt;/wiki/query/train_...</code>\uff1a\u8bad\u7ec3\u96c6\u90bb\u5c45\u3002 - <code>&lt;retro-workdir&gt;/wiki/query/valid_...</code>\uff1a\u9a8c\u8bc1\u96c6\u90bb\u5c45\u3002</p>"},{"location":"megatron/tools/retro/build_db/#5","title":"\u6b65\u9aa4 5\uff1a\u53ef\u89c6\u5316\u68c0\u7d22\u90bb\u5c45","text":"<p>\u6211\u4eec\u63d0\u4f9b CLI \u5de5\u5177\u5e2e\u52a9\u786e\u8ba4\u68c0\u7d22\u8d28\u91cf\u3002\u4f7f\u7528\u65b9\u6cd5\uff1a</p> <pre><code>from tools.retro.cli import retro\nretro.init(\"/path/to/retro/workdir\")\n</code></pre> <p>\u8be5\u547d\u4ee4\u4f1a\u521d\u59cb\u5316 Megatron \u5e76\u8f7d\u5165 Retro \u6570\u636e\uff0c\u540c\u65f6\u6253\u5370\u793a\u4f8b\u6307\u4ee4\u3002</p> <p>\u4ee5\u4e0b\u4e3a\u7ef4\u57fa\u8bed\u6599\u7684\u8f93\u51fa\u793a\u4f8b\uff1a</p> <pre><code>setting number of micro-batches to constant 32\n&gt; building BertWordPieceLowerCase tokenizer ...\n&gt; initializing torch distributed ...\n&gt; initialized tensor model parallel with size 1\n&gt; initialized pipeline model parallel with size 1\n&gt; compiling dataset index builder ...\n...\n...\n &gt; sample ratios:\n   dataset 0, input: 1, achieved: 1\n&gt; size of blendable dataset: 201000 samples\n&gt; elapsed time for building blendable dataset indices: 0.00 (sec)\n&gt; building indices for blendable datasets ...\n &gt; sample ratios:\n   dataset 0, input: 1, achieved: 1\n&gt; size of blendable dataset: 12864 samples\n&gt; finished creating pretrained GPT datasets ...\n\n++++++++++++++++++++++++++++++++++++++++++++++++++\nexamples ... [ *note*: 'db' = chunk db; 'pt' = pretraining corpus. ]\n++++++++++++++++++++++++++++++++++++++++++++++++++\n\n~~~~ indexed datasets ~~~~\nretro.get_db_num_indexed_datasets() : 1\nretro.get_db_indexed_dataset_infos() :\n  [(1.000000, Wikipedia_shuf_text_document)]\n\n~~~~ counts ~~~~\nretro.get_db_num_chunks : 68104992.\n\nretro.get_pt_num_samples('train') : 201000.\nretro.get_pt_num_samples('valid') : 12864.\nretro.get_pt_num_chunks('train') : 1608000.\nretro.get_pt_num_chunks('valid') : 102912.\n\n~~~~ tokens, text ~~~~\nretro.get_db_chunk_gpt(chunk_id) : [46809, 218340, 716, 647, ... , 251525, 872, 692, 4042]\nretro.get_db_chunk_bert(chunk_id) : [10680, 16216, 4313, 1745 ... , 8117, 1007, 1012, 1997]\n\nretro.get_db_chunk_text(chunk_id) \u7b49\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u5757\u7684\u539f\u59cb\u6587\u672c\u53ca\u7eed\u5199\u3002`retro.get_pt_sample` \u652f\u6301\u8bfb\u53d6\u9884\u8bad\u7ec3\u6837\u672c\u53ca\u5176\u90bb\u5c45\uff0c\u4fbf\u4e8e\u68c0\u67e5\u5f62\u72b6\u4e0e\u793a\u4f8b\u5185\u5bb9\u3002\n\n\u4e5f\u53ef\u4f7f\u7528 `retro.print_neighbor_texts(sample_id, chunk_id)` \u5feb\u901f\u67e5\u770b\u67d0\u4e2a\u6837\u672c\u7684\u90bb\u5c45\u6587\u672c\u3002\u4f8b\u5982\uff1a\n\n```python\ntokens = retro.get_pt_sample('train', 0)\nfor token_ids in tokens[\"neighbor_tokens\"][0]:\n    print(\"- %s\" % (retro.gpt_to_text(token_ids)))\n    print(\"-\" * 20)\n</code></pre> <p>\u8f93\u51fa\u793a\u4f8b\uff08\u622a\u53d6\u90e8\u5206\uff09\uff1a</p> <p><pre><code>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nPRETRAINING CHUNK:\n  - also\\nLatgalians (modern)\\n\\nReferences\\n\\nCategory:Defunct political parti ...\nNEIGHBOR_CHUNKS:\n  - the sides.\\n\\nNotes\\n\\nReferences\\n\\nCategory:Obaku Zen\\n*\\nCategory:Japane ...\n  - 2007).\\n\\nSee also\\n Satellite Communications\\n Tonga\\n\\nReferences\\n\\nExte ...\n  - ...\n</code></pre> <pre><code>\u4e0a\u8ff0\u793a\u4f8b\u4e5f\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u8c03\u7528 `retro.get_pt_sample` \u5b9e\u73b0\uff0c\u5e76\u4fbf\u4e8e\u68c0\u67e5\u8fd4\u56de\u5f20\u91cf\u7684\u5f62\u72b6\uff1a\n</code></pre> sample = retro.get_pt_sample('train', sample_id)</p> <p>sample['text'].shape : (513,) sample['neighbor_tokens'].shape : (8, 20, 128) sample['text'] : [   676     14  40656 184 ... 4\\n    276  17361 251542] sample['neighbor_tokens'][17][1] : [    14     14  30291   1 ... 682    328    379 251527] retro.gpt_to_text(sample['text']) : also\\nLatgalians (modern) ... ission criticised the AVN retro.gpt_to_text(sample['neighbor_tokens']) : \\n\\nHis second marriage o ... Augusta Eardley-Wilmot (2 <pre><code>### \u8f93\u5165\u4e0e\u8f93\u51fa\u6570\u636e\n\n\u8f93\u5165\u6570\u636e\uff1a\n\n- \u901a\u8fc7 `gpt_dataset.py` \u52a0\u8f7d\u7684 Token \u6570\u636e\u96c6\u3002\n- **`&lt;RETRO_WORKDIR&gt;/index/&lt;RETRO_INDEX_TYPE&gt;/&lt;RETRO_INDEX_STR&gt;/added.faissindex`**\uff1a\u5df2\u7ecf\u8bad\u7ec3\u5e76\u5199\u5165\u5168\u90e8\u6570\u636e\u5e93\u5757\u7684\u7d22\u5f15\uff08\u8be6\u89c1\u524d\u6587\uff09\u3002\n\n\u8f93\u51fa\u6570\u636e\uff1a\n\n- **`&lt;RETRO_WORKDIR&gt;/{train,valid,test}_XXns_YYsl_ZZs/WW.hdf5`**\uff1a\u8fd9\u4e9b\u76ee\u5f55/\u6587\u4ef6\u4fdd\u5b58\u9884\u8bad\u7ec3\u6837\u672c\u5404\u5757\u7684\u90bb\u5c45\u7d22\u5f15\u3002\u4f8b\u5982 `train_indexmap_2047435ns_2048sl_1234s` \u76ee\u5f55\u4e2d\u5305\u542b\u4e00\u7ec4 HDF5 \u6587\u4ef6\uff08\u5982 `0075700000-0075800000.hdf5`\uff09\uff0c\u6bcf\u4e2a\u6587\u4ef6\u8986\u76d6\u4e00\u6bb5\u8fde\u7eed\u7684\u90bb\u5c45 ID\uff0c\u7528\u4e8e\u7d22\u5f15\u4e3b\u68c0\u7d22\u6570\u636e\u5e93\u3002\u67d0\u4e2a\u76ee\u5f55\u4e0b\u7684\u6240\u6709 HDF5 \u6587\u4ef6\u5171\u540c\u6784\u6210\u5bf9\u5e94\u6570\u636e\u96c6\u7684\u5168\u90e8\u90bb\u5c45\u4fe1\u606f\u3002\u6587\u4ef6\u5927\u5c0f\u7531 `--retro-block-size` \u63a7\u5236\u3002\u547d\u540d\u4e2d\u7684 `XX`\u3001`YY`\u3001`ZZ`\u3001`WW` \u7528\u4e8e\u6807\u8bb0\u6570\u636e\u96c6\u5c5e\u6027\uff0c\u4ee5\u4fdd\u8bc1\u5728\u9884\u8bad\u7ec3\u9636\u6bb5\u4e0e\u914d\u7f6e\u4fdd\u6301\u4e00\u81f4\u3002\u8fd9\u4e9b\u90bb\u5c45\u6587\u4ef6\u6700\u7ec8\u7531 `retro_dataset.py` \u52a0\u8f7d\uff0c\u6784\u5efa Retro \u8bad\u7ec3\u6837\u672c\u3002\n\n### `tools/retro/cli`\n\n\u63d0\u4f9b\u4e86\u68c0\u67e5\u9884\u5904\u7406\u6570\u636e\u7684 CLI\u3002\u8fdb\u5165 Python \u4ea4\u4e92\u5f0f\u73af\u5883\u540e\uff0c\u53ef\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u52a0\u8f7d Retro \u5de5\u4f5c\u76ee\u5f55\uff1a\n\n```python\nfrom tools.retro.cli import retro\nretro.init(\"/path/to/retro/workdir\")\n</code></pre></p> <p>\u8be5\u547d\u4ee4\u4f1a\u521d\u59cb\u5316 Megatron \u5e76\u51c6\u5907\u597d Retro \u6570\u636e\uff0c\u540c\u65f6\u8f93\u51fa\u53ef\u7528\u51fd\u6570\u7684\u5e2e\u52a9\u4fe1\u606f\u3002CLI \u4e2d\u5305\u542b\u591a\u79cd\u67e5\u770b\u68c0\u7d22\u6570\u636e\u5e93\u4ee5\u53ca\u9884\u8bad\u7ec3\u6837\u672c/\u90bb\u5c45\u7684\u5de5\u5177\uff0c\u4f8b\u5982\uff1a</p> <pre><code>retro.get_db_num_indexed_datasets() # 15\nretro.get_db_chunk_text(92874113) # 'research project at ...  and philosophy'\nretro.get_pt_sample('train', 62005) # '[16084, 26158, 25387 ..., 6898, 9568]'\n</code></pre> <p>\u51fd\u6570\u540d\u524d\u7f00\u901a\u5e38\u7528\u4e8e\u6307\u793a\u6240\u67e5\u770b\u7684\u6570\u636e\uff1a</p> <ul> <li><code>db</code>\uff1a\u68c0\u7d22\u6570\u636e\u5e93\uff08\u5757 token\u3001\u6587\u6863 ID\u3001\u6570\u636e\u96c6 ID \u7b49\uff09</li> <li><code>pt</code>\uff1a\u9884\u8bad\u7ec3\u6570\u636e\u96c6\uff08\u6837\u672c token \u4e0e\u90bb\u5c45 token \u7b49\uff09</li> </ul>"},{"location":"megatron/tools/retro/build_db/#toolsretroutilspy","title":"<code>tools/retro/utils.py</code>","text":"<p>\u5c01\u88c5\u5e38\u7528\u5de5\u5177\u51fd\u6570\uff0c\u4e3b\u8981\u5305\u62ec\uff1a</p> <ul> <li><code>get_gpt_tokenizer()</code>\uff1a\u83b7\u53d6 GPT \u5206\u8bcd\u5668\u3002</li> <li><code>get_bert_tokenizer()</code>\uff1a\u83b7\u53d6 Bert \u5206\u8bcd\u5668\u3002</li> <li><code>GPTToTextDataset</code>\uff1a\u5c06 GPT\uff08BPE\uff09\u6837\u672c\u8f6c\u6362\u4e3a\u539f\u59cb\u6587\u672c\u7684\u5c01\u88c5\u7c7b\u3002</li> </ul>"},{"location":"megatron/tools/retro/build_db/#toolsbert_embedding","title":"<code>tools/bert_embedding</code>","text":"<p>\u7528\u4e8e\u751f\u6210 Bert \u5d4c\u5165\u3002\u5173\u952e\u6587\u4ef6\u5982\u4e0b\uff1a</p> <ul> <li><code>embed.py</code>\uff1a\u5d4c\u5165\u751f\u6210\u5165\u53e3\uff0c\u5305\u542b\u6838\u5fc3\u7c7b <code>BertEmbedder</code> \u4e0e <code>DiskDataParallelBertEmbedder</code>\uff08\u8be6\u89c1\u4e0b\u6587\uff09\uff0c\u5b9e\u73b0 Megatron \u98ce\u683c\u7684\u5d4c\u5165\u903b\u8f91\u3002</li> <li><code>huggingface.py</code>\uff1a\u5f53\u914d\u7f6e\u8f93\u51fa Hugging Face \u5d4c\u5165\u65f6\u7531 <code>embed.py</code> \u8c03\u7528\u3002</li> <li><code>dataset.py</code>\uff1a\u5c06\u539f\u59cb\u6587\u672c\u6570\u636e\u96c6\u8f6c\u6362\u4e3a Bert\uff08WordPiece\uff09\u5e8f\u5217\u7684\u5c01\u88c5\u7c7b\u3002</li> </ul> <p>\u5d4c\u5165\u751f\u6210\u53ef\u4ece\u4e24\u4e2a\u7ef4\u5ea6\u914d\u7f6e\u3002\u7b2c\u4e00\uff0c\u8f93\u51fa\u5f62\u5f0f\uff1a</p> <ul> <li><code>BertEmbedder</code>\uff1a\u8f93\u5165\u539f\u59cb\u6587\u672c\u6570\u636e\u96c6\uff0c\u8f93\u51fa Numpy \u6570\u7ec4\u3002\u6838\u5fc3\u65b9\u6cd5\u5305\u62ec <code>embed_text_dataset</code>\uff08\u5904\u7406\u6574\u4e2a\u6570\u636e\u96c6\uff09\u4e0e <code>embed_text</code>\uff08\u5904\u7406\u5355\u4e2a\u5b57\u7b26\u4e32\uff09\u3002</li> <li><code>DiskDataParallelBertEmbedder</code>\uff1a\u5bf9 <code>BertEmbedder</code> \u7684\u5c01\u88c5\uff0c\u7ed3\u679c\u5199\u5165\u78c1\u76d8\u3002\u5b83\u4f1a\u81ea\u52a8\u5728\u6570\u636e\u5e76\u884c rank \u4e4b\u95f4\u5206\u914d\u6570\u636e\uff0c\u5e76\u6309\u6307\u5b9a <code>block_size</code>\uff08\u5982 1,000,000\uff09\u5206\u5757\u5904\u7406\u3002</li> </ul> <p>\u7b2c\u4e8c\uff0c\u5d4c\u5165\u6a21\u578b\u7c7b\u578b\uff0c\u7531 <code>--bert-embedder-type</code> \u63a7\u5236\uff1a</p> <ul> <li><code>--bert-embedder-type megatron</code>\uff1a\u4f7f\u7528 Megatron \u7684 Bert \u6a21\u578b\uff0c\u5177\u4f53\u6743\u91cd\u3001\u8bcd\u8868\u548c\u5206\u8bcd\u5668\u53d6\u51b3\u4e8e\u52a0\u8f7d\u7684\u68c0\u67e5\u70b9\u3002</li> <li><code>--bert-embedder-type huggingface</code>\uff1a\u4f7f\u7528 Hugging Face \u7684 <code>bert-large-cased</code>\u3002\uff08\u6ce8\u610f\uff1a\u8be5\u9009\u9879\u540e\u7eed\u53ef\u80fd\u5f03\u7528\uff0c\u76ee\u524d\u4e5f\u65e0\u6cd5\u8c03\u6574\u5927\u5c0f\u5199\u914d\u7f6e\u3002\uff09</li> </ul>"},{"location":"megatron/tools/retro/build_db/#_4","title":"\u9884\u8bad\u7ec3","text":"<ul> <li><code>pretrain_retro.py</code>\uff1aRetro \u9884\u8bad\u7ec3\u5165\u53e3\uff0c\u7c7b\u4f3c <code>pretrain_gpt.py</code>\uff0c\u4f46\u8d1f\u8d23\u52a0\u8f7d\u90bb\u5c45 token \u5e76\u8bbe\u7f6e\u90bb\u5c45\u6ce8\u610f\u529b\u63a9\u7801\u3002</li> <li><code>megatron/model/retro_transformer.py</code>\uff1aRetro \u6a21\u578b\u5b9e\u73b0\uff0c\u5305\u542b\u4e3b Transformer\u3001\u68c0\u7d22\u7f16\u7801\u5668\u4e0e\u5206\u5757\u4ea4\u53c9\u6ce8\u610f\u529b\u5c42\u3002\u5f53\u524d\u6587\u4ef6\u4e2d\u4ecd\u4fdd\u7559\u4e0e <code>transformer.py</code> \u57fa\u672c\u4e00\u81f4\u7684\u591a\u4e2a\u7c7b\uff0c\u540e\u7eed\u4f1a\u5408\u5e76\u5dee\u5f02\u3002</li> <li><code>tools/retro/pretraining/retro_dataset.py</code>\uff1a\u9884\u8bad\u7ec3\u9636\u6bb5\u4f7f\u7528\u7684 Retro \u6570\u636e\u96c6\uff08\u9884\u5904\u7406\u9636\u6bb5\u672a\u7528\uff09\u3002\u6bcf\u4e2a\u6837\u672c\u5305\u542b\u81ea\u8eab token \u4ee5\u53ca\u6bcf\u4e2a\u5757\u5bf9\u5e94\u7684\u90bb\u5c45 token\u3002</li> </ul>"},{"location":"megatron/tools/retro/sft/","title":"Retro \u5fae\u8c03","text":""},{"location":"megatron/tools/retro/sft/#_1","title":"\u6ce8\u610f","text":"<p><code>sft</code> \u76ee\u5f55\u4e2d\u7684\u5185\u5bb9\u4ecd\u5728\u79ef\u6781\u5f00\u53d1\u4e2d\uff0c\u540e\u7eed\u4f1a\u5c3d\u5feb\u66f4\u65b0\u3002 </p>"},{"location":"nccl/","title":"\u6982\u89c8","text":"<p>Copyright (c) 2015-2020, NVIDIA CORPORATION.</p> <p>All rights reserved.</p>"},{"location":"nccl/#nccl","title":"NCCL \u7b80\u4ecb","text":"<p>NCCL \u662f\u4e00\u5957\u4e13\u4e3a GPU \u95f4\u901a\u4fe1\u8bbe\u8ba1\u7684\u9ad8\u6027\u80fd\u539f\u8bed\u5e93\uff0c\u53ef\u63d0\u4f9b all-reduce\u3001all-gather\u3001reduce\u3001broadcast\u3001reduce-scatter \u4ee5\u53ca\u4efb\u610f\u57fa\u4e8e send/receive \u7684\u901a\u4fe1\u6a21\u5f0f\u3002\u5176\u8bfb\u97f3\u4e3a \u201cNickel\u201d\u3002NCCL \u9488\u5bf9 PCIe\u3001NVLink\u3001NVSwitch \u7b49 GPU \u4e92\u8054\uff0c\u4ee5\u53ca\u57fa\u4e8e InfiniBand Verbs \u6216 TCP/IP \u7684\u7f51\u7edc\u8fdb\u884c\u4e86\u6df1\u5165\u4f18\u5316\uff0c\u53ef\u5728\u5355\u673a\u6216\u591a\u673a\u73af\u5883\u4e2d\u652f\u6301\u4efb\u610f\u6570\u91cf\u7684 GPU\uff0c\u5e76\u517c\u5bb9\u5355\u8fdb\u7a0b\u4e0e\u591a\u8fdb\u7a0b\uff08\u4f8b\u5982 MPI\uff09\u5e94\u7528\u3002</p> <p>\u5982\u9700\u4e86\u89e3\u66f4\u5b8c\u6574\u7684\u4f7f\u7528\u8bf4\u660e\uff0c\u8bf7\u67e5\u9605 NCCL \u5b98\u65b9\u6587\u6863\u3002</p>"},{"location":"nccl/#_1","title":"\u7f16\u8bd1","text":"<p>\u63d0\u793a\uff1a\u5b98\u65b9\u7ecf\u8fc7\u6d4b\u8bd5\u7684 NCCL \u9884\u7f16\u8bd1\u5305\u53ef\u76f4\u63a5\u4ece https://developer.nvidia.com/nccl \u4e0b\u8f7d\u3002\u5982\u679c\u9009\u62e9\u4f7f\u7528\u5b98\u65b9\u5305\uff0c\u53ef\u8df3\u8fc7\u4ee5\u4e0b\u7f16\u8bd1\u6b65\u9aa4\u3002</p> <p>\u6784\u5efa\u6d41\u7a0b\u793a\u4f8b\uff1a</p> <pre><code>cd nccl\nmake -j src.build\n</code></pre> <p>\u82e5 CUDA \u672a\u5b89\u88c5\u5728\u9ed8\u8ba4\u7684 <code>/usr/local/cuda</code> \u76ee\u5f55\uff0c\u53ef\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u6307\u5b9a\u8def\u5f84\uff1a</p> <pre><code>make src.build CUDA_HOME=&lt;path to cuda install&gt;\n</code></pre> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u751f\u6210\u7684\u4ea7\u7269\u4f4d\u4e8e <code>build/</code> \u76ee\u5f55\uff08\u53ef\u901a\u8fc7\u8bbe\u7f6e <code>BUILDDIR</code> \u81ea\u5b9a\u4e49\uff09\u3002\u7f16\u8bd1\u811a\u672c\u4f1a\u9488\u5bf9\u6240\u6709\u53d7\u652f\u6301\u7684 GPU \u67b6\u6784\u751f\u6210\u4e8c\u8fdb\u5236\uff0c\u5982\u9700\u52a0\u5feb\u7f16\u8bd1\u901f\u5ea6\u5e76\u7f29\u5c0f\u4f53\u79ef\uff0c\u53ef\u5728 <code>makefiles/common.mk</code> \u4e2d\u91cd\u65b0\u5b9a\u4e49 <code>NVCC_GENCODE</code> \u4ec5\u4fdd\u7559\u76ee\u6807\u67b6\u6784\uff0c\u4f8b\u5982\uff1a</p> <pre><code>make -j src.build NVCC_GENCODE=\"-gencode=arch=compute_70,code=sm_70\"\n</code></pre>"},{"location":"nccl/#_2","title":"\u5b89\u88c5","text":"<p>\u5efa\u8bae\u901a\u8fc7\u6253\u5305\u540e\u7684\u5f62\u5f0f\u5b89\u88c5 NCCL\u3002\u5982\u4e0b\u793a\u4f8b\u5c55\u793a\u5982\u4f55\u751f\u6210\u5e76\u5b89\u88c5\u5bf9\u5e94\u5305\uff08\u9700\u8981 root \u6743\u9650\uff09\u3002</p> <p>Debian/Ubuntu\uff1a</p> <pre><code># \u5b89\u88c5\u6784\u5efa deb \u5305\u6240\u9700\u5de5\u5177\nsudo apt install build-essential devscripts debhelper fakeroot\n# \u6784\u5efa NCCL deb \u5305\nmake pkg.debian.build\nls build/pkg/deb/\n</code></pre> <p>RedHat/CentOS\uff1a</p> <pre><code># \u5b89\u88c5\u6784\u5efa rpm \u5305\u6240\u9700\u5de5\u5177\nsudo yum install rpm-build rpmdevtools\n# \u6784\u5efa NCCL rpm \u5305\nmake pkg.redhat.build\nls build/pkg/rpm/\n</code></pre> <p>\u8de8\u5e73\u53f0 tarball\uff1a</p> <pre><code>make pkg.txz.build\nls build/pkg/txz/\n</code></pre>"},{"location":"nccl/#_3","title":"\u6d4b\u8bd5","text":"<p>NCCL \u7684\u6d4b\u8bd5\u5957\u4ef6\u72ec\u7acb\u7ef4\u62a4\u5728 https://github.com/nvidia/nccl-tests\u3002</p> <pre><code>git clone https://github.com/NVIDIA/nccl-tests.git\ncd nccl-tests\nmake\n./build/all_reduce_perf -b 8 -e 256M -f 2 -g &lt;ngpus&gt;\n</code></pre>"},{"location":"nccl/#_4","title":"\u7248\u6743\u58f0\u660e","text":"<p>\u6240\u6709\u6e90\u4ee3\u7801\u4e0e\u968f\u9644\u6587\u6863\u7248\u6743\u5747\u5f52 NVIDIA CORPORATION \u6240\u6709\uff082015-2020\uff09\uff0c\u4fdd\u7559\u6240\u6709\u6743\u5229\u3002</p>"},{"location":"nccl/examples/","title":"NCCL \u793a\u4f8b\u6307\u5357","text":"<p>\u6b22\u8fce\u6765\u5230 NCCL \u793a\u4f8b\u76ee\u5f55\u3002\u672c\u7cfb\u5217\u793a\u4f8b\u65e8\u5728\u5e2e\u52a9\u5f00\u53d1\u8005\u7406\u89e3\u5e76\u5b9e\u8df5 NCCL\uff08NVIDIA Collective Communications Library\uff09\u7684\u5e38\u7528\u529f\u80fd\u3002\u5185\u5bb9\u4ece\u57fa\u7840\u6982\u5ff5\u9010\u6b65\u8fc7\u6e21\u5230\u8fdb\u9636\u7528\u6cd5\uff0c\u6bcf\u4e2a\u5b50\u76ee\u5f55\u90fd\u9644\u6709\u8be6\u7ec6\u7684 <code>README</code> \u8bf4\u660e\u3002\u793a\u4f8b\u4e2d\u6d89\u53ca\u7684 API \u5e76\u672a\u8986\u76d6 NCCL \u7684\u5168\u90e8\u80fd\u529b\uff0c\u5982\u9700\u5b8c\u6574\u53c2\u8003\uff0c\u8bf7\u67e5\u9605 NCCL \u5b98\u65b9\u6587\u6863\u3002</p> <p>\u8fd9\u4e9b\u793a\u4f8b\u4e13\u6ce8\u5c55\u793a\u7279\u6027\uff0c\u5e76\u672a\u9488\u5bf9\u7279\u5b9a\u901a\u4fe1\u6a21\u5f0f\u8fdb\u884c\u6781\u81f4\u4f18\u5316\u3002\u82e5\u5173\u6ce8\u6027\u80fd\u8868\u73b0\uff0c\u8bf7\u53c2\u8003 GitHub \u4e0a\u7684 nccl-tests \u5de5\u7a0b\u3002</p>"},{"location":"nccl/examples/#_1","title":"\u57fa\u7840\u793a\u4f8b","text":"<p>\u672c\u8282\u4ece\u6700\u57fa\u7840\u7684 NCCL \u64cd\u4f5c\u8bb2\u8d77\u3002\u6240\u6709\u6837\u4f8b\u5747\u53ef\u5355\u6587\u4ef6\u72ec\u7acb\u7f16\u8bd1\uff0c\u53ea\u9700\u8981 NCCL \u5e93\u672c\u8eab\uff1b\u82e5\u793a\u4f8b\u6d89\u53ca MPI\uff0c\u5219\u9700\u989d\u5916\u5b89\u88c5 MPI \u5b9e\u73b0\u3002\u6a21\u677f\u9762\u5411\u9996\u6b21\u63a5\u89e6 NCCL \u7684\u7528\u6237\uff0c\u5e2e\u52a9\u5feb\u901f\u4e0a\u624b GPU \u95f4\u901a\u4fe1\u3002</p>"},{"location":"nccl/examples/#_2","title":"\u901a\u4fe1\u5668","text":"<p>\u6f14\u793a\u5982\u4f55\u521b\u5efa\u3001\u68c0\u9a8c\u4e0e\u9500\u6bc1\u901a\u4fe1\u5668\uff0c\u5206\u522b\u7ed9\u51fa\u5355\u7ebf\u7a0b\u3001\u591a\u7ebf\u7a0b\u4e0e\u591a\u8fdb\u7a0b\u4e09\u79cd\u5f62\u5f0f\uff0c\u5c55\u793a\u542f\u52a8 NCCL \u5e94\u7528\u7684\u5e38\u89c1\u65b9\u5f0f\u3002</p>"},{"location":"nccl/examples/#_3","title":"\u70b9\u5bf9\u70b9\u901a\u4fe1","text":"<p>\u901a\u8fc7 send/recv \u64cd\u4f5c\u5728\u73af\u5f62\u62d3\u6251\u4e2d\u4f20\u9012\u6d88\u606f\uff0c\u793a\u8303\u6700\u5c0f\u53ef\u884c\u7684\u70b9\u5bf9\u70b9\u901a\u4fe1\u6a21\u5f0f\u3002</p>"},{"location":"nccl/examples/#_4","title":"\u96c6\u4f53\u901a\u4fe1","text":"<p>\u5c55\u793a\u8c03\u7528 NCCL \u96c6\u4f53\u901a\u4fe1\uff08collective\uff09API \u7684\u57fa\u672c\u6d41\u7a0b\u3002</p>"},{"location":"nccl/examples/#_5","title":"\u8fdb\u9636\u7279\u6027","text":"<p>\u672c\u8282\u9762\u5411\u5df2\u6709 NCCL \u4f7f\u7528\u7ecf\u9a8c\u3001\u5e0c\u671b\u6309\u7167\u6700\u4f73\u5b9e\u8df5\u542f\u7528\u7279\u5b9a\u529f\u80fd\u7684\u7528\u6237\u3002\u82e5\u9700\u8981\u7aef\u5230\u7aef\u6a21\u677f\uff0c\u53ef\u5148\u53c2\u8003\u4e0a\u4e00\u8282\u7684\u57fa\u7840\u793a\u4f8b\u3002</p> <p>\u7531\u4e8e NCCL \u4e0d\u5305\u542b\u542f\u52a8\u5668\uff0c\u8fd9\u4e9b\u793a\u4f8b\u63d0\u4f9b\u4e86\u4e24\u79cd\u5e38\u89c1\u7684\u542f\u52a8\u65b9\u5f0f\uff1a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6309 \u201c\u6bcf\u4e2a GPU \u4e00\u4e2a\u7ebf\u7a0b\u201d \u8fd0\u884c\uff1b\u82e5\u5728\u6784\u5efa\u65f6\u8bbe\u7f6e <code>MPI=1</code> \u4e14\u914d\u7f6e\u4e86 <code>MPI_HOME</code>\uff0c\u5373\u53ef\u751f\u6210\u652f\u6301\u591a\u8282\u70b9\u7684 MPI \u7248\u672c\u3002</p> <p>\u793a\u4f8b\u9ed8\u8ba4\u4ee5\u7ebf\u7a0b\u6a21\u5f0f\u8fd0\u884c\uff0c\u53ef\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u542f\u52a8\uff1a</p> <pre><code>[NTHREADS=&lt;\u7ebf\u7a0b\u6570&gt;] ./&lt;\u793a\u4f8b\u540d\u79f0&gt;\n</code></pre> <p>\u5f53\u672a\u8bbe\u7f6e <code>NTHREADS</code> \u65f6\uff0c\u5c06\u4f7f\u7528\u53ef\u89c1 GPU \u6570\u91cf\u4f5c\u4e3a\u7ebf\u7a0b\u6570\u3002\u82e5\u7f16\u8bd1\u65f6\u542f\u7528\u4e86 MPI\uff0c\u53ef\u4f7f\u7528\uff1a</p> <pre><code>mpirun -np &lt;MPI \u8fdb\u7a0b\u6570&gt; ./&lt;\u793a\u4f8b\u540d\u79f0&gt;\n</code></pre> <p>\u4e3a\u63d0\u5347\u53ef\u8bfb\u6027\uff0c\u8fdb\u9636\u793a\u4f8b\u7684\u542f\u52a8\u4e0e\u5e7f\u64ad\u903b\u8f91\u88ab\u62bd\u79bb\u81f3 common \u76ee\u5f55\uff1b\u5728\u201c\u57fa\u7840\u793a\u4f8b\u201d\u90e8\u5206\u4ecd\u63d0\u4f9b\u5b8c\u5168\u81ea\u5305\u542b\u7684\u7248\u672c\u3002</p>"},{"location":"nccl/examples/#_6","title":"\u7528\u6237\u7f13\u51b2\u533a\u6ce8\u518c","text":"<p>\u901a\u8fc7\u9884\u5148\u6ce8\u518c\u7528\u6237\u7f13\u51b2\u533a\uff0c\u907f\u514d\u5728\u7528\u6237\u7f13\u51b2\u533a\u548c NCCL \u5185\u90e8\u7f13\u51b2\u533a\u4e4b\u95f4\u62f7\u8d1d\u6570\u636e\uff0c\u4ece\u800c\u964d\u4f4e\u5ef6\u8fdf\u3002\u8be5\u76ee\u5f55\u6f14\u793a\u5982\u4f55\u5728\u5e38\u89c1\u96c6\u4f53\u901a\u4fe1\u4e2d\u542f\u7528\u8be5\u7279\u6027\u3002</p>"},{"location":"nccl/examples/#_7","title":"\u5bf9\u79f0\u5185\u5b58\u6ce8\u518c","text":"<p>\u81ea NCCL 2.27 \u8d77\u652f\u6301\u7a97\u53e3\u6ce8\u518c\uff1a\u7528\u6237\u53ef\u4ee5\u5c06\u672c\u5730\u7f13\u51b2\u533a\u6ce8\u518c\u5230 NCCL \u7a97\u53e3\uff0c\u5b9e\u73b0\u6781\u4f4e\u5ef6\u8fdf\u3001\u9ad8\u5e26\u5bbd\u7684\u901a\u4fe1\u3002\u672c\u793a\u4f8b\u8bf4\u660e\u5982\u4f55\u5728\u96c6\u4f53\u901a\u4fe1\u4e2d\u4f7f\u7528\u5bf9\u79f0\u5185\u5b58\u6ce8\u518c\u3002</p>"},{"location":"nccl/examples/#api","title":"\u8bbe\u5907\u7aef API","text":"<p>\u8bbe\u5907\u7aef API \u5141\u8bb8 CUDA \u5185\u6838\u76f4\u63a5\u53d1\u8d77\u8de8 GPU \u901a\u4fe1\uff0c\u5b9e\u73b0\u901a\u4fe1\u4e0e\u8ba1\u7b97\u878d\u5408\u3001\u7cbe\u7ec6\u63a7\u5236\u96c6\u4f53\u901a\u4fe1\u6d41\u7a0b\u3002\u672c\u76ee\u5f55\u5c55\u793a\u5982\u4f55\u5728\u8bbe\u5907\u7aef\u7f16\u5199\u96c6\u4f53\u901a\u4fe1\u3002</p>"},{"location":"nccl/examples/#_8","title":"\u524d\u7f6e\u6761\u4ef6","text":"<ul> <li>\u6ee1\u8db3\u4ece\u6e90\u7801\u6784\u5efa NCCL \u65f6\u7684\u6240\u6709\u4f9d\u8d56\u3002</li> <li>\u82e5 MPI \u5b89\u88c5\u5728\u975e\u9ed8\u8ba4\u8def\u5f84\uff0c\u53ef\u901a\u8fc7 <code>MPI_HOME</code> \u6307\u5b9a\u3002</li> </ul>"},{"location":"nccl/examples/#_9","title":"\u7f16\u8bd1\u6b65\u9aa4","text":"<p>\u53ef\u4ee5\u5728\u7f16\u8bd1 NCCL \u6e90\u7801\u7684\u540c\u65f6\u6784\u5efa\u793a\u4f8b\uff0c\u4ea6\u53ef\u5355\u72ec\u6784\u5efa\u3002\u6784\u5efa\u9636\u6bb5\u53ef\u901a\u8fc7 <code>MPI=1</code> \u9009\u62e9\u662f\u5426\u542f\u7528 MPI \u652f\u6301\uff1a</p> <pre><code>git clone https://github.com/NVIDIA/nccl.git\ncd nccl\nmake -j examples [MPI=1]\n</code></pre> <p>\u82e5 NCCL \u5df2\u7ecf\u5b89\u88c5\uff0c\u4e5f\u53ef\u4ee5\u5355\u72ec\u6784\u5efa\uff0c\u5e76\u6307\u5b9a NCCL \u5b89\u88c5\u4f4d\u7f6e\uff1a</p> <pre><code>cd examples\nmake NCCL_HOME=&lt;path-to-nccl&gt; [MPI=1]\n</code></pre>"},{"location":"nccl/examples/#_10","title":"\u73af\u5883\u53d8\u91cf","text":""},{"location":"nccl/examples/#_11","title":"\u7f16\u8bd1\u9636\u6bb5","text":"<ul> <li><code>NCCL_HOME=&lt;path&gt;</code>\uff1aNCCL \u5b89\u88c5\u8def\u5f84\u3002</li> <li><code>MPI</code>\uff1a\u53d6\u503c 0 \u6216 1\uff0c\u63a7\u5236\u662f\u5426\u7f16\u8bd1 MPI \u7248\u672c\u3002</li> <li><code>MPI_HOME=&lt;path&gt;</code>\uff1aMPI \u5b89\u88c5\u8def\u5f84\uff08\u975e\u6807\u51c6\u4f4d\u7f6e\u65f6\u8bbe\u7f6e\uff09\u3002</li> <li><code>CUDA_HOME=&lt;path&gt;</code>\uff1aCUDA \u5b89\u88c5\u8def\u5f84\u3002</li> </ul>"},{"location":"nccl/examples/#_12","title":"\u8fd0\u884c\u9636\u6bb5","text":"<ul> <li><code>NTHREADS=&lt;n&gt;</code>\uff1a\u793a\u4f8b\u4f7f\u7528\u7684\u7ebf\u7a0b\u6570\uff0c\u9ed8\u8ba4\u7b49\u4e8e\u53ef\u89c1 GPU \u6570\u3002</li> <li><code>CUDA_VISIBLE_DEVICES</code>\uff1a\u6307\u5b9a\u5e94\u7528\u53ef\u89c1\u7684 GPU \u5217\u8868\u3002</li> <li>\u5176\u4ed6 NCCL \u73af\u5883\u53d8\u91cf \u540c\u6837\u9002\u7528\u3002</li> </ul>"},{"location":"nccl/examples/#_13","title":"\u652f\u6301\u7684\u64cd\u4f5c\u7cfb\u7edf","text":"<p>Linux</p>"},{"location":"nccl/examples/#_14","title":"\u6545\u969c\u6392\u67e5","text":"<p>\u6bcf\u4e2a\u793a\u4f8b\u7684\u6587\u6863\u90fd\u5305\u542b\u201c\u5e38\u89c1\u95ee\u9898\u4e0e\u89e3\u51b3\u65b9\u6848\u201d\u7ae0\u8282\u3002\u8fd0\u884c\u65f6\u82e5\u9047\u5230\u5f02\u5e38\uff0c\u53ef\u8bbe\u7f6e <code>NCCL_DEBUG=INFO</code> \u67e5\u770b\u8be6\u7ec6\u65e5\u5fd7\uff0c\u5e76\u53c2\u8003\u5b98\u65b9\u6587\u6863\u7684 Troubleshooting \u90e8\u5206\u83b7\u53d6\u66f4\u591a\u5efa\u8bae\u3002</p>"},{"location":"nccl/examples/01_communicators/","title":"NCCL \u901a\u4fe1\u5668\u793a\u4f8b","text":""},{"location":"nccl/examples/01_communicators/#_1","title":"\u6982\u8ff0","text":"<p>\u672c\u76ee\u5f55\u5305\u542b\u6700\u5c0f\u5316\u7684\u793a\u4f8b\uff0c\u6f14\u793a\u5982\u4f55\u5728\u4e0d\u540c\u521d\u59cb\u5316\u6a21\u5f0f\u4e0b\u521b\u5efa\u3001\u67e5\u8be2\u4e0e\u9500\u6bc1 NCCL \u901a\u4fe1\u5668\u3002</p>"},{"location":"nccl/examples/01_communicators/#_2","title":"\u793a\u4f8b\u5217\u8868","text":""},{"location":"nccl/examples/01_communicators/#01_multiple_devices_single_process","title":"01_multiple_devices_single_process","text":"<p>\u591a\u8bbe\u5907\u5355\u8fdb\u7a0b</p> <ul> <li>\u6a21\u5f0f\uff1a\u5355\u4e2a\u8fdb\u7a0b\u7ba1\u7406\u8282\u70b9\u4e0a\u6240\u6709 GPU\u3002</li> <li>\u4e3b\u8981 API\uff1a<code>ncclCommInitAll</code>\uff08\u65e0\u9700\u5916\u90e8\u534f\u8c03\uff09\u3002</li> <li>\u9002\u7528\u573a\u666f\uff1a\u5355\u8282\u70b9\u3001\u5c0f\u578b\u5e94\u7528\u3002</li> <li>\u7279\u70b9\uff1a</li> <li>\u521d\u59cb\u5316\u6700\u7b80\u5355\uff1b</li> <li>\u4e0d\u4f9d\u8d56\u7ebf\u7a0b\u6216 MPI\uff1b</li> <li>\u6392\u540d\u81ea\u52a8\u5206\u914d\uff080\u2026n-1\uff09\uff1b</li> <li>\u65e0\u6cd5\u8de8\u8282\u70b9\u6269\u5c55\u3002</li> </ul> <p>\u8fd0\u884c\u547d\u4ee4\uff1a <pre><code>./01_multiple_devices_single_process/multiple_devices_single_process\n</code></pre></p>"},{"location":"nccl/examples/01_communicators/#02_one_device_per_pthread","title":"02_one_device_per_pthread","text":"<p>pthread \u4e00\u5361\u4e00\u7ebf\u7a0b</p> <ul> <li>\u6a21\u5f0f\uff1a\u5355\u8fdb\u7a0b\u4e0b\u6bcf\u4e2a GPU \u5bf9\u5e94\u4e00\u4e2a\u7ebf\u7a0b\u3002</li> <li>\u4e3b\u8981 API\uff1a<code>ncclCommInitRank</code>\uff0c\u5229\u7528 pthread \u534f\u8c03\u3002</li> <li>\u9002\u7528\u573a\u666f\uff1a\u5355\u8282\u70b9\u591a GPU\uff0c\u57fa\u4e8e\u7ebf\u7a0b\u7684\u5e76\u884c\u3002</li> <li>\u7279\u70b9\uff1a</li> <li>\u901a\u8fc7 pthread \u5c4f\u969c\u540c\u6b65\uff1b</li> <li>\u4f7f\u7528\u5171\u4eab\u5185\u5b58\u4f20\u9012 unique ID\uff1b</li> <li>\u76f8\u6bd4\u591a\u8fdb\u7a0b\u5f00\u9500\u66f4\u4f4e\uff1b</li> <li>\u4ecd\u5c40\u9650\u5355\u8282\u70b9\u3002</li> </ul> <p>\u8fd0\u884c\u547d\u4ee4\uff1a <pre><code>[NTHREADS=n] ./02_one_device_per_pthread/one_device_per_pthread\n</code></pre></p>"},{"location":"nccl/examples/01_communicators/#03_one_device_per_process_mpi","title":"03_one_device_per_process_mpi","text":"<p>MPI \u4e00\u5361\u4e00\u8fdb\u7a0b</p> <ul> <li>\u6a21\u5f0f\uff1a\u6bcf\u4e2a GPU \u5bf9\u5e94\u4e00\u4e2a MPI \u8fdb\u7a0b\u3002</li> <li>\u4e3b\u8981 API\uff1a<code>ncclCommInitRank</code>\uff0c\u901a\u8fc7 MPI \u534f\u8c03\u3002</li> <li>\u9002\u7528\u573a\u666f\uff1a\u591a\u8282\u70b9\u96c6\u7fa4\u3001\u5206\u5e03\u5f0f\u8bad\u7ec3\u3002</li> <li>\u7279\u70b9\uff1a</li> <li>\u4f7f\u7528 MPI \u5e7f\u64ad\u5206\u53d1 unique ID\uff1b</li> <li>\u901a\u8fc7\u672c\u5730 MPI rank \u6620\u5c04 GPU\uff1b</li> <li>\u53ef\u6269\u5c55\u81f3\u591a\u8282\u70b9\u73af\u5883\u3002</li> </ul> <p>\u8fd0\u884c\u547d\u4ee4\uff1a <pre><code>mpirun -np &lt;num_processes&gt; ./03_one_device_per_process_mpi/one_device_per_process_mpi\n</code></pre></p>"},{"location":"nccl/examples/01_communicators/#_3","title":"\u5982\u4f55\u9009\u62e9\u521d\u59cb\u5316\u65b9\u5f0f","text":"\u7279\u6027 ncclCommInitAll pthread MPI \u8de8\u8282\u70b9\u652f\u6301 \u2717 \u2717 \u2713 \u8fdb\u7a0b\u9694\u79bb \u2717 \u2717 \u2713 \u90e8\u7f72\u590d\u6742\u5ea6 \u4f4e \u4e2d \u9ad8 \u989d\u5916\u5185\u5b58\u5f00\u9500 \u4f4e \u4e2d \u9ad8 \u6700\u9002\u5408\u7684\u573a\u666f \u7b80\u5355\u6d4b\u8bd5 \u5355\u8282\u70b9\u7ebf\u7a0b\u5e76\u884c \u96c6\u7fa4\u8bad\u7ec3"},{"location":"nccl/examples/01_communicators/#_4","title":"\u4f7f\u7528\u5efa\u8bae","text":"<ul> <li>ncclCommInitAll\uff1a\u7528\u4e8e\u5f00\u53d1\u8c03\u8bd5\u6216\u7b80\u5355\u7684\u5355\u8282\u70b9\u4efb\u52a1\u3002</li> <li>pthread\uff1a\u5355\u8282\u70b9\u4e0b\u9700\u8981\u7ebf\u7a0b\u5e76\u884c\u7684\u573a\u666f\u3002</li> <li>MPI\uff1a\u751f\u4ea7\u7ea7\u5206\u5e03\u5f0f\u8bad\u7ec3\u3001\u591a\u8282\u70b9\u90e8\u7f72\u3002</li> </ul>"},{"location":"nccl/examples/01_communicators/#_5","title":"\u6784\u5efa\u65b9\u6cd5","text":""},{"location":"nccl/examples/01_communicators/#_6","title":"\u5feb\u901f\u5f00\u59cb","text":"<pre><code># \u7f16\u8bd1\u5168\u90e8\u793a\u4f8b\uff08\u6216\u6307\u5b9a\u76ee\u5f55\uff09\nmake [\u76ee\u5f55\u540d]\n\n# \u8fd0\u884c\u5168\u90e8\u6d4b\u8bd5\nmake test\n</code></pre>"},{"location":"nccl/examples/01_communicators/#_7","title":"\u5355\u72ec\u6784\u5efa","text":"<pre><code># \u5206\u522b\u7f16\u8bd1\u793a\u4f8b\nmake 01_multiple_devices_single_process\nmake 02_one_device_per_pthread\nmake 03_one_device_per_process_mpi\n\n# \u5355\u4e2a\u793a\u4f8b\u6d4b\u8bd5\ncd 01_multiple_devices_single_process &amp;&amp; make test\ncd 02_one_device_per_pthread &amp;&amp; make test\ncd 03_one_device_per_process_mpi &amp;&amp; make test\n</code></pre>"},{"location":"nccl/examples/01_communicators/#_8","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>NVIDIA NCCL \u7528\u6237\u6307\u5357\uff1a\u793a\u4f8b</li> <li>NCCL API \u53c2\u8003</li> <li>CUDA \u7f16\u7a0b\u6307\u5357</li> <li>MPI \u6807\u51c6</li> </ul>"},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/","title":"NCCL \u793a\u4f8b\uff1a\u591a\u8bbe\u5907\u5355\u8fdb\u7a0b","text":"<p>\u672c\u793a\u4f8b\u5c55\u793a\u5982\u4f55\u5728\u5355\u4e2a\u8fdb\u7a0b\u5185\u4f7f\u7528 <code>ncclCommInitAll</code> \u4e3a\u591a\u5757 GPU \u521b\u5efa\u901a\u4fe1\u5668\uff0c\u65e0\u9700\u4f9d\u8d56 MPI \u6216\u7ebf\u7a0b\u5e93\u3002</p>"},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#_1","title":"\u6982\u8ff0","text":"<p>\u5f53\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u65f6\uff0c\u53ef\u4f7f\u7528 <code>ncclCommInitAll</code> \u4fbf\u6377\u521d\u59cb\u5316\u901a\u4fe1\u5668\uff1a</p> <ul> <li>\u6240\u6709 GPU \u7531\u540c\u4e00\u8fdb\u7a0b\u7ba1\u7406\uff1b</li> <li>\u8fd0\u884c\u73af\u5883\u4e3a\u5355\u8282\u70b9\uff1b</li> <li>\u4e0d\u9700\u8981\u591a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u534f\u8c03\u3002</li> </ul> <p>\u8be5\u65b9\u5f0f\u9002\u7528\u4e8e\u8ffd\u6c42\u7b80\u6d01\u7684\u5355\u8282\u70b9\u591a GPU \u5e94\u7528\u3002</p>"},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#_2","title":"\u793a\u4f8b\u6d41\u7a0b","text":"<ol> <li>\u68c0\u6d4b\u8bbe\u5907</li> <li>\u67e5\u8be2\u5f53\u524d\u53ef\u7528\u7684 CUDA \u8bbe\u5907\uff1b</li> <li> <p>\u8f93\u51fa\u6bcf\u5757 GPU \u7684\u5c5e\u6027\u4fe1\u606f\u3002</p> </li> <li> <p>\u521b\u5efa\u901a\u4fe1\u5668</p> </li> <li>\u901a\u8fc7\u4e00\u6b21 <code>ncclCommInitAll</code> \u8c03\u7528\u521b\u5efa\u5168\u90e8\u901a\u4fe1\u5668\uff1b</li> <li>NCCL \u81ea\u52a8\u4e3a\u8bbe\u5907\u5206\u914d rank\uff080 \u5230 n-1\uff09\uff1b</li> <li> <p>\u4e0d\u9700\u8981\u5206\u53d1 unique ID\u3002</p> </li> <li> <p>\u4fe1\u606f\u6821\u9a8c</p> </li> <li>\u663e\u793a\u6bcf\u4e2a\u901a\u4fe1\u5668\u7684 rank \u4e0e\u8bbe\u5907\u6620\u5c04\uff1b</li> <li> <p>\u786e\u8ba4\u521d\u59cb\u5316\u6210\u529f\u3002</p> </li> <li> <p>\u8d44\u6e90\u6e05\u7406</p> </li> <li>\u6b63\u786e\u9500\u6bc1\u901a\u4fe1\u5668\u4e0e CUDA \u6d41\uff1b</li> <li>\u6f14\u793a\u6807\u51c6\u7684\u8d44\u6e90\u7ba1\u7406\u6d41\u7a0b\u3002</li> </ol>"},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#_3","title":"\u6784\u5efa\u4e0e\u8fd0\u884c","text":""},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#_4","title":"\u6784\u5efa","text":"<pre><code>make [NCCL_HOME=&lt;path-to-nccl&gt;] [CUDA_HOME=&lt;path-to-cuda&gt;]\n</code></pre>"},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#gpu","title":"\u4f7f\u7528\u5168\u90e8\u53ef\u89c1 GPU \u8fd0\u884c","text":"<pre><code>./multiple_devices_single_process\n</code></pre>"},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#gpu_1","title":"\u6307\u5b9a GPU \u8fd0\u884c","text":"<pre><code># \u4ec5\u4f7f\u7528 0\u30011 \u53f7 GPU\nCUDA_VISIBLE_DEVICES=0,1 ./multiple_devices_single_process\n</code></pre>"},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#nccl_1","title":"\u6253\u5370 NCCL \u8c03\u8bd5\u4fe1\u606f","text":"<pre><code>NCCL_DEBUG=INFO ./multiple_devices_single_process\n</code></pre>"},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#_5","title":"\u4ee3\u7801\u8981\u70b9","text":""},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#ncclcomminitall","title":"\u6838\u5fc3\u51fd\u6570\uff1a<code>ncclCommInitAll</code>","text":"<p>\u5728\u5355\u8282\u70b9\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u4f7f\u7528 <code>ncclCommInitAll</code> \u4e00\u6b21\u6027\u521b\u5efa\u6240\u6709\u901a\u4fe1\u5668\uff1a</p> <pre><code>int num_gpus;      // \u901a\u8fc7\u67e5\u8be2 CUDA \u8bbe\u5907\u5f97\u5230\nncclComm_t* comms;\nint* devices;      // \u586b\u5199\u8981\u4f7f\u7528\u7684 GPU ID\n\n// \u4e3a\u5168\u90e8\u8bbe\u5907\u4e00\u6b21\u6027\u521b\u5efa\u901a\u4fe1\u5668\nNCCLCHECK(ncclCommInitAll(comms, num_gpus, devices));\n</code></pre> <p>\u8fd9\u6b21\u8c03\u7528\u4f1a\uff1a</p> <ul> <li>\u521b\u5efa <code>num_gpus</code> \u4e2a\u901a\u4fe1\u5668\uff1b</li> <li>\u81ea\u52a8\u5206\u914d rank\uff080 \u5230 num_gpus-1\uff09\uff1b</li> <li>\u5efa\u7acb\u5185\u90e8\u901a\u4fe1\u62d3\u6251\uff1b</li> <li>\u65e0\u9700 unique ID\u3002</li> </ul>"},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#ncclcomminitrank","title":"\u4e0e <code>ncclCommInitRank</code> \u7684\u5bf9\u6bd4","text":"<p><code>ncclCommInitAll</code> \u662f <code>ncclCommInitRank</code> \u7684\u4fbf\u6377\u5c01\u88c5\uff0c\u6548\u679c\u7b49\u540c\u4e8e\uff1a</p> <pre><code>ncclUniqueId id;\n\nncclGetUniqueId(&amp;id);\n\nncclGroupStart();\nfor (int i = 0; i &lt; num_gpus; i++) {\n  cudaSetDevice(i);\n  ncclCommInitRank(comms[i], num_gpus, id, devices[i]);\n}\nncclGroupEnd();\n</code></pre>"},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#_6","title":"\u9884\u671f\u8f93\u51fa","text":"<pre><code>Found 4 CUDA device(s) available\n\nAvailable GPU devices:\n  GPU 0: NVIDIA A100-SXM4-40GB (CUDA Device 0)\n    Compute Capability: 8.0\n    Memory: 40.0 GB\n  GPU 1: NVIDIA A100-SXM4-40GB (CUDA Device 1)\n    Compute Capability: 8.0\n    Memory: 40.0 GB\n  GPU 2: NVIDIA A100-SXM4-40GB (CUDA Device 2)\n    Compute Capability: 8.0\n    Memory: 40.0 GB\n  GPU 3: NVIDIA A100-SXM4-40GB (CUDA Device 3)\n    Compute Capability: 8.0\n    Memory: 40.0 GB\nUsing ncclCommInitAll() to create all communicators simultaneously\nAll 4 NCCL communicators initialized successfully\n\nCommunicator Details:\n  Communicator 0: Rank 0/4 on CUDA device 0\n  Communicator 1: Rank 1/4 on CUDA device 1\n  Communicator 2: Rank 2/4 on CUDA device 2\n  Communicator 3: Rank 3/4 on CUDA device 3\nAll communicators have the expected size of 4\n\nSynchronizing all CUDA streams...\nAll streams synchronized\nDestroying NCCL communicators...\nAll NCCL communicators destroyed\nDestroying CUDA streams...\nAll CUDA streams destroyed\n\n=============================================================\nSUCCESS: Multiple devices single process example completed!\n=============================================================\n</code></pre>"},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#_7","title":"\u9002\u7528\u573a\u666f","text":""},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#_8","title":"\u63a8\u8350\u4f7f\u7528","text":"<ul> <li>\u5355\u8282\u70b9\u5de5\u4f5c\u8d1f\u8f7d\uff1a\u6240\u6709 GPU \u4f4d\u4e8e\u540c\u4e00\u53f0\u673a\u5668\uff1b</li> <li>\u7b80\u5355\u5e94\u7528\uff1a\u65e0\u9700\u591a\u8fdb\u7a0b\u534f\u8c03\uff1b</li> <li>\u5f00\u53d1/\u6d4b\u8bd5\uff1a\u5feb\u901f\u9a8c\u8bc1 NCCL \u529f\u80fd\u3002</li> </ul>"},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#_9","title":"\u4e0d\u5efa\u8bae\u4f7f\u7528","text":"<ul> <li>\u591a\u8282\u70b9\u96c6\u7fa4\uff1a\u8de8\u8282\u70b9\u901a\u4fe1\u9700\u8981 MPI\uff1b</li> <li>\u9700\u8981\u8fdb\u7a0b\u9694\u79bb\uff1a\u6bcf\u5757 GPU \u72ec\u5360\u72ec\u7acb\u8fdb\u7a0b\u65f6\u3002</li> </ul>"},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#_10","title":"\u6027\u80fd\u8003\u91cf","text":"<ul> <li>\u4f18\u52bf</li> <li>\u65e0\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff0c\u5f00\u9500\u66f4\u4f4e\uff1b</li> <li>\u5185\u5b58\u7ba1\u7406\u66f4\u76f4\u63a5\uff1b</li> <li>\u53ef\u76f4\u63a5\u8bbf\u95ee\u6240\u6709 GPU\u3002</li> <li>\u52a3\u52bf</li> <li>\u53d7\u5355\u8fdb\u7a0b\u8d44\u6e90\u9650\u5236\uff1b</li> <li>\u65e0\u6cd5\u6269\u5c55\u5230\u591a\u8282\u70b9\u3002</li> </ul>"},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#_11","title":"\u5e38\u89c1\u95ee\u9898","text":"<ol> <li>\u65e0\u6cd5\u770b\u5230\u6240\u6709 GPU</li> <li>\u68c0\u67e5 <code>CUDA_VISIBLE_DEVICES</code>\uff1b</li> <li>\u786e\u8ba4\u5f53\u524d\u7528\u6237\u5bf9 GPU \u6709\u6743\u9650\uff1b</li> <li> <p>\u4fdd\u8bc1\u6ca1\u6709\u5176\u4ed6\u8fdb\u7a0b\u72ec\u5360 GPU\u3002</p> </li> <li> <p>\u663e\u5b58\u4e0d\u8db3</p> </li> <li>\u5355\u8fdb\u7a0b\u9700\u8981\u7ba1\u7406\u6240\u6709 GPU \u7684\u8d44\u6e90\uff1b</li> <li>\u5982\u6709\u9700\u8981\uff0c\u53ef\u8003\u8651\u6539\u7528\u591a\u8fdb\u7a0b\u65b9\u6848\u3002</li> </ol>"},{"location":"nccl/examples/01_communicators/01_multiple_devices_single_process/#_12","title":"\u540e\u7eed\u5b66\u4e60","text":"<p>\u7406\u89e3\u672c\u793a\u4f8b\u540e\uff0c\u53ef\u4ee5\uff1a</p> <ol> <li>\u8bd5\u8bd5\u4f7f\u7528 <code>ncclCommInitAll</code> \u7684\u5404\u7c7b\u96c6\u4f53\u901a\u4fe1\u793a\u4f8b\uff1b</li> <li>\u4e0e\u57fa\u4e8e MPI \u7684\u591a\u8fdb\u7a0b\u65b9\u6848\u5bf9\u6bd4\u6027\u80fd\uff1b</li> <li>\u5c1d\u8bd5\u4e0d\u540c\u7684 GPU \u7ec4\u5408\u8fd0\u884c\u3002</li> </ol>"},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/","title":"NCCL \u793a\u4f8b\uff1apthread \u4e00\u5361\u4e00\u7ebf\u7a0b","text":"<p>\u672c\u793a\u4f8b\u6f14\u793a\u5982\u4f55\u5728 pthread \u591a\u7ebf\u7a0b\u573a\u666f\u4e2d\u7ba1\u7406 NCCL \u901a\u4fe1\u5668\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u7ed1\u5b9a\u4e00\u5757 GPU\u3002</p>"},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#_1","title":"\u6982\u8ff0","text":"<p>\u5f53\u5e94\u7528\u672c\u8eab\u91c7\u7528\u7ebf\u7a0b\u5e76\u884c\u65f6\uff0c\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5206\u914d\u72ec\u7acb\u7684 GPU \u8bbe\u5907\uff0c\u5e76\u5728\u5404\u7ebf\u7a0b\u5185\u5b8c\u6210\u901a\u4fe1\u5668\u7684\u521d\u59cb\u5316\u4e0e\u9500\u6bc1\u3002\u672c\u793a\u4f8b\u5c55\u793a\u4e86\u6b63\u786e\u7684\u6267\u884c\u987a\u5e8f\u3002</p>"},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#_2","title":"\u793a\u4f8b\u6d41\u7a0b","text":"<ol> <li>\u521b\u5efa\u7ebf\u7a0b</li> <li>\u6839\u636e\u53ef\u89c1 GPU \u6570\u91cf\uff08\u6216 <code>NTHREADS</code>\uff09\u521b\u5efa\u7b49\u6570\u91cf\u7684 pthread\uff1b</li> <li> <p>\u6bcf\u4e2a\u7ebf\u7a0b\u8bbe\u7f6e\u81ea\u5df1\u7684 CUDA \u8bbe\u5907\u4e0a\u4e0b\u6587\u3002</p> </li> <li> <p>\u521b\u5efa\u901a\u4fe1\u5668</p> </li> <li>\u901a\u8fc7 <code>ncclCommInitRank</code> \u548c\u5171\u4eab\u7684 unique ID \u521d\u59cb\u5316\u901a\u4fe1\u5668\uff1b</li> <li> <p>\u5728\u7ebf\u7a0b\u5185\u5b8c\u6210\u521d\u59cb\u5316\uff0c\u6f14\u793a NCCL \u7684\u7ebf\u7a0b\u5b89\u5168\u7528\u6cd5\u3002</p> </li> <li> <p>\u9a8c\u8bc1\u4fe1\u606f</p> </li> <li>\u67e5\u8be2\u901a\u4fe1\u5668\u7684 rank\u3001\u89c4\u6a21\u4e0e\u8bbe\u5907\uff1b</li> <li> <p>\u786e\u8ba4\u6240\u6709\u7ebf\u7a0b\u90fd\u521d\u59cb\u5316\u6210\u529f\u3002</p> </li> <li> <p>\u6e05\u7406\u8d44\u6e90</p> </li> <li>\u5728\u7ebf\u7a0b\u5185\u90e8\u6309\u987a\u5e8f\u9500\u6bc1 NCCL \u4e0e CUDA \u8d44\u6e90\uff1b</li> <li>\u6f14\u793a\u6b63\u786e\u7684\u8d44\u6e90\u7ba1\u7406\u6d41\u7a0b\u3002</li> </ol>"},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#_3","title":"\u6784\u5efa\u4e0e\u8fd0\u884c","text":""},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#_4","title":"\u6784\u5efa","text":"<pre><code>make [NCCL_HOME=&lt;path-to-nccl&gt;] [CUDA_HOME=&lt;path-to-cuda&gt;]\n</code></pre>"},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#gpu","title":"\u6307\u5b9a\u7ebf\u7a0b\uff08GPU\uff09\u6570\u91cf\u8fd0\u884c","text":"<pre><code>[NTHREADS=n] ./one_device_per_pthread\n</code></pre>"},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#nccl","title":"\u6253\u5370 NCCL \u8c03\u8bd5\u4fe1\u606f","text":"<pre><code>NCCL_DEBUG=INFO ./one_device_per_pthread\n</code></pre>"},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#_5","title":"\u4ee3\u7801\u8981\u70b9","text":""},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#ncclcomminitrank","title":"\u7ebf\u7a0b\u4e2d\u7684 <code>ncclCommInitRank</code>","text":"<pre><code>// \u6bcf\u4e2a\u7ebf\u7a0b\u62e5\u6709\u81ea\u5df1\u7684 threadData_t \u7ed3\u6784\u4f53\u526f\u672c\ntypedef struct {\n  int thread_id;      // \u521b\u5efa\u7ebf\u7a0b\u65f6\u6307\u5b9a\n  int num_gpus;       // \u901a\u8fc7\u67e5\u8be2 CUDA \u8bbe\u5907\u5f97\u5230\n  ncclUniqueId commId; // \u7531 ncclGetUniqueId \u751f\u6210\n  ncclComm_t* comms;\n} threadData_t;\nthreadData_t* data;\n\n// \u6bcf\u4e2a\u7ebf\u7a0b\u521d\u59cb\u5316\u5bf9\u5e94\u7684\u901a\u4fe1\u5668\nNCCLCHECK(ncclCommInitRank(&amp;data-&gt;comms[thread_id], data-&gt;num_gpus, data-&gt;commId, data-&gt;thread_id));\n</code></pre> <p>\u8be5\u65b9\u5f0f\u4e0b\uff1a</p> <ul> <li>\u6bcf\u4e2a\u7ebf\u7a0b\u83b7\u5f97\u72ec\u7acb\u7684 NCCL rank\uff080\u30011\u30012\u2026\uff09\uff1b</li> <li>unique ID \u901a\u8fc7\u5168\u5c40\u5171\u4eab\u53d8\u91cf\u5206\u53d1\uff0c\u65e0\u9700\u989d\u5916\u901a\u4fe1\u3002</li> </ul>"},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#_6","title":"\u9884\u671f\u8f93\u51fa","text":"<pre><code>Using 4 devices with pthreads\nCreating 4 threads for NCCL communicators\n  Thread 0: Set device 0 and created stream\n  Thread 1: Set device 1 and created stream\n  Thread 2: Set device 2 and created stream\n  Thread 3: Set device 3 and created stream\n  Thread 0: NCCL communicator initialized\n  Thread 1: NCCL communicator initialized\n  Thread 2: NCCL communicator initialized\n  Thread 3: NCCL communicator initialized\nAll threads synchronized - communicators ready\n  Thread 0: Communicator rank 0 of 4\n  Thread 1: Communicator rank 1 of 4\n  Thread 2: Communicator rank 2 of 4\n  Thread 3: Communicator rank 3 of 4\n  Thread 0: Destroyed NCCL communicator\n  Thread 1: Destroyed NCCL communicator\n  Thread 2: Destroyed NCCL communicator\n  Thread 3: Destroyed NCCL communicator\n  Thread 0: Resources cleaned up\n  Thread 1: Resources cleaned up\n  Thread 2: Resources cleaned up\n  Thread 3: Resources cleaned up\nAll threads completed\nSuccess\n</code></pre>"},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#_7","title":"\u9002\u7528\u573a\u666f","text":""},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#_8","title":"\u63a8\u8350\u4f7f\u7528","text":"<ul> <li>\u7ebf\u7a0b\u5316\u5e94\u7528\uff1a\u7a0b\u5e8f\u672c\u8eab\u5229\u7528\u7ebf\u7a0b\u5e76\u884c\uff1b</li> <li>\u5355\u8282\u70b9\u4efb\u52a1\uff1a\u6240\u6709 GPU \u4f4d\u4e8e\u540c\u4e00\u53f0\u4e3b\u673a\uff1b</li> <li>\u5171\u4eab\u5185\u5b58\u9700\u6c42\uff1a\u591a\u4e2a GPU \u4e0a\u4e0b\u6587\u9700\u8981\u5171\u4eab\u6570\u636e\u7ed3\u6784\u3002</li> </ul>"},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#_9","title":"\u4e0d\u5efa\u8bae\u4f7f\u7528","text":"<ul> <li>\u591a\u8282\u70b9\u96c6\u7fa4\uff1a\u65e0\u6cd5\u6269\u5c55\u5230\u591a\u8282\u70b9\uff1b</li> <li>\u9700\u8981\u8fdb\u7a0b\u9694\u79bb\uff1aGPU \u4e0a\u4e0b\u6587\u5fc5\u987b\u9694\u79bb\u65f6\uff1b</li> <li>\u590d\u6742\u7cfb\u7edf\uff1a\u591a\u8fdb\u7a0b\u67b6\u6784\u53ef\u80fd\u66f4\u6613\u7ef4\u62a4\u3002</li> </ul>"},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#_10","title":"\u6027\u80fd\u8003\u91cf","text":"<ul> <li>\u4f18\u52bf</li> <li>\u7ebf\u7a0b\u5171\u4eab\u5730\u5740\u7a7a\u95f4\uff0c\u6570\u636e\u4ea4\u6362\u65b9\u4fbf\uff1b</li> <li>\u65e0 MPI \u901a\u4fe1\u5f00\u9500\uff1b</li> <li>\u9002\u5408\u5feb\u901f\u5b9e\u9a8c\u3002</li> <li>\u52a3\u52bf</li> <li>\u7ebf\u7a0b\u540c\u6b65\u903b\u8f91\u66f4\u590d\u6742\uff1b</li> <li>\u53ea\u80fd\u4f5c\u7528\u4e8e\u5355\u8282\u70b9\u3002</li> </ul>"},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#_11","title":"\u5e38\u89c1\u95ee\u9898","text":"<ol> <li>\u7ebf\u7a0b\u540c\u6b65\u5931\u8d25</li> <li>\u786e\u4fdd\u6240\u6709\u7ebf\u7a0b\u4f7f\u7528\u540c\u4e00\u4e2a NCCL unique ID\uff1b</li> <li> <p>\u5408\u7406\u4f7f\u7528 pthread \u5c4f\u969c\u4e0e <code>pthread_join</code>\u3002</p> </li> <li> <p>CUDA \u4e0a\u4e0b\u6587\u51b2\u7a81</p> </li> <li>\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u8c03\u7528 CUDA API \u524d\u5fc5\u987b\u6267\u884c <code>cudaSetDevice()</code>\uff1b</li> <li> <p>\u4e0d\u8981\u5728\u4e0d\u540c\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab CUDA \u6d41\u3002</p> </li> <li> <p>\u8d44\u6e90\u91ca\u653e\u987a\u5e8f</p> </li> <li>\u5148\u9500\u6bc1 NCCL \u901a\u4fe1\u5668\uff0c\u518d\u91ca\u653e CUDA \u8d44\u6e90\uff1b</li> <li>\u5728\u9500\u6bc1\u901a\u4fe1\u5668\u524d\u786e\u4fdd\u6d41\u5df2\u540c\u6b65\u3002</li> </ol>"},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#_12","title":"\u9519\u8bef\u5904\u7406","text":"<p>\u793a\u4f8b\u901a\u8fc7\u5b8f\u5c01\u88c5\u9519\u8bef\u5904\u7406\uff1a</p> <ul> <li><code>CUDACHECK</code>\uff1a\u6355\u83b7 CUDA \u9519\u8bef\u5e76\u7acb\u5373\u9000\u51fa\uff1b</li> <li><code>NCCLCHECK</code>\uff1a\u6355\u83b7 NCCL \u9519\u8bef\u5e76\u7acb\u5373\u9000\u51fa\uff1b</li> <li>\u672a\u8fdb\u884c\u5f02\u6b65\u9519\u8bef\u68c0\u67e5\uff0c\u4fbf\u4e8e\u7a81\u51fa\u4e3b\u6d41\u7a0b\uff1b</li> <li>\u6bcf\u4e2a\u7ebf\u7a0b\u72ec\u7acb\u5904\u7406\u81ea\u8eab\u9519\u8bef\u3002</li> </ul>"},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#_13","title":"\u76f8\u5173\u73af\u5883\u53d8\u91cf","text":"<ul> <li><code>NTHREADS</code>\uff1a\u521b\u5efa\u7ebf\u7a0b\u6570\u91cf\uff08\u9ed8\u8ba4\u7b49\u4e8e GPU \u6570\uff09\u3002</li> </ul> <p>\u5b8c\u6574\u5217\u8868\u89c1\u4e0a\u7ea7\u76ee\u5f55\u7684 <code>examples/README.md</code>\u3002</p>"},{"location":"nccl/examples/01_communicators/02_one_device_per_pthread/#_14","title":"\u540e\u7eed\u5b66\u4e60","text":"<p>\u7406\u89e3\u8be5\u793a\u4f8b\u540e\u53ef\u4ee5\uff1a</p> <ol> <li>\u5c1d\u8bd5\u5728\u96c6\u4f53\u901a\u4fe1\u793a\u4f8b\u4e2d\u96c6\u6210 pthread \u65b9\u6848\uff1b</li> <li>\u4e0e\u57fa\u4e8e MPI \u7684\u591a\u8fdb\u7a0b\u65b9\u6848\u5bf9\u6bd4\u8868\u73b0\u3002</li> </ol>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/","title":"NCCL \u793a\u4f8b\uff1aMPI \u4e00\u5361\u4e00\u8fdb\u7a0b","text":"<p>\u672c\u793a\u4f8b\u4ecb\u7ecd\u6700\u5e38\u89c1\u7684 NCCL \u90e8\u7f72\u65b9\u5f0f\u2014\u2014\u6bcf\u4e2a GPU \u5bf9\u5e94\u4e00\u4e2a MPI \u8fdb\u7a0b\uff0c\u5e76\u6f14\u793a\u901a\u4fe1\u5668\u7684\u521b\u5efa\u3001\u67e5\u8be2\u4e0e\u9500\u6bc1\u8fc7\u7a0b\u3002</p>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#_1","title":"\u6982\u8ff0","text":"<p>\u5728\u5927\u89c4\u6a21\u5206\u5e03\u5f0f\u8bad\u7ec3\u4e2d\uff0c\u4e00\u822c\u4e3a\u6bcf\u5757 GPU \u542f\u52a8\u4e00\u4e2a\u72ec\u7acb\u8fdb\u7a0b\u3002MPI \u63d0\u4f9b\u5e76\u884c\u542f\u52a8\u4e0e\u5e7f\u64ad\u80fd\u529b\uff0c\u975e\u5e38\u9002\u5408\u8be5\u6a21\u5f0f\uff08\u5c3d\u7ba1 NCCL \u672c\u8eab\u5e76\u4e0d\u4f9d\u8d56 MPI\uff0c\u53ea\u8981\u80fd\u5c06 unique ID \u5206\u53d1\u7ed9\u6240\u6709\u53c2\u4e0e\u8005\u5373\u53ef\uff09\u3002\u4e00\u4e9b\u5e94\u7528\u4e5f\u4f1a\u91c7\u7528 server-client \u6216 socket \u542f\u52a8\u6d41\u7a0b\uff0c\u53ea\u8981\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u5373\u53ef\u4f7f\u7528 NCCL\uff1a</p> <ul> <li>\u6240\u6709\u7ebf\u7a0b/\u8fdb\u7a0b\u90fd\u80fd\u83b7\u5f97\u76f8\u540c\u7684 NCCL unique ID\uff1b</li> <li>\u6bcf\u4e2a\u7ebf\u7a0b/\u8fdb\u7a0b\u90fd\u8c03\u7528\u76f8\u5e94\u7684 NCCL \u521d\u59cb\u5316\u51fd\u6570\u3002</li> </ul>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#_2","title":"\u793a\u4f8b\u6d41\u7a0b","text":"<ol> <li>\u591a\u8282\u70b9\u652f\u6301</li> <li>\u81ea\u52a8\u8ba1\u7b97\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u672c\u5730 rank\uff1b</li> <li>\u5c06 MPI \u8fdb\u7a0b\u6620\u5c04\u5230\u672c\u5730 GPU\uff1b</li> <li> <p>\u901a\u8fc7 <code>MPI_Comm_split_type</code>\uff08<code>MPI_COMM_TYPE_SHARED</code>\uff09\u5b9e\u73b0\u672c\u5730 rank \u2192 GPU \u7684\u5bf9\u5e94\u5173\u7cfb\u3002</p> </li> <li> <p>\u521b\u5efa\u901a\u4fe1\u5668</p> </li> <li>\u4f7f\u7528 <code>ncclCommInitRank</code>\uff0c\u5e76\u901a\u8fc7 MPI \u534f\u8c03 unique ID\uff1b</li> <li>rank 0 \u751f\u6210 unique ID \u5e76\u5e7f\u64ad\uff1b</li> <li> <p>\u6240\u6709\u8fdb\u7a0b\u52a0\u5165\u5206\u5e03\u5f0f\u901a\u4fe1\u5668\u3002</p> </li> <li> <p>\u6821\u9a8c\u4fe1\u606f</p> </li> <li>\u8f93\u51fa MPI rank\u3001NCCL rank \u4e0e GPU \u4e4b\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\uff1b</li> <li> <p>\u786e\u8ba4\u6240\u6709\u8fdb\u7a0b\u90fd\u521d\u59cb\u5316\u6210\u529f\u3002</p> </li> <li> <p>\u8d44\u6e90\u6e05\u7406</p> </li> <li>\u6309\u6b63\u786e\u987a\u5e8f\u91ca\u653e\u8d44\u6e90\uff1b</li> <li>\u901a\u8fc7 MPI \u540c\u6b65\u786e\u4fdd\u5e72\u51c0\u9000\u51fa\u3002</li> </ol>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#_3","title":"\u6784\u5efa\u4e0e\u8fd0\u884c","text":""},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#_4","title":"\u6784\u5efa","text":"<pre><code>make MPI=1 [MPI_HOME=&lt;path-to-mpi&gt;] [NCCL_HOME=&lt;path-to-nccl&gt;] [CUDA_HOME=&lt;path-to-cuda&gt;]\n</code></pre>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#_5","title":"\u8fd0\u884c\u793a\u4f8b","text":"<pre><code>mpirun -np &lt;num_processes&gt; ./one_device_per_process_mpi\n</code></pre>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#nccl","title":"\u6253\u5370 NCCL \u8c03\u8bd5\u4fe1\u606f","text":"<pre><code>NCCL_DEBUG=INFO mpirun -np &lt;num_processes&gt; ./one_device_per_process_mpi\n</code></pre>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#_6","title":"\u4ee3\u7801\u8981\u70b9","text":"<p>\u8be5\u65b9\u6848\u80fd\u81ea\u52a8\u5904\u7406\u591a\u8282\u70b9 GPU \u5206\u914d\uff0c\u4f7f\u7528 MPI \u505a\u534f\u8c03\u3001\u4f7f\u7528 NCCL \u6267\u884c GPU \u901a\u4fe1\uff0c\u53ef\u540c\u65f6\u9002\u7528\u4e8e\u5355\u8282\u70b9\u4e0e\u591a\u8282\u70b9\u73af\u5883\u3002</p>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#unique-id","title":"\u5206\u53d1 unique ID","text":"<p>\u6240\u6709\u8c03\u7528 <code>ncclCommInitRank</code> \u7684\u8fdb\u7a0b\u5fc5\u987b\u5171\u4eab\u540c\u4e00\u4e2a NCCL unique ID\uff0c\u53ef\u901a\u8fc7 MPI \u5e7f\u64ad\u5b9e\u73b0\uff1a</p> <pre><code>// Rank 0 \u751f\u6210 unique ID\nif (mpi_rank == 0) {\n    NCCLCHECK(ncclGetUniqueId(&amp;nccl_id));\n}\n\n// \u5e7f\u64ad\u7ed9\u6240\u6709\u8fdb\u7a0b\nMPI_Bcast(&amp;nccl_id, sizeof(ncclUniqueId), MPI_BYTE, 0, MPI_COMM_WORLD);\n</code></pre>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#gpu","title":"\u5173\u952e\u903b\u8f91\uff1a\u591a\u8282\u70b9 GPU \u5206\u914d","text":"<pre><code>// \u901a\u8fc7 MPI_Comm_split_type \u8ba1\u7b97\u672c\u5730 rank\nint local_rank = getLocalRank(MPI_COMM_WORLD);\n\n// \u4f7f\u7528\u672c\u5730 rank \u4f5c\u4e3a GPU ID\uff08\u5047\u8bbe\u6bcf\u4e2a\u8282\u70b9\u7684\u8fdb\u7a0b\u6570\u4e0d\u8d85\u8fc7 GPU \u6570\u91cf\uff09\nCUDACHECK(cudaSetDevice(local_rank));\n\nncclComm_t comm;\nint mpi_rank, mpi_size;   // \u521d\u59cb\u5316 MPI \u65f6\u83b7\u5f97\nncclUniqueId nccl_id;     // \u5982\u4e0a\u6240\u793a\u751f\u6210\u5e76\u5e7f\u64ad\n\n// \u5728\u6240\u6709\u8fdb\u7a0b\u4e4b\u95f4\u521d\u59cb\u5316 NCCL \u901a\u4fe1\u5668\nNCCLCHECK(ncclCommInitRank(&amp;comm, mpi_size, nccl_id, mpi_rank));\n</code></pre>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#_7","title":"\u9884\u671f\u8f93\u51fa","text":""},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#4","title":"\u5355\u8282\u70b9\uff084 \u4e2a\u8fdb\u7a0b\uff09","text":"<pre><code>Starting NCCL communicator lifecycle example with 4 processes\n  MPI initialized - Process 0 of 4 total processes\n  Found 4 CUDA devices on this node\n  MPI rank 0 assigned to CUDA device 0\nRank 0 generated NCCL unique ID for all processes\n  Rank 0 received NCCL unique ID\n  Rank 0 created NCCL communicator\n  MPI rank 0 \u2192 NCCL rank 0/4 on GPU device 0\n\n[\u5176\u4f59 rank 1-3 \u8f93\u51fa\u7c7b\u4f3c]\n\nAll communicators initialized successfully! Beginning cleanup...\n  Rank 0 destroyed NCCL communicator\n\nAll NCCL communicators created and cleaned up properly!\nThis example demonstrated the complete NCCL communicator lifecycle.\nNext steps: Try running NCCL collective operations (AllReduce, etc.)\n</code></pre>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#8-2","title":"\u591a\u8282\u70b9\uff088 \u4e2a\u8fdb\u7a0b\uff0c2 \u4e2a\u8282\u70b9\uff09","text":"<pre><code>Starting NCCL communicator lifecycle example with 8 processes\n  MPI initialized - Process 0 of 8 total processes\n  ...\n  MPI rank 7 \u2192 NCCL rank 7/8 on GPU device 3\n\nAll NCCL communicators created and cleaned up properly!\n</code></pre>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#_8","title":"\u9002\u7528\u573a\u666f","text":""},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#_9","title":"\u63a8\u8350\u4f7f\u7528","text":"<ul> <li>\u591a\u8282\u70b9\u96c6\u7fa4\uff1a\u53ef\u6269\u5c55\u5230\u591a\u53f0\u673a\u5668\uff1b</li> <li>\u751f\u4ea7\u90e8\u7f72\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u7406\u7684\u4e3b\u6d41\u6a21\u5f0f\uff1b</li> <li>\u8fdb\u7a0b\u9694\u79bb\uff1a\u6bcf\u5757 GPU \u72ec\u7acb\u8fdb\u7a0b\uff0c\u9c81\u68d2\u6027\u66f4\u597d\uff1b</li> <li>\u5927\u89c4\u6a21\u4efb\u52a1\uff1a\u53ef\u652f\u6301\u6210\u767e\u4e0a\u5343\u5f20 GPU\u3002</li> </ul>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#_10","title":"\u4e0d\u5efa\u8bae\u4f7f\u7528","text":"<ul> <li>\u5355\u8282\u70b9\u6d4b\u8bd5\uff1a\u6709\u66f4\u7b80\u5355\u7684\u521d\u59cb\u5316\u65b9\u5f0f\uff1b</li> <li>\u7f3a\u5c11 MPI \u73af\u5883\uff1a\u65e0\u6cd5\u4f9d\u8d56 MPI \u7684\u73af\u5883\uff1b</li> <li>\u9700\u8981\u5171\u4eab\u5185\u5b58\uff1a\u5355\u8fdb\u7a0b\u65b9\u6848\u53ef\u80fd\u66f4\u5bb9\u6613\u5b9e\u73b0\u3002</li> </ul>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#_11","title":"\u6027\u80fd\u8003\u91cf","text":"<ul> <li>\u4f18\u52bf</li> <li>MPI \u9488\u5bf9\u5927\u89c4\u6a21\u5e76\u884c\u542f\u52a8\u8fdb\u884c\u4e86\u4f18\u5316\uff1b</li> <li>\u5de5\u4e1a\u754c\u4e3b\u6d41\u90e8\u7f72\u65b9\u5f0f\uff1b</li> <li>\u9002\u5408\u5927\u89c4\u6a21\u8bad\u7ec3\u4efb\u52a1\u3002</li> <li>\u52a3\u52bf</li> <li>\u9700\u8981\u5b89\u88c5\u4e0e\u914d\u7f6e MPI\uff1b</li> <li>\u5b58\u5728\u8fdb\u7a0b\u95f4\u901a\u4fe1\u5f00\u9500\uff1b</li> <li>\u9700\u4f9d\u8d56 MPI \u8fd0\u884c\u65f6\u73af\u5883\u3002</li> </ul>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#_12","title":"\u5e38\u89c1\u95ee\u9898","text":"<ol> <li>\u672c\u5730\u8fdb\u7a0b\u6570\u591a\u4e8e GPU \u6570</li> <li>\u82e5\u672c\u5730 rank \u8d85\u8fc7\u53ef\u7528\u8bbe\u5907\u6570\uff0c\u793a\u4f8b\u4f1a\u62a5\u9519\uff1b</li> <li> <p>\u8bf7\u51cf\u5c11\u6bcf\u8282\u70b9\u8fdb\u7a0b\u6570\u6216\u589e\u52a0 GPU \u6570\u91cf\u3002</p> </li> <li> <p>MPI \u5e7f\u64ad\u963b\u585e</p> </li> <li>\u786e\u4fdd\u6240\u6709\u8fdb\u7a0b\u90fd\u53c2\u4e0e MPI \u96c6\u4f53\u64cd\u4f5c\uff1b</li> <li> <p>\u68c0\u67e5 MPI \u5b89\u88c5\u548c\u7f51\u7edc\u8fde\u901a\u6027\u3002</p> </li> <li> <p>\u8de8\u8282\u70b9\u901a\u4fe1\u5931\u8d25</p> </li> <li>\u68c0\u67e5\u9632\u706b\u5899\u4e0e\u7f51\u7edc\u914d\u7f6e\uff1b</li> <li>\u53ef\u8bbe\u7f6e <code>NCCL_SOCKET_IFNAME</code> \u6307\u5b9a\u7f51\u5361\u3002</li> </ol>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#_13","title":"\u9519\u8bef\u5904\u7406","text":"<p>\u793a\u4f8b\u901a\u8fc7\u5b8f\u7b80\u5316\u9519\u8bef\u5904\u7406\uff1a - <code>CUDACHECK</code>\uff1a\u6355\u83b7 CUDA \u9519\u8bef\u5e76\u7acb\u5373\u9000\u51fa\uff1b - <code>NCCLCHECK</code>\uff1a\u6355\u83b7 NCCL \u9519\u8bef\u5e76\u7acb\u5373\u9000\u51fa\uff1b - \u672a\u5b9e\u73b0\u5f02\u6b65\u9519\u8bef\u68c0\u67e5\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u72ec\u7acb\u5904\u7406\u9519\u8bef\u3002</p>"},{"location":"nccl/examples/01_communicators/03_one_device_per_process_mpi/#_14","title":"\u540e\u7eed\u5b66\u4e60","text":"<p>\u7406\u89e3\u672c\u793a\u4f8b\u540e\uff0c\u53ef\u4ee5\uff1a 1. \u8fd0\u884c\u96c6\u4f53\u901a\u4fe1\u793a\u4f8b\uff08AllReduce\u3001AllGather \u7b49\uff09\uff1b 2. \u5c1d\u8bd5\u66f4\u591a\u8282\u70b9\u89c4\u6a21\u7684\u90e8\u7f72\u5b9e\u9a8c\u3002</p>"},{"location":"nccl/examples/02_point_to_point/","title":"NCCL \u70b9\u5bf9\u70b9\u901a\u4fe1\u793a\u4f8b","text":""},{"location":"nccl/examples/02_point_to_point/#_1","title":"\u6982\u8ff0","text":"<p>\u672c\u76ee\u5f55\u5305\u542b\u5355\u8282\u70b9\u73af\u5883\u4e0b\u7684 NCCL \u70b9\u5bf9\u70b9\uff08P2P\uff09\u901a\u4fe1\u793a\u4f8b\uff0c\u91cd\u70b9\u5c55\u793a\u901a\u4fe1\u5668\u4f7f\u7528\u65b9\u5f0f\u3001\u8d44\u6e90\u7ba1\u7406\u4ee5\u53ca\u7ed3\u679c\u6821\u9a8c\uff0c\u4ee3\u7801\u529b\u6c42\u7b80\u6d01\u6613\u61c2\u3002</p>"},{"location":"nccl/examples/02_point_to_point/#_2","title":"\u793a\u4f8b\u5217\u8868","text":""},{"location":"nccl/examples/02_point_to_point/#01_ring_pattern","title":"01_ring_pattern","text":"<p>\u73af\u5f62\u901a\u4fe1\u6a21\u5f0f</p> <ul> <li>\u6a21\u5f0f\uff1aGPU \u4e4b\u95f4\u6309\u73af\u5f62\u987a\u5e8f\u4ea4\u6362\u6570\u636e\uff1b</li> <li>\u4e3b\u8981 API\uff1a<code>ncclCommInitAll</code> \u642d\u914d <code>ncclSend</code> / <code>ncclRecv</code>\uff1b</li> <li>\u9002\u7528\u573a\u666f\uff1a\u5b66\u4e60\u70b9\u5bf9\u70b9\u901a\u4fe1\u3001\u7406\u89e3\u6d41\u6c34\u7ebf\u6216\u6570\u636e\u642c\u8fd0\u7684\u57fa\u672c\u6a21\u5f0f\uff1b</li> <li>\u7279\u70b9\uff1a</li> <li>\u5355\u8fdb\u7a0b\u521d\u59cb\u5316\u6240\u6709 GPU\uff1b</li> <li>\u4f7f\u7528\u53d6\u6a21\u8fd0\u7b97\u8ba1\u7b97\u73af\u5f62\u90bb\u5c45\uff1b</li> <li>\u901a\u8fc7 <code>ncclGroupStart/End</code> \u9632\u6b62\u6b7b\u9501\uff1b</li> <li>\u5728\u4f20\u8f93\u540e\u9a8c\u8bc1\u6570\u636e\u6b63\u786e\u6027\u3002</li> </ul>"},{"location":"nccl/examples/02_point_to_point/#_3","title":"\u9009\u62e9\u5408\u9002\u7684\u6a21\u5f0f","text":"<ul> <li>\u5178\u578b\u573a\u666f\uff1a\u6d41\u6c34\u7ebf\u5e76\u884c\u8bad\u7ec3\u9700\u8981\u5728\u4e0d\u540c GPU \u4e4b\u95f4\u8f6c\u53d1\u6570\u636e\uff1b</li> <li>\u89e3\u51b3\u95ee\u9898\uff1a\u4e24\u4e2a rank \u4e4b\u95f4\u7684\u5355\u6b21\u4f20\u8f93\uff1b</li> <li>\u4f9d\u8d56\uff1a\u53ef\u7528\u7684 NCCL \u5e93\u53ca\u5176\u4f9d\u8d56\u9879\u3002</li> </ul>"},{"location":"nccl/examples/02_point_to_point/#ncclcomminitall","title":"\u4e3a\u4ec0\u4e48\u4f7f\u7528 <code>ncclCommInitAll</code>","text":"<p>\u5728\u5355\u8282\u70b9\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 <code>ncclCommInitAll</code> \u4e00\u6b21\u6027\u521b\u5efa\u6240\u6709\u901a\u4fe1\u5668\uff1a</p> <pre><code>// \u4e00\u6b21\u6027\u521d\u59cb\u5316\u6240\u6709 GPU\nncclComm_t* comms;\nint num_gpus;\nNCCLCHECK(ncclCommInitAll(comms, num_gpus, NULL));\n</code></pre>"},{"location":"nccl/examples/02_point_to_point/#_4","title":"\u6784\u5efa\u65b9\u5f0f","text":""},{"location":"nccl/examples/02_point_to_point/#_5","title":"\u5feb\u901f\u5f00\u59cb","text":"<pre><code># \u6309\u76ee\u5f55\u540d\u6784\u5efa\u793a\u4f8b\nmake 01_ring_pattern\n</code></pre>"},{"location":"nccl/examples/02_point_to_point/#_6","title":"\u5355\u72ec\u6784\u5efa\u4e0e\u8fd0\u884c","text":"<pre><code>cd 01_ring_pattern &amp;&amp; make\n./ring_pattern\n</code></pre>"},{"location":"nccl/examples/02_point_to_point/#_7","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>NCCL \u7528\u6237\u6307\u5357\uff1a\u793a\u4f8b</li> <li>NCCL API \u53c2\u8003</li> <li>CUDA \u7f16\u7a0b\u6307\u5357</li> </ul>"},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/","title":"NCCL \u793a\u4f8b\uff1a\u73af\u5f62\u70b9\u5bf9\u70b9\u901a\u4fe1","text":"<p>\u672c\u793a\u4f8b\u5c55\u793a\u5982\u4f55\u4f7f\u7528 NCCL \u7684\u70b9\u5bf9\u70b9 API \u642d\u5efa\u73af\u5f62\u901a\u4fe1\u6a21\u5f0f\u3002\u793a\u4f8b\u8fd0\u884c\u5728\u5355\u8282\u70b9\u73af\u5883\uff0c\u7531\u5355\u4e2a\u8fdb\u7a0b\u7ba1\u7406\u6240\u6709 GPU\uff0c\u6570\u636e\u6cbf\u73af\u8def\u5faa\u73af\u4f20\u9012\u3002</p>"},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/#_1","title":"\u6982\u8ff0","text":"<p>\u73af\u5f62\u901a\u4fe1\u4f1a\u8ba9\u6bcf\u5757 GPU \u5c06\u6570\u636e\u53d1\u9001\u7ed9\u201c\u4e0b\u4e00\u4e2a\u201d\u90bb\u5c45\uff0c\u5e76\u4ece\u201c\u4e0a\u4e00\u4e2a\u201d\u90bb\u5c45\u63a5\u6536\u6570\u636e\u3002\u672c\u793a\u4f8b\u4f7f\u7528 <code>ncclCommInitAll</code> \u5728\u5355\u8fdb\u7a0b\u5185\u5b8c\u6210\u591a GPU \u521d\u59cb\u5316\uff0c\u6d41\u7a0b\u6e05\u6670\u4e14\u6613\u4e8e\u7406\u89e3\u3002</p>"},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/#_2","title":"\u793a\u4f8b\u6d41\u7a0b","text":"<ol> <li>\u68c0\u6d4b\u5e76\u521d\u59cb\u5316 GPU\uff1a\u4f7f\u7528 <code>ncclCommInitAll</code> \u5feb\u901f\u5b8c\u6210\u5355\u8fdb\u7a0b\u521d\u59cb\u5316\u3002</li> <li>\u6784\u5efa\u73af\u62d3\u6251\uff1a\u901a\u8fc7\u53d6\u6a21\u8ba1\u7b97\u6bcf\u4e2a GPU \u7684\u524d\u9a71\u4e0e\u540e\u7ee7\u3002</li> <li>\u6267\u884c\u5e76\u53d1\u901a\u4fe1\uff1a\u6bcf\u4e2a GPU \u540c\u65f6\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u53d1\u9001\u6570\u636e\u3001\u4ece\u4e0a\u4e00\u4e2a\u8282\u70b9\u63a5\u6536\u6570\u636e\u3002</li> <li>\u7ed3\u679c\u6821\u9a8c\uff1a\u786e\u8ba4\u6bcf\u4e2a GPU \u6536\u5230\u7684\u5185\u5bb9\u4e0e\u671f\u671b\u4e00\u81f4\u3002</li> </ol>"},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/#_3","title":"\u6784\u5efa\u4e0e\u8fd0\u884c","text":""},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/#_4","title":"\u6784\u5efa\u793a\u4f8b","text":"<pre><code>cd examples/02_point_to_point/01_ring_pattern\nmake [NCCL_HOME=&lt;path-to-nccl&gt;] [CUDA_HOME=&lt;path-to-cuda&gt;]\n</code></pre>"},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/#gpu","title":"\u4f7f\u7528\u5168\u90e8 GPU \u8fd0\u884c","text":"<pre><code>./ring_pattern\n</code></pre>"},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/#_5","title":"\u4ee3\u7801\u8981\u70b9","text":""},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/#_6","title":"\u73af\u62d3\u6251\u8ba1\u7b97","text":"<p>\u793a\u4f8b\u4f7f\u7528\u53d6\u6a21\u8fd0\u7b97\u786e\u5b9a\u90bb\u5c45\u5173\u7cfb\uff1a</p> <pre><code>for (int i = 0; i &lt; num_gpus; i++) {\n    int next = (i + 1) % num_gpus;             // \u4e0b\u4e00\u4e2a\u90bb\u5c45\n    int prev = (i - 1 + num_gpus) % num_gpus;  // \u4e0a\u4e00\u4e2a\u90bb\u5c45\n}\n</code></pre>"},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/#_7","title":"\u5e76\u53d1\u901a\u4fe1","text":"<p>\u901a\u8fc7 <code>ncclGroupStart/End</code> \u5728\u8c03\u5ea6\u6240\u6709 send/recv \u65f6\u907f\u514d\u6b7b\u9501\uff1a</p> <pre><code>float **d_sendbuff;   // \u53d1\u9001\u7f13\u51b2\u533a\uff0c\u4f7f\u7528 cudaMalloc \u5206\u914d\nfloat **d_recvbuff;   // \u63a5\u6536\u7f13\u51b2\u533a\nsize_t count;         // \u8981\u53d1\u9001\u7684 float \u6570\u91cf\nncclComm_t *comms;    // \u5728 ncclCommInitAll \u4e2d\u521d\u59cb\u5316\ncudaStream_t *streams; // \u6bcf\u5757 GPU \u7684 CUDA stream\n\nNCCLCHECK(ncclGroupStart());\nfor (int i = 0; i &lt; num_gpus; i++) {\n    int next = (i + 1) % num_gpus;\n    int prev = (i - 1 + num_gpus) % num_gpus;\n\n    NCCLCHECK(ncclSend(d_sendbuff[i], count, ncclFloat, next, comms[i], streams[i]));\n    NCCLCHECK(ncclRecv(d_recvbuff[i], count, ncclFloat, prev, comms[i], streams[i]));\n}\nNCCLCHECK(ncclGroupEnd());\n</code></pre>"},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/#_8","title":"\u9884\u671f\u8f93\u51fa","text":"<pre><code>Starting NCCL ring communication example\nUsing 4 GPUs for ring communication\nPreparing data structures\nInitializing NCCL communicators\nAll communicators initialized successfully\nCreating CUDA streams and verifying setup\n  GPU 0 -&gt; NCCL rank 0/4 on CUDA device 0\n  GPU 1 -&gt; NCCL rank 1/4 on CUDA device 1\n  GPU 2 -&gt; NCCL rank 2/4 on CUDA device 2\n  GPU 3 -&gt; NCCL rank 3/4 on CUDA device 3\nSetting up ring topology\nData flow -&gt; GPU 0 -&gt; GPU 1 -&gt; ... -&gt; GPU 3 -&gt; GPU 0\nRing transfer with 268435456 elements (1.00 GB per GPU)\nAllocating and initializing buffers\nExecuting ring communication\n  GPU 0 sends to GPU 1, receives from GPU 3\n  GPU 1 sends to GPU 2, receives from GPU 0\n  GPU 2 sends to GPU 3, receives from GPU 1\n  GPU 3 sends to GPU 0, receives from GPU 2\nRing communication completed successfully\nVerifying data correctness\n  GPU 0 received data from GPU 3: CORRECT\n  GPU 1 received data from GPU 0: CORRECT\n  GPU 2 received data from GPU 1: CORRECT\n  GPU 3 received data from GPU 2: CORRECT\nSUCCESS - All GPUs received correct data\nCleaning up resources\nExample completed successfully!\n</code></pre>"},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/#_9","title":"\u9002\u7528\u573a\u666f","text":"<ul> <li>\u5b66\u4e60 NCCL \u57fa\u7840\uff1a\u7406\u89e3\u70b9\u5bf9\u70b9\u901a\u4fe1\u6d41\u7a0b\uff1b</li> <li>\u7b97\u6cd5\u539f\u578b\u8bbe\u8ba1\uff1a\u5728 P2P \u57fa\u7840\u4e0a\u81ea\u884c\u6784\u5efa\u96c6\u4f53\u901a\u4fe1\uff1b</li> <li>\u5355\u8282\u70b9\u5e94\u7528\uff1a\u6d41\u6c34\u7ebf\u5e76\u884c\u3001\u81ea\u5b9a\u4e49\u6570\u636e\u5206\u53d1\u7b49\u6a21\u5f0f\u3002</li> </ul>"},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/#_10","title":"\u5173\u952e\u70b9\u603b\u7ed3","text":"<ul> <li><code>ncclCommInitAll</code> \u7b80\u5316\u4e86\u5355\u8282\u70b9\u591a GPU \u7684\u521d\u59cb\u5316\uff1b</li> <li>\u5355\u8282\u70b9\u793a\u4f8b\u65e0\u9700 MPI \u6216 pthread\uff1b</li> <li>\u73af\u5f62\u6a21\u5f0f\u53ef\u5f62\u6210 GPU \u4e4b\u95f4\u7684\u5faa\u73af\u6570\u636e\u6d41\uff1b</li> <li><code>ncclGroupStart/End</code> \u53ef\u907f\u514d\u5e76\u53d1\u53d1\u9001/\u63a5\u6536\u65f6\u7684\u6b7b\u9501\uff1b</li> <li>\u6bcf\u5757 GPU \u540c\u65f6\u6267\u884c\u53d1\u9001\u4e0e\u63a5\u6536\u3002</li> </ul>"},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/#_11","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/#_12","title":"\u6b7b\u9501","text":"<p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u5728\u8c03\u5ea6\u5e76\u53d1 send/recv \u65f6\u52a1\u5fc5\u4f7f\u7528 <code>ncclGroupStart()</code> / <code>ncclGroupEnd()</code>\u3002</p>"},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/#_13","title":"\u6821\u9a8c\u5931\u8d25","text":"<p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u68c0\u67e5\u73af\u62d3\u6251\u8ba1\u7b97\u4e0e\u521d\u59cb\u6570\u636e\uff0c\u786e\u4fdd\u90bb\u5c45\u5173\u7cfb\u6b63\u786e\u3002</p>"},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/#_14","title":"\u9519\u8bef\u5904\u7406","text":"<p>\u793a\u4f8b\u901a\u8fc7 <code>NCCLCHECK</code> \u4e0e <code>CUDACHECK</code> \u5b8f\u8fdb\u884c\u9519\u8bef\u68c0\u67e5\uff0c\u4e00\u65e6\u5931\u8d25\u7acb\u5373\u9000\u51fa\u3002\u5b9e\u9645\u9879\u76ee\u4e2d\u53ef\u6839\u636e\u9700\u8981\u6dfb\u52a0\u66f4\u5b8c\u5584\u7684\u5f02\u5e38\u6062\u590d\u903b\u8f91\u3002</p>"},{"location":"nccl/examples/02_point_to_point/01_ring_pattern/#_15","title":"\u540e\u7eed\u5b66\u4e60","text":"<p>\u5b8c\u6210\u8be5\u793a\u4f8b\u540e\uff0c\u53ef\u5c1d\u8bd5\uff1a - \u96c6\u4f53\u901a\u4fe1\u793a\u4f8b\uff1a\u53c2\u89c1 <code>03_collectives/</code>\uff1b - \u591a\u8282\u70b9\u901a\u4fe1\uff1a\u7ed3\u5408 <code>01_communicators</code> \u4e2d\u7684 MPI \u7248\u672c\u8de8\u8282\u70b9\u4f20\u8f93\u3002</p>"},{"location":"nccl/examples/03_collectives/","title":"NCCL \u96c6\u4f53\u901a\u4fe1\u793a\u4f8b","text":""},{"location":"nccl/examples/03_collectives/#_1","title":"\u6982\u8ff0","text":"<p>\u672c\u76ee\u5f55\u63d0\u4f9b\u5728\u5355\u8282\u70b9\u3001\u5355\u8fdb\u7a0b\u573a\u666f\u4e0b\u6f14\u793a NCCL \u96c6\u4f53\u901a\u4fe1\u64cd\u4f5c\u7684\u6700\u5c0f\u793a\u4f8b\uff0c\u91cd\u70b9\u5173\u6ce8\u6e05\u6670\u7684\u6d41\u7a0b\u3001\u6b63\u786e\u7684\u8d44\u6e90\u7ba1\u7406\u4ee5\u53ca\u7ed3\u679c\u6821\u9a8c\u3002</p>"},{"location":"nccl/examples/03_collectives/#_2","title":"\u793a\u4f8b\u5217\u8868","text":""},{"location":"nccl/examples/03_collectives/#01_allreduce","title":"01_allreduce","text":"<p>AllReduce \u96c6\u4f53\u64cd\u4f5c</p> <ul> <li>\u6a21\u5f0f\uff1a\u6240\u6709\u53c2\u4e0e\u8005\u805a\u5408\u6570\u636e\u5e76\u5e7f\u64ad\u7ed3\u679c\uff1b</li> <li>\u4e3b\u8981 API\uff1a<code>ncclCommInitAll</code>\u3001<code>ncclAllReduce</code>\uff1b</li> <li>\u9002\u7528\u573a\u666f\uff1a\u673a\u5668\u5b66\u4e60\u68af\u5ea6\u805a\u5408\u3001HPC \u5168\u5c40\u6c42\u548c\u7b49\uff1b</li> <li>\u7279\u70b9\uff1a</li> <li>\u5355\u8fdb\u7a0b\u521d\u59cb\u5316\u5168\u90e8 GPU\uff1b</li> <li>\u6bcf\u4e2a GPU \u63d0\u4ea4\u81ea\u8eab rank\uff1b</li> <li>\u5bf9\u6240\u6709 GPU \u6267\u884c\u6c42\u548c AllReduce\uff1b</li> <li>\u6821\u9a8c\u7ed3\u679c\u662f\u5426\u7b26\u5408\u9884\u671f\u7684\u5168\u5c40\u548c\u3002</li> </ul>"},{"location":"nccl/examples/03_collectives/#_3","title":"\u9009\u62e9\u5408\u9002\u7684\u6a21\u5f0f","text":"<ul> <li>\u5178\u578b\u573a\u666f\uff1a\u5e76\u884c\u8bad\u7ec3\u9700\u8981\u9ad8\u6548\u7684\u5168\u5c40\u901a\u4fe1\uff1b</li> <li>\u76ee\u6807\u95ee\u9898\uff1a\u6700\u5e38\u7528\u7684\u96c6\u4f53\u7b97\u6cd5\u4e4b\u4e00\uff1b</li> <li>\u4f9d\u8d56\uff1a\u5df2\u6b63\u786e\u5b89\u88c5\u7684 NCCL \u53ca\u5176\u8fd0\u884c\u65f6\u4f9d\u8d56\u3002</li> </ul>"},{"location":"nccl/examples/03_collectives/#ncclcomminitall","title":"\u4e3a\u4ec0\u4e48\u4f7f\u7528 <code>ncclCommInitAll</code>","text":"<p>\u5355\u8282\u70b9\u96c6\u4f53\u901a\u4fe1\u793a\u4f8b\u4f7f\u7528 <code>ncclCommInitAll</code> \u4e00\u6b21\u6027\u521b\u5efa\u5168\u90e8\u901a\u4fe1\u5668\uff1a</p> <pre><code>// \u4e00\u6b21\u6027\u521d\u59cb\u5316\u6240\u6709 GPU\nncclComm_t* comms;\nint num_gpus;\nNCCLCHECK(ncclCommInitAll(comms, num_gpus, NULL));\n</code></pre> <p>\u82e5\u9700\u8de8\u8282\u70b9\u521d\u59cb\u5316\uff0c\u53ef\u53c2\u8003 01_communicators/03_one_device_per_process_mpi\u3002</p>"},{"location":"nccl/examples/03_collectives/#_4","title":"\u6784\u5efa\u65b9\u5f0f","text":""},{"location":"nccl/examples/03_collectives/#_5","title":"\u5feb\u901f\u5f00\u59cb","text":"<pre><code>make 01_allreduce\n</code></pre>"},{"location":"nccl/examples/03_collectives/#_6","title":"\u5355\u72ec\u6784\u5efa\u4e0e\u8fd0\u884c","text":"<pre><code>cd 01_allreduce &amp;&amp; make\n./allreduce\n</code></pre>"},{"location":"nccl/examples/03_collectives/#_7","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>NCCL \u7528\u6237\u6307\u5357\uff1a\u793a\u4f8b</li> <li>NCCL API \u53c2\u8003</li> <li>CUDA \u7f16\u7a0b\u6307\u5357</li> </ul>"},{"location":"nccl/examples/03_collectives/01_allreduce/","title":"NCCL \u793a\u4f8b\uff1aAllReduce \u96c6\u4f53\u901a\u4fe1","text":"<p>\u672c\u793a\u4f8b\u6f14\u793a\u5982\u4f55\u5728\u5355\u8fdb\u7a0b\u7ba1\u7406\u591a\u5757 GPU \u7684\u573a\u666f\u4e0b\uff0c\u4f7f\u7528 NCCL \u5b8c\u6210\u6700\u57fa\u7840\u7684 AllReduce\uff08\u6c42\u548c\uff09\u64cd\u4f5c\u3002</p>"},{"location":"nccl/examples/03_collectives/01_allreduce/#_1","title":"\u6982\u8ff0","text":"<p>AllReduce \u4f1a\u5c06\u6240\u6709\u53c2\u4e0e\u8005\u7684\u6570\u636e\u901a\u8fc7\u67d0\u79cd\u89c4\u7ea6\u64cd\u4f5c\uff08\u5982\u6c42\u548c\u3001\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u7b49\uff09\u5408\u5e76\uff0c\u5e76\u5c06\u7ed3\u679c\u5e7f\u64ad\u7ed9\u6240\u6709\u53c2\u4e0e\u8005\u3002\u672c\u793a\u4f8b\u8ba9\u6bcf\u5757 GPU \u63d0\u4ea4\u81ea\u8eab\u7684 rank \u503c\uff0c\u6700\u7ec8\u6240\u6709 GPU \u90fd\u83b7\u5f97\u5168\u5c40\u6c42\u548c\u7684\u7ed3\u679c\u3002\u4e3a\u7b80\u5316\u6d41\u7a0b\uff0c\u793a\u4f8b\u91c7\u7528 <code>ncclCommInitAll</code> \u5b8c\u6210\u901a\u4fe1\u5668\u521d\u59cb\u5316\u3002</p>"},{"location":"nccl/examples/03_collectives/01_allreduce/#_2","title":"\u793a\u4f8b\u6d41\u7a0b","text":"<ol> <li>\u68c0\u6d4b GPU\uff1a\u901a\u8fc7 <code>ncclCommInitAll</code> \u4e3a\u6240\u6709\u8bbe\u5907\u521b\u5efa\u901a\u4fe1\u5668\uff1b</li> <li>\u521d\u59cb\u5316\u6570\u636e\uff1a\u6bcf\u5757 GPU \u5199\u5165\u5bf9\u5e94\u7684 rank \u503c\uff08GPU0\u21920\uff0cGPU1\u21921\uff0c\u2026\uff09\uff1b</li> <li>\u6267\u884c AllReduce\uff1a\u5bf9\u6240\u6709 GPU \u7684\u6570\u636e\u6c42\u548c\uff0c\u5e76\u5c06\u7ed3\u679c\u5e7f\u64ad\u56de\u5404\u8bbe\u5907\uff1b</li> <li>\u9a8c\u8bc1\u7ed3\u679c\uff1a\u68c0\u67e5\u6bcf\u5757 GPU \u662f\u5426\u5f97\u5230\u671f\u671b\u7684\u603b\u548c <code>0+1+...+(n-1)</code>\u3002</li> </ol>"},{"location":"nccl/examples/03_collectives/01_allreduce/#_3","title":"\u6784\u5efa\u4e0e\u8fd0\u884c","text":""},{"location":"nccl/examples/03_collectives/01_allreduce/#_4","title":"\u6784\u5efa","text":"<pre><code>cd examples/03_collectives/01_allreduce\nmake [NCCL_HOME=&lt;path-to-nccl&gt;] [CUDA_HOME=&lt;path-to-cuda&gt;]\n</code></pre>"},{"location":"nccl/examples/03_collectives/01_allreduce/#gpu","title":"\u4f7f\u7528\u5168\u90e8 GPU \u8fd0\u884c","text":"<pre><code>./allreduce\n</code></pre>"},{"location":"nccl/examples/03_collectives/01_allreduce/#gpu_1","title":"\u6307\u5b9a GPU \u8fd0\u884c","text":"<pre><code>CUDA_VISIBLE_DEVICES=0,1,2,3 ./allreduce\n</code></pre>"},{"location":"nccl/examples/03_collectives/01_allreduce/#_5","title":"\u4ee3\u7801\u8981\u70b9","text":""},{"location":"nccl/examples/03_collectives/01_allreduce/#_6","title":"\u6570\u636e\u521d\u59cb\u5316","text":"<p>\u6bcf\u4e2a GPU \u5728\u8bbe\u5907\u4fa7\u53d1\u9001\u7f13\u51b2\u533a\u4e2d\u5199\u5165\u81ea\u8eab rank\uff1a</p> <pre><code>float** sendbuff;\nfloat rank_value = (float)i;\nsize_t size; // \u8981\u53d1\u9001\u7684 float \u6570\u91cf\n\n// \u5206\u914d\u8bbe\u5907\u5185\u5b58\nCUDACHECK(cudaMalloc((void **)&amp;sendbuff[i], size * sizeof(float)));\n\n// \u5148\u6e05\u96f6\uff0c\u518d\u5c06\u9996\u5143\u7d20\u8bbe\u4e3a rank \u503c\nCUDACHECK(cudaMemset(sendbuff[i], 0, size * sizeof(float)));\nCUDACHECK(cudaMemcpy(sendbuff[i], &amp;rank_value, sizeof(float), cudaMemcpyHostToDevice));\n</code></pre>"},{"location":"nccl/examples/03_collectives/01_allreduce/#allreduce","title":"AllReduce \u64cd\u4f5c","text":"<p>\u6240\u6709 GPU \u5e76\u884c\u6267\u884c\u6c42\u548c\u64cd\u4f5c\uff0c\u4e3a\u907f\u514d\u6b7b\u9501\uff0c\u4f7f\u7528 <code>ncclGroupStart/End</code> \u5305\u88c5\uff1a</p> <pre><code>float** recvbuff;\nncclComm_t *comms;      // \u5728 ncclCommInitAll \u4e2d\u521d\u59cb\u5316\ncudaStream_t *streams;  // \u901a\u8fc7 cudaStreamCreate \u521b\u5efa\n\nCUDACHECK(cudaMalloc((void **)&amp;recvbuff[i], size * sizeof(float)));\n\nNCCLCHECK(ncclGroupStart());\nfor (int i = 0; i &lt; num_gpus; i++) {\n    NCCLCHECK(ncclAllReduce(sendbuff[i], recvbuff[i], size, ncclFloat,\n                            ncclSum, comms[i], streams[i]));\n}\nNCCLCHECK(ncclGroupEnd());\n</code></pre>"},{"location":"nccl/examples/03_collectives/01_allreduce/#_7","title":"\u9884\u671f\u8f93\u51fa","text":"<pre><code>Using 4 devices for collective communication\nMemory allocated for 4 communicators and streams\nNCCL communicators initialized for all devices\n  Device 0 initialized with data value 0\n  Device 1 initialized with data value 1\n  Device 2 initialized with data value 2\n  Device 3 initialized with data value 3\nStarting collective sum operation across all devices\nCollective operation completed\nVerifying results (expected sum: 6)\n  Device 0 correctly received sum: 6\n  Device 1 correctly received sum: 6\n  Device 2 correctly received sum: 6\n  Device 3 correctly received sum: 6\nExample completed successfully!\n</code></pre>"},{"location":"nccl/examples/03_collectives/01_allreduce/#_8","title":"\u9002\u7528\u573a\u666f","text":"<ul> <li>\u6df1\u5ea6\u5b66\u4e60\uff1a\u6570\u636e\u5e76\u884c\u8bad\u7ec3\u4e2d\u7684\u68af\u5ea6\u6c42\u5e73\u5747\uff1b</li> <li>\u79d1\u5b66\u8ba1\u7b97\uff1a\u5e76\u884c\u7b97\u6cd5\u4e2d\u7684\u5168\u5c40\u6c42\u548c\uff1b</li> <li>\u7edf\u8ba1\u5206\u6790\uff1a\u8ba1\u7b97\u5168\u5c40\u548c\u3001\u5747\u503c\u7b49\uff1b</li> <li>\u5206\u5e03\u5f0f\u7b97\u6cd5\uff1a\u4efb\u4f55\u9700\u8981\u96c6\u4f53\u89c4\u7ea6\u64cd\u4f5c\u7684\u573a\u666f\u3002</li> </ul>"},{"location":"nccl/examples/03_collectives/01_allreduce/#_9","title":"\u5173\u952e\u63d0\u793a","text":"<ul> <li><code>ncclCommInitAll</code> \u8ba9\u5355\u8282\u70b9\u591a GPU \u7684\u521d\u59cb\u5316\u66f4\u7b80\u5355\uff1b</li> <li>\u5355\u8282\u70b9\u793a\u4f8b\u65e0\u9700 MPI \u6216 pthread\uff1b</li> <li>\u5efa\u8bae\u901a\u8fc7 <code>cudaMalloc</code> \u5206\u914d\u8bbe\u5907\u7f13\u51b2\u533a\uff0c\u5e76\u4f7f\u7528 <code>cudaMemset</code> \u521d\u59cb\u5316\uff1b</li> <li>\u5bf9\u6240\u6709\u96c6\u4f53\u8c03\u7528\u4f7f\u7528 <code>ncclGroupStart/End</code> \u5305\u88f9\uff1b</li> <li>\u901a\u4fe1\u5f02\u6b65\u6267\u884c\uff0c\u53ef\u4e0e\u8ba1\u7b97\u91cd\u53e0\u3002</li> </ul>"},{"location":"nccl/examples/03_collectives/01_allreduce/#_10","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"nccl/examples/03_collectives/01_allreduce/#_11","title":"\u6821\u9a8c\u5931\u8d25","text":"<p>\u5904\u7406\u529e\u6cd5\uff1a\u786e\u4fdd\u6bcf\u5757 GPU \u6b63\u786e\u5199\u5165\u81ea\u8eab rank \u503c\u3002</p>"},{"location":"nccl/examples/03_collectives/01_allreduce/#_12","title":"\u663e\u5b58\u4e0d\u8db3","text":"<p>\u5904\u7406\u529e\u6cd5\uff1a\u51cf\u5c0f\u7f13\u51b2\u533a\u5927\u5c0f\u6216\u51cf\u5c11\u53c2\u4e0e GPU \u6570\u91cf\u3002</p>"},{"location":"nccl/examples/03_collectives/01_allreduce/#_13","title":"\u9519\u8bef\u5904\u7406","text":"<p>\u793a\u4f8b\u4f7f\u7528 <code>NCCLCHECK</code>\u3001<code>CUDACHECK</code> \u5b8f\u8fdb\u884c\u9519\u8bef\u68c0\u67e5\uff0c\u9047\u5230\u5931\u8d25\u7acb\u5373\u9000\u51fa\u3002\u5b9e\u9645\u9879\u76ee\u4e2d\u53ef\u6839\u636e\u9700\u8981\u8bbe\u8ba1\u66f4\u5b8c\u5584\u7684\u5f02\u5e38\u5904\u7406\u3002</p>"},{"location":"nccl/examples/03_collectives/01_allreduce/#_14","title":"\u540e\u7eed\u5b66\u4e60","text":"<p>\u638c\u63e1 AllReduce \u540e\uff0c\u53ef\u8fdb\u4e00\u6b65\u5c1d\u8bd5\uff1a - \u70b9\u5bf9\u70b9\u901a\u4fe1\uff1a\u89c1 <code>02_point_to_point/</code>\uff1b - \u5176\u4ed6\u96c6\u4f53\u64cd\u4f5c\uff1a\u4eff\u7167\u672c\u793a\u4f8b\u5b9e\u73b0 Broadcast\u3001Reduce\u3001AllGather \u7b49\uff1b - \u591a\u8282\u70b9\u65b9\u6848\uff1a\u7ed3\u5408 <code>01_communicators</code> \u4e2d\u7684 MPI \u793a\u4f8b\u6269\u5c55\u5230\u8de8\u8282\u70b9\u901a\u4fe1\u3002</p>"},{"location":"nccl/examples/04_user_buffer_registration/","title":"NCCL \u7528\u6237\u7f13\u51b2\u533a\u6ce8\u518c\u793a\u4f8b","text":""},{"location":"nccl/examples/04_user_buffer_registration/#_1","title":"\u6982\u8ff0","text":"<p>\u672c\u76ee\u5f55\u5c55\u793a\u5982\u4f55\u4f7f\u7528 NCCL \u7684\u7528\u6237\u7f13\u51b2\u533a\u6ce8\u518c\u529f\u80fd\uff0c\u8ba9\u901a\u4fe1\u76f4\u63a5\u4f5c\u7528\u4e8e\u7528\u6237\u5206\u914d\u7684\u5185\u5b58\uff0c\u4ee5\u63d0\u5347\u6027\u80fd\u3002</p>"},{"location":"nccl/examples/04_user_buffer_registration/#_2","title":"\u793a\u4f8b\u5217\u8868","text":""},{"location":"nccl/examples/04_user_buffer_registration/#01_allreduce","title":"01_allreduce","text":"<p>\u5e26\u7f13\u51b2\u533a\u6ce8\u518c\u7684 AllReduce</p> <ul> <li>\u6a21\u5f0f\uff1a\u5148\u6ce8\u518c\u901a\u4fe1\u7f13\u51b2\u533a\uff0c\u518d\u5728\u591a\u6b21\u64cd\u4f5c\u4e2d\u590d\u7528\uff1b</li> <li>\u4e3b\u8981 API\uff1a<code>ncclCommRegister</code>\u3001<code>ncclCommDeregister</code>\u3001<code>ncclMemAlloc</code>\u3001<code>ncclAllReduce</code>\uff1b</li> <li>\u9002\u7528\u573a\u666f\uff1a\u5bf9\u540c\u4e00\u6279\u7f13\u51b2\u533a\u91cd\u590d\u6267\u884c\u96c6\u4f53\u901a\u4fe1\u3001\u6027\u80fd\u654f\u611f\u7684\u8bad\u7ec3\u5faa\u73af\uff1b</li> <li>\u7279\u70b9\uff1a</li> <li>\u901a\u8fc7 <code>ncclMemAlloc</code> \u5206\u914d\u7f13\u51b2\u533a\uff0c\u786e\u4fdd\u4e0e\u6ce8\u518c\u673a\u5236\u517c\u5bb9\uff1b</li> <li>\u663e\u5f0f\u7ba1\u7406\u6ce8\u518c\u53e5\u67c4\uff08\u6ce8\u518c \u2192 \u4f7f\u7528 \u2192 \u53d6\u6d88\u6ce8\u518c\uff09\uff1b</li> <li>\u5728\u6ce8\u518c\u540e\u7684\u7f13\u51b2\u533a\u4e0a\u6267\u884c\u96c6\u4f53\u901a\u4fe1\uff1b</li> <li>\u6f14\u793a\u6b63\u786e\u7684\u8d44\u6e90\u6e05\u7406\u548c\u7ed3\u679c\u6821\u9a8c\u3002</li> </ul>"},{"location":"nccl/examples/04_user_buffer_registration/#_3","title":"\u4f55\u65f6\u9009\u62e9\u8be5\u6a21\u5f0f","text":"<ul> <li>\u5178\u578b\u573a\u666f\uff1a\u5bf9\u540c\u4e00\u7f13\u51b2\u533a\u53cd\u590d\u6267\u884c\u96c6\u4f53\u901a\u4fe1\uff0c\u671f\u671b\u964d\u4f4e\u5f00\u9500\uff1b</li> <li>\u9488\u5bf9\u95ee\u9898\uff1a\u541e\u5410\u654f\u611f\u7684\u8bad\u7ec3\u6216\u63a8\u7406\u5faa\u73af\uff1b</li> <li>\u4f9d\u8d56\uff1a\u793a\u4f8b\u53ef\u57fa\u4e8e pthread \u6216 MPI \u542f\u52a8\u3002</li> </ul>"},{"location":"nccl/examples/04_user_buffer_registration/#_4","title":"\u4e3a\u4ec0\u4e48\u9700\u8981\u7f13\u51b2\u533a\u6ce8\u518c","text":"<p>\u9884\u5148\u6ce8\u518c\u7f13\u51b2\u533a\u53ef\u4ee5\u7701\u53bb\u6bcf\u6b21\u8c03\u7528\u65f6\u7684\u6ce8\u518c\u6210\u672c\uff0c\u5e76\u5141\u8bb8 NCCL \u76f4\u63a5\u8bbf\u95ee\u7528\u6237\u7f13\u51b2\u533a\uff0c\u4ece\u800c\u63d0\u5347\u96c6\u4f53\u901a\u4fe1\u6027\u80fd\u3001\u51cf\u5c11\u8d44\u6e90\u5360\u7528\uff08\u4f8b\u5982\u964d\u4f4e\u901a\u9053\u6570\u91cf\uff09\u3002\u540c\u65f6\uff0c\u7f13\u51b2\u533a\u6ce8\u518c\u4e5f\u662f\u542f\u7528\u5bf9\u79f0\u5185\u5b58\u3001\u8bbe\u5907\u7aef API \u7b49\u9ad8\u7ea7\u7279\u6027\u7684\u524d\u7f6e\u6761\u4ef6\u3002</p> <pre><code>// \u4f7f\u7528 NCCL \u7684\u8f85\u52a9\u51fd\u6570\u5206\u914d\u5e76\u6ce8\u518c\u7f13\u51b2\u533a\nNCCLCHECK(ncclMemAlloc((void**)&amp;d_send, size_bytes));\nNCCLCHECK(ncclCommRegister(comm, d_send, size_bytes, &amp;send_handle));\n\n// \u5728\u96c6\u4f53\u901a\u4fe1\u4e2d\u590d\u7528\nNCCLCHECK(ncclAllReduce(d_send, d_recv, count, ncclFloat, ncclSum, comm, stream));\n\n// \u64cd\u4f5c\u5b8c\u6210\u540e\u6ce8\u9500\u5e76\u91ca\u653e\nNCCLCHECK(ncclCommDeregister(comm, send_handle));\nNCCLCHECK(ncclMemFree(d_send));\n</code></pre>"},{"location":"nccl/examples/04_user_buffer_registration/#_5","title":"\u6784\u5efa\u65b9\u5f0f","text":""},{"location":"nccl/examples/04_user_buffer_registration/#_6","title":"\u5feb\u901f\u5f00\u59cb","text":"<pre><code>make 01_allreduce\n</code></pre>"},{"location":"nccl/examples/04_user_buffer_registration/#_7","title":"\u5355\u72ec\u6784\u5efa\u4e0e\u8fd0\u884c","text":"<pre><code>cd 01_allreduce &amp;&amp; make\n./allreduce_ub\n</code></pre>"},{"location":"nccl/examples/04_user_buffer_registration/#_8","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>NCCL \u7528\u6237\u6307\u5357\uff1a\u793a\u4f8b</li> <li>NCCL API \u53c2\u8003</li> <li>CUDA \u7f16\u7a0b\u6307\u5357</li> </ul>"},{"location":"nccl/examples/04_user_buffer_registration/01_allreduce/","title":"NCCL \u793a\u4f8b\uff1a\u5e26\u7528\u6237\u7f13\u51b2\u533a\u6ce8\u518c\u7684 AllReduce","text":"<p>\u672c\u793a\u4f8b\u5c55\u793a\u5982\u4f55\u4f7f\u7528 NCCL \u7684\u7528\u6237\u7f13\u51b2\u533a\u6ce8\u518c\u529f\u80fd\uff0c\u5728\u5bf9\u540c\u4e00\u6279\u7f13\u51b2\u533a\u91cd\u590d\u6267\u884c\u96c6\u4f53\u64cd\u4f5c\u65f6\u63d0\u5347\u6027\u80fd\u3002\u901a\u8fc7\u6ce8\u518c\uff0cNCCL \u53ef\u4ee5\u76f4\u63a5\u5728\u7528\u6237\u7f13\u51b2\u533a\u4e0a\u6536\u53d1\u6570\u636e\uff0c\u65e0\u9700\u989d\u5916\u62f7\u8d1d\uff08\u5373\u96f6\u62f7\u8d1d\uff09\u3002</p>"},{"location":"nccl/examples/04_user_buffer_registration/01_allreduce/#_1","title":"\u6982\u8ff0","text":"<p>\u7528\u6237\u7f13\u51b2\u533a\u6ce8\u518c\u5141\u8bb8\u5c06\u5185\u5b58\u533a\u57df\u4e0e\u901a\u4fe1\u5668\u63d0\u524d\u7ed1\u5b9a\uff0c\u4ece\u800c\u514d\u53bb\u6bcf\u6b21\u64cd\u4f5c\u65f6\u7684\u6ce8\u518c\u5f00\u9500\u3002\u8fd9\u5bf9\u91cd\u590d\u6267\u884c\u96c6\u4f53\u901a\u4fe1\uff08\u4f8b\u5982\u8fed\u4ee3\u8bad\u7ec3\u5faa\u73af\uff09\u7684\u573a\u666f\u5c24\u5176\u6709\u5229\u3002</p>"},{"location":"nccl/examples/04_user_buffer_registration/01_allreduce/#_2","title":"\u793a\u4f8b\u6d41\u7a0b","text":"<ol> <li>\u5206\u914d\u5185\u5b58\uff1a\u4f7f\u7528 NCCL \u63d0\u4f9b\u7684 <code>ncclMemAlloc</code> \u5728\u8bbe\u5907\u7aef\u5206\u914d\u7f13\u51b2\u533a\uff1b</li> <li>\u6ce8\u518c\u7f13\u51b2\u533a\uff1a\u8c03\u7528 <code>ncclCommRegister</code> \u5c06\u7f13\u51b2\u533a\u4e0e\u901a\u4fe1\u5668\u5173\u8054\uff0c\u83b7\u53d6\u6ce8\u518c\u53e5\u67c4\uff1b</li> <li>\u6267\u884c AllReduce\uff1a\u5728\u5df2\u6ce8\u518c\u7684\u7f13\u51b2\u533a\u4e0a\u6267\u884c\u6c42\u548c\u64cd\u4f5c\uff0c\u63d0\u9ad8\u901a\u4fe1\u6548\u7387\u3002</li> </ol>"},{"location":"nccl/examples/04_user_buffer_registration/01_allreduce/#_3","title":"\u6784\u5efa\u4e0e\u8fd0\u884c","text":"<p>\u9ad8\u7ea7\u793a\u4f8b\u53ef\u9009\u62e9 pthread\uff08\u9ed8\u8ba4\uff09\u6216 MPI \u4f5c\u4e3a\u5e76\u884c\u540e\u7aef\u3002\u82e5\u9700\u542f\u7528 MPI\uff0c\u8bf7\u5728\u73af\u5883\u4e2d\u914d\u7f6e <code>MPI_HOME</code>.</p>"},{"location":"nccl/examples/04_user_buffer_registration/01_allreduce/#_4","title":"\u6784\u5efa","text":"<pre><code>make [MPI=1] [MPI_HOME=&lt;path-to-mpi&gt;] [NCCL_HOME=&lt;path-to-nccl&gt;] [CUDA_HOME=&lt;path-to-cuda&gt;]\n</code></pre>"},{"location":"nccl/examples/04_user_buffer_registration/01_allreduce/#pthread","title":"pthread \u7248\u672c\u8fd0\u884c","text":"<pre><code>[NTHREADS=N] ./allreduce_ub\n</code></pre>"},{"location":"nccl/examples/04_user_buffer_registration/01_allreduce/#mpi","title":"MPI \u7248\u672c\u8fd0\u884c","text":"<pre><code>mpirun -np &lt;num_processes&gt; ./allreduce_ub\n</code></pre>"},{"location":"nccl/examples/04_user_buffer_registration/01_allreduce/#_5","title":"\u4ee3\u7801\u7ed3\u6784","text":""},{"location":"nccl/examples/04_user_buffer_registration/01_allreduce/#1","title":"1. \u7f13\u51b2\u533a\u5206\u914d\u4e0e\u6ce8\u518c","text":"<pre><code>size_t size_bytes;     // \u53d1\u9001/\u63a5\u6536\u7f13\u51b2\u533a\u5927\u5c0f\nvoid *d_sendbuff;\nvoid *d_recvbuff;\n\n// \u5728\u8bbe\u5907\u7aef\u4f7f\u7528 ncclMemAlloc\uff08\u6216\u517c\u5bb9\u5206\u914d\u5668\uff09\u5206\u914d\u5185\u5b58\nNCCLCHECK(ncclMemAlloc(&amp;d_sendbuff, size_bytes));\nNCCLCHECK(ncclMemAlloc(&amp;d_recvbuff, size_bytes));\n\nncclComm_t comm;       // \u901a\u8fc7 ncclCommInitRank \u83b7\u53d6\nvoid *send_handle;\nvoid *recv_handle;\n\n// \u6ce8\u518c\u7f13\u51b2\u533a\uff0c\u83b7\u53d6\u540e\u7eed\u53d6\u6d88\u6ce8\u518c\u6240\u9700\u7684\u53e5\u67c4\nNCCLCHECK(ncclCommRegister(comm, d_sendbuff, size_bytes, &amp;send_handle));\nNCCLCHECK(ncclCommRegister(comm, d_recvbuff, size_bytes, &amp;recv_handle));\n</code></pre>"},{"location":"nccl/examples/04_user_buffer_registration/01_allreduce/#2-allreduce","title":"2. \u4f7f\u7528\u6ce8\u518c\u7f13\u51b2\u533a\u6267\u884c AllReduce","text":"<pre><code>size_t count;          // \u4ea4\u6362\u7684 float \u6570\u91cf\ncudaStream_t stream;   // \u7531 cudaStreamCreate \u521b\u5efa\n\nNCCLCHECK(ncclAllReduce(d_sendbuff, d_recvbuff, count, ncclFloat, ncclSum,\n                        comm, stream));\n</code></pre>"},{"location":"nccl/examples/04_user_buffer_registration/01_allreduce/#3","title":"3. \u53d6\u6d88\u6ce8\u518c\u4e0e\u8d44\u6e90\u91ca\u653e","text":"<pre><code>// \u4f7f\u7528\u6ce8\u518c\u65f6\u8fd4\u56de\u7684\u53e5\u67c4\u53d6\u6d88\u6ce8\u518c\nNCCLCHECK(ncclCommDeregister(comm, send_handle));\nNCCLCHECK(ncclCommDeregister(comm, recv_handle));\n\n// \u91ca\u653e\u901a\u8fc7 ncclMemAlloc \u5206\u914d\u7684\u7f13\u51b2\u533a\nNCCLCHECK(ncclMemFree(d_sendbuff));\nNCCLCHECK(ncclMemFree(d_recvbuff));\n</code></pre>"},{"location":"nccl/examples/04_user_buffer_registration/01_allreduce/#_6","title":"\u9884\u671f\u8f93\u51fa","text":""},{"location":"nccl/examples/04_user_buffer_registration/01_allreduce/#4-gpu-pthread-mpi","title":"\u4ee5 4 \u5757 GPU \u8fd0\u884c\uff08pthread \u6216 MPI\uff09","text":"<pre><code>Starting AllReduce example with 4 ranks\n  Rank 0 communicator initialized using device 0\n  Rank 1 communicator initialized using device 1\n  Rank 2 communicator initialized using device 2\n  Rank 3 communicator initialized using device 3\nUser Buffer allocation:\n  Rank 0 allocating 4.00 MB per buffer\n  Rank 1 allocating 4.00 MB per buffer\n  Rank 2 allocating 4.00 MB per buffer\n  Rank 3 allocating 4.00 MB per buffer\n  Rank 0 data initialized (value: 0)\n  Rank 1 data initialized (value: 1)\n  Rank 2 data initialized (value: 2)\n  Rank 3 data initialized (value: 3)\nStarting AllReduce with 1048576 elements (4 MB)\nAllReduce completed successfully\nVerification - Expected: 6.0, Got: 6.0\nResults verified correctly\n  Rank 0 buffers deregistered\n  Rank 1 buffers deregistered\n  Rank 2 buffers deregistered\n  Rank 3 buffers deregistered\nAll resources cleaned up successfully\n</code></pre>"},{"location":"nccl/examples/04_user_buffer_registration/01_allreduce/#_7","title":"\u7528\u6237\u7f13\u51b2\u533a\u6ce8\u518c\u7684\u6027\u80fd\u4f18\u52bf","text":"<ol> <li>\u964d\u4f4e\u5f00\u9500\uff1a\u907f\u514d\u6bcf\u6b21\u901a\u4fe1\u91cd\u590d\u6ce8\u518c/\u6ce8\u9500\uff1b</li> <li>\u6539\u8fdb\u5185\u5b58\u56fa\u5b9a\uff1a\u6ce8\u518c\u7f13\u51b2\u533a\u4f1a\u88ab\u56fa\u5b9a\uff08pinned\uff09\uff0c\u9632\u6b62\u9875\u9762\u7f6e\u6362\uff1b</li> <li>\u51cf\u5c11\u5ef6\u8fdf\uff1a\u5728\u5bf9\u540c\u4e00\u7f13\u51b2\u533a\u53cd\u590d\u64cd\u4f5c\u65f6\u5c24\u4e3a\u663e\u8457\u3002</li> </ol> <p>\u6ce8\u610f\uff1a\u7f13\u51b2\u533a\u5fc5\u987b\u901a\u8fc7 <code>ncclMemAlloc</code> \u6216\u5176\u4ed6\u517c\u5bb9\u5206\u914d\u5668\u5206\u914d\uff08\u800c\u975e <code>cudaMalloc</code>\uff09\uff0c\u8be6\u89c1 Buffer Registration\u3002</p> <p>\u6ce8\u610f\uff1a\u4e00\u65e6\u67d0\u4e2a rank \u5728\u901a\u4fe1\u51fd\u6570\u4e2d\u4f7f\u7528\u5df2\u6ce8\u518c\u7f13\u51b2\u533a\uff0c\u540c\u4e00\u901a\u4fe1\u5668\u5185\u7684\u6240\u6709 rank \u90fd\u5fc5\u987b\u4f20\u5165\u5df2\u6ce8\u518c\u7f13\u51b2\u533a\uff0c\u5426\u5219\u53ef\u80fd\u51fa\u73b0\u672a\u5b9a\u4e49\u884c\u4e3a\u3002</p>"},{"location":"nccl/examples/04_user_buffer_registration/01_allreduce/#_8","title":"\u5173\u952e\u63d0\u793a","text":"<ul> <li>\u7528\u6237\u7f13\u51b2\u533a\u6ce8\u518c\u9002\u7528\u4e8e\u5927\u6570\u636e\u91cf\u3001\u91cd\u590d\u64cd\u4f5c\u3001\u6027\u80fd\u654f\u611f\u7684\u573a\u666f\uff1b</li> <li>\u52a1\u5fc5\u5728\u91ca\u653e\u5185\u5b58\u524d\u53d6\u6d88\u6ce8\u518c\u3002</li> </ul>"},{"location":"nccl/examples/04_user_buffer_registration/01_allreduce/#_9","title":"\u5e38\u89c1\u95ee\u9898","text":"<ol> <li>\u6ce8\u518c\u5931\u8d25\uff1a\u5fc5\u987b\u4f7f\u7528 <code>ncclMemAlloc</code>\uff08\u6216\u517c\u5bb9\u5206\u914d\u5668\uff09\u5206\u914d\u7f13\u51b2\u533a\uff0c\u800c\u4e0d\u662f <code>cudaMalloc</code>\u3002</li> <li>\u5206\u914d\u5931\u8d25\uff1a\u82e5 <code>ncclMemAlloc</code> \u51fa\u9519\uff0c\u68c0\u67e5 NCCL \u7248\u672c\uff08\u9700 2.19.x \u53ca\u4ee5\u4e0a\uff09\u4ee5\u53ca\u53ef\u7528\u663e\u5b58\u3002</li> <li>\u6ce8\u9500\u987a\u5e8f\u9519\u8bef\uff1a\u5148\u53d6\u6d88\u6ce8\u518c\u518d\u91ca\u653e\u5185\u5b58\u3002</li> <li>\u53e5\u67c4\u7ba1\u7406\uff1a\u4fdd\u5b58 <code>ncclCommRegister</code> \u8fd4\u56de\u7684\u53e5\u67c4\uff0c\u4fbf\u4e8e\u6b63\u786e\u6e05\u7406\u3002</li> <li>\u5185\u5b58\u6cc4\u6f0f\uff1a\u4f7f\u7528 <code>ncclMemAlloc</code> \u5206\u914d\u7684\u7f13\u51b2\u533a\u5fc5\u987b\u8c03\u7528 <code>ncclMemFree</code> \u91ca\u653e\u3002</li> </ol>"},{"location":"nccl/examples/05_symmetric_memory/","title":"NCCL \u5bf9\u79f0\u5185\u5b58\u793a\u4f8b","text":""},{"location":"nccl/examples/05_symmetric_memory/#_1","title":"\u6982\u8ff0","text":"<p>\u672c\u76ee\u5f55\u5c55\u793a\u5982\u4f55\u4f7f\u7528 NCCL \u7684\u5bf9\u79f0\u5185\u5b58\u7a97\u53e3\uff08symmetric memory window\uff09\uff0c\u5f53\u6240\u6709 rank \u7684\u7f13\u51b2\u533a\u5e03\u5c40\u4e00\u81f4\u65f6\uff0c\u53ef\u663e\u8457\u63d0\u5347\u96c6\u4f53\u901a\u4fe1\u7684\u6027\u80fd\u3002</p>"},{"location":"nccl/examples/05_symmetric_memory/#_2","title":"\u793a\u4f8b\u5217\u8868","text":""},{"location":"nccl/examples/05_symmetric_memory/#01_allreduce","title":"01_allreduce","text":"<p>\u4f7f\u7528\u5bf9\u79f0\u5185\u5b58\u7684 AllReduce</p> <ul> <li>\u6a21\u5f0f\uff1a\u4e3a\u6bcf\u4e2a rank \u6ce8\u518c\u5bf9\u79f0\u7a97\u53e3\uff0c\u5e76\u5728\u96c6\u4f53\u901a\u4fe1\u4e2d\u590d\u7528\uff1b</li> <li>\u4e3b\u8981 API\uff1a<code>ncclCommWindowRegister</code>\u3001<code>ncclCommWindowDeregister</code>\u3001<code>ncclMemAlloc</code>\u3001<code>ncclAllReduce</code>\uff1b</li> <li>\u9002\u7528\u573a\u666f\uff1a\u5927\u89c4\u6a21\u3001\u7f13\u51b2\u533a\u5e03\u5c40\u4e00\u81f4\u7684\u96c6\u4f53\u901a\u4fe1\uff1b</li> <li>\u7279\u70b9\uff1a</li> <li>\u901a\u8fc7 <code>ncclMemAlloc</code> \u5206\u914d\u7f13\u51b2\u533a\uff0c\u786e\u4fdd\u517c\u5bb9\u5bf9\u79f0\u7a97\u53e3\uff1b</li> <li>\u5c06\u7a97\u53e3\u6ce8\u518c\u4e3a <code>NCCL_WIN_COLL_SYMMETRIC</code>\uff1b</li> <li>\u5728\u6ce8\u518c\u7a97\u53e3\u4e0a\u6267\u884c\u96c6\u4f53\u64cd\u4f5c\uff1b</li> <li>\u793a\u8303\u6b63\u786e\u7684\u6ce8\u9500\u4e0e\u8d44\u6e90\u91ca\u653e\u3002</li> </ul>"},{"location":"nccl/examples/05_symmetric_memory/#_3","title":"\u9009\u62e9\u8be5\u6a21\u5f0f\u7684\u7406\u7531","text":"<ul> <li>\u5178\u578b\u573a\u666f\uff1a\u5927\u89c4\u6a21\u8bad\u7ec3\u4e2d\uff0c\u5404 rank \u62e5\u6709\u4e00\u81f4\u7684\u5185\u5b58\u5e03\u5c40\uff1b</li> <li>\u6027\u80fd\u76ee\u6807\uff1a\u5728\u652f\u6301\u7684\u7cfb\u7edf\u4e0a\u5b9e\u73b0\u66f4\u4f4e\u5ef6\u8fdf\u3001\u66f4\u9ad8\u5e26\u5bbd\u7684\u96c6\u4f53\u901a\u4fe1\uff1b</li> <li>\u4f9d\u8d56\uff1a\u793a\u4f8b\u53ef\u4f7f\u7528 pthread \u6216 MPI \u542f\u52a8\u3002</li> </ul>"},{"location":"nccl/examples/05_symmetric_memory/#_4","title":"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u5bf9\u79f0\u7a97\u53e3","text":"<p>\u5f53\u6240\u6709 rank \u7684\u7f13\u51b2\u533a\u5e03\u5c40\u4e00\u81f4\u65f6\uff0c\u5bf9\u79f0\u7a97\u53e3\u5141\u8bb8 NCCL \u542f\u7528\u66f4\u9ad8\u6548\u7684\u901a\u4fe1\u534f\u8bae\u3002\u7f13\u51b2\u533a\u9700\u8981\u901a\u8fc7 CUDA \u865a\u62df\u5185\u5b58\u7ba1\u7406\uff08VMM\uff09\u63a5\u53e3\u5206\u914d\uff0c\u5e76\u5728 NCCL \u4e2d\u6ce8\u518c\u3002</p> <pre><code>// \u4f7f\u7528 NCCL \u8f85\u52a9\u51fd\u6570\u5206\u914d\uff0c\u5bf9\u79f0\u6ce8\u518c\nNCCLCHECK(ncclMemAlloc(&amp;buffer, size_bytes));\nNCCLCHECK(ncclCommWindowRegister(comm, buffer, size_bytes, &amp;win, NCCL_WIN_COLL_SYMMETRIC));\n\n// \u5728\u5bf9\u79f0\u7a97\u53e3\u4e0a\u6267\u884c\u96c6\u4f53\u901a\u4fe1\nNCCLCHECK(ncclAllReduce(buffer, buffer, count, ncclFloat, ncclSum, comm, stream));\n\n// \u6ce8\u9500\u5e76\u91ca\u653e\nNCCLCHECK(ncclCommWindowDeregister(comm, win));\nNCCLCHECK(ncclMemFree(buffer));\n</code></pre>"},{"location":"nccl/examples/05_symmetric_memory/#_5","title":"\u6784\u5efa\u65b9\u5f0f","text":""},{"location":"nccl/examples/05_symmetric_memory/#_6","title":"\u5feb\u901f\u5f00\u59cb","text":"<pre><code>make 01_allreduce\n</code></pre>"},{"location":"nccl/examples/05_symmetric_memory/#_7","title":"\u5355\u72ec\u6784\u5efa\u4e0e\u8fd0\u884c","text":"<pre><code>cd 01_allreduce &amp;&amp; make\n./allreduce_sm\n</code></pre>"},{"location":"nccl/examples/05_symmetric_memory/#_8","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>NCCL \u7528\u6237\u6307\u5357\uff1a\u793a\u4f8b</li> <li>NCCL API \u53c2\u8003</li> <li>CUDA \u7f16\u7a0b\u6307\u5357</li> </ul>"},{"location":"nccl/examples/05_symmetric_memory/01_allreduce/","title":"NCCL \u793a\u4f8b\uff1a\u5bf9\u79f0\u5185\u5b58 AllReduce","text":"<p>\u672c\u793a\u4f8b\u6f14\u793a\u5982\u4f55\u542f\u7528 NCCL \u7684\u5bf9\u79f0\u5185\u5b58\uff08symmetric memory\uff09\u529f\u80fd\uff0c\u4ee5\u83b7\u5f97\u66f4\u4f18\u7684\u96c6\u4f53\u901a\u4fe1\u6027\u80fd\u3002\u5f53\u6240\u6709\u53c2\u4e0e rank \u7684\u7f13\u51b2\u533a\u5e03\u5c40\u4e00\u81f4\u65f6\uff0c\u53ef\u5229\u7528\u9ad8\u7ea7\u901a\u4fe1\u7b97\u6cd5\u964d\u4f4e\u5ef6\u8fdf\u3001\u63d0\u5347\u5e26\u5bbd\u3002</p>"},{"location":"nccl/examples/05_symmetric_memory/01_allreduce/#_1","title":"\u6982\u8ff0","text":"<p>\u5bf9\u79f0\u5185\u5b58\u7a97\u53e3\u5141\u8bb8\u5c06\u7f13\u51b2\u533a\u6ce8\u518c\u4e3a <code>NCCL_WIN_COLL_SYMMETRIC</code>\uff0c\u4ece\u800c\u89e6\u53d1 NCCL \u7684\u4f18\u5316\u8def\u5f84\u3002\u6240\u6709 rank \u5fc5\u987b\u63d0\u4f9b\u5bf9\u79f0\u7684\u7f13\u51b2\u533a\u5e03\u5c40\uff0c\u8fd9\u5728\u5927\u89c4\u6a21\u591a GPU \u4efb\u52a1\u4e2d\u5c24\u4e3a\u91cd\u8981\u3002</p>"},{"location":"nccl/examples/05_symmetric_memory/01_allreduce/#_2","title":"\u793a\u4f8b\u6d41\u7a0b","text":"<ol> <li>\u5206\u914d\u7f13\u51b2\u533a\uff1a\u4f7f\u7528 <code>ncclMemAlloc</code> \u83b7\u53d6\u4e0e\u5bf9\u79f0\u7a97\u53e3\u517c\u5bb9\u7684\u5185\u5b58\uff1b</li> <li>\u6ce8\u518c\u7a97\u53e3\uff1a\u8c03\u7528 <code>ncclCommWindowRegister</code>\uff0c\u5c06\u7f13\u51b2\u533a\u6ce8\u518c\u4e3a\u5bf9\u79f0\u7a97\u53e3\uff1b</li> <li>\u6267\u884c AllReduce\uff1a\u5728\u5bf9\u79f0\u5185\u5b58\u4e0a\u6267\u884c\u6c42\u548c\u64cd\u4f5c\uff0c\u9a8c\u8bc1\u6027\u80fd\u4e0e\u6b63\u786e\u6027\uff1b</li> <li>\u6ce8\u9500\u4e0e\u6e05\u7406\uff1a\u53d6\u6d88\u6ce8\u518c\u5e76\u91ca\u653e\u7f13\u51b2\u533a\u3002</li> </ol>"},{"location":"nccl/examples/05_symmetric_memory/01_allreduce/#_3","title":"\u6784\u5efa\u4e0e\u8fd0\u884c","text":"<p>\u9ad8\u7ea7\u793a\u4f8b\u652f\u6301 pthread\uff08\u9ed8\u8ba4\uff09\u6216 MPI\u3002\u82e5\u9700\u4f7f\u7528 MPI\uff0c\u8bf7\u5728\u6784\u5efa\u65f6\u8bbe\u7f6e <code>MPI=1</code>\uff0c\u5e76\u6839\u636e\u9700\u8981\u6307\u5b9a <code>MPI_HOME</code>\u3002</p>"},{"location":"nccl/examples/05_symmetric_memory/01_allreduce/#_4","title":"\u6784\u5efa","text":"<pre><code>make [MPI=1] [MPI_HOME=&lt;path-to-mpi&gt;] [NCCL_HOME=&lt;path-to-nccl&gt;] [CUDA_HOME=&lt;path-to-cuda&gt;]\n</code></pre>"},{"location":"nccl/examples/05_symmetric_memory/01_allreduce/#pthread","title":"pthread \u7248\u672c\u8fd0\u884c","text":"<pre><code>[NTHREADS=N] ./allreduce_sm\n</code></pre>"},{"location":"nccl/examples/05_symmetric_memory/01_allreduce/#mpi","title":"MPI \u7248\u672c\u8fd0\u884c","text":"<pre><code>mpirun -np &lt;num_processes&gt; ./allreduce_sm\n</code></pre>"},{"location":"nccl/examples/05_symmetric_memory/01_allreduce/#_5","title":"\u4ee3\u7801\u7ed3\u6784","text":""},{"location":"nccl/examples/05_symmetric_memory/01_allreduce/#1","title":"1. \u5206\u914d\u7f13\u51b2\u533a\u5e76\u6ce8\u518c\u7a97\u53e3","text":"<pre><code>size_t size_bytes;     // \u53d1\u9001/\u63a5\u6536\u7f13\u51b2\u533a\u5927\u5c0f\nvoid *d_sendbuff;\nvoid *d_recvbuff;\n\n// \u4f7f\u7528 ncclMemAlloc \u5206\u914d\uff08\u517c\u5bb9\u5bf9\u79f0\u5185\u5b58\uff09\nNCCLCHECK(ncclMemAlloc(&amp;d_sendbuff, size_bytes));\nNCCLCHECK(ncclMemAlloc(&amp;d_recvbuff, size_bytes));\n\nncclComm_t comm;\nncclWindow_t send_win;\nncclWindow_t recv_win;\n\n// \u6ce8\u518c\u4e3a\u5bf9\u79f0\u7a97\u53e3\nNCCLCHECK(ncclCommWindowRegister(comm, d_sendbuff, size_bytes, &amp;send_win, NCCL_WIN_COLL_SYMMETRIC));\nNCCLCHECK(ncclCommWindowRegister(comm, d_recvbuff, size_bytes, &amp;recv_win, NCCL_WIN_COLL_SYMMETRIC));\n</code></pre>"},{"location":"nccl/examples/05_symmetric_memory/01_allreduce/#2-allreduce","title":"2. \u6267\u884c AllReduce","text":"<pre><code>size_t count;          // \u4ea4\u6362\u7684\u5143\u7d20\u6570\u91cf\ncudaStream_t stream;   // \u7531 cudaStreamCreate \u521b\u5efa\n\nNCCLCHECK(ncclAllReduce(d_sendbuff, d_recvbuff, count, ncclFloat, ncclSum,\n                        comm, stream));\n</code></pre>"},{"location":"nccl/examples/05_symmetric_memory/01_allreduce/#3","title":"3. \u6ce8\u9500\u7a97\u53e3\u5e76\u91ca\u653e\u8d44\u6e90","text":"<pre><code>NCCLCHECK(ncclCommWindowDeregister(comm, send_win));\nNCCLCHECK(ncclCommWindowDeregister(comm, recv_win));\n\nNCCLCHECK(ncclMemFree(d_sendbuff));\nNCCLCHECK(ncclMemFree(d_recvbuff));\n</code></pre>"},{"location":"nccl/examples/05_symmetric_memory/01_allreduce/#_6","title":"\u9884\u671f\u8f93\u51fa","text":""},{"location":"nccl/examples/05_symmetric_memory/01_allreduce/#4-gpu-pthread-mpi","title":"\u4ee5 4 \u5757 GPU \u8fd0\u884c\uff08pthread \u6216 MPI\uff09","text":"<pre><code>Starting AllReduce example with 4 ranks\n  Rank 0 communicator initialized using device 0\n  Rank 1 communicator initialized using device 1\n  Rank 2 communicator initialized using device 2\n  Rank 3 communicator initialized using device 3\nSymmetric Memory allocation\n  Rank 0 allocating 4.00 MB per buffer\n  Rank 1 allocating 4.00 MB per buffer\n  Rank 2 allocating 4.00 MB per buffer\n  Rank 3 allocating 4.00 MB per buffer\n  Rank 0 data initialized (value: 0)\n  Rank 1 data initialized (value: 1)\n  Rank 2 data initialized (value: 2)\n  Rank 3 data initialized (value: 3)\nStarting AllReduce with 1048576 elements (4 MB)\nAllReduce completed successfully\nVerification - Expected: 6.0, Got: 6.0\nResults verified correctly\n  Rank 0 symmetric memory windows deregistered\n  Rank 1 symmetric memory windows deregistered\n  Rank 2 symmetric memory windows deregistered\n  Rank 3 symmetric memory windows deregistered\nAll resources cleaned up successfully\nExample completed - demonstrated symmetric memory lifecycle\n</code></pre>"},{"location":"nccl/examples/05_symmetric_memory/01_allreduce/#_7","title":"\u5bf9\u79f0\u5185\u5b58\u7684\u6027\u80fd\u4f18\u52bf","text":"<ul> <li>\u4f18\u5316\u901a\u4fe1\u7b97\u6cd5\uff1a\u5728\u7f13\u51b2\u533a\u5e03\u5c40\u4e00\u81f4\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u89e6\u53d1\u66f4\u9ad8\u6548\u7684\u534f\u8bae\uff1b</li> <li>\u66f4\u597d\u7684\u5185\u5b58\u8bbf\u95ee\uff1a\u4e00\u81f4\u5e03\u5c40\u6709\u5229\u4e8e\u7f13\u5b58\u548c\u8bbf\u95ee\u6a21\u5f0f\u4f18\u5316\u3002</li> </ul> <p>\u8be6\u89c1\u535a\u5ba2 Enabling Fast Inference and Resilient Training with NCCL 2.27\u3002</p> <p>\u6ce8\u610f\uff1a\u7f13\u51b2\u533a\u5fc5\u987b\u901a\u8fc7 CUDA \u865a\u62df\u5185\u5b58\u7ba1\u7406\uff08VMM\uff09\u63a5\u53e3\u5206\u914d\uff0c\u4f8b\u5982 <code>ncclMemAlloc</code>\u3002\u5728\u4f7f\u7528 <code>NCCL_WIN_COLL_SYMMETRIC</code> \u65f6\uff0c\u6240\u6709 rank \u90fd\u9700\u63d0\u4f9b\u5bf9\u79f0\u7f13\u51b2\u533a\u3002</p>"},{"location":"nccl/examples/05_symmetric_memory/01_allreduce/#_8","title":"\u5173\u952e\u63d0\u793a","text":"<ul> <li>\u5bf9\u79f0\u7a97\u53e3\u6700\u9002\u5408\u5927\u89c4\u6a21\u3001\u5185\u5b58\u5e03\u5c40\u4e00\u81f4\u7684\u96c6\u4f53\u901a\u4fe1\uff1b</li> <li><code>ncclCommInitRank</code> \u53ef\u642d\u914d pthread \u6216 MPI \u4f7f\u7528\uff1b</li> <li>\u6240\u6709 rank \u5fc5\u987b\u5b8c\u6210\u7a97\u53e3\u6ce8\u518c\u540e\u624d\u80fd\u6267\u884c\u96c6\u4f53\u901a\u4fe1\uff1b</li> <li>\u5728\u91ca\u653e\u5185\u5b58\u524d\u52a1\u5fc5\u53d6\u6d88\u6ce8\u518c\u3002</li> </ul>"},{"location":"nccl/examples/05_symmetric_memory/01_allreduce/#_9","title":"\u5e38\u89c1\u95ee\u9898","text":"<ol> <li>\u6ce8\u518c\u5931\u8d25\uff1a\u5fc5\u987b\u4f7f\u7528 VMM \u63a5\u53e3\uff08\u5982 <code>ncclMemAlloc</code>\uff09\uff0c\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528 <code>cudaMalloc</code>\u3002</li> <li>\u5206\u914d\u5931\u8d25\uff1a\u68c0\u67e5 NCCL \u7248\u672c\uff08\u9700 \u2265 2.27\uff09\u53ca\u53ef\u7528\u5185\u5b58\u3002</li> <li>\u6ce8\u9500\u987a\u5e8f\uff1a\u5148\u53d6\u6d88\u6ce8\u518c\uff0c\u518d\u91ca\u653e\u5185\u5b58\u6216\u9500\u6bc1\u901a\u4fe1\u5668\u3002</li> <li>\u4e00\u81f4\u6027\u8981\u6c42\uff1a\u6240\u6709 rank \u90fd\u8981\u4f20\u5165 <code>NCCL_WIN_COLL_SYMMETRIC</code>\u3002</li> <li>\u5185\u5b58\u6cc4\u6f0f\uff1a\u4f7f\u7528 <code>ncclMemAlloc</code> \u5206\u914d\u7684\u7f13\u51b2\u533a\u5fc5\u987b\u8c03\u7528 <code>ncclMemFree</code> \u91ca\u653e\u3002</li> </ol>"},{"location":"nccl/examples/06_device_api/","title":"NCCL \u8bbe\u5907\u7aef API \u793a\u4f8b","text":""},{"location":"nccl/examples/06_device_api/#_1","title":"\u6982\u8ff0","text":"<p>\u672c\u76ee\u5f55\u5305\u542b NCCL \u8bbe\u5907\u7aef API \u7684\u6700\u5c0f\u793a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\u5728\u81ea\u5b9a\u4e49 CUDA \u5185\u6838\u4e2d\u76f4\u63a5\u6267\u884c\u8de8 GPU \u901a\u4fe1\u3002</p>"},{"location":"nccl/examples/06_device_api/#_2","title":"\u793a\u4f8b\u5217\u8868","text":""},{"location":"nccl/examples/06_device_api/#01_allreduce","title":"01_allreduce","text":"<p>\u8bbe\u5907\u7aef\u5b9e\u73b0\u7684 AllReduce</p> <ul> <li>\u6a21\u5f0f\uff1a\u5728 GPU \u5185\u6838\u4e2d\u4f7f\u7528\u8bbe\u5907\u901a\u4fe1\u5668\u6267\u884c\u96c6\u4f53\u64cd\u4f5c\uff1b</li> <li>\u4e3b\u8981 API\uff1a<code>ncclDevCommCreate</code>\u3001<code>ncclCommWindowRegister</code>\u3001\u8bbe\u5907\u7aef LSA barrier\u3001<code>ncclAllReduce</code>\uff1b</li> <li>\u9002\u7528\u573a\u666f\uff1a\u5c06 AllReduce \u4e0e\u4e0a\u4e0b\u6e38\u8ba1\u7b97\u878d\u5408\u3001\u5b9e\u73b0\u81ea\u5b9a\u4e49\u8fd0\u7b97\uff1b</li> <li>\u7279\u70b9\uff1a</li> <li>\u521b\u5efa\u8bbe\u5907\u901a\u4fe1\u5668\u5e76\u542f\u7528 LSA barrier\uff1b</li> <li>\u6ce8\u518c\u5bf9\u79f0\u5185\u5b58\u7a97\u53e3\u4ee5\u8bbf\u95ee\u5176\u4ed6 GPU\uff1b</li> <li>\u5185\u6838\u5185\u90e8\u5229\u7528 LSA barrier \u534f\u540c\uff1b</li> <li>\u4e3b\u673a\u4ec5\u8d1f\u8d23\u542f\u52a8\u5185\u6838\uff0c\u5b9e\u9645 AllReduce \u5728\u8bbe\u5907\u4fa7\u5b8c\u6210\u3002</li> </ul>"},{"location":"nccl/examples/06_device_api/#_3","title":"\u9009\u62e9\u8be5\u6a21\u5f0f\u7684\u7406\u7531","text":"<ul> <li>\u5178\u578b\u573a\u666f\uff1a\u9700\u8981\u5728\u81ea\u5b9a\u4e49\u5185\u6838\u4e2d\u878d\u5408\u8ba1\u7b97\u4e0e\u901a\u4fe1\uff1b</li> <li>\u89e3\u51b3\u95ee\u9898\uff1a\u5728 CUDA \u5185\u6838\u5185\u90e8\u53d1\u8d77 NCCL \u901a\u4fe1\uff1b</li> <li>\u4f9d\u8d56\uff1a\u53ef\u9009\u62e9 pthread \u6216 MPI \u4f5c\u4e3a\u542f\u52a8\u65b9\u5f0f\u3002</li> </ul>"},{"location":"nccl/examples/06_device_api/#api","title":"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u8bbe\u5907\u7aef API","text":"<p>\u8bbe\u5907\u7aef API \u5141\u8bb8\u5728 CUDA \u5185\u6838\u4e2d\u76f4\u63a5\u8c03\u7528 NCCL\uff0c\u4ece\u800c\u5c06\u901a\u4fe1\u4e0e\u8ba1\u7b97\u7d27\u5bc6\u8026\u5408\uff1a</p> <pre><code>// \u4e3b\u673a\u4fa7\uff1a\n// 1) \u521b\u5efa\u8bbe\u5907\u901a\u4fe1\u5668\u5e76\u914d\u7f6e\u9700\u6c42\n// 2) \u6ce8\u518c\u5bf9\u79f0\u5185\u5b58\u7a97\u53e3\u4f9b\u5bf9\u7b49\u8bbf\u95ee\nncclDevComm devComm; ncclDevCommRequirements reqs{};\nreqs.lsaBarrierCount = NCCL_DEVICE_CTA_COUNT;\nNCCLCHECK(ncclDevCommCreate(comm, &amp;reqs, &amp;devComm));\nNCCLCHECK(ncclCommWindowRegister(comm, buffer, size, &amp;win, NCCL_WIN_COLL_SYMMETRIC));\n\n// \u8bbe\u5907\u4fa7\uff1a\n// - \u901a\u8fc7 LSA barrier \u5b9e\u73b0\u8de8 GPU \u540c\u6b65\n// - \u4f7f\u7528\u5bf9\u79f0\u7a97\u53e3\u6307\u9488\u8bbf\u95ee\u5176\u4ed6 GPU \u7684\u6570\u636e\nmyAllReduceKernel&lt;&lt;&lt;grid, block&gt;&gt;&gt;(win, devComm);\n</code></pre>"},{"location":"nccl/examples/06_device_api/#_4","title":"\u6784\u5efa\u65b9\u5f0f","text":""},{"location":"nccl/examples/06_device_api/#_5","title":"\u5feb\u901f\u5f00\u59cb","text":"<pre><code>make 01_allreduce\n</code></pre>"},{"location":"nccl/examples/06_device_api/#_6","title":"\u5355\u72ec\u6784\u5efa\u4e0e\u8fd0\u884c","text":"<pre><code>cd 01_allreduce &amp;&amp; make\n./allreduce_device_api\n</code></pre>"},{"location":"nccl/examples/06_device_api/#_7","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>NCCL \u7528\u6237\u6307\u5357\uff1a\u793a\u4f8b</li> <li>NCCL API \u53c2\u8003</li> <li>CUDA \u7f16\u7a0b\u6307\u5357</li> </ul>"},{"location":"nccl/examples/06_device_api/01_allreduce/","title":"NCCL \u793a\u4f8b\uff1a\u8bbe\u5907\u7aef API AllReduce","text":"<p>\u672c\u793a\u4f8b\u5c55\u793a\u5982\u4f55\u5728 CUDA \u5185\u6838\u4e2d\u76f4\u63a5\u5b9e\u73b0 AllReduce \u6c42\u548c\u3002\u6d41\u7a0b\u5305\u62ec\uff1a\u4f7f\u7528 <code>ncclDevCommCreate</code> \u521b\u5efa\u8bbe\u5907\u901a\u4fe1\u5668\u3001\u501f\u52a9 LSA\uff08Load Store Accessible\uff09barrier \u8fdb\u884c\u8bbe\u5907\u7aef\u540c\u6b65\uff0c\u5e76\u901a\u8fc7\u5bf9\u79f0\u5185\u5b58\u7a97\u53e3\u8bbf\u95ee\u5176\u4ed6 GPU \u7684\u6570\u636e\u3002</p>"},{"location":"nccl/examples/06_device_api/01_allreduce/#_1","title":"\u6982\u8ff0","text":"<p>\u793a\u4f8b\u4e2d\u7684 AllReduce \u5b8c\u5168\u7531 GPU \u5185\u6838\u5b8c\u6210\u3002\u4e3b\u673a\u4fa7\u8d1f\u8d23\u521b\u5efa\u8bbe\u5907\u901a\u4fe1\u5668\u3001\u6ce8\u518c\u5bf9\u79f0\u5185\u5b58\u7a97\u53e3\uff1b\u8bbe\u5907\u4fa7\u901a\u8fc7 LSA barrier \u540c\u6b65\uff0c\u5e76\u5728\u5185\u6838\u4e2d\u6267\u884c AllReduce \u64cd\u4f5c\u3002</p>"},{"location":"nccl/examples/06_device_api/01_allreduce/#_2","title":"\u793a\u4f8b\u6d41\u7a0b","text":"<ol> <li>\u521b\u5efa\u8bbe\u5907\u901a\u4fe1\u5668\uff1a\u8c03\u7528 <code>ncclDevCommCreate</code>\uff0c\u4e3a\u5185\u6838\u63d0\u4f9b\u8c03\u7528 NCCL \u7684\u80fd\u529b\u3002</li> <li>\u6ce8\u518c\u5bf9\u79f0\u5185\u5b58\u7a97\u53e3\uff1a\u4f7f\u7528 <code>ncclCommWindowRegister</code>\uff08<code>NCCL_WIN_COLL_SYMMETRIC</code> \u6807\u5fd7\uff09\u5b9e\u73b0\u8de8 GPU \u7684\u76f4\u63a5\u8bbf\u95ee\u3002</li> <li>\u542f\u52a8 GPU \u5185\u6838\uff1a\u5728\u8bbe\u5907\u7aef\u6267\u884c AllReduce\uff0c\u5e76\u5229\u7528 LSA barrier \u5b8c\u6210\u540c\u6b65\u3002</li> </ol>"},{"location":"nccl/examples/06_device_api/01_allreduce/#_3","title":"\u6784\u5efa\u4e0e\u8fd0\u884c","text":"<p>\u9ad8\u7ea7\u793a\u4f8b\u53ef\u4f7f\u7528 pthread\uff08\u9ed8\u8ba4\uff09\u6216 MPI\u3002\u82e5\u9700\u542f\u7528 MPI\uff0c\u8bf7\u5728\u6784\u5efa\u65f6\u8bbe\u7f6e <code>MPI=1</code>\uff0c\u5e76\u6309\u9700\u914d\u7f6e <code>MPI_HOME</code>\u3002</p>"},{"location":"nccl/examples/06_device_api/01_allreduce/#_4","title":"\u6784\u5efa","text":"<pre><code>make [MPI=1] [MPI_HOME=&lt;path-to-mpi&gt;] [NCCL_HOME=&lt;path-to-nccl&gt;] [CUDA_HOME=&lt;path-to-cuda&gt;]\n</code></pre>"},{"location":"nccl/examples/06_device_api/01_allreduce/#pthread","title":"pthread \u7248\u672c\u8fd0\u884c","text":"<pre><code>[NTHREADS=N] ./allreduce_device_api\n</code></pre>"},{"location":"nccl/examples/06_device_api/01_allreduce/#mpi","title":"MPI \u7248\u672c\u8fd0\u884c","text":"<pre><code>mpirun -np &lt;num_processes&gt; ./allreduce_device_api\n</code></pre>"},{"location":"nccl/examples/06_device_api/01_allreduce/#_5","title":"\u4ee3\u7801\u89e3\u6790","text":""},{"location":"nccl/examples/06_device_api/01_allreduce/#1","title":"1. \u521b\u5efa\u8bbe\u5907\u901a\u4fe1\u5668\uff08\u4e3b\u673a\u4fa7\uff09","text":"<p><code>ncclDevComm</code> \u662f\u8bbe\u5907\u7aef API \u7684\u6838\u5fc3\uff0c\u5141\u8bb8\u5185\u6838\u4e2d\u53d1\u8d77\u8de8 GPU \u901a\u4fe1\u3002<code>ncclDevCommRequirements</code> \u7528\u4e8e\u6307\u5b9a\u901a\u4fe1\u5668\u9700\u8981\u7684\u8d44\u6e90\u3002\u672c\u4f8b\u5c06 <code>lsaBarrierCount</code> \u8bbe\u7f6e\u4e3a\u7ebf\u7a0b\u5757\u6570\u91cf\uff0c\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u5206\u914d\u72ec\u7acb barrier\u3002</p> <pre><code>ncclDevComm devComm;\nncclDevCommRequirements reqs;\nreqs.lsaBarrierCount = NCCL_DEVICE_CTA_COUNT; // \u4e0e\u7ebf\u7a0b\u5757\u6570\u91cf\u4e00\u81f4\n\nNCCLCHECK(ncclDevCommCreate(comm, &amp;reqs, &amp;devComm));\n</code></pre>"},{"location":"nccl/examples/06_device_api/01_allreduce/#2","title":"2. \u6ce8\u518c\u5bf9\u79f0\u7a97\u53e3\uff08\u4e3b\u673a\u4fa7\uff09","text":"<p>\u8bbe\u5907\u7aef API \u8981\u6c42\u4f7f\u7528 <code>NCCL_WIN_COLL_SYMMETRIC</code> \u6ce8\u518c\u5bf9\u79f0\u5185\u5b58\u7a97\u53e3\u3002\u6709\u5173\u5206\u914d\u7ec6\u8282\u53ef\u53c2\u8003 \u5bf9\u79f0\u5185\u5b58\u793a\u4f8b\u3002</p> <pre><code>ncclComm_t comm;\nvoid* d_sendbuff;\nvoid* d_recvbuff;\nncclWindow_t send_win;\nncclWindow_t recv_win;\n\nNCCLCHECK(ncclCommWindowRegister(comm, d_sendbuff, size_bytes, &amp;send_win, NCCL_WIN_COLL_SYMMETRIC));\nNCCLCHECK(ncclCommWindowRegister(comm, d_recvbuff, size_bytes, &amp;recv_win, NCCL_WIN_COLL_SYMMETRIC));\n</code></pre>"},{"location":"nccl/examples/06_device_api/01_allreduce/#3-lsa-barrier","title":"3. \u8bbe\u5907\u7aef LSA barrier","text":"<p>LSA barrier \u5141\u8bb8\u4e0d\u540c GPU \u4e4b\u95f4\u8fdb\u884c\u540c\u6b65\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u5757\u901a\u8fc7 <code>blockIdx.x</code> \u9009\u62e9\u81ea\u5df1\u7684 barrier\uff0c\u4f7f\u5404\u5757\u5728\u540c\u6b65\u65f6\u4e92\u4e0d\u5e72\u6270\u3002</p> <pre><code>ncclLsaBarrierSession&lt;ncclCoopCta&gt; bar{\n    ncclCoopCta(),\n    devComm, ncclTeamLsa(devComm), devComm.lsaBarrier,\n    blockIdx.x\n};\nbar.sync(ncclCoopCta(), cuda::memory_order_relaxed);\n\n// ...\n\nbar.sync(ncclCoopCta(), cuda::memory_order_release);\n</code></pre>"},{"location":"nccl/examples/06_device_api/01_allreduce/#4","title":"4. \u8bbe\u5907\u7aef\u8bbf\u95ee\u5bf9\u7b49\u5185\u5b58","text":"<p><code>ncclGetLsaPointer</code> \u5141\u8bb8 CUDA \u5185\u6838\u76f4\u63a5\u8bbf\u95ee\u5176\u4ed6 GPU \u7684\u5185\u5b58\u3002</p> <pre><code>float* peerPtr = (float*)ncclGetLsaPointer(sendwin, sendoffset, peer);\n</code></pre>"},{"location":"nccl/examples/06_device_api/01_allreduce/#_6","title":"\u9884\u671f\u8f93\u51fa","text":"<pre><code>Starting Device API AllReduce initialization\n  Rank 0 using GPU device 0\n  Rank 1 using GPU device 1\n  Rank 2 using GPU device 2\n  Rank 3 using GPU device 3\n  Rank 0 initialized NCCL communicator for 4 total ranks\n  ...\nAllReduce completed. Result verification: PASSED\nAll elements correctly sum to 6 (ranks 0-3)\n</code></pre>"},{"location":"nccl/examples/06_device_api/01_allreduce/#_7","title":"\u9002\u7528\u573a\u666f","text":"<ul> <li>\u5185\u6838\u7ea7\u901a\u4fe1\uff1a\u8ba1\u7b97\u5185\u6838\u9700\u8981\u7acb\u5373\u4f7f\u7528\u901a\u4fe1\u7ed3\u679c\uff1b</li> <li>\u4f4e\u5ef6\u8fdf\u9700\u6c42\uff1a\u51cf\u5c11\u4e3b\u673a\u4e0e\u8bbe\u5907\u4e4b\u95f4\u7684\u540c\u6b65\uff1b</li> <li>\u81ea\u5b9a\u4e49\u96c6\u4f53\u901a\u4fe1\uff1a\u5b9e\u73b0\u975e\u6807\u51c6\u7684\u89c4\u7ea6\u903b\u8f91\uff1b</li> <li>\u8fed\u4ee3\u7b97\u6cd5\uff1a\u591a\u6b21\u901a\u4fe1\u3001\u4e14\u4e3b\u673a\u53c2\u4e0e\u5ea6\u4f4e\u3002</li> </ul>"},{"location":"nccl/examples/06_device_api/01_allreduce/#_8","title":"\u6027\u80fd\u8003\u91cf","text":"<p>\u4f18\u52bf - \u4e2d\u5c0f\u6d88\u606f\u7684\u5ef6\u8fdf\u66f4\u4f4e\uff1b - \u6d88\u9664\u4e3b\u673a-\u8bbe\u5907\u540c\u6b65\u74f6\u9888\uff1b - \u5728\u5185\u6838\u4e2d\u878d\u5408\u8ba1\u7b97\u4e0e\u901a\u4fe1\uff1b - \u76f4\u63a5\u8bbf\u95ee\u5bf9\u7b49 GPU \u5185\u5b58\uff0c\u65e0\u9700 CPU \u4e2d\u8f6c\u3002</p> <p>\u52a3\u52bf - \u7f16\u7a0b\u590d\u6742\u5ea6\u66f4\u9ad8\uff0c\u9700\u8981\u6b63\u786e\u4f7f\u7528 LSA barrier\uff1b - \u5fc5\u987b\u8c28\u614e\u5904\u7406\u5185\u5b58\u987a\u5e8f\u4e0e\u540c\u6b65\uff1b - \u76f8\u6bd4\u4e3b\u673a API \u5b9e\u73b0\u96be\u5ea6\u66f4\u5927\uff1b - \u8981\u6c42 GPU \u652f\u6301 P2P\uff08\u5982 NVLink \u6216\u540c\u4e00 PCIe \u6839\u590d\u6742\uff09\u3002</p>"},{"location":"nccl/examples/06_device_api/01_allreduce/#_9","title":"\u5e38\u89c1\u95ee\u9898","text":""},{"location":"nccl/examples/06_device_api/01_allreduce/#_10","title":"\u8b66\u544a\uff1a\u901a\u4fe1\u5668\u4e0d\u652f\u6301\u5bf9\u79f0\u5185\u5b58","text":"<p>\u5982\u679c\u8282\u70b9\u4e0a\u7684 GPU \u4ec5\u901a\u8fc7 CPU \u4e92\u8054\uff0c\u53ef\u80fd\u65e0\u6cd5\u542f\u7528\u5bf9\u79f0\u5185\u5b58\u3002\u89e3\u51b3\u65b9\u6cd5\uff1a\u4f7f\u7528 <code>nvidia-smi</code> \u9009\u62e9\u901a\u8fc7 NVLink \u6216\u540c\u4e00 PCIe \u4ea4\u6362\u673a\u4e92\u8fde\u7684 GPU\uff0c\u53ef\u901a\u8fc7 <code>CUDA_VISIBLE_DEVICES</code> \u63a7\u5236\u3002</p>"},{"location":"nccl/examples/06_device_api/01_allreduce/#lsa-barrier","title":"LSA barrier \u540c\u6b65\u5931\u8d25","text":"<p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u786e\u4fdd <code>lsaBarrierCount</code> \u4e0e\u542f\u52a8\u5185\u6838\u7684\u7ebf\u7a0b\u5757\u6570\u4e00\u81f4\u3002</p>"},{"location":"nccl/examples/06_device_api/01_allreduce/#_11","title":"\u8bbe\u5907\u5185\u5b58\u8bbf\u95ee\u8fdd\u89c4","text":"<p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u786e\u8ba4\u7a97\u53e3\u4f7f\u7528 <code>NCCL_WIN_COLL_SYMMETRIC</code> \u6ce8\u518c\uff0c\u4e14\u6240\u6709 rank \u7684\u7f13\u51b2\u533a\u5927\u5c0f\u4e00\u81f4\u3002</p>"},{"location":"nccl/examples/06_device_api/01_allreduce/#_12","title":"\u7ed3\u679c\u4e0d\u4e00\u81f4\u6216\u5b58\u5728\u7ade\u6001","text":"<p>\u89e3\u51b3\u65b9\u6cd5\uff1a\u4e3a LSA barrier \u9009\u7528\u5408\u9002\u7684\u5185\u5b58\u987a\u5e8f\uff08<code>cuda::memory_order_relaxed</code> / <code>release</code> \u7b49\uff09\u3002</p>"},{"location":"nccl/examples/06_device_api/01_allreduce/#_13","title":"\u6027\u80fd\u63d0\u793a","text":"<ul> <li>\u672c\u793a\u4f8b\u4ee5\u6559\u5b66\u4e3a\u76ee\u7684\uff0c\u672a\u8fdb\u884c\u6027\u80fd\u8c03\u4f18\uff1b</li> <li>\u5b9e\u9645\u9879\u76ee\u5e94\u8003\u8651\u5411\u91cf\u5316\u3001\u5faa\u73af\u5c55\u5f00\u3001\u5185\u5b58\u8bbf\u95ee\u5bf9\u9f50\u7b49\uff1b</li> <li>\u53ef\u53c2\u8003 NCCL \u5e93\u548c <code>nccl-tests</code> \u4e2d\u7684\u8bbe\u5907\u7aef\u4f18\u5316\u5b9e\u73b0\u3002</li> </ul>"},{"location":"nccl/examples/06_device_api/01_allreduce/#_14","title":"\u9519\u8bef\u5904\u7406","text":"<p>\u793a\u4f8b\u5bf9 CUDA \u4e0e NCCL \u8c03\u7528\u5747\u4f7f\u7528\u5b8f\u8fdb\u884c\u9519\u8bef\u68c0\u67e5\u3002\u8bbe\u5907\u7aef\u4ee3\u7801\u5e94\u6839\u636e\u9700\u6c42\u6269\u5c55 LSA \u64cd\u4f5c\u4e0e\u5185\u5b58\u8bbf\u95ee\u7684\u5f02\u5e38\u5904\u7406\u3002</p>"},{"location":"nccl/examples/06_device_api/01_allreduce/#_15","title":"\u540e\u7eed\u5b66\u4e60","text":"<ul> <li>\u81ea\u5b9a\u4e49\u89c4\u7ea6\u8fd0\u7b97\uff1a\u5c1d\u8bd5\u5b9e\u73b0\u7279\u6b8a\u7684 reduce \u903b\u8f91\uff1b</li> <li>\u4e3b\u673a\u4e0e\u8bbe\u5907\u6df7\u5408\u6d41\u7a0b\uff1a\u7ed3\u5408\u4e3b\u673a API \u4e0e\u8bbe\u5907 API \u6784\u5efa\u590d\u6742\u5de5\u4f5c\u6d41\uff1b</li> <li>\u6027\u80fd\u8c03\u4f18\uff1a\u8fdb\u4e00\u6b65\u63a2\u7d22 LSA barrier \u7684\u4f7f\u7528\u4e0e\u5185\u5b58\u8bbf\u95ee\u4f18\u5316\u6280\u5de7\u3002</li> </ul>"},{"location":"nccl/examples/common/","title":"NCCL \u516c\u5171\u5de5\u5177\u96c6","text":""},{"location":"nccl/examples/common/#_1","title":"\u7b80\u4ecb","text":"<p>\u8be5\u76ee\u5f55\u5305\u542b\u6240\u6709 NCCL \u793a\u4f8b\u5171\u4eab\u7684\u5de5\u5177\u4e0e\u8f85\u52a9\u51fd\u6570\uff0c\u63d0\u4f9b\u7edf\u4e00\u7684\u9519\u8bef\u5904\u7406\u3001\u8bbe\u5907\u7ba1\u7406\u4ee5\u53ca MPI \u96c6\u6210\u80fd\u529b\u3002</p>"},{"location":"nccl/examples/common/#_2","title":"\u76ee\u5f55\u7ed3\u6784","text":""},{"location":"nccl/examples/common/#include","title":"\u5934\u6587\u4ef6\uff08<code>include/</code>\uff09","text":"<ul> <li>utils.h\uff1a\u901a\u7528\u5de5\u5177\u51fd\u6570\u3002</li> <li>nccl_utils.h\uff1aNCCL \u9519\u8bef\u68c0\u67e5\u5b8f\u3002</li> <li>mpi_utils.h\uff1aMPI \u9519\u8bef\u68c0\u67e5\u5b8f\u3002</li> </ul>"},{"location":"nccl/examples/common/#src","title":"\u6e90\u6587\u4ef6\uff08<code>src/</code>\uff09","text":"<ul> <li>utils.cc\uff1a\u901a\u7528\u5de5\u5177\u51fd\u6570\u7684\u5b9e\u73b0\u3002</li> </ul>"},{"location":"nccl/examples/common/#_3","title":"\u5173\u952e\u7279\u6027","text":""},{"location":"nccl/examples/common/#_4","title":"\u9519\u8bef\u68c0\u67e5\u5b8f","text":"<pre><code>#define NCCLCHECK(cmd)  // NCCL \u9519\u8bef\u68c0\u67e5\n#define CUDACHECK(cmd)  // CUDA \u9519\u8bef\u68c0\u67e5\n#define MPICHECK(cmd)   // MPI \u9519\u8bef\u68c0\u67e5\n</code></pre>"},{"location":"nccl/examples/common/#_5","title":"\u5728\u793a\u4f8b\u4e2d\u7684\u7528\u6cd5","text":"<p>\u5728\u793a\u4f8b\u6e90\u7801\u4e2d\u5305\u542b\u76f8\u5173\u5934\u6587\u4ef6\uff1a</p> <pre><code>#include \"utils.h\"\n#include \"mpi_utils.h\"\n</code></pre>"},{"location":"nccl/examples/common/#_6","title":"\u8bf4\u660e","text":"<ul> <li>\u6240\u6709\u5de5\u5177\u51fd\u6570\u90fd\u5305\u542b\u5b8c\u5584\u7684\u9519\u8bef\u68c0\u67e5\u3002</li> <li>\u63a5\u53e3\u8bbe\u8ba1\u4e3a\u7ebf\u7a0b\u5b89\u5168\u3002</li> <li>\u5185\u5b58\u7ba1\u7406\u51fd\u6570\u4f1a\u5b89\u5168\u5904\u7406\u7a7a\u6307\u9488\u3002</li> <li>\u4ec5\u5728\u591a\u8fdb\u7a0b\u793a\u4f8b\u4e2d\u9700\u8981\u5f15\u5165 MPI \u8f85\u52a9\u51fd\u6570\u3002</li> </ul>"},{"location":"nccl/ext-net/","title":"NCCL Net \u63d2\u4ef6\u6587\u6863","text":"<p>\u672c\u6587\u4ecb\u7ecd NCCL Net \u63d2\u4ef6 API\uff0c\u4ee5\u53ca\u5982\u4f55\u4e3a NCCL \u5b9e\u73b0\u7f51\u7edc\u63d2\u4ef6\u3002</p>"},{"location":"nccl/ext-net/#_1","title":"\u6982\u89c8","text":"<p>\u4e3a\u652f\u6301\u4efb\u610f\u7f51\u7edc\u7c7b\u578b\uff0cNCCL \u901a\u8fc7\u5916\u90e8\u63d2\u4ef6\u6269\u5c55\u7f51\u7edc\u529f\u80fd\u3002\u63d2\u4ef6\u5b9e\u73b0 NCCL \u7684\u7f51\u7edc API\uff0c\u4ece\u800c\u5c06\u9488\u5bf9\u7279\u5b9a GPU \u6808\uff08\u4f8b\u5982 CUDA\uff09\u6784\u5efa\u7684 NCCL \u4e8c\u8fdb\u5236\uff0c\u4e0e\u9488\u5bf9\u7279\u5b9a\u7f51\u7edc\u6808\u6784\u5efa\u7684\u7f51\u7edc\u4ee3\u7801\u89e3\u8026\u3002\u501f\u52a9\u8be5\u673a\u5236\uff0c\u53ef\u4ee5\u5728\u4efb\u610f CUDA \u7248\u672c\u4e0e\u4efb\u610f\u7f51\u7edc\u6808\u7248\u672c\u4e4b\u95f4\u81ea\u7531\u7ec4\u5408\u3002</p> <p>NCCL \u7f51\u7edc\u63d2\u4ef6\u4ee5\u5171\u4eab\u5e93 <code>libnccl-net.so</code> \u7684\u5f62\u5f0f\u63d0\u4f9b\u3002\u5e93\u5185\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a NCCL Net API \u7684\u5b9e\u73b0\uff0c\u5f62\u5f0f\u4e3a\u5e26\u7248\u672c\u53f7\u7684\u7ed3\u6784\u4f53\uff0c\u7ed3\u6784\u4f53\u5185\u586b\u5145\u9488\u5bf9\u5404\u4e2a\u51fd\u6570\u7684\u6307\u9488\u3002</p>"},{"location":"nccl/ext-net/#_2","title":"\u63d2\u4ef6\u67b6\u6784","text":""},{"location":"nccl/ext-net/#_3","title":"\u63d2\u4ef6\u540d\u79f0\u4e0e\u591a\u63d2\u4ef6\u5e76\u5b58","text":"<p>NCCL \u521d\u59cb\u5316\u65f6\u4f1a\u5c1d\u8bd5\u52a0\u8f7d <code>libnccl-net.so</code>\uff0c\u5e76\u5728\u5e93\u4e2d\u67e5\u627e\u7b26\u53f7\u3002</p> <p><code>NCCL_NET_PLUGIN</code> \u73af\u5883\u53d8\u91cf\u5141\u8bb8\u591a\u4e2a\u63d2\u4ef6\u5171\u5b58\u3002\u82e5\u8bbe\u7f6e\u4e86\u8be5\u53d8\u91cf\uff0cNCCL \u4f1a\u5bfb\u627e\u540d\u4e3a <code>libnccl-net-${NCCL_NET_PLUGIN}.so</code> \u7684\u5e93\u3002\u56e0\u6b64\u5efa\u8bae\u6309\u7167\u8be5\u547d\u540d\u89c4\u5219\u6784\u5efa\u5e93\uff0c\u5e76\u8ba9 <code>libnccl-net.so</code> \u5efa\u7acb\u6307\u5411 <code>libnccl-net-${NCCL_NET_PLUGIN}.so</code> \u7684\u7b26\u53f7\u94fe\u63a5\u3002\u8fd9\u6837\uff0c\u5f53\u8def\u5f84\u4e2d\u5b58\u5728\u591a\u4e2a\u63d2\u4ef6\u65f6\uff0c\u4ec5\u9700\u8bbe\u7f6e <code>NCCL_NET_PLUGIN</code> \u5373\u53ef\u9009\u62e9\u5408\u9002\u7684\u63d2\u4ef6\u3002</p>"},{"location":"nccl/ext-net/#_4","title":"\u7ed3\u6784\u4f53\u7248\u672c\u7ba1\u7406","text":"<p>\u627e\u5230\u5e93\u540e\uff0cNCCL \u4f1a\u67e5\u627e\u540d\u4e3a <code>ncclNet_vX</code> \u7684\u7b26\u53f7\uff0c<code>X</code> \u968f\u7248\u672c\u6f14\u8fdb\u9012\u589e\u3002\u7248\u672c\u53f7\u786e\u4fdd\u63d2\u4ef6\u4e0e NCCL \u5185\u6838\u517c\u5bb9\u3002</p> <p>\u5efa\u8bae\u63d2\u4ef6\u540c\u65f6\u63d0\u4f9b\u591a\u4e2a\u7248\u672c\u7684\u7ed3\u6784\u4f53\u5b9e\u73b0\uff08\u591a\u4e2a\u7b26\u53f7\uff09\uff0c\u4ee5\u4fbf\u540c\u4e00\u4e2a\u63d2\u4ef6\u517c\u5bb9\u4e0d\u540c\u7248\u672c\u7684 NCCL\u3002</p> <p>\u53cd\u8fc7\u6765\uff0c\u4e3a\u4e86\u4fbf\u4e8e\u8fc7\u6e21\uff0cNCCL \u4e5f\u4f1a\u5c1d\u8bd5\u517c\u5bb9\u591a\u4e2a\u63d2\u4ef6\u7248\u672c\uff1a\u5148\u67e5\u8be2\u6700\u65b0\u7684 <code>ncclNet</code> \u7ed3\u6784\u4f53\u7248\u672c\uff0c\u5982\u672a\u627e\u5230\u4f1a\u7ee7\u7eed\u67e5\u65e7\u7248\u672c\uff0c\u4ee5\u4fbf\u65e7\u63d2\u4ef6\u4ecd\u53ef\u8fd0\u884c\u3002</p>"},{"location":"nccl/ext-net/#collnet","title":"\u7f51\u7edc\u5185\u96c6\u4f53\u64cd\u4f5c\uff08collNet\uff09","text":"<p>\u9664\u4e86 <code>ncclNet</code> \u7ed3\u6784\u4f53\u5916\uff0c\u82e5\u7f51\u7edc\u652f\u6301\u7f51\u7edc\u5185\u96c6\u4f53\u64cd\u4f5c\uff0c\u63d2\u4ef6\u53ef\u4ee5\u989d\u5916\u63d0\u4f9b <code>collNet</code> \u7ed3\u6784\u4f53\u3002NCCL \u7684 collNet \u7b97\u6cd5\u53ef\u4ee5\u501f\u52a9\u8be5\u80fd\u529b\u52a0\u901f\u8de8\u8282\u70b9\u7684 allReduce\u3002</p> <p>collNet \u7ed3\u6784\u4f53\u662f\u53ef\u9009\u7684\uff0c\u4f46\u4e0e <code>ncclNet</code> \u7ed3\u6784\u4f53\u5171\u4eab\u7248\u672c\u53f7\uff0c\u4e14\u5927\u91cf\u51fd\u6570\u5b9a\u4e49\u4fdd\u6301\u4e00\u81f4\uff0c\u4ee5\u4fbf\u4e8e\u5b9e\u73b0\u3002</p>"},{"location":"nccl/ext-net/#_5","title":"\u5934\u6587\u4ef6\u7ba1\u7406","text":"<p>\u4e3a\u4e86\u8ba9\u7528\u6237\u66f4\u8f7b\u677e\u5730\u6784\u5efa\u63d2\u4ef6\uff0c\u63d2\u4ef6\u5e94\u5c06\u6240\u652f\u6301\u7684 <code>ncclNet_vX</code> \u5b9a\u4e49\u62f7\u8d1d\u5230\u5185\u90e8\u5934\u6587\u4ef6\u4e2d\u3002<code>ext-net/example/</code> \u7ed9\u51fa\u4e86\u793a\u4f8b\uff1a\u6211\u4eec\u5728 <code>nccl/</code> \u76ee\u5f55\u4e2d\u4fdd\u7559\u6240\u6709\u5934\u6587\u4ef6\uff0c\u5e76\u901a\u8fc7\u8f7b\u91cf\u5c01\u88c5\u652f\u6301\u65e7\u7248\u672c\u3002</p> <p><code>nccl/</code> \u76ee\u5f55\u4e0b\u5305\u542b\u4ece\u65e7\u7248\u672c API \u4e2d\u63d0\u53d6\u51fa\u7684 <code>net_vX.h</code>\uff0c\u4ee5\u53ca\u9519\u8bef\u7801\u5b9a\u4e49 <code>err.h</code>\u3002</p>"},{"location":"nccl/ext-net/#apiv11","title":"API\uff08v11\uff09","text":"<p>\u4ee5\u4e0b\u4e3a <code>ncclNet_v11</code> \u7ed3\u6784\u4f53\u4e3b\u4f53\uff0c\u540e\u7eed\u7ae0\u8282\u5c06\u9010\u4e00\u8bf4\u660e\u5404\u4e2a\u51fd\u6570\u3002</p> <pre><code>typedef struct {\n  // Name of the network (mainly for logs)\n  const char* name;\n  // Initialize the network.\n  ncclResult_t (*init)(void** ctx, uint64_t commId, ncclNetCommConfig_v11_t* config, ncclDebugLogger_t logFunction, ncclProfilerCallback_t profFunction);\n  // Return the number of adapters.\n  ncclResult_t (*devices)(int* ndev);\n  // Get various device properties.\n  ncclResult_t (*getProperties)(int dev, ncclNetProperties_v11_t* props);\n  // Create a receiving object and provide a handle to connect to it. The\n  // handle can be up to NCCL_NET_HANDLE_MAXSIZE bytes and will be exchanged\n  // between ranks to create a connection.\n  ncclResult_t (*listen)(void* ctx, int dev, void* handle, void** listenComm);\n  // Connect to a handle and return a sending comm object for that peer.\n  // This call must not block for the connection to be established, and instead\n  // should return successfully with sendComm == NULL with the expectation that\n  // it will be called again until sendComm != NULL.\n  // If *sendDevComm points to a valid object, then NCCL is requesting device offload for this connection\n  ncclResult_t (*connect)(void* ctx, int dev, void* handle, void** sendComm, ncclNetDeviceHandle_v11_t** sendDevComm);\n  // Finalize connection establishment after remote peer has called connect.\n  // This call must not block for the connection to be established, and instead\n  // should return successfully with recvComm == NULL with the expectation that\n  // it will be called again until recvComm != NULL.\n  // If *recvDevComm points to a valid object, then NCCL is requesting device offload for this connection\n  ncclResult_t (*accept)(void* listenComm, void** recvComm, ncclNetDeviceHandle_v11_t** recvDevComm);\n  // Register/Deregister memory. Comm can be either a sendComm or a recvComm.\n  // Type is either NCCL_PTR_HOST or NCCL_PTR_CUDA.\n  ncclResult_t (*regMr)(void* comm, void* data, size_t size, int type, void** mhandle);\n  /* DMA-BUF support */\n  ncclResul\n</code></pre> <p>\uff08\u7ed3\u6784\u4f53\u4f59\u4e0b\u90e8\u5206\u8be6\u89c1\u539f\u59cb\u5934\u6587\u4ef6\uff0c\u672c\u7ffb\u8bd1\u4e3b\u8981\u5173\u6ce8\u63a5\u53e3\u8bf4\u660e\u3002\uff09</p>"},{"location":"nccl/ext-net/#_6","title":"\u9519\u8bef\u7801","text":"<p>\u6240\u6709\u63d2\u4ef6\u51fd\u6570\u5747\u8fd4\u56de NCCL \u9519\u8bef\u7801\u3002\u6210\u529f\u65f6\u9700\u8fd4\u56de <code>ncclSuccess</code>\u3002</p> <p>\u5e38\u89c1\u9519\u8bef\u7801\u5982\u4e0b\uff1a</p> <ul> <li><code>ncclSystemError</code>\uff1a\u7f51\u7edc\u63d2\u4ef6\u6700\u5e38\u89c1\u7684\u9519\u8bef\uff0c\u8868\u793a\u8c03\u7528 Linux \u5185\u6838\u6216\u7cfb\u7edf\u5e93\u5931\u8d25\uff0c\u901a\u5e38\u5bf9\u5e94\u7f51\u7edc/\u786c\u4ef6\u9519\u8bef\u3002</li> <li><code>ncclInternalError</code>\uff1a\u5f53 NCCL \u6838\u5fc3\u4ee3\u7801\u4ee5\u9519\u8bef\u65b9\u5f0f\u4f7f\u7528\u63d2\u4ef6\u65f6\u8fd4\u56de\uff0c\u4f8b\u5982\u91cd\u590d\u5206\u914d\u8bf7\u6c42\u3001\u5411\u63a5\u53e3\u4f20\u9012\u65e0\u6548\u53c2\u6570\u7b49\u3002</li> <li><code>ncclInvalidUsage</code>\uff1a\u7528\u6237\u9519\u8bef\u6216\u914d\u7f6e\u9519\u8bef\u65f6\u8fd4\u56de\uff0c\u5982\u7f13\u51b2\u533a\u5927\u5c0f\u4e0d\u5339\u914d\u3002</li> <li><code>ncclInvalidArgument</code>\uff1a\u901a\u5e38\u4e0d\u9700\u8981\u63d2\u4ef6\u8fd4\u56de\uff0c\u56e0\u4e3a NCCL \u6838\u5fc3\u5c42\u5df2\u7ecf\u68c0\u67e5\u53c2\u6570\u3002</li> <li><code>ncclUnhandledCudaError</code>\uff1a CUDA \u76f8\u5173\u9519\u8bef\uff08\u7f51\u7edc\u63d2\u4ef6\u4e00\u822c\u4e0d\u4f9d\u8d56 CUDA\uff0c\u56e0\u6b64\u8f83\u5c11\u51fa\u73b0\uff09\u3002</li> </ul>"},{"location":"nccl/ext-net/#_7","title":"\u64cd\u4f5c\u6d41\u7a0b\u6982\u89c8","text":"<p>NCCL \u9996\u5148\u8c03\u7528 <code>init</code>\uff0c\u968f\u540e\u901a\u8fc7 <code>devices</code> \u83b7\u53d6\u7f51\u7edc\u8bbe\u5907\u6570\u91cf\uff0c\u518d\u4f7f\u7528 <code>getProperties</code> \u83b7\u53d6\u5c5e\u6027\u3002</p> <p>\u82e5 NCCL \u9700\u8981\u521d\u59cb\u5316\u865a\u62df\u8bbe\u5907\uff08\u4f8b\u5982\u7528\u4e8e NIC \u878d\u5408\uff09\uff0c\u4f1a\u8c03\u7528 <code>makeVDevice</code>\uff0c\u4f20\u5165\u8981\u5408\u5e76\u7684\u7269\u7406\u8bbe\u5907\u5217\u8868\u3002\u82e5\u63d2\u4ef6\u4e0d\u652f\u6301 NIC \u878d\u5408\uff0c\u53ef\u5c06 <code>makeVDevice</code> \u7f6e\u7a7a\u3002</p> <p>\u5efa\u7acb\u8fde\u63a5\u65f6\uff0c\u63a5\u6536\u7aef\u5148\u8c03\u7528 <code>listen</code> \u83b7\u53d6\u8fde\u63a5\u53e5\u67c4\uff0c\u53d1\u9001\u7aef\u83b7\u5f97\u53e5\u67c4\u540e\u8c03\u7528 <code>connect</code>\uff0c\u6700\u540e\u63a5\u6536\u7aef\u901a\u8fc7 <code>accept</code> \u5b8c\u6210\u8fde\u63a5\u3002</p> <p><code>connect</code> \u4e0e <code>accept</code> \u53ef\u4ee5\u63a5\u6536\u53ef\u9009\u7684 <code>netDevComm</code> \u6307\u9488\uff0c\u7528\u4e8e\u542f\u7528\u8bbe\u5907\u4fa7\u7f51\u7edc\u3002\u5982\u679c\u63d2\u4ef6\u4e0d\u652f\u6301\u53ef\u5ffd\u7565\u3002</p> <p>\u8fde\u63a5\u5efa\u7acb\u540e\uff0c\u901a\u4fe1\u901a\u8fc7 <code>isend</code>\u3001<code>irecv</code>\u3001<code>test</code> \u8fdb\u884c\uff1b\u5728\u6b64\u4e4b\u524d\uff0cNCCL \u4f1a\u8c03\u7528 <code>regMr</code> \u6ce8\u518c\u7f13\u51b2\u533a\uff08RDMA NIC \u9700\u8981\u9884\u5904\u7406\uff09\uff0c\u5e76\u5728\u5fc5\u8981\u65f6\u8c03\u7528 <code>deregMr</code> \u6ce8\u9500\u3002</p> <p>\u7279\u5b9a\u60c5\u51b5\u4e0b\uff0c\u63a5\u6536\u5b8c\u6210\u540e\u4f1a\u8c03\u7528 <code>iflush</code>\uff0c\u786e\u4fdd GPU \u80fd\u770b\u5230\u65b0\u5199\u5165\u7684\u6570\u636e\u3002</p> <p>\u5173\u95ed\u8fde\u63a5\u65f6\uff0cNCCL \u5206\u522b\u8c03\u7528 <code>closeListen</code>\u3001<code>closeSend</code>\u3001<code>closeRecv</code>\u3002</p>"},{"location":"nccl/ext-net/#api","title":"API \u8be6\u89e3","text":""},{"location":"nccl/ext-net/#initialization","title":"Initialization","text":"<ul> <li> <p><code>name</code>\uff1a\u63d2\u4ef6\u540d\u79f0\u5b57\u7b26\u4e32\uff0c\u7528\u4e8e\u65e5\u5fd7\u3002\u8bbe\u7f6e <code>NCCL_NET=&lt;\u63d2\u4ef6\u540d&gt;</code> \u65f6\u4f1a\u5f3a\u5236\u4f7f\u7528\u5339\u914d\u540d\u79f0\u7684\u63d2\u4ef6\uff1b\u4e0d\u8981\u4e0e <code>NCCL_NET_PLUGIN</code> \u6df7\u6dc6\uff0c\u540e\u8005\u7528\u4e8e\u6307\u5b9a\u5e93\u540d\u540e\u7f00\u3002</p> </li> <li> <p><code>init</code>\uff1aNCCL \u627e\u5230\u63d2\u4ef6\u540e\u9996\u5148\u8c03\u7528\u3002\u63d2\u4ef6\u5e94\u8be5\u5728\u6b64\u9636\u6bb5\u53d1\u73b0\u7f51\u7edc\u8bbe\u5907\u5e76\u786e\u4fdd\u53ef\u7528\u3002\u82e5\u8fd4\u56de\u975e <code>ncclSuccess</code>\uff0cNCCL \u5c06\u9000\u56de\u5185\u90e8\u5b9e\u73b0\u3002</p> </li> </ul> <p>\u6bcf\u6b21\u8c03\u7528 <code>init</code> \u90fd\u8fd4\u56de\u4e00\u4e2a\u4e0a\u4e0b\u6587\u6307\u9488\uff0c\u63d2\u4ef6\u4f7f\u7528\u5b83\u6765\u5206\u914d\u8d44\u6e90\u548c\u7ef4\u62a4\u72b6\u6001\u3002\u8be5\u4e0a\u4e0b\u6587\u4f1a\u5728\u540e\u7eed\u5982 <code>listen</code>\u3001<code>connect</code> \u7b49\u8c03\u7528\u4e2d\u4f20\u56de\u3002\u6bcf\u4e2a\u4e0a\u4e0b\u6587\u4e0e\u4e00\u4e2a\u901a\u4fe1\u5668\uff08<code>commId</code>\uff09\u552f\u4e00\u5bf9\u5e94\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 <code>config</code> \u4f20\u5165\u6bcf\u901a\u4fe1\u5668\u7684\u914d\u7f6e\u3002</p> <p>\u4e3a\u4e86\u8ba9\u63d2\u4ef6\u65e5\u5fd7\u4e0e NCCL \u65e5\u5fd7\u878d\u5408\uff0cNCCL \u4f1a\u63d0\u4f9b\u65e5\u5fd7\u56de\u8c03\u3002</p> <p>\uff08\u540e\u7eed\u5404\u51fd\u6570\u5982 <code>devices</code>\u3001<code>getProperties</code>\u3001<code>listen</code>\u3001<code>connect</code>\u3001<code>accept</code>\u3001<code>isend</code>\u3001<code>test</code>\u3001<code>regMr</code>\u3001<code>deregMr</code>\u3001<code>iflush</code> \u7b49\u7684\u8be6\u7ec6\u8bf4\u660e\uff0c\u4e0e\u82f1\u6587\u7248\u4e00\u81f4\u3002\u8bf7\u53c2\u9605\u539f\u6587\u8282\u201cAPI Functions\u201d\u83b7\u53d6\u5b8c\u6574\u7ec6\u8282\u3002\uff09</p> <p>\u63d0\u793a\uff1a\u8003\u8651\u5230\u7bc7\u5e45\uff0c\u672c\u7ffb\u8bd1\u4fdd\u7559\u4e86\u63a5\u53e3\u987a\u5e8f\u3001\u8c03\u7528\u65f6\u673a\u3001\u6240\u9700\u8fd4\u56de\u503c\u7b49\u5173\u952e\u4fe1\u606f\u3002\u5177\u4f53\u7ed3\u6784\u4f53\u5b57\u6bb5\uff08\u5982 <code>ncclNetProperties_v11_t</code>\u3001<code>ncclNetDeviceHandle_v11_t</code>\uff09\u4e0e\u65e7\u7248\u672c\u517c\u5bb9\u5c42\u7684\u533a\u522b\uff0c\u8bf7\u53c2\u8003\u6e90\u4ee3\u7801\u6216\u5934\u6587\u4ef6\u3002</p>"},{"location":"nccl/ext-net/#_8","title":"\u989d\u5916\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>\u63d2\u4ef6\u5728\u5b9e\u73b0\u4e2d\u5e94\u590d\u7528 NCCL \u63d0\u4f9b\u7684\u9519\u8bef\u7801\uff0c\u907f\u514d\u81ea\u5b9a\u4e49\u3002</li> <li>\u63a8\u8350\u4e3a\u65e7\u7248 API \u63d0\u4f9b\u517c\u5bb9\u5c42\uff0c\u4f7f\u540c\u4e00\u63d2\u4ef6\u652f\u6301\u591a\u4e2a NCCL \u7248\u672c\u3002</li> <li>\u82e5\u63d2\u4ef6\u652f\u6301 collNet\uff0c\u9700\u8981\u989d\u5916\u63d0\u4f9b collNet \u7ed3\u6784\u4f53\u3002</li> <li>\u5bf9\u4e8e <code>ncclNet_v11</code> \u4e2d\u63cf\u8ff0\u7684 DMA-BUF\u3001GPU \u76f4\u8fde\uff08device offload\uff09\u7b49\u7279\u6027\uff0c\u53ef\u6309\u9700\u5b9e\u73b0\uff1b\u672a\u5b9e\u73b0\u65f6\u53ef\u8fd4\u56de <code>ncclInternalError</code> \u6216 <code>ncclSystemError</code>\u3002</li> </ul>"},{"location":"nccl/ext-net/#_9","title":"\u8c03\u8bd5\u4e0e\u65e5\u5fd7","text":"<p>NCCL \u4f1a\u63d0\u4f9b\u8c03\u8bd5\u65e5\u5fd7\u548c\u6027\u80fd\u91c7\u6837\u56de\u8c03\u3002\u63d2\u4ef6\u5e94\u8c03\u7528 NCCL \u4f20\u5165\u7684 <code>logFunction</code> \u8f93\u51fa\u65e5\u5fd7\uff0c\u4ee5\u4fbf\u5176\u96c6\u6210\u5230 NCCL \u7684\u65e5\u5fd7\u4f53\u7cfb\u4e2d\u3002\u5bf9\u4e8e\u6027\u80fd\u91c7\u96c6\uff0c\u63d2\u4ef6\u53ef\u6309\u9700\u8c03\u7528 <code>profFunction</code>\u3002</p>"},{"location":"nccl/ext-net/#_10","title":"\u793a\u4f8b\u4e0e\u5934\u6587\u4ef6\u7ec4\u7ec7","text":"<p><code>ext-net/example/</code> \u76ee\u5f55\u7ed9\u51fa\u4e86\u4e00\u4e2a\u6700\u5c0f\u793a\u4f8b\uff0c\u5c55\u793a\u5982\u4f55\uff1a</p> <ul> <li>\u7ec4\u7ec7\u5934\u6587\u4ef6\uff08<code>nccl/net_vX.h</code> \u4e0e <code>err.h</code>\uff09\uff1b</li> <li>\u63d0\u4f9b\u591a\u7248\u672c\u7ed3\u6784\u4f53\uff1b</li> <li>\u901a\u8fc7\u8584\u5c01\u88c5\u652f\u6301\u65e7 API\uff1b</li> <li>\u6309 NCCL \u8981\u6c42\u5bfc\u51fa <code>ncclNet_vX</code> \u4e0e\u53ef\u9009\u7684 <code>ncclCollNet_vX</code> \u7b26\u53f7\u3002</li> </ul> <p>\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u53ef\u4eff\u7167\u793a\u4f8b\u5c06\u63d2\u4ef6\u5b9e\u73b0\u62c6\u5206\u4e3a\uff1a</p> <ol> <li>\u7f51\u7edc\u9002\u914d\u5c42\uff1a\u8d1f\u8d23\u4e0e\u5177\u4f53\u7f51\u7edc\u6808\u5bf9\u63a5\uff1b</li> <li>NCCL \u63a5\u53e3\u5c42\uff1a\u5c06\u9002\u914d\u5c42\u80fd\u529b\u5c01\u88c5\u4e3a NCCL \u6240\u9700\u7684\u51fd\u6570\uff1b</li> <li>\u7248\u672c\u517c\u5bb9\u5c42\uff1a\u6839\u636e\u4e0d\u540c\u7684\u7ed3\u6784\u4f53\u7248\u672c\u5bfc\u51fa\u5bf9\u5e94\u7684\u7b26\u53f7\u3002</li> </ol>"},{"location":"nccl/ext-net/#_11","title":"\u517c\u5bb9\u6027\u4e0e\u5347\u7ea7\u5efa\u8bae","text":"<ul> <li>\u5f53 NCCL \u5347\u7ea7\u81f3\u65b0\u7684 API \u7248\u672c\u65f6\uff0c\u63d2\u4ef6\u5e94\u540c\u6b65\u589e\u52a0\u65b0\u7684 <code>ncclNet_vX</code> \u7ed3\u6784\u4f53\u5b9a\u4e49\uff1b</li> <li>\u5bf9\u5df2\u6709\u7248\u672c\u4fdd\u6301\u517c\u5bb9\uff0c\u53ef\u5728\u5185\u90e8\u901a\u8fc7\u5b8f\u6216\u8584\u5c42\u8c03\u7528\u6700\u65b0\u5b9e\u73b0\uff1b</li> <li>collNet \u7ed3\u6784\u4f53\u7684\u7248\u672c\u4e0e <code>ncclNet</code> \u4e00\u81f4\uff0c\u82e5\u4e0d\u652f\u6301\u53ef\u4e0d\u5bfc\u51fa\uff1b</li> <li>\u63d2\u4ef6\u5e94\u5728\u6784\u5efa\u65f6\u94fe\u63a5\u5339\u914d\u7248\u672c\u7684 CUDA \u4e0e\u7f51\u7edc\u6808\u5e93\u3002</li> </ul>"},{"location":"nccl/ext-net/#_12","title":"\u603b\u7ed3","text":"<p>\u901a\u8fc7 NCCL Net \u63d2\u4ef6\u673a\u5236\uff0c\u53ef\u4ee5\uff1a</p> <ul> <li>\u5c06 NCCL \u4e0e\u5e95\u5c42\u7f51\u7edc\u6808\u89e3\u8026\uff1b</li> <li>\u4e3a\u4e0d\u540c\u7684\u7f51\u7edc\u786c\u4ef6\u5feb\u901f\u63a5\u5165 NCCL\uff1b</li> <li>\u652f\u6301\u7f51\u7edc\u5185\u52a0\u901f\uff08collNet\uff09\u4e0e\u8bbe\u5907\u7aef\u901a\u4fe1\uff08device offload\uff09\uff1b</li> <li>\u5728\u5347\u7ea7 CUDA\u3001\u9a71\u52a8\u6216\u7f51\u7edc\u6808\u65f6\u4fdd\u6301\u7075\u6d3b\u6027\u3002</li> </ul> <p>\u5b9e\u73b0\u63d2\u4ef6\u65f6\uff0c\u8bf7\u9075\u5faa\u672c\u6587\u6863\u53ca\u5934\u6587\u4ef6\u5b9a\u4e49\uff0c\u59a5\u5584\u5904\u7406\u7248\u672c\u517c\u5bb9\u3001\u9519\u8bef\u7801\u3001\u8d44\u6e90\u751f\u547d\u5468\u671f\u548c\u65e5\u5fd7\u56de\u8c03\u3002</p>"},{"location":"nccl/ext-profiler/","title":"NCCL Profiler \u63d2\u4ef6\u6587\u6863","text":"<p>\u672c\u6587\u4ecb\u7ecd NCCL Profiler \u63d2\u4ef6 API\uff0c\u4ee5\u53ca\u5982\u4f55\u4e3a NCCL \u5b9e\u73b0 Profiler \u63d2\u4ef6\u3002</p>"},{"location":"nccl/ext-profiler/#_1","title":"\u6982\u89c8","text":"<p>\u4e3a\u4fbf\u4e8e\u4e0e\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u96c6\u6210\uff0cNCCL \u81ea v2.23 \u8d77\u63d0\u4f9b\u4e86 Profiler \u63d2\u4ef6\u63a5\u53e3\u3002\u4efb\u4f55 NCCL \u7528\u6237\u90fd\u53ef\u4ee5\u7f16\u5199 Profiler \u63d2\u4ef6\uff0c\u4ece NCCL \u4e2d\u63d0\u53d6\u6027\u80fd\u6570\u636e\uff0c\u7528\u4e8e\u8c03\u8bd5\u4e0e\u5206\u6790\u3002</p> <p>\u548c\u5176\u4ed6\u63d2\u4ef6\uff08\u5982\u7f51\u7edc\u63d2\u4ef6\uff09\u7c7b\u4f3c\uff0cProfiler \u63d2\u4ef6\u4ee5\u5171\u4eab\u5e93 <code>libnccl-profiler.so</code> \u7684\u5f62\u5f0f\u63d0\u4f9b\u3002\u5e93\u4e2d\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u5e26\u7248\u672c\u53f7\u7684\u7ed3\u6784\u4f53\uff0c\u5b9e\u73b0 NCCL Profiler API\uff0c\u5e76\u4e3a\u5404\u4e2a\u51fd\u6570\u63d0\u4f9b\u6307\u9488\u3002</p>"},{"location":"nccl/ext-profiler/#_2","title":"\u63d2\u4ef6\u67b6\u6784","text":""},{"location":"nccl/ext-profiler/#_3","title":"\u63d2\u4ef6\u540d\u79f0\u4e0e\u591a\u63d2\u4ef6\u5e76\u5b58","text":"<p>NCCL \u521d\u59cb\u5316\u65f6\u4f1a\u5c1d\u8bd5\u52a0\u8f7d <code>libnccl-profiler.so</code> \u5e76\u89e3\u6790\u7b26\u53f7\u3002</p> <p><code>NCCL_PROFILER_PLUGIN</code> \u73af\u5883\u53d8\u91cf\u5141\u8bb8\u591a\u4e2a\u63d2\u4ef6\u5171\u5b58\u3002\u8bbe\u7f6e\u540e\uff0cNCCL \u4f1a\u5bfb\u627e\u540d\u4e3a <code>libnccl-profiler-${NCCL_PROFILER_PLUGIN}.so</code> \u7684\u5e93\u3002\u56e0\u6b64\u63a8\u8350\u6309\u8be5\u6a21\u5f0f\u547d\u540d\u5e93\uff0c\u540c\u65f6\u521b\u5efa\u4ece <code>libnccl-profiler.so</code> \u5230\u5bf9\u5e94\u5e93\u7684\u7b26\u53f7\u94fe\u63a5\u3002\u82e5\u8def\u5f84\u4e2d\u5b58\u5728\u591a\u4e2a\u63d2\u4ef6\uff0c\u53ea\u9700\u8bbe\u7f6e <code>NCCL_PROFILER_PLUGIN</code> \u5373\u53ef\u9009\u62e9\u9700\u8981\u7684\u63d2\u4ef6\uff1b\u4e5f\u53ef\u76f4\u63a5\u5c06 <code>NCCL_PROFILER_PLUGIN</code> \u8bbe\u7f6e\u4e3a\u5e93\u7684\u7edd\u5bf9\u8def\u5f84\u3002</p>"},{"location":"nccl/ext-profiler/#_4","title":"\u7ed3\u6784\u4f53\u7248\u672c\u7ba1\u7406","text":"<p>\u627e\u5230\u5e93\u540e\uff0cNCCL \u4f1a\u67e5\u627e <code>ncclProfiler_vX</code> \u7b26\u53f7\uff0c<code>X</code> \u968f\u7248\u672c\u9012\u589e\u3002\u7248\u672c\u53f7\u786e\u4fdd\u63d2\u4ef6\u4e0e NCCL \u6838\u5fc3\u517c\u5bb9\u3002</p> <p>\u5efa\u8bae\u63d2\u4ef6\u540c\u65f6\u5bfc\u51fa\u591a\u4e2a\u7248\u672c\u7684\u7ed3\u6784\u4f53\u7b26\u53f7\uff0c\u4f7f\u5176\u517c\u5bb9\u4e0d\u540c\u7248\u672c\u7684 NCCL\u3002</p> <p>\u540c\u6837\u5730\uff0c\u4e3a\u65b9\u4fbf\u8fc7\u6e21\uff0cNCCL \u4f1a\u6309\u7248\u672c\u4ece\u9ad8\u5230\u4f4e\u67e5\u627e\u7ed3\u6784\u4f53\uff0c\u786e\u4fdd\u65e7\u63d2\u4ef6\u4f9d\u7136\u53ef\u7528\u3002</p>"},{"location":"nccl/ext-profiler/#_5","title":"\u5934\u6587\u4ef6\u7ec4\u7ec7","text":"<p>\u4e3a\u7b80\u5316\u6784\u5efa\u6d41\u7a0b\uff0c\u63d2\u4ef6\u5e94\u5c06\u6240\u652f\u6301\u7684 <code>ncclProfiler_vX</code> \u5b9a\u4e49\u62f7\u8d1d\u5230\u81ea\u8eab\u5934\u6587\u4ef6\u4e2d\u3002<code>ext-profiler/example</code> \u7ed9\u51fa\u4e86\u793a\u4f8b\uff1a\u6240\u6709\u5934\u6587\u4ef6\u653e\u5728 <code>nccl/</code> \u76ee\u5f55\uff0c\u5e76\u901a\u8fc7\u8584\u5c01\u88c5\u517c\u5bb9\u65e7\u7248\u672c\u3002</p> <p><code>nccl/</code> \u76ee\u5f55\u5305\u542b <code>profiler_vX.h</code>\uff08\u4ece\u65e7\u7248 API \u4e2d\u63d0\u53d6\u7684\u5b9a\u4e49\uff09\u4ee5\u53ca\u9519\u8bef\u7801 <code>err.h</code>\u3002</p>"},{"location":"nccl/ext-profiler/#apiv5","title":"API\uff08v5\uff09","text":"<p>\u4ee5\u4e0b\u4e3a <code>ncclProfiler_v5</code> \u7ed3\u6784\u4f53\uff0c\u540e\u6587\u5c06\u9010\u4e00\u8bf4\u660e\u5404\u51fd\u6570\u3002</p> <pre><code>typedef struct {\n  const char* name;\n  ncclResult_t (*init)(void** context, uint64_t commId, int* eActivationMask, const char* commName, int nNodes, int nranks, int rank, ncclDebugLogger_t logfn);\n  ncclResult_t (*startEvent)(void* context, void** eHandle, ncclProfilerEventDescr_v5_t* eDescr);\n  ncclResult_t (*stopEvent)(void* eHandle);\n  ncclResult_t (*recordEventState)(void* eHandle, ncclProfilerEventState_v5_t eState, ncclProfilerEventStateArgs_v5_t* eStateArgs);\n  ncclResult_t (*finalize)(void* context);\n} ncclProfiler_v5_t;\n</code></pre>"},{"location":"nccl/ext-profiler/#_6","title":"\u9519\u8bef\u7801","text":"<p>\u539f\u5219\u4e0a\uff0cProfiler \u4e0d\u5e94\u5c06\u81ea\u5df1\u7684\u9519\u8bef\u4e0a\u62a5\u7ed9 NCCL \u66f4\u6539\u6d41\u7a0b\u3002\u867d\u7136\u63a5\u53e3\u8fd4\u56de NCCL \u9519\u8bef\u7801\uff0c\u4f46\u9664 <code>init</code> \u5916\u5e94\u59cb\u7ec8\u8fd4\u56de <code>ncclSuccess</code>\u3002\u82e5 <code>init</code> \u8fd4\u56de\u9519\u8bef\uff0cNCCL \u5c06\u7981\u7528\u8be5\u63d2\u4ef6\u3002</p>"},{"location":"nccl/ext-profiler/#_7","title":"\u6267\u884c\u6d41\u7a0b\u6982\u89c8","text":"<p>\u6bcf\u4e2a\u65b0\u901a\u4fe1\u5668\u521d\u59cb\u5316\u65f6\uff0cNCCL \u4f1a\u8c03\u7528 <code>init</code>\uff0c\u63d2\u4ef6\u5e94\u8fd4\u56de\u4e00\u4e2a\u4e0a\u4e0b\u6587\u53e5\u67c4\uff0c\u7528\u4e8e\u9694\u79bb\u4e0d\u540c\u901a\u4fe1\u5668\u7684 Profiler \u5b9e\u4f8b\uff1b\u901a\u4fe1\u5668\u9500\u6bc1\u65f6\u4f1a\u8c03\u7528 <code>finalize</code>\uff0c\u91ca\u653e\u8d44\u6e90\u3002</p> <p>NCCL \u6838\u5fc3\u5728\u5173\u952e\u8def\u5f84\u4e2d\u63d2\u5165\u4e86 <code>startEvent</code>\u3001<code>stopEvent</code> \u4e0e <code>recordEventState</code>\uff0c\u5206\u522b\u7528\u4e8e\u521b\u5efa\u4e8b\u4ef6\u3001\u505c\u6b62\u4e8b\u4ef6\u3001\u8bb0\u5f55\u72b6\u6001\u3002</p>"},{"location":"nccl/ext-profiler/#api","title":"API \u8bf4\u660e","text":""},{"location":"nccl/ext-profiler/#_8","title":"\u521d\u59cb\u5316","text":"<ul> <li>name\uff1a\u63d2\u4ef6\u540d\u79f0\u5b57\u7b26\u4e32\uff0c\u7528\u4e8e\u65e5\u5fd7\uff08\u7279\u522b\u662f\u5728 <code>NCCL_DEBUG=INFO</code> \u65f6\uff09\u3002</li> <li>init\uff1a\u53d1\u73b0\u63d2\u4ef6\u540e\uff0cNCCL \u4f1a\u8c03\u7528 <code>init</code> \u521d\u59cb\u5316\u5185\u90e8\u4e0a\u4e0b\u6587\u3002\u82e5\u8fd4\u56de\u503c\u4e0d\u662f <code>ncclSuccess</code>\uff0cNCCL \u5c06\u7981\u7528\u63d2\u4ef6\u3002</li> <li>finalize\uff1a\u91ca\u653e\u4e0a\u4e0b\u6587\uff0c\u56de\u6536\u8d44\u6e90\u3002</li> </ul>"},{"location":"nccl/ext-profiler/#profiling","title":"Profiling","text":"<ul> <li>startEvent\uff1a\u5f00\u59cb\u8bb0\u5f55\u4e00\u4e2a\u4e8b\u4ef6\u3002\u53c2\u6570\u5305\u542b\u4e0a\u4e0b\u6587\u3001\u4e8b\u4ef6\u63cf\u8ff0\u7b26 <code>ncclProfilerEventDescr_t</code>\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u4e8b\u4ef6\u53e5\u67c4\uff08\u4f9b\u540e\u7eed\u4f7f\u7528\uff09\u3002</li> </ul> <p>\u4e8b\u4ef6\u63cf\u8ff0\u7b26\u5305\u542b\u4e8b\u4ef6\u5143\u6570\u636e\uff0c\u4e0d\u540c\u4e8b\u4ef6\u7c7b\u578b\u62e5\u6709\u5404\u81ea\u7684\u5b57\u6bb5\u3002<code>ncclProfilerEventDescr_v5_t</code> \u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>typedef struct {\n  uint64_t type;\n  void* parentObj;\n  int rank;\n  union {\n    struct { bool graphCaptured; int groupDepth; } groupApi;\n    struct { const char* func; size_t count; const char* datatype; int root; void* stream; bool graphCaptured; } collApi;\n    struct { const char* func; size_t count; const char* datatype; void* stream; bool graphCaptured; } p2pApi;\n    struct { void* stream; } kernelLaunch;\n    struct { uint64_t seqNumber; const char* func; const void* sendBuff; void* recvBuff; size_t count; int root; const char* datatype; uint8_t nChannels; uint8_t nWarps; const char* algo; const char* proto; void* parentGroup; } coll;\n    struct { const char* func; void* buff; const char* datatype; size_t count; int peer; uint8_t nChannels; void* parentGroup; } p2p;\n    struct { pid_t pid; uint8_t channelId; int peer; int nSteps; int chunkSize; int isSend; } proxyOp;\n    struct { int step; } proxyStep;\n    struct { uint8_t channelId; uint64_t ptimer; } kernelCh;\n    struct { int64_t id; void* data; } netPlugin;\n  };\n} ncclProfilerEventDescr_v5_t;\n</code></pre> <p>NCCL \u5b9a\u4e49\u7684\u4e8b\u4ef6\u7c7b\u578b\u5305\u62ec\uff1a<code>ncclProfileGroupApi</code>\u3001<code>ncclProfileCollApi</code>\u3001<code>ncclProfileP2pApi</code>\u3001<code>ncclProfileKernelLaunch</code>\u3001<code>ncclProfileGroup</code>\u3001<code>ncclProfileColl</code>\u3001<code>ncclProfileP2p</code>\u3001<code>ncclProfileProxyOp</code>\u3001<code>ncclProfileProxyStep</code>\u3001<code>ncclProfileProxyCtrl</code>\u3001<code>ncclProfileKernelCh</code>\u3001<code>ncclProfileNetPlugin</code>\u3002</p> <ul> <li> <p>stopEvent\uff1a\u505c\u6b62\u4e8b\u4ef6\uff0c\u53c2\u6570\u4e3a <code>startEvent</code> \u8fd4\u56de\u7684\u53e5\u67c4\u3002\u505c\u6b62\u540e\u53e5\u67c4\u4e0d\u53ef\u518d\u7528\u4e8e\u5176\u4ed6\u63a5\u53e3\u3002</p> </li> <li> <p>recordEventState\uff1a\u66f4\u65b0\u4e8b\u4ef6\u72b6\u6001\u4e0e\u5c5e\u6027\u3002\u90e8\u5206\u4e8b\u4ef6\uff08\u5982 <code>ncclProfileP2pApi</code>\u3001<code>ncclProfileCollApi</code> \u7b49\uff09\u4ec5\u652f\u6301 start/stop\uff1b\u800c <code>ncclProfileGroupApi</code>\u3001<code>ncclProfileProxyOp</code>\u3001<code>ncclProfileProxyStep</code>\u3001<code>ncclProfileNetPlugin</code>\u3001<code>ncclProfileKernelCh</code>\u3001<code>ncclProfileProxyCtrl</code> \u53ef\u901a\u8fc7\u8be5\u51fd\u6570\u66f4\u65b0\u72b6\u6001\u3002</p> </li> </ul> <p>\u652f\u6301\u7684\u72b6\u6001\u679a\u4e3e\u5982\u4e0b\uff1a</p> <pre><code>typedef enum {\n  // ncclProfileProxyOp event states\n  ncclProfilerProxyOpSendPosted        = 0,  // v4 \u8d77\u5f03\u7528\n  ncclProfilerProxyOpSendRemFifoWait   = 1,  // v4 \u8d77\u5f03\u7528\n  ncclProfilerProxyOpSendTransmitted   = 2,  // v4 \u8d77\u5f03\u7528\n  ncclProfilerProxyOpSendDone          = 3,  // v4 \u8d77\u5f03\u7528\n  ncclProfilerProxyOpRecvPosted        = 4,  // v4 \u8d77\u5f03\u7528\n  ncclProfilerProxyOpRecvReceived      = 5,  // v4 \u8d77\u5f03\u7528\n  ncclProfilerProxyOpRecvTransmitted   = 6,  // v4 \u8d77\u5f03\u7528\n  ncclProfilerProxyOpRecvDone          = 7,  // v4 \u8d77\u5f03\u7528\n  ncclProfilerProxyOpInProgress_v4     = 19, // \u6807\u8bb0 proxy op \u8fdb\u5165 progress \u72b6\u6001\n\n  // ncclProfileProxyStep event states\n  ncclProfilerProxyStepSendGPUWait     = 8,\n  ncclProfilerProxyStepSendPeerWait_v4 = 20,\n  ncclProfilerProxyStepSendWait        = 9,\n  ncclProfilerProxyStepRecvWait        = 10,\n  ncclProfilerProxyStepRecvFlushWait   = 11,\n  ncclProfilerProxyStepRecvGPUWait     = 12,\n\n  // ncclProfileProxyCtrl event states\n  ncclProfilerProxyCtrlIdle            = 13,\n  ncclProfilerProxyCtrlActive          = 14,\n  ncclProfilerProxyCtrlSleep           = 15,\n  ncclProfilerProxyCtrlWakeup          = 16,\n  ncclProfilerProxyCtrlAppend          = 17,\n  ncclProfilerProxyCtrlAppendEnd       = 18,\n\n  // ncclProfileNetPlugin event states\n  ncclProfilerNetPluginUpdate          = 21,\n\n  // ncclProfileKernelCh event states\n  ncclProfilerKernelChStop             = 22,\n\n  // Group API states\n  ncclProfilerGroupStartApiStop        = 23,\n  ncclProfilerEndGroupApiStart         = 24\n} ncclProfilerEventState_v5_t;\n</code></pre> <p>\uff08\u4e3a\u7b80\u6d01\u8d77\u89c1\uff0c\u7701\u7565\u4e86\u540c\u7c7b\u72b6\u6001\u7684\u8be6\u7ec6\u6ce8\u91ca\uff1b\u5177\u4f53\u542b\u4e49\u4e0e\u82f1\u6587\u539f\u6587\u4e00\u81f4\u3002\uff09</p> <p>\u72b6\u6001\u66f4\u65b0\u53ef\u80fd\u4f34\u968f\u5c5e\u6027\u53d8\u5316\uff0c<code>ncclProfilerEventStateArgs_v5_t</code> \u7528\u4e8e\u643a\u5e26\u8fd9\u4e9b\u9644\u52a0\u4fe1\u606f\uff1a</p> <pre><code>typedef union {\n  struct { size_t transSize; } proxyStep;\n  struct { int appendedProxyOps; } proxyCtrl;\n  struct { void* data; } netPlugin;\n  struct { uint64_t pTimer; } kernelCh;\n} ncclProfilerEventStateArgs_v5_t;\n</code></pre> <p>\u793a\u4f8b\u63d2\u4ef6 <code>ext-profiler/example</code> \u5c55\u793a\u4e86\u5982\u4f55\u6355\u83b7\u5e76\u4f7f\u7528\u4e0a\u8ff0\u4e8b\u4ef6\u3002</p>"},{"location":"nccl/ext-profiler/#_9","title":"\u4e8b\u4ef6\u5c42\u7ea7","text":"<p>NCCL \u4e8b\u4ef6\u6784\u6210\u5982\u4e0b\u5c42\u7ea7\uff1a</p> <pre><code>Group API\n \u251c\u2500 Collective API\n \u2502   \u251c\u2500 Collective\n \u2502   \u2502   \u251c\u2500 ProxyOp\n \u2502   \u2502   \u2502   \u2514\u2500 ProxyStep\n \u2502   \u2502   \u2502       \u2514\u2500 NetPlugin\n \u2502   \u2502   \u2514\u2500 KernelCh\n \u2502   \u2514\u2500 (\u66f4\u591a\u5b50\u4e8b\u4ef6)\n \u251c\u2500 Point-to-point API\n \u2502   \u251c\u2500 Point-to-point\n \u2502   \u2502   \u251c\u2500 ProxyOp\n \u2502   \u2502   \u2502   \u2514\u2500 ProxyStep\n \u2502   \u2502   \u2502       \u2514\u2500 NetPlugin\n \u2502   \u2502   \u2514\u2500 KernelCh\n \u2514\u2500 Kernel Launch\n\nProxyCtrl\uff08\u72ec\u7acb\uff09\n</code></pre>"},{"location":"nccl/ext-profiler/#profiler","title":"Profiler \u63d2\u6869\u4e0e\u65e5\u5fd7","text":""},{"location":"nccl/ext-profiler/#_10","title":"\u96c6\u4f53\u4e0e\u70b9\u5bf9\u70b9","text":"<p>NCCL \u5728\u4e0d\u540c\u5c42\u9762\u6ce8\u5165\u56de\u8c03\uff0c\u4ee5\u6355\u83b7 group\u3001collective \u4e0e p2p \u64cd\u4f5c\uff0c\u4ee5\u53ca proxy\u3001kernel\u3001network \u7684\u6d3b\u52a8\u3002\u7531\u4e8e NCCL \u64cd\u4f5c\u662f\u5f02\u6b65\u7684\uff0c\u4ec5\u901a\u8fc7 API \u4e8b\u4ef6\u96be\u4ee5\u786e\u5b9a\u7ed3\u675f\u65f6\u95f4\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u96c6\u4f53\u64cd\u4f5c\uff0c<code>stopEvent</code> \u4ec5\u8868\u793a\u64cd\u4f5c\u5df2\u5165\u961f\uff1b\u82e5\u9700\u8981\u83b7\u77e5\u771f\u5b9e\u5b8c\u6210\u65f6\u523b\uff0c\u53ef\u7ed3\u5408 proxy \u6216 kernel \u4e8b\u4ef6\u5224\u65ad\uff0c\u4f8b\u5982\u4f7f\u7528\u6700\u540e\u4e00\u4e2a <code>ncclProfileProxyOp</code> \u7684 <code>stopEvent</code> \u6765\u6807\u8bb0\u5b8c\u6210\u3002\u5e38\u89c1\u505a\u6cd5\u662f\u5bf9\u4e8b\u4ef6\u8fdb\u884c\u5f15\u7528\u8ba1\u6570\uff0c\u5728 <code>startEvent</code>/<code>stopEvent</code> \u4e2d\u589e\u52a0/\u51cf\u5c11\u8ba1\u6570\u3002</p>"},{"location":"nccl/ext-profiler/#pxn","title":"PXN","text":"<p>\u4f7f\u7528 PXN \u65f6\uff0c\u67d0\u4e9b proxy \u64cd\u4f5c\u4f1a\u5728\u8fdc\u7aef\u7ebf\u7a0b\u6267\u884c\uff0c\u5bfc\u81f4\u4e8b\u4ef6\u5c42\u7ea7\u8de8\u8fdb\u7a0b\u3002\u7531\u4e8e\u4e8b\u4ef6\u63cf\u8ff0\u7b26\u5305\u542b\u7236\u4e8b\u4ef6\u6307\u9488\uff0c\u5fc5\u987b\u786e\u4fdd\u8fdc\u7aef\u7ebf\u7a0b\u4e0e\u539f\u7ebf\u7a0b\u4f4d\u4e8e\u540c\u4e00\u5730\u5740\u7a7a\u95f4\uff0c\u5426\u5219\u8bbf\u95ee\u7236\u4e8b\u4ef6\u5c06\u975e\u6cd5\u3002\u4e3a\u6b64\uff0c\u4e8b\u4ef6\u63cf\u8ff0\u7b26\u5305\u542b\u539f\u59cb PID\uff0c\u63d2\u4ef6\u9700\u8981\u786e\u8ba4 PID \u4e00\u81f4\u540e\u518d\u8bbf\u95ee\u7236\u4e8b\u4ef6\u3002</p>"},{"location":"nccl/ext-profiler/#_11","title":"\u5df2\u77e5\u9650\u5236","text":"<p>\u5728\u7eaf\u8282\u70b9\u5185\u901a\u4fe1\u6216\u65e0\u7f51\u7edc\u6d3b\u52a8\u65f6\uff0cProfiler \u53ea\u80fd\u770b\u5230\u5165\u961f\u4e8b\u4ef6\uff08\u5982 <code>ncclAllReduce</code>\uff09\uff0c\u65f6\u95f4\u6233\u4ec5\u4ee3\u8868\u5165\u961f\u65f6\u523b\u3002\u82e5\u60f3\u83b7\u5f97\u771f\u5b9e\u6267\u884c\u65f6\u95f4\uff0c\u9700\u8981\u542f\u7528 proxy \u4e0e kernel \u4e8b\u4ef6\u3002</p> <p>\u81ea v3 \u8d77\uff0cProfiler \u4e0d\u518d\u5f3a\u5236\u4f9d\u8d56\u7f51\u7edc\u4e8b\u4ef6\u8fdb\u884c\u8282\u70b9\u5185\u5206\u6790\uff1b\u5185\u6838\u4e8b\u4ef6\u901a\u8fc7\u8ba1\u6570\u5668\u66b4\u9732\u7ed9\u4e3b\u673a\u4e0e proxy\u3002\u82e5 proxy \u6b63\u5728\u5904\u7406\u7f51\u7edc\u8bf7\u6c42\u6216 CPU \u8d1f\u8f7d\u8f83\u9ad8\uff0c\u91c7\u6837\u53ef\u80fd\u5ef6\u8fdf\u3002</p> <p>\u4e3a\u7f13\u89e3\u8be5\u95ee\u9898\uff0c\u81ea v4 \u8d77 NCCL \u4e3a\u6bcf\u4e2a\u901a\u9053\u7ef4\u62a4 64 \u69fd\u7684\u73af\u5f62\u7f13\u51b2\u533a\uff0c\u5e76\u63d0\u4f9b\u7531\u5185\u6838\u8fd4\u56de\u7684\u8d77\u6b62\u65f6\u95f4\u6233\uff08ptimer\uff09\uff0cNCCL \u4f1a\u5c06\u5176\u4f20\u7ed9 Profiler \u63d2\u4ef6\uff0c\u63d2\u4ef6\u53ef\u8f6c\u6362\u4e3a CPU \u65f6\u95f4\u57df\u3002</p>"},{"location":"nccl/ext-profiler/example/","title":"NCCL \u793a\u4f8b Profiler \u63d2\u4ef6\u4f7f\u7528\u8bf4\u660e","text":"<p>\u672c\u6587\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 NCCL \u968f\u9644\u7684\u793a\u4f8b Profiler \u63d2\u4ef6\u3002</p>"},{"location":"nccl/ext-profiler/example/#_1","title":"\u6982\u89c8","text":"<p>\u793a\u4f8b\u63d2\u4ef6\u5b9e\u73b0\u4e86 NCCL v2.23 \u5f15\u5165\u7684 Profiler \u63d2\u4ef6 API\u3002\u8be5 API \u5b9a\u4e49\u4e86\u4e00\u7ec4\u4e8b\u4ef6\u4e0e\u6570\u636e\u7ed3\u6784\uff0cNCCL \u901a\u8fc7\u5b83\u5c06\u4e8b\u4ef6\u4fe1\u606f\u4f20\u9012\u7ed9\u63d2\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u63a7\u5236 NCCL \u8981\u91c7\u96c6\u7684\u4e8b\u4ef6\u3001\u4f55\u65f6\u5c06\u91c7\u96c6\u5230\u7684 trace \u5199\u5165\u6587\u4ef6\uff0c\u4ee5\u53ca\u5176\u4ed6\u5f71\u54cd profiler \u884c\u4e3a\u7684\u53c2\u6570\uff08\u4f8b\u5982\u4e8b\u4ef6\u7a97\u53e3\u5927\u5c0f\uff09\u3002</p>"},{"location":"nccl/ext-profiler/example/#_2","title":"\u6784\u5efa\u63d2\u4ef6","text":"<p>\u5728\u63d2\u4ef6\u76ee\u5f55\u6267\u884c <code>make</code> \u5373\u53ef\u751f\u6210\u793a\u4f8b\u63d2\u4ef6\u3002</p>"},{"location":"nccl/ext-profiler/example/#_3","title":"\u4f7f\u7528\u6b65\u9aa4","text":"<ol> <li> <p>\u5c06\u63d2\u4ef6\u6240\u5728\u76ee\u5f55\u52a0\u5165 <code>LD_LIBRARY_PATH</code>\uff0c\u6216\u6309\u7167 <code>ext-profiler/README.md</code> \u7684\u63cf\u8ff0\u8bbe\u7f6e <code>NCCL_PROFILER_PLUGIN</code>\u3002</p> </li> <li> <p>\u8bbe\u7f6e <code>NCCL_PROFILE_EVENT_MASK</code> \u6307\u5b9a\u9700\u8981\u91c7\u96c6\u7684\u4e8b\u4ef6\u3002\u9ed8\u8ba4\u4f1a\u8bb0\u5f55\u6240\u6709\u96c6\u4f53\u4e0e send/recv \u64cd\u4f5c\u3002\u53c2\u89c1 <code>ext-profiler/README.md</code> \u4e86\u89e3\u4e8b\u4ef6\u5b9a\u4e49\u3002</p> </li> </ol> <p>\u4f8b\u5982\uff1a</p> <ul> <li>\u5c06 <code>NCCL_PROFILE_EVENT_MASK</code> \u8bbe\u4e3a <code>256 (ncclProfileGroupApi) | 2 (ncclProfileColl) | 8 (ncclProfileProxyOp)</code>\uff0c\u53ef\u91c7\u96c6 group API\u3001collective\u3001proxy op \u4e09\u7c7b\u4e8b\u4ef6\u3002</li> <li>\u66f4\u7b80\u6d01\u5730\uff0c\u5c06\u5176\u8bbe\u4e3a <code>8 (ncclProfileProxyOp)</code> \u4ea6\u53ef\uff0c\u56e0\u4e3a NCCL \u4f1a\u81ea\u52a8\u6355\u83b7\u4e8b\u4ef6\u5c42\u7ea7\u4e2d\u6bd4\u6240\u9009\u4e8b\u4ef6\u66f4\u9ad8\u7684\u8282\u70b9\uff0c\u4fbf\u4e8e\u5173\u8054\u3002</li> <li> <p>\u5c06\u5176\u8bbe\u4e3a <code>4095</code> \u53ef\u542f\u7528 v5 \u63a5\u53e3\u652f\u6301\u7684\u5168\u90e8\u4e8b\u4ef6\u3002</p> </li> <li> <p>\u8bbe\u7f6e <code>NCCL_PROFILE_DUMP_FILE</code> \u6307\u5b9a trace \u8f93\u51fa\u6587\u4ef6\u3002\u63d2\u4ef6\u4f1a\u751f\u6210 <code>${NCCL_PROFILE_DUMP_FILE}-hostname-tid.txt</code>\uff0c\u5185\u5bb9\u9075\u5faa Chrome trace\uff08\u5f02\u6b65\u4e8b\u4ef6\uff09\u683c\u5f0f\u3002</p> </li> <li> <p>\u82e5\u5df2\u751f\u6210\u6587\u4ef6\uff0c\u53ef\u5728 Chromium \u6d4f\u89c8\u5668\u5730\u5740\u680f\u8f93\u5165 <code>chrome://tracing</code>\uff0c\u52a0\u8f7d\u8be5\u6587\u4ef6\u67e5\u770b trace\u3002</p> </li> </ul>"},{"location":"nccl/ext-profiler/example/#_4","title":"\u8c03\u6574\u5185\u5b58\u6c60\u5927\u5c0f","text":"<p>\u793a\u4f8b\u63d2\u4ef6\u4e3a\u4e0d\u540c\u7c7b\u578b\u7684\u4e8b\u4ef6\u7ef4\u62a4\u72ec\u7acb\u5185\u5b58\u6c60\u3002\u5185\u5b58\u6c60\u5927\u5c0f\uff08\u5373\u53ef\u540c\u65f6\u8ffd\u8e2a\u7684\u4e8b\u4ef6\u6570\uff09\u51b3\u5b9a\u4e86 Profiler \u53ef\u540c\u65f6\u7ba1\u7406\u7684\u4e8b\u4ef6\u6570\u91cf\u3002</p> <p>NCCL \u8c03\u7528 <code>startEvent</code> \u521b\u5efa\u4e8b\u4ef6\uff08\u5982 <code>ncclAllReduce</code>\uff09\u65f6\uff0cProfiler \u4f1a\u5728\u5bf9\u5e94\u7684\u6c60\u4e2d\u5bfb\u627e\u7a7a\u69fd\uff1b\u82e5\u672a\u627e\u5230\uff0c\u5219\u8fd4\u56de <code>NULL</code>\uff0c\u5e76\u5ffd\u7565\u540e\u7eed\u9488\u5bf9\u8be5\u4e8b\u4ef6\u53e5\u67c4\u7684\u8c03\u7528\u3002NCCL \u5b8c\u6210\u64cd\u4f5c\u540e\u4f1a\u8c03\u7528 <code>stopEvent</code> \u91ca\u653e\u69fd\u4f4d\u3002</p> <p>Profiler \u5171\u7ef4\u62a4 5 \u7c7b\u6c60\uff0c\u9ed8\u8ba4\u5927\u5c0f\u5982\u4e0b\uff1a</p> <ul> <li><code>NCCL_PROFILE_GROUP_API_POOL_SIZE</code>\uff1a256</li> <li><code>NCCL_PROFILE_COLL_API_POOL_SIZE</code>\uff1a256</li> <li><code>NCCL_PROFILE_P2P_API_POOL_SIZE</code>\uff1a256</li> <li><code>NCCL_PROFILE_KERNEL_LAUNCH_POOL_SIZE</code>\uff1a256</li> <li><code>NCCL_PROFILE_COLL_POOL_SIZE</code>\uff1a256</li> <li><code>NCCL_PROFILE_P2P_POOL_SIZE</code>\uff1a256</li> <li><code>NCCL_PROFILE_PROXY_CTRL_POOL_SIZE</code>\uff1a16</li> <li><code>NCCL_PROFILE_PROXY_DETACH_POOL_SIZE</code>\uff1a256</li> </ul> <p>\u5176\u4e2d <code>ProxyCtrl</code> \u6c60\u7528\u4e8e <code>ProxyCtrl</code> \u4e8b\u4ef6\uff0c<code>ProxyDetach</code> \u6c60\u7528\u4e8e PXN \u573a\u666f\u4e0b\u7531\u8fdc\u7aef\u4ee3\u7406\u7ebf\u7a0b\u751f\u6210\u7684 <code>ProxyOp</code> \u4e8b\u4ef6\u3002\u6709\u5173 PXN \u7684\u66f4\u591a\u80cc\u666f\uff0c\u8bf7\u53c2\u8003\u5b98\u65b9\u535a\u5ba2\uff1ahttps://developer.nvidia.com/blog/doubling-all2all-performance-with-nvidia-collective-communication-library-2-12/</p>"},{"location":"nccl/ext-profiler/example/#trace","title":"Trace \u8f93\u51fa\u793a\u4f8b","text":"<p>\u793a\u4f8b\u63d2\u4ef6\u4ee5 JSON \u5f62\u5f0f\u8f93\u51fa trace\u3002\u4e0b\u4f8b\u6765\u81ea\u5728 2 \u5f20 GPU \u4e0a\u6267\u884c <code>ncclAllReduce</code>\uff0c\u4f7f\u7528\u7f51\u7edc\u4e92\u8fde\uff1a</p> <pre><code>[\n{\"name\": \"Group API\", ...},\n{\"name\": \"KernelLaunch\", ...},\n...\n]\n</code></pre> <p><code>Group</code> \u4e8b\u4ef6\u5305\u542b\u4e0e\u5355\u6b21 <code>ncclAllReduce</code> \u8c03\u7528\u76f8\u5173\u7684\u6240\u6709\u5b50\u4e8b\u4ef6\uff08\u5373\u4f7f\u6ca1\u6709\u663e\u5f0f group \u8c03\u7528\uff0cNCCL \u4e5f\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u53ea\u542b\u5355\u4e2a\u96c6\u4f53\u7684 group\uff09\u3002<code>AllReduce</code> \u4e8b\u4ef6\u8bb0\u5f55\u8be5\u64cd\u4f5c\u5bf9\u5e94\u7684 proxy \u6d3b\u52a8\uff0c<code>args</code> \u5b57\u6bb5\u5305\u542b NCCL \u7279\u5b9a\u4fe1\u606f\uff0c\u4f8b\u5982\uff1a</p> <ul> <li><code>seqNum</code>\uff1a\u8be5\u96c6\u4f53\u5728\u901a\u4fe1\u5668\u5185\u7684\u5e8f\u53f7\uff08\u6bcf\u79cd\u96c6\u4f53\u5404\u81ea\u8ba1\u6570\uff09\uff1b</li> <li><code>commHash</code>\uff1a\u901a\u4fe1\u5668\u552f\u4e00\u6807\u8bc6\uff1b</li> <li><code>rank</code>\uff1a\u6267\u884c\u96c6\u4f53\u64cd\u4f5c\u7684 NCCL rank\uff1b</li> <li><code>datatype</code>\uff1aNCCL \u6570\u636e\u7c7b\u578b\uff1b</li> <li><code>algorithm</code>\uff1a\u6240\u7528\u7b97\u6cd5\uff1b</li> <li><code>protocol</code>\uff1a\u6240\u7528\u534f\u8bae\uff1b</li> <li><code>nChannels</code>\uff1a\u4f7f\u7528\u7684\u901a\u9053\u6570\u91cf\u3002</li> </ul> <p>\u82e5\u672a\u542f\u7528 proxy \u4e8b\u4ef6\uff08\u4f8b\u5982\u7eaf\u8282\u70b9\u5185\u901a\u4fe1\uff09\uff0c\u7ed3\u675f\u65f6\u95f4\u4ec5\u8868\u793a CPU \u5411 CUDA \u63d0\u4ea4\u7684\u65f6\u95f4\u3002\u8be6\u89c1 <code>ext-profiler/README.md</code> \u4e2d\u201cProfiling of collective and p2p operations\u201d\u3002</p>"},{"location":"nccl/ext-profiler/example/#proxy","title":"Proxy \u4e8b\u4ef6\u8bf4\u660e","text":"<p>\u542f\u7528 <code>ncclProfileProxyStep</code> \u540e\u53ef\u83b7\u5f97\u66f4\u7ec6\u7c92\u5ea6\u4fe1\u606f\uff0c\u5305\u62ec\uff1a</p> <ul> <li>Proxy SendGpuWait\uff1a\u6bcf\u4e2a\u7f51\u7edc\u6b65\u957f\u4e2d\uff0cCPU \u4ee3\u7406\u7b49\u5f85 GPU \u63d0\u4f9b\u6570\u636e\u7684\u65f6\u95f4\uff1b</li> <li>Proxy SendWait\uff1a\u7b49\u5f85 <code>isend</code> \u5b8c\u6210\u7684\u65f6\u95f4\uff1b</li> <li>Proxy RecvWait\uff1a\u7b49\u5f85 <code>irecv</code> \u5b8c\u6210\u7684\u65f6\u95f4\uff1b</li> <li>Proxy RecvFlushWait\uff1a\u7b49\u5f85\u6570\u636e\u5237\u5199\u56de GPU \u7684\u65f6\u95f4\uff1b</li> <li>Proxy RecvGpuWait\uff1a\u7b49\u5f85 GPU \u6d88\u8017\u63a5\u6536\u6570\u636e\u7684\u65f6\u95f4\u3002</li> </ul>"},{"location":"nccl/ext-profiler/inspector/","title":"NCCL Inspector \u63d2\u4ef6","text":"<p>NCCL Inspector \u662f NVIDIA Collective Communications Library\uff08NCCL\uff09\u7684\u4e00\u4e2a\u63d2\u4ef6\uff0c\u4e3a\u6bcf\u4e2a\u901a\u4fe1\u5668\u3001\u6bcf\u6b21\u96c6\u4f53\u64cd\u4f5c\u63d0\u4f9b\u8be6\u7ec6\u7684\u6027\u80fd\u4e0e\u5143\u6570\u636e\u65e5\u5fd7\u3002\u5b83\u901a\u8fc7\u4e3a\u6bcf\u6b21\u64cd\u4f5c\u751f\u6210\u7ed3\u6784\u5316\u7684 JSON \u8f93\u51fa\uff0c\u5e2e\u52a9\u7528\u6237\u5206\u6790\u548c\u8c03\u8bd5 NCCL \u96c6\u4f53\u64cd\u4f5c\u3002</p>"},{"location":"nccl/ext-profiler/inspector/#_1","title":"\u76f8\u5173\u6587\u6863","text":"<ul> <li>Performance Exporter\uff1a\u57fa\u4e8e Inspector \u65e5\u5fd7\u8fdb\u884c\u5206\u6790\u4e0e\u53ef\u89c6\u5316\u7684\u5de5\u5177\u3002</li> </ul>"},{"location":"nccl/ext-profiler/inspector/#_2","title":"\u76ee\u5f55\u4f4d\u7f6e","text":"<pre><code>ext-profiler/inspector/\n</code></pre>"},{"location":"nccl/ext-profiler/inspector/#_3","title":"\u6784\u5efa\u65b9\u5f0f","text":"<pre><code>make\n</code></pre> <p>\u6784\u5efa\u7cfb\u7edf\u4f1a\u81ea\u52a8\u68c0\u6d4b\u73af\u5883\u4e2d\u7684 CUDA \u4e0e NCCL\u3002\u5982\u9700\u6307\u5b9a\u8def\u5f84\uff0c\u53ef\u8bbe\u7f6e <code>CUDA_HOME</code>\u3001<code>NCCL_HOME</code> \u73af\u5883\u53d8\u91cf\uff0c\u6216\u5728 <code>make</code> \u65f6\u4f20\u53c2\u3002</p>"},{"location":"nccl/ext-profiler/inspector/#_4","title":"\u53ef\u9009\u53c2\u6570","text":"<ul> <li><code>DEBUG=1</code>\uff1a\u542f\u7528\u8c03\u8bd5\u6784\u5efa\uff0c\u5305\u542b\u989d\u5916\u4fe1\u606f\uff1b</li> <li><code>ASAN=1</code>\uff1a\u5f00\u542f Address Sanitizer\uff1b</li> <li><code>UBSAN=1</code>\uff1a\u5f00\u542f Undefined Behavior Sanitizer\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> <pre><code>make DEBUG=1\n</code></pre>"},{"location":"nccl/ext-profiler/inspector/#_5","title":"\u6784\u5efa\u4ea7\u7269","text":"<ul> <li><code>libnccl-profiler-inspector.so</code>\uff1aInspector \u63d2\u4ef6\u4e3b\u5e93\uff1b</li> <li><code>version.cc</code>\uff1a\u4ece git \u81ea\u52a8\u751f\u6210\u7684\u7248\u672c\u4fe1\u606f\u3002</li> </ul>"},{"location":"nccl/ext-profiler/inspector/#_6","title":"\u4f7f\u7528\u65b9\u6cd5","text":""},{"location":"nccl/ext-profiler/inspector/#nccl","title":"\u4e0e\u5e38\u89c4 NCCL \u7684\u5dee\u5f02","text":"<p>\u76f8\u6bd4\u666e\u901a\u8fd0\u884c\uff0c\u4ec5\u9700\u8bbe\u7f6e\u82e5\u5e72\u73af\u5883\u53d8\u91cf\u4ee5\u542f\u7528\u8be6\u7ec6\u65e5\u5fd7\uff1a</p> <pre><code># \u5e38\u89c4 NCCL\n./your_nccl_application\n\n# \u542f\u7528 Inspector\nexport NCCL_PROFILER_PLUGIN=/path/to/nccl/ext-profiler/inspector/libnccl-profiler-inspector.so\nexport NCCL_INSPECTOR_ENABLE=1\nexport NCCL_INSPECTOR_DUMP_THREAD_INTERVAL_MICROSECONDS=500\n./your_nccl_application\n</code></pre>"},{"location":"nccl/ext-profiler/inspector/#_7","title":"\u5fc5\u9700/\u53ef\u9009\u73af\u5883\u53d8\u91cf","text":"<ul> <li><code>NCCL_PROFILER_PLUGIN</code>\uff1a\u6307\u5b9a Inspector \u63d2\u4ef6\u8def\u5f84\uff1b</li> <li><code>NCCL_INSPECTOR_ENABLE=1</code>\uff1a\u542f\u7528\u63d2\u4ef6\uff1b</li> <li><code>NCCL_INSPECTOR_DUMP_THREAD_INTERVAL_MICROSECONDS</code>\uff1a\u5185\u90e8\u5199\u51fa\u7ebf\u7a0b\u7684\u95f4\u9694\uff08\u5fae\u79d2\uff09\uff1b</li> <li><code>NCCL_INSPECTOR_DUMP_DIR</code>\uff08\u53ef\u9009\uff09\uff1a\u8f93\u51fa\u76ee\u5f55\uff0c\u9ed8\u8ba4 <code>nccl-inspector-unknown-jobid</code> \u6216 <code>nccl-inspector-&lt;slurm_job_id&gt;</code>\uff1b</li> <li><code>NCCL_INSPECTOR_DUMP_VERBOSE</code>\uff08\u53ef\u9009\uff09\uff1a\u8bbe\u7f6e\u4e3a <code>1</code> \u53ef\u8f93\u51fa\u4e8b\u4ef6 trace \u8be6\u60c5\u3002</li> </ul>"},{"location":"nccl/ext-profiler/inspector/#_8","title":"\u793a\u4f8b","text":"<p>\u5355\u8282\u70b9\uff1a</p> <pre><code>export NCCL_PROFILER_PLUGIN=/path/to/nccl/ext-profiler/inspector/libnccl-profiler-inspector.so\nexport NCCL_INSPECTOR_ENABLE=1\nexport NCCL_INSPECTOR_DUMP_THREAD_INTERVAL_MICROSECONDS=500\n./build/test/perf/all_reduce_perf -b 8 -e 16G -f 2 -g 8\n</code></pre> <p>\u591a\u8282\u70b9\uff08SLURM\uff09\uff1a</p> <pre><code>export NCCL_PROFILER_PLUGIN=/path/to/nccl/ext-profiler/inspector/libnccl-profiler-inspector.so\nexport NCCL_INSPECTOR_ENABLE=1\nexport NCCL_INSPECTOR_DUMP_THREAD_INTERVAL_MICROSECONDS=500\nexport NCCL_INSPECTOR_DUMP_DIR=/path/to/logs/${SLURM_JOB_ID}/\nsrun your_nccl_application\n</code></pre>"},{"location":"nccl/ext-profiler/inspector/#_9","title":"\u793a\u4f8b\u811a\u672c","text":"<p>\u66f4\u591a\u793a\u4f8b\u89c1 <code>test/examples/</code>\uff1a</p> <ul> <li>\u5355\u8282\u70b9\u6027\u80fd\u6d4b\u8bd5\uff1b</li> <li>\u591a\u8282\u70b9 SLURM \u811a\u672c\uff1b</li> <li>\u5206\u5e03\u5f0f\u8bad\u7ec3\u96c6\u6210\u3002</li> </ul>"},{"location":"nccl/ext-profiler/inspector/#_10","title":"\u8f93\u51fa\u793a\u4f8b","text":"<p>\u6bcf\u4e2a\u8f93\u51fa\u6587\u4ef6\u5305\u542b\u5982\u4e0b JSON \u7ed3\u6784\uff1a</p> <pre><code>{\n  \"header\": { \"id\": \"...\", \"rank\": 2, \"n_ranks\": 8, \"nnodes\": 1 },\n  \"metadata\": { \"inspector_output_format_version\": \"v4.0\", ... },\n  \"coll_perf\": { \"coll\": \"AllReduce\", \"coll_sn\": 1407, ... }\n}\n</code></pre>"},{"location":"nccl/ext-profiler/inspector/#_11","title":"\u8be6\u7ec6\u8f93\u51fa","text":"<p>\u8bbe\u7f6e <code>NCCL_INSPECTOR_DUMP_VERBOSE=1</code> \u53ef\u9644\u5e26\u4e8b\u4ef6 trace\uff0c\u8bb0\u5f55\u5404\u56de\u8c03\u7684\u5e8f\u53f7\u4e0e\u65f6\u95f4\u6233\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a</p> <pre><code>{\n  \"coll_perf\": {\n    \"coll\": \"ReduceScatter\",\n    \"event_trace_sn\": { \"coll_start_sn\": 1, ... },\n    \"event_trace_ts\": { \"coll_start_ts\": 1752867229235059, ... }\n  }\n}\n</code></pre>"},{"location":"nccl/ext-profiler/inspector/exporter/example/","title":"NCCL Inspector \u6027\u80fd\u6458\u8981\u5bfc\u51fa\u5668","text":"<p>\u8be5\u5de5\u5177\u7528\u4e8e\u89e3\u6790 NCCL Inspector \u8f93\u51fa\u7684\u65e5\u5fd7\uff0c\u5e76\u751f\u6210\u5305\u542b\u53ef\u89c6\u5316\u56fe\u8868\u4e0e\u7edf\u8ba1\u6c47\u603b\u7684\u6027\u80fd\u5206\u6790\u62a5\u544a\u3002\u7528\u6237\u4e5f\u53ef\u57fa\u4e8e\u6b64\u601d\u8def\uff0c\u5b9e\u73b0\u5c06\u6570\u636e\u5bfc\u5165 Elastic\u3001Prometheus \u6216\u5176\u4ed6\u6307\u6807\u7cfb\u7edf\u7684\u5bfc\u51fa\u5668\u3002</p>"},{"location":"nccl/ext-profiler/inspector/exporter/example/#_1","title":"\u529f\u80fd\u7279\u6027","text":"<ul> <li>\u6027\u80fd\u5206\u6790\uff1a\u4e3a\u6bcf\u79cd\u96c6\u4f53\u64cd\u4f5c\u751f\u6210\u7edf\u8ba1\u6c47\u603b\uff1b</li> <li>\u901a\u4fe1\u7c7b\u578b\u5206\u7c7b\uff1a\u81ea\u52a8\u8bc6\u522b\u901a\u4fe1\u6a21\u5f0f\uff1b</li> <li>\u53ef\u89c6\u5316\uff1a\u751f\u6210\u6563\u70b9\u56fe\u3001\u67f1\u72b6\u56fe\u3001\u7bb1\u7ebf\u56fe\u7b49\uff1b</li> <li>\u6570\u636e\u5bfc\u51fa\uff1a\u5c06\u65e5\u5fd7\u8f6c\u6362\u4e3a Parquet \u683c\u5f0f\uff0c\u4fbf\u4e8e\u540e\u7eed\u5904\u7406\uff1b</li> <li>\u591a\u683c\u5f0f\u652f\u6301\uff1a\u517c\u5bb9 <code>.log</code>\u3001<code>.log.gz</code>\u3001<code>.jsonl</code>\u3001<code>.jsonl.gz</code>\uff1b</li> <li>\u5e76\u884c\u5904\u7406\uff1a\u5229\u7528\u591a\u6838\u63d0\u5347\u5904\u7406\u901f\u5ea6\u3002</li> </ul>"},{"location":"nccl/ext-profiler/inspector/exporter/example/#_2","title":"\u4f9d\u8d56\u8981\u6c42","text":"<ul> <li>Python 3.7+</li> <li>NCCL Inspector \u65e5\u5fd7\u6587\u4ef6</li> </ul>"},{"location":"nccl/ext-profiler/inspector/exporter/example/#_3","title":"\u5b89\u88c5","text":"<pre><code>git clone https://github.com/NVIDIA/nccl.git\ncd nccl/ext-profiler/inspector/exporter/example\npip install -r requirements.txt\n</code></pre>"},{"location":"nccl/ext-profiler/inspector/exporter/example/#_4","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<p>\u811a\u672c\u4f1a\u9012\u5f52\u5904\u7406\u6307\u5b9a\u76ee\u5f55\u4e2d\u7684\u6240\u6709\u65e5\u5fd7\u6587\u4ef6\u3002</p> <p>\u63d0\u793a\uff1a\u9700\u5148\u6309\u7167 Inspector \u6587\u6863\u542f\u7528\u63d2\u4ef6\uff0c\u8bbe\u7f6e <code>NCCL_INSPECTOR_DUMP_DIR</code> \u8f93\u51fa\u65e5\u5fd7\u3002\u8be6\u89c1 Inspector README\u3002</p>"},{"location":"nccl/ext-profiler/inspector/exporter/example/#_5","title":"\u57fa\u672c\u7528\u6cd5","text":"<pre><code>python perf_summary_exporter.py --input_dir /path/to/nccl/inspector/logs\n</code></pre>"},{"location":"nccl/ext-profiler/inspector/exporter/example/#_6","title":"\u53c2\u6570\u8bf4\u660e","text":"<ul> <li><code>--input_dir &lt;path&gt;</code>\uff08\u5fc5\u9009\uff09\uff1a\u5305\u542b\u65e5\u5fd7\u7684\u76ee\u5f55\uff0c\u5b50\u76ee\u5f55\u4f1a\u88ab\u9012\u5f52\u626b\u63cf\uff1b</li> <li><code>--output_dir &lt;name&gt;</code>\uff08\u53ef\u9009\uff09\uff1a\u81ea\u5b9a\u4e49\u8f93\u51fa\u76ee\u5f55\u540d\u79f0\uff0c\u9ed8\u8ba4 <code>&lt;\u8f93\u5165\u76ee\u5f55\u540d\u79f0&gt;-analysis</code>\u3002</li> </ul>"},{"location":"nccl/ext-profiler/inspector/exporter/example/#_7","title":"\u8f93\u51fa\u5185\u5bb9","text":"<p>\u5de5\u5177\u4f1a\u751f\u6210\uff1a</p> <ol> <li>Parquet \u6587\u4ef6\uff1a\u6bcf\u4e2a\u65e5\u5fd7\u5bf9\u5e94\u4e00\u4e2a\u5904\u7406\u540e\u7684 Parquet\uff08\u4fdd\u5b58\u5728 <code>parquet_files/</code>\uff09\uff1b</li> <li>summary \u76ee\u5f55\uff1a\u5305\u542b\u5206\u6790\u7ed3\u679c\uff1b</li> <li>\u53ef\u89c6\u5316\u56fe\u8868\uff1a\u6563\u70b9\u56fe\u3001\u67f1\u72b6\u56fe\u3001\u7bb1\u7ebf\u56fe\uff1b</li> <li>CSV \u6587\u4ef6\uff1a\u6309\u6d88\u606f\u5927\u5c0f\u3001\u96c6\u4f53\u7c7b\u578b\u8f93\u51fa\u8be6\u7ec6\u6c47\u603b\uff1b</li> <li>\u65e5\u5fd7\u6587\u4ef6\uff1a\u8bb0\u5f55\u5904\u7406\u8fc7\u7a0b\u3002</li> </ol> <p>\u76ee\u5f55\u7ed3\u6784\u793a\u4f8b\uff1a</p> <pre><code>&lt;output_dir&gt;/\n\u251c\u2500\u2500 output.log\n\u251c\u2500\u2500 parquet_files/\n\u2502   \u2514\u2500\u2500 *.parquet\n\u2514\u2500\u2500 summary/\n    \u251c\u2500\u2500 scatter_plot_*.png\n    \u251c\u2500\u2500 combined_scatter_plot_*.png\n    \u2514\u2500\u2500 msg_size_&lt;size&gt;/\n        \u251c\u2500\u2500 histograms/histogram_*.png\n        \u251c\u2500\u2500 boxplots/boxplot_*.png\n        \u2514\u2500\u2500 summary_*.csv\n</code></pre>"},{"location":"nccl/ext-profiler/inspector/exporter/example/#_8","title":"\u652f\u6301\u7684\u901a\u4fe1\u5668\u7c7b\u578b","text":"<ul> <li><code>single-rank</code></li> <li><code>nvlink-only</code></li> <li><code>hca-only</code></li> <li><code>mixed</code></li> </ul>"},{"location":"nccl/ext-profiler/inspector/exporter/example/#_9","title":"\u652f\u6301\u7684\u96c6\u4f53\u7c7b\u578b","text":"<ul> <li><code>AllReduce</code></li> <li><code>AllGather</code></li> <li><code>ReduceScatter</code></li> <li><code>Broadcast</code></li> </ul>"},{"location":"nccl/ext-profiler/inspector/exporter/example/#_10","title":"\u65e5\u5fd7\u683c\u5f0f","text":""},{"location":"nccl/ext-profiler/inspector/exporter/example/#_11","title":"\u652f\u6301\u7684\u6269\u5c55\u540d","text":"<ul> <li><code>.log</code>\uff1a\u7eaf\u6587\u672c JSON \u884c\uff1b</li> <li><code>.log.gz</code>\uff1a\u538b\u7f29 JSON \u884c\uff1b</li> <li><code>.jsonl</code>\uff1aJSON Lines\uff1b</li> <li><code>.jsonl.gz</code>\uff1a\u538b\u7f29 JSON Lines\u3002</li> </ul>"},{"location":"nccl/ext-profiler/inspector/exporter/example/#json","title":"\u671f\u671b\u7684 JSON \u7ed3\u6784","text":"<pre><code>{\n  \"header\": { \"id\": \"...\", \"rank\": 31, \"n_ranks\": 32, \"nnodes\": 4 },\n  \"metadata\": { \"inspector_output_format_version\": \"v4.0\", ... },\n  \"coll_perf\": { \"coll\": \"ReduceScatter\", \"coll_sn\": 129, ... }\n}\n</code></pre>"},{"location":"nccl/ext-profiler/inspector/exporter/example/#_12","title":"\u5e38\u89c1\u95ee\u9898","text":"<ol> <li>\u672a\u627e\u5230\u65e5\u5fd7\uff1a\u786e\u8ba4\u76ee\u5f55\u6b63\u786e\u4e14\u5305\u542b Inspector \u8f93\u51fa\uff1b</li> <li>\u4f9d\u8d56\u7f3a\u5931\uff1a\u786e\u4fdd\u6309\u7167 <code>requirements.txt</code> \u5b89\u88c5\u4f9d\u8d56\uff1b</li> <li>\u6df7\u5408\u683c\u5f0f\u9519\u8bef\uff1a\u540c\u4e00\u76ee\u5f55\u4e2d\u6df7\u5408 <code>.log</code>\u3001<code>.log.gz</code>\u3001<code>.jsonl</code>\u3001<code>.jsonl.gz</code> \u4f1a\u89e6\u53d1\u62a5\u9519\uff0c\u9700\u6e05\u7406\u5e76\u4fdd\u6301\u683c\u5f0f\u4e00\u81f4\u3002</li> </ol> <p>\u5904\u7406\u8fc7\u7a0b\u4e2d\u4f1a\u5728\u8f93\u51fa\u76ee\u5f55\u751f\u6210 <code>output.log</code>\uff0c\u53ef\u67e5\u770b\u8be6\u7ec6\u4fe1\u606f\u3002</p>"},{"location":"nccl/ext-profiler/inspector/exporter/example/#_13","title":"\u652f\u6301","text":"<p>\u5982\u9700\u5e2e\u52a9\uff0c\u8bf7\u8bbf\u95ee https://github.com/NVIDIA/nccl/issues\uff0c\u641c\u7d22\u76f8\u5173\u95ee\u9898\u6216\u63d0\u4ea4\u65b0 issue\uff0c\u5e76\u5728\u6807\u9898\u4e2d\u6ce8\u660e \u201cinspector plugin\u201d\u3002</p>"},{"location":"nccl/ext-tuner/","title":"NCCL Tuner \u63d2\u4ef6\u5f00\u53d1\u6307\u5357","text":"<p>\u672c\u76ee\u5f55\u63d0\u4f9b\u5f00\u53d1 NCCL Tuner \u63d2\u4ef6\u7684\u8d44\u6e90\u4e0e\u793a\u4f8b\u3002\u901a\u8fc7 Tuner \u63d2\u4ef6\uff0c\u60a8\u53ef\u4ee5\u81ea\u5b9a\u4e49 NCCL \u7684\u7b97\u6cd5\u4e0e\u534f\u8bae\u9009\u62e9\u7b56\u7565\uff0c\u4e3a\u7279\u5b9a\u5de5\u4f5c\u8d1f\u8f7d\u6216\u786c\u4ef6\u914d\u7f6e\u4f18\u5316\u6027\u80fd\u3002</p>"},{"location":"nccl/ext-tuner/#_1","title":"\u6982\u89c8","text":"<p>NCCL \u4f1a\u6839\u636e\u5185\u90e8\u6210\u672c\u8868\u81ea\u52a8\u9009\u62e9\u7b97\u6cd5/\u534f\u8bae\u3002Tuner \u63d2\u4ef6\u53ef\u4ee5\u4fee\u6539\u8fd9\u4e9b\u6210\u672c\u8868\uff0c\u4ece\u800c\uff1a</p> <ul> <li>\u4e3a\u7279\u5b9a\u96c6\u4f53\u64cd\u4f5c\u8986\u76d6\u9ed8\u8ba4\u7b97\u6cd5/\u534f\u8bae\u7ec4\u5408\uff1b</li> <li>\u6839\u636e\u6d88\u606f\u5927\u5c0f\u3001\u62d3\u6251\u7b49\u53c2\u6570\u81ea\u5b9a\u4e49\u8c03\u4f18\u903b\u8f91\uff1b</li> <li>\u5728\u65e0\u9700\u91cd\u65b0\u7f16\u8bd1 NCCL \u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u590d\u6742\u7b56\u7565\uff1b</li> <li>\u9488\u5bf9\u7279\u5b9a\u786c\u4ef6\u6216\u5de5\u4f5c\u8d1f\u8f7d\u8fdb\u884c\u6027\u80fd\u4f18\u5316\u3002</li> </ul>"},{"location":"nccl/ext-tuner/#_2","title":"\u63d2\u4ef6\u63a5\u53e3","text":"<p>Tuner \u63d2\u4ef6\u9700\u5b9e\u73b0 <code>nccl_tuner.h</code> \u4e2d\u7684 <code>ncclTuner_t</code> \u63a5\u53e3\uff08\u793a\u4f8b\u4e2d\u5df2 fork \u4e3a <code>tuner.h</code>\uff09\u3002\u4e3b\u8981\u51fd\u6570\u5982\u4e0b\uff1a</p> <pre><code>ncclResult_t (*init)(size_t nRanks, size_t nNodes, ncclDebugLogger_t logFunction, void **context);\nncclResult_t (*getCollInfo)(void* context, ncclFunc_t collType, size_t nBytes,\n                           int numPipeOps, float** collCostTable, int numAlgo, int numProto,\n                           int regBuff, int* nChannels);\nncclResult_t (*destroy)(void* context);\n</code></pre>"},{"location":"nccl/ext-tuner/#_3","title":"\u5f00\u53d1\u5efa\u8bae","text":""},{"location":"nccl/ext-tuner/#_4","title":"\u63d2\u4ef6\u7ed3\u6784","text":"<ul> <li>\u5f15\u5165 fork \u540e\u7684\u5934\u6587\u4ef6\uff08\u4f8b\u5982 <code>tuner.h</code>\uff09\uff1b</li> <li>\u5b9e\u73b0\u6240\u6709\u63a5\u53e3\u51fd\u6570\uff1b</li> <li>\u5bfc\u51fa\u5e26\u7248\u672c\u4fe1\u606f\u7684\u63d2\u4ef6\u7ed3\u6784\u4f53\uff1b</li> <li>\u59a5\u5584\u5904\u7406\u6240\u6709\u8f93\u5165\u53c2\u6570\u3002</li> </ul>"},{"location":"nccl/ext-tuner/#_5","title":"\u6210\u672c\u8868\u8c03\u6574","text":"<p>\u5728 <code>getCollInfo</code> \u4e2d\u5c06\u6536\u5230\u7b97\u6cd5/\u534f\u8bae\u7ec4\u5408\u7684\u6210\u672c\u8868\uff1a</p> <ul> <li>\u8bbe\u7f6e\u4e3a <code>0.0</code> \u53ef\u63d0\u9ad8\u4f18\u5148\u7ea7\uff1b</li> <li>\u8bbe\u7f6e\u4e3a <code>NCCL_ALGO_PROTO_IGNORE</code> \u53ef\u7981\u7528\u8be5\u7ec4\u5408\uff1b</li> <li>\u901a\u8fc7\u76f8\u5bf9\u6210\u672c\u6784\u5efa\u504f\u597d\u5173\u7cfb\u3002</li> </ul>"},{"location":"nccl/ext-tuner/#_6","title":"\u901a\u9053\u7ba1\u7406","text":"<p>\u901a\u8fc7 <code>nChannels</code> \u53ef\u4ee5\uff1a</p> <ul> <li>\u6307\u5b9a\u4f7f\u7528\u7684\u901a\u9053\u6570\uff1b</li> <li>\u8fd4\u56de\u539f\u503c\u4fdd\u6301 NCCL \u9ed8\u8ba4\u884c\u4e3a\uff1b</li> <li>\u6839\u636e\u6d88\u606f\u5927\u5c0f\u3001\u62d3\u6251\u7b49\u52a8\u6001\u8c03\u6574\u3002</li> </ul>"},{"location":"nccl/ext-tuner/#_7","title":"\u9519\u8bef\u5904\u7406","text":"<ul> <li>\u6210\u529f\u6216\u5ffd\u7565\u65f6\u8fd4\u56de <code>ncclSuccess</code>\uff1b</li> <li>\u63d2\u4ef6\u5185\u90e8\u9519\u8bef\u53ef\u8fd4\u56de <code>ncclInternalError</code>\uff08\u5efa\u8bae\u4ec5\u5728 <code>init</code>/<code>destroy</code> \u9636\u6bb5\u4f7f\u7528\uff0c\u907f\u514d\u8fd0\u884c\u65f6\u9ad8\u5f00\u9500\uff09\u3002</li> </ul>"},{"location":"nccl/ext-tuner/#_8","title":"\u5165\u95e8\u8def\u5f84","text":""},{"location":"nccl/ext-tuner/#_9","title":"\u65b9\u6848\u4e00\uff1a\u4ece\u793a\u4f8b\u63d2\u4ef6\u5f00\u59cb","text":"<pre><code>cd example/\nmake\n</code></pre> <p>\u793a\u4f8b\u4f7f\u7528 CSV \u914d\u7f6e\uff0c\u4fbf\u4e8e\u5b9a\u5236\u6216\u4f5c\u4e3a\u6a21\u677f\u3002</p>"},{"location":"nccl/ext-tuner/#_10","title":"\u65b9\u6848\u4e8c\uff1a\u4f7f\u7528\u57fa\u7840\u63d2\u4ef6","text":"<p>\u82e5\u9700\u4ece\u96f6\u5f00\u59cb\uff0c\u53ef\u4f7f\u7528 <code>basic/</code> \u76ee\u5f55\u4e2d\u7684\u6700\u7b80\u5b9e\u73b0\uff1a</p> <pre><code>cd basic/\nmake\n</code></pre> <p>\u751f\u6210\u7684 <code>.so</code> \u5e93\u53ef\u88ab NCCL \u52a8\u6001\u52a0\u8f7d\u3002</p>"},{"location":"nccl/ext-tuner/#_11","title":"\u6784\u5efa\u4e0e\u52a0\u8f7d","text":""},{"location":"nccl/ext-tuner/#_12","title":"\u524d\u7f6e\u4f9d\u8d56","text":"<ul> <li>GCC \u6216\u517c\u5bb9 C \u7f16\u8bd1\u5668\uff1b</li> <li>NCCL \u5934\u6587\u4ef6\uff08\u793a\u4f8b\u5df2\u5305\u542b\u5728 <code>nccl/</code> \u5b50\u76ee\u5f55\uff09\uff1b</li> <li>Make\u3002</li> </ul>"},{"location":"nccl/ext-tuner/#_13","title":"\u6784\u5efa\u6b65\u9aa4","text":"<pre><code>cd basic/    # \u6216 example/\nmake\n</code></pre>"},{"location":"nccl/ext-tuner/#_14","title":"\u52a0\u8f7d\u63d2\u4ef6","text":"<pre><code>export LD_LIBRARY_PATH=/path/to/your/plugin:$LD_LIBRARY_PATH\nexport NCCL_TUNER_PLUGIN=example\n# \u6216\u6307\u5b9a\u5e93\u6587\u4ef6 / \u7edd\u5bf9\u8def\u5f84\n</code></pre> <p>NCCL \u4f1a\u6839\u636e\u5bfc\u51fa\u7684\u7b26\u53f7\u81ea\u52a8\u53d1\u73b0\u63d2\u4ef6\u3002</p>"},{"location":"nccl/ext-tuner/#_15","title":"\u8fdb\u9636\u4e3b\u9898","text":""},{"location":"nccl/ext-tuner/#_16","title":"\u7248\u672c\u7ba1\u7406","text":"<p>\u786e\u4fdd\u5bfc\u51fa\u7684\u7ed3\u6784\u4f53\u4e0e NCCL \u652f\u6301\u7684\u7248\u672c\u5339\u914d\uff0c\u4f8b\u5982\uff1a</p> <pre><code>const ncclTuner_v4_t ncclTunerPlugin_v4 = {\n    .name = \"YourPluginName\",\n    .init = yourInitFunction,\n    .getCollInfo = yourGetCollInfoFunction,\n    .destroy = yourDestroyFunction\n};\n</code></pre>"},{"location":"nccl/ext-tuner/#gpu","title":"\u591a GPU / \u591a\u8282\u70b9","text":"<p><code>init</code> \u4f1a\u63d0\u4f9b <code>nRanks</code>\u3001<code>nNodes</code> \u7b49\u62d3\u6251\u4fe1\u606f\uff0c\u53ef\u7528\u4e8e\uff1a</p> <ul> <li>\u5b9e\u73b0\u62d3\u6251\u611f\u77e5\u7b56\u7565\uff1b</li> <li>\u533a\u5206\u5355\u8282\u70b9\u4e0e\u591a\u8282\u70b9\u8c03\u4f18\u903b\u8f91\uff1b</li> <li>\u6309\u786c\u4ef6\u89c4\u6a21\u8c03\u6574\u901a\u9053\u6570\u91cf\u3002</li> </ul>"},{"location":"nccl/ext-tuner/#_17","title":"\u6027\u80fd\u4f18\u5316\u5efa\u8bae","text":"<ul> <li>\u4fdd\u6301\u63d2\u4ef6\u903b\u8f91\u8f7b\u91cf\uff1b</li> <li>\u7f13\u5b58\u9ad8\u5f00\u9500\u8ba1\u7b97\uff1b</li> <li>\u8c03\u8bd5\u9636\u6bb5\u4f7f\u7528\u65e5\u5fd7\uff0c\u751f\u4ea7\u73af\u5883\u907f\u514d\u8fc7\u591a\u8f93\u51fa\u3002</li> </ul>"},{"location":"nccl/ext-tuner/#_18","title":"\u8c03\u8bd5\u4e0e\u65e5\u5fd7","text":"<pre><code>export NCCL_DEBUG=INFO\nexport NCCL_DEBUG_SUBSYS=TUNING\n</code></pre> <p>\u63d2\u4ef6\u5185\u90e8\u53ef\u4f7f\u7528 <code>ncclDebugLogger_t</code> \u8fdb\u884c\u7edf\u4e00\u65e5\u5fd7\u8f93\u51fa\u3002</p>"},{"location":"nccl/ext-tuner/#_19","title":"\u6700\u4f73\u5b9e\u8df5","text":"<ol> <li>\u5168\u9762\u6d4b\u8bd5\u4e0d\u540c\u6d88\u606f\u5927\u5c0f\u4e0e\u62d3\u6251\uff1b</li> <li>\u5904\u7406\u8fb9\u754c\u60c5\u51b5\uff0c\u786e\u4fdd\u53c2\u6570\u5f02\u5e38\u65f6\u884c\u4e3a\u53ef\u9884\u671f\uff1b</li> <li>\u6587\u6863\u5316\u8c03\u4f18\u7b56\u7565\u4e0e\u914d\u7f6e\u9879\uff1b</li> <li>\u7ba1\u7406\u63d2\u4ef6\u7248\u672c\u5e76\u4fdd\u6301\u517c\u5bb9\uff1b</li> <li>\u5728\u771f\u5b9e\u5de5\u4f5c\u8d1f\u8f7d\u4e0a\u9a8c\u8bc1\u6027\u80fd\u63d0\u5347\u3002</li> </ol>"},{"location":"nccl/ext-tuner/#_20","title":"\u8d21\u732e\u5efa\u8bae","text":"<ul> <li>\u9075\u5faa\u73b0\u6709\u4ee3\u7801\u98ce\u683c\uff1b</li> <li>\u8865\u5145\u6587\u6863\u3001\u914d\u7f6e\u4e0e\u6d4b\u8bd5\u7528\u4f8b\uff1b</li> <li>\u82e5\u7b56\u7565\u5177\u6709\u666e\u9002\u6027\uff0c\u53ef\u8003\u8651\u56de\u9988\u5f00\u6e90\u793e\u533a\u3002</li> </ul>"},{"location":"nccl/ext-tuner/#_21","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>NCCL \u5b98\u65b9\u6587\u6863</li> <li>\u672c\u76ee\u5f55\u4e2d\u7684\u793a\u4f8b\u5b9e\u73b0\u3002</li> </ul>"},{"location":"nccl/ext-tuner/basic/","title":"\u57fa\u7840 NCCL Tuner \u63d2\u4ef6","text":"<p>\u8be5\u76ee\u5f55\u5305\u542b\u4e00\u4e2a\u6700\u5c0f\u5316\u7684 NCCL Tuner \u63d2\u4ef6\u5b9e\u73b0\uff0c\u53ef\u4f5c\u4e3a\u81ea\u5b9a\u4e49\u63d2\u4ef6\u7684\u8d77\u70b9\uff0c\u63d0\u4f9b NCCL \u6240\u9700\u7684\u63a5\u53e3\u9aa8\u67b6\u4e0e\u51fd\u6570\u6869\u3002</p>"},{"location":"nccl/ext-tuner/basic/#_1","title":"\u76ee\u7684","text":"<p>\u57fa\u7840\u63d2\u4ef6\u7528\u4e8e\uff1a</p> <ul> <li>\u6f14\u793a Tuner \u63d2\u4ef6\u63a5\u53e3\u7684\u6700\u5c0f\u53ef\u8fd0\u884c\u6837\u4f8b\uff1b</li> <li>\u4f5c\u4e3a\u5b9a\u5236\u63d2\u4ef6\u7684\u6a21\u677f\uff1b</li> <li>\u5c55\u793a\u5fc5\u987b\u5b9e\u73b0\u7684\u51fd\u6570\u7b7e\u540d\u4e0e\u7ed3\u6784\uff1b</li> <li>\u63d0\u4f9b\u53ef\u6269\u5c55\u7684\u5360\u4f4d\u903b\u8f91\u3002</li> </ul>"},{"location":"nccl/ext-tuner/basic/#_2","title":"\u5b9e\u73b0\u6982\u89c8","text":"<p>\u63d2\u4ef6\u5b9e\u73b0\u4e86\u4ee5\u4e0b\u51fd\u6570\uff1a</p>"},{"location":"nccl/ext-tuner/basic/#plugininit","title":"<code>pluginInit</code>","text":"<pre><code>ncclResult_t pluginInit(size_t nRanks, size_t nNodes, ncclDebugLogger_t logFunction, void **context)\n</code></pre> <ul> <li>\u4f5c\u7528\uff1a\u6839\u636e\u901a\u4fe1\u5668\u4fe1\u606f\u521d\u59cb\u5316\u63d2\u4ef6\uff1b</li> <li>\u5f53\u524d\u5b9e\u73b0\uff1a\u5360\u4f4d\uff0c\u76f4\u63a5\u8fd4\u56de\u6210\u529f\uff1b</li> <li>\u53c2\u6570\u8bf4\u660e\uff1a<code>nRanks</code> \u901a\u4fe1\u5668\u603b rank \u6570\uff1b<code>nNodes</code> \u8282\u70b9\u6570\uff1b<code>logFunction</code> NCCL \u65e5\u5fd7\u56de\u8c03\uff1b<code>context</code> \u8f93\u51fa\u4e0a\u4e0b\u6587\u6307\u9488\u3002</li> </ul>"},{"location":"nccl/ext-tuner/basic/#plugingetcollinfo","title":"<code>pluginGetCollInfo</code>","text":"<pre><code>ncclResult_t pluginGetCollInfo(void* context, ncclFunc_t collType, size_t nBytes,\n                              int numPipeOps, float** collCostTable, int numAlgo, int numProto,\n                              int regBuff, int* nChannels)\n</code></pre> <ul> <li>\u4f5c\u7528\uff1a\u4fee\u6539\u96c6\u4f53\u64cd\u4f5c\u7684\u6210\u672c\u8868\uff1b</li> <li>\u5f53\u524d\u5b9e\u73b0\uff1a\u5c06 RING+SIMPLE \u8bbe\u7f6e\u4e3a 0.0\uff08\u6700\u9ad8\u4f18\u5148\u7ea7\uff09\uff0c\u901a\u9053\u6570\u8bbe\u4e3a 1\uff1b</li> <li>\u53c2\u6570\uff1a\u5305\u542b\u6d88\u606f\u5927\u5c0f\u3001\u7b97\u6cd5/\u534f\u8bae\u6570\u91cf\u3001\u6210\u672c\u8868\u6307\u9488\u7b49\u3002</li> </ul>"},{"location":"nccl/ext-tuner/basic/#plugindestroy","title":"<code>pluginDestroy</code>","text":"<pre><code>ncclResult_t pluginDestroy(void* context)\n</code></pre> <ul> <li>\u4f5c\u7528\uff1a\u91ca\u653e\u63d2\u4ef6\u8d44\u6e90\uff1b</li> <li>\u5f53\u524d\u5b9e\u73b0\uff1a\u5360\u4f4d\uff0c\u8fd4\u56de\u6210\u529f\u3002</li> </ul>"},{"location":"nccl/ext-tuner/basic/#_3","title":"\u6210\u672c\u8868\u7ed3\u6784","text":"<pre><code>float (*table)[NCCL_NUM_PROTOCOLS] = (float (*)[NCCL_NUM_PROTOCOLS])collCostTable;\n</code></pre> <ul> <li>\u7b2c\u4e00\u7ef4\uff1a\u7b97\u6cd5\u7d22\u5f15\uff08\u5982 <code>NCCL_ALGO_RING</code>\uff09\uff1b</li> <li>\u7b2c\u4e8c\u7ef4\uff1a\u534f\u8bae\u7d22\u5f15\uff08\u5982 <code>NCCL_PROTO_SIMPLE</code>\uff09\uff1b</li> <li>\u503c\uff1a\u5bf9\u5e94\u7ec4\u5408\u7684\u6210\u672c\u3002</li> </ul> <p>\u6210\u672c\u542b\u4e49\uff1a</p> <ul> <li><code>0.0</code>\uff1a\u6700\u9ad8\u4f18\u5148\u7ea7\uff1b</li> <li>\u6b63\u6570\uff1a\u76f8\u5bf9\u6210\u672c\uff08\u8d8a\u5c0f\u8d8a\u597d\uff09\uff1b</li> <li><code>NCCL_ALGO_PROTO_IGNORE</code>\uff1a\u7981\u7528\u8be5\u7ec4\u5408\u3002</li> </ul>"},{"location":"nccl/ext-tuner/basic/#_4","title":"\u6784\u5efa","text":"<pre><code>make\n</code></pre> <p>\u751f\u6210 <code>libnccl-tuner-basic.so</code>\u3002</p>"},{"location":"nccl/ext-tuner/basic/#_5","title":"\u4f7f\u7528","text":""},{"location":"nccl/ext-tuner/basic/#_6","title":"\u52a0\u8f7d\u63d2\u4ef6","text":"<pre><code>export LD_LIBRARY_PATH=/path/to/basic:$LD_LIBRARY_PATH\nmpirun -np 4 your_nccl_application\n\nexport NCCL_TUNER_PLUGIN=basic\n# \u6216\nexport NCCL_TUNER_PLUGIN=libnccl-tuner-basic.so\n# \u6216\nexport NCCL_TUNER_PLUGIN=/path/to/libnccl-tuner-basic.so\n</code></pre> <p>\u542f\u7528 <code>NCCL_DEBUG=INFO</code> \u53ef\u786e\u8ba4\u63d2\u4ef6\u662f\u5426\u52a0\u8f7d\u3002</p>"},{"location":"nccl/ext-tuner/basic/#_7","title":"\u6269\u5c55\u601d\u8def","text":"<ol> <li>\u52a0\u5165\u81ea\u5b9a\u4e49\u903b\u8f91</li> </ol> <pre><code>if (nBytes &lt; 1024) {\n  table[NCCL_ALGO_TREE][NCCL_PROTO_SIMPLE] = 0.0;\n} else {\n  table[NCCL_ALGO_RING][NCCL_PROTO_LL128] = 0.0;\n}\n*nChannels = (nBytes &gt; 1024*1024) ? 4 : 1;\n</code></pre> <ol> <li>\u7ba1\u7406\u4e0a\u4e0b\u6587</li> </ol> <pre><code>struct pluginContext {\n  int initialized;\n  size_t nRanks;\n  size_t nNodes;\n  // \u81ea\u5b9a\u4e49\u5b57\u6bb5\n};\n</code></pre> <ol> <li> <p>\u8bfb\u53d6\u914d\u7f6e\uff1a\u652f\u6301\u6587\u4ef6\u6216\u73af\u5883\u53d8\u91cf\u9a71\u52a8\u7684\u7b56\u7565\uff1b</p> </li> <li> <p>\u62d3\u6251\u611f\u77e5\uff1a\u5229\u7528 <code>nRanks</code>/<code>nNodes</code> \u5b9e\u73b0\u62d3\u6251\u7279\u5316\u8c03\u4f18\u3002</p> </li> </ol>"},{"location":"nccl/ext-tuner/basic/#_8","title":"\u76ee\u5f55\u7ed3\u6784","text":"<pre><code>basic/\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 plugin.c\n\u251c\u2500\u2500 Makefile\n\u2514\u2500\u2500 nccl/\n    \u2514\u2500\u2500 tuner.h\n</code></pre>"},{"location":"nccl/ext-tuner/basic/#_9","title":"\u4e0b\u4e00\u6b65","text":"<ol> <li>\u7406\u89e3\u63a5\u53e3\u4e0e\u53c2\u6570\uff1b</li> <li>\u5728 <code>pluginGetCollInfo</code> \u4e2d\u5b9e\u73b0\u8c03\u4f18\u7b56\u7565\uff1b</li> <li>\u5bf9\u4e0d\u540c\u6d88\u606f\u5927\u5c0f\u4e0e\u62d3\u6251\u8fdb\u884c\u6d4b\u8bd5\uff1b</li> <li>\u5b8c\u5584\u9519\u8bef\u5904\u7406\u4e0e\u8d44\u6e90\u7ba1\u7406\uff1b</li> <li>\u66f4\u65b0\u6587\u6863\u8bb0\u5f55\u5177\u4f53\u5b9e\u73b0\u3002</li> </ol>"},{"location":"nccl/ext-tuner/basic/#_10","title":"\u4e0e\u793a\u4f8b\u63d2\u4ef6\u5bf9\u6bd4","text":"\u57fa\u7840\u63d2\u4ef6 \u793a\u4f8b\u63d2\u4ef6 \u9002\u7528\u60c5\u51b5 \u5b66\u4e60/\u7b80\u5355\u573a\u666f \u751f\u4ea7\u7ea7\u3001CSV \u914d\u7f6e"},{"location":"nccl/ext-tuner/basic/#_11","title":"\u53c2\u8003","text":"<ul> <li>\u7236\u7ea7 README</li> <li>\u793a\u4f8b\u63d2\u4ef6</li> </ul> <p>\u57fa\u7840\u63d2\u4ef6\u63d0\u4f9b\u4e86\u5f00\u53d1\u81ea\u5b9a\u4e49 NCCL Tuner \u63d2\u4ef6\u6240\u9700\u7684\u6700\u57fa\u672c\u9aa8\u67b6\uff0c\u53ef\u6839\u636e\u5177\u4f53\u9700\u6c42\u8fdb\u884c\u6269\u5c55\u3002</p>"},{"location":"nccl/ext-tuner/example/","title":"NCCL \u793a\u4f8b Tuner \u63d2\u4ef6","text":"<p>\u672c\u793a\u4f8b\u5c55\u793a\u4e86\u57fa\u4e8e CSV \u7684\u8c03\u4f18\u65b9\u6848\uff0c\u53ef\u5728\u4e0d\u91cd\u65b0\u7f16\u8bd1 NCCL \u7684\u60c5\u51b5\u4e0b\uff0c\u6839\u636e\u6240\u6709\u8c03\u4f18\u5165\u53c2\u9009\u62e9\u6027\u5730\u8986\u76d6\u914d\u7f6e\u3002</p>"},{"location":"nccl/ext-tuner/example/#_1","title":"\u529f\u80fd\u7279\u70b9","text":"<ul> <li>\u6587\u4ef6\u9a71\u52a8\u914d\u7f6e\uff1a\u4ece CSV \u8bfb\u53d6\u8c03\u4f18\u53c2\u6570\uff1b</li> <li>\u6d88\u606f\u5927\u5c0f\u654f\u611f\uff1a\u6309\u6d88\u606f\u5927\u5c0f\u8303\u56f4\u6307\u5b9a\u4e0d\u540c\u7b56\u7565\uff1b</li> <li>\u62d3\u6251\u5339\u914d\uff1a\u6839\u636e\u8282\u70b9\u6570\u3001rank \u6570\u5339\u914d\u914d\u7f6e\uff1b</li> <li>\u53ef\u9009\u901a\u9053\u6570\uff1a\u53ef\u8bbe\u5b9a\u56fa\u5b9a\u901a\u9053\u6570\uff0c\u6216\u7528 <code>-1</code> \u4fdd\u7559\u9ed8\u8ba4\uff1b</li> <li>\u73af\u5883\u53d8\u91cf\uff1a\u901a\u8fc7 <code>NCCL_TUNER_CONFIG_FILE</code> \u6307\u5b9a\u914d\u7f6e\u8def\u5f84\uff1b</li> <li>\u515c\u5e95\u7b56\u7565\uff1a\u7f3a\u5931\u6587\u4ef6\u6216\u65e0\u6548\u6761\u76ee\u65f6\u81ea\u52a8\u56de\u9000\u3002</li> </ul>"},{"location":"nccl/ext-tuner/example/#_2","title":"\u6784\u5efa","text":"<pre><code>make\n</code></pre> <p>\u751f\u6210 <code>libnccl-tuner-example.so</code>\u3002</p>"},{"location":"nccl/ext-tuner/example/#_3","title":"\u914d\u7f6e\u6587\u4ef6\u683c\u5f0f","text":"<p>\u5355\u884c\u4e00\u6761\u914d\u7f6e\uff0cCSV \u5f62\u5f0f\uff1a</p> <pre><code>collective_type,min_bytes,max_bytes,algorithm,protocol,channels,nNodes,nRanks,numPipeOps,regBuff\n</code></pre>"},{"location":"nccl/ext-tuner/example/#_4","title":"\u53c2\u6570\u8bf4\u660e","text":"<ul> <li><code>collective_type</code>\uff1a<code>broadcast</code>\u3001<code>reduce</code>\u3001<code>allgather</code>\u3001<code>reducescatter</code>\u3001<code>allreduce</code></li> <li><code>min_bytes</code>/<code>max_bytes</code>\uff1a\u6d88\u606f\u5927\u5c0f\u8303\u56f4\uff08\u5b57\u8282\uff09</li> <li><code>algorithm</code>\uff1a<code>tree</code>\u3001<code>ring</code>\u3001<code>collnet_direct</code>\u3001<code>collnet_chain</code>\u3001<code>nvls</code>\u3001<code>nvls_tree</code>\u3001<code>pat</code></li> <li><code>protocol</code>\uff1a<code>ll</code>\u3001<code>ll128</code>\u3001<code>simple</code></li> <li><code>channels</code>\uff1a\u901a\u9053\u6570\uff1b\u6b63\u6570\u4ee3\u8868\u56fa\u5b9a\u503c\uff0c<code>-1</code> \u4fdd\u7559\u9ed8\u8ba4</li> <li><code>nNodes</code>\uff1a\u5339\u914d\u8282\u70b9\u6570\uff1b\u6b63\u6570\u4ee3\u8868\u7cbe\u786e\u5339\u914d\uff0c<code>-1</code> \u5339\u914d\u4efb\u610f</li> <li><code>nRanks</code>\uff1a\u5339\u914d rank \u6570\uff1b\u6b63\u6570\u4ee3\u8868\u7cbe\u786e\u5339\u914d\uff0c<code>-1</code> \u5339\u914d\u4efb\u610f</li> <li><code>numPipeOps</code>\uff08\u53ef\u9009\uff09\uff1a\u6d41\u6c34\u7ebf\u6b21\u6570\uff1b\u6b63\u6570\u7cbe\u786e\u5339\u914d\uff0c<code>-1</code> \u4efb\u610f\uff1b\u7701\u7565\u8868\u793a\u4efb\u610f</li> <li><code>regBuff</code>\uff08\u53ef\u9009\uff09\uff1a\u662f\u5426\u53ef\u6ce8\u518c\u7f13\u51b2\u533a\uff1b<code>0</code> \u975e\u6ce8\u518c\uff0c<code>1</code> \u6ce8\u518c\uff0c<code>-1</code> \u4efb\u610f\uff1b\u7701\u7565\u8868\u793a\u4efb\u610f</li> </ul>"},{"location":"nccl/ext-tuner/example/#_5","title":"\u793a\u4f8b","text":"<pre><code># \u5355\u8282\u70b9\u5c0f\u89c4\u6a21 allreduce\uff0c\u4f7f\u7528 tree\uff0c\u9650\u6ce8\u518c\u7f13\u51b2\u533a\nallreduce,0,65536,tree,simple,2,1,-1,-1,1\n\n# 4 \u8282\u70b9\u300132 rank\uff0c\u4e2d\u7b49\u6d88\u606f\uff0c\u5355 pipeline\uff0c\u975e\u6ce8\u518c\u7f13\u51b2\u533a\nallreduce,65537,1048576,ring,simple,4,4,32,1,0\n\n# \u4efb\u610f\u62d3\u6251\uff0c\u5927\u6d88\u606f\uff0cLL128\uff0c\u591a pipeline\uff0c\u4efb\u610f\u7f13\u51b2\u533a\nallreduce,1048577,4294967295,ring,ll128,-1,-1,-1,4,-1\n\n# \u5355\u8282\u70b9 broadcast\uff0c\u504f\u597d tree\uff0c\u517c\u5bb9\u65e7\u683c\u5f0f\uff08\u65e0 numPipeOps/regBuff\uff09\nbroadcast,0,32768,tree,simple,-1,1,-1\n\n# \u591a\u8282\u70b9 broadcast\uff0c\u975e\u6ce8\u518c\u7f13\u51b2\u533a\uff0c\u5355 pipeline\nbroadcast,32769,4294967295,ring,simple,2,-1,-1,1,0\n</code></pre> <p><code>#</code> \u5f00\u5934\u4e3a\u6ce8\u91ca\uff0c\u7a7a\u884c\u5ffd\u7565\u3002\u53ef\u5728 Excel/Sheets \u4e2d\u7f16\u8f91\u540e\u5bfc\u51fa CSV\u3002</p>"},{"location":"nccl/ext-tuner/example/#_6","title":"\u5411\u540e\u517c\u5bb9","text":"<ul> <li>8 \u5217\uff1a\u5339\u914d\u4efb\u610f <code>numPipeOps</code>\u3001<code>regBuff</code>\uff1b</li> <li>9 \u5217\uff1a\u5339\u914d\u4efb\u610f <code>regBuff</code>\uff1b</li> <li>10 \u5217\uff1a\u5b8c\u6574\u914d\u7f6e\u3002</li> </ul> <p>\u65e7\u914d\u7f6e\u6587\u4ef6\u65e0\u9700\u8c03\u6574\u5373\u53ef\u4f7f\u7528\u3002</p>"},{"location":"nccl/ext-tuner/example/#_7","title":"\u4f7f\u7528\u65b9\u5f0f","text":"<ol> <li>\u9ed8\u8ba4\uff1a\u5c06\u914d\u7f6e\u5199\u5165\u5f53\u524d\u76ee\u5f55\u7684 <code>nccl_tuner.conf</code>\uff1b</li> <li>\u73af\u5883\u53d8\u91cf\uff1a</li> </ol> <pre><code>export NCCL_TUNER_CONFIG_FILE=/path/to/tuner.conf\nmpirun -np 4 your_nccl_application\n</code></pre>"},{"location":"nccl/ext-tuner/example/#_8","title":"\u7f16\u8f91\u4e0e\u751f\u6210","text":"<ul> <li>\u63d0\u4f9b\u4e86 <code>optimize_config.py</code> \u751f\u6210\u5de5\u5177\uff08\u8be6\u89c1 scripts/README.md\uff09\uff1b</li> <li>\u5efa\u8bae\u4f7f\u7528\u8868\u5934 <code>collective_type,min_bytes,...,regBuff</code>\uff1b</li> <li>\u4fdd\u5b58\u4e3a CSV \u683c\u5f0f\uff1b\u53ef\u4f7f\u7528\u6570\u636e\u9a8c\u8bc1\u51cf\u5c11\u62fc\u5199\u9519\u8bef\u3002</li> </ul>"},{"location":"nccl/ext-tuner/example/#_9","title":"\u65e5\u5fd7","text":"<pre><code>export NCCL_DEBUG=INFO   # \u67e5\u770b\u914d\u7f6e\u52a0\u8f7d\u4fe1\u606f\nexport NCCL_DEBUG=TRACE  # \u67e5\u770b\u5339\u914d\u7ec6\u8282\n</code></pre>"},{"location":"nccl/ext-tuner/example/#_10","title":"\u62d3\u6251\u5339\u914d","text":"<ul> <li><code>nNodes=4,nRanks=32</code>\uff1a\u4ec5\u5339\u914d 4 \u8282\u70b9 32 rank\uff1b</li> <li><code>nNodes=-1,nRanks=8</code>\uff1a\u5339\u914d\u4efb\u4f55 8 rank\uff1b</li> <li><code>nNodes=2,nRanks=-1</code>\uff1a\u5339\u914d\u4efb\u610f 2 \u8282\u70b9\uff1b</li> <li><code>nNodes=-1,nRanks=-1</code>\uff1a\u5339\u914d\u6240\u6709\u62d3\u6251\u3002</li> </ul>"},{"location":"nccl/ext-tuner/example/#_11","title":"\u9ed8\u8ba4\u884c\u4e3a","text":"<p>\u7f3a\u5931\u914d\u7f6e\u6216\u65e0\u5339\u914d\u9879\u65f6\uff0c\u63d2\u4ef6\u5c06\u504f\u597d ring + simple \u7ec4\u5408\uff0c\u5e76\u4fdd\u6301 NCCL \u9ed8\u8ba4\u901a\u9053\u9009\u62e9\uff08\u5f53 <code>channels=-1</code>\uff09\u3002</p>"},{"location":"nccl/ext-tuner/example/#_12","title":"\u6545\u969c\u6392\u67e5","text":"<ol> <li>\u672a\u627e\u5230\u914d\u7f6e\uff1a\u68c0\u67e5\u8def\u5f84\u4e0e\u6743\u9650\uff1b</li> <li>\u914d\u7f6e\u672a\u751f\u6548\uff1a\u6838\u5bf9\u96c6\u4f53\u7c7b\u578b\u3001\u5927\u5c0f\u8303\u56f4\u3001\u7b97\u6cd5/\u534f\u8bae\u540d\u79f0\u3001\u62d3\u6251\u53c2\u6570\uff1b</li> <li>\u63d2\u4ef6\u672a\u52a0\u8f7d\uff1a\u786e\u8ba4 <code>LD_LIBRARY_PATH</code> \u4e0e <code>NCCL_TUNER_PLUGIN</code>\uff1b</li> <li>\u6027\u80fd\u65e0\u53d8\u5316\uff1a\u901a\u8fc7 <code>NCCL_DEBUG=INFO</code> \u786e\u8ba4 Tuner \u662f\u5426\u542f\u7528\uff1b</li> <li>\u62d3\u6251\u4e0d\u5339\u914d\uff1a\u6839\u636e\u5b9e\u9645 <code>nNodes</code>/<code>nRanks</code> \u8c03\u6574\u6216\u4f7f\u7528 <code>-1</code>\uff1b</li> <li>CSV \u89e3\u6790\u9519\u8bef\uff1a\u786e\u4fdd\u9017\u53f7\u540e\u65e0\u7a7a\u683c\uff0c\u6216\u4f7f\u7528\u5f15\u53f7\u5305\u88f9\u542b\u7a7a\u683c\u5b57\u6bb5\u3002</li> </ol>"},{"location":"nccl/ext-tuner/example/scripts/","title":"NCCL Tuner \u914d\u7f6e\u811a\u672c","text":"<p>\u8be5\u76ee\u5f55\u5305\u542b\u6839\u636e\u6027\u80fd\u6570\u636e\u81ea\u52a8\u751f\u6210 NCCL Tuner \u914d\u7f6e\u7684\u811a\u672c\u3002</p>"},{"location":"nccl/ext-tuner/example/scripts/#optimize_configpy","title":"optimize_config.py","text":"<p>Python \u811a\u672c\uff0c\u4ece CSV \u6027\u80fd\u6570\u636e\u4e2d\u8bfb\u53d6\u4fe1\u606f\uff0c\u751f\u6210\u4f18\u5316\u7684 Tuner \u914d\u7f6e\u3002</p>"},{"location":"nccl/ext-tuner/example/scripts/#_1","title":"\u7528\u6cd5","text":"<pre><code>python scripts/optimize_config.py [\u9009\u9879] &lt;\u8f93\u5165CSV&gt;\n</code></pre>"},{"location":"nccl/ext-tuner/example/scripts/#_2","title":"\u9009\u9879","text":"<ul> <li><code>-o, --output FILE</code>\uff1a\u8f93\u51fa\u914d\u7f6e\u6587\u4ef6\uff08\u9ed8\u8ba4 <code>nccl_tuner.conf</code>\uff09\uff1b</li> <li><code>-m, --metric METRIC</code>\uff1a\u4f18\u5316\u6307\u6807\uff08<code>cost_metric</code>\u3001<code>bandwidth_gbps</code>\u3001<code>latency_us</code>\uff09\uff1b</li> <li><code>--no-header</code>\uff1a\u8f93\u51fa\u6587\u4ef6\u4e0d\u6dfb\u52a0\u5934\u90e8\u6ce8\u91ca\uff1b</li> <li><code>--dry-run</code>\uff1a\u4ec5\u6253\u5370\u914d\u7f6e\uff0c\u4e0d\u5199\u6587\u4ef6\u3002</li> </ul>"},{"location":"nccl/ext-tuner/example/scripts/#csv","title":"CSV \u8f93\u5165\u683c\u5f0f","text":"<pre><code>collective,size_bytes,algorithm,protocol,channels,nodes,ranks,pipeOps,regBuff,cost_metric,bandwidth_gbps,latency_us\n</code></pre> <p>\u5fc5\u586b\u5b57\u6bb5\uff1a\u96c6\u4f53\u7c7b\u578b\u3001\u6d88\u606f\u5927\u5c0f\u3001\u7b97\u6cd5\u3001\u534f\u8bae\u3001\u901a\u9053\u6570\u3001\u8282\u70b9\u6570\u3001rank \u6570\u3001pipeline \u6b21\u6570\u3001\u662f\u5426\u6ce8\u518c\u7f13\u51b2\u533a\u3002</p> <p>\u81f3\u5c11\u63d0\u4f9b\u4e00\u4e2a\u6027\u80fd\u6307\u6807\uff08\u5e26\u5bbd\u6216\u5ef6\u8fdf\uff09\u3002</p>"},{"location":"nccl/ext-tuner/example/scripts/#_3","title":"\u793a\u4f8b","text":"<pre><code># \u57fa\u4e8e cost_metric \u4f18\u5316\npython scripts/optimize_config.py sample_performance_data.csv\n\n# \u6309\u5e26\u5bbd\u4f18\u5316\u5e76\u8f93\u51fa\u5230\u81ea\u5b9a\u4e49\u6587\u4ef6\npython scripts/optimize_config.py -m bandwidth_gbps -o my_tuner.conf performance_data.csv\n\n# \u4ec5\u6253\u5370\u7ed3\u679c\npython scripts/optimize_config.py --dry-run performance_data.csv\n</code></pre>"},{"location":"nccl/ext-tuner/example/scripts/#_4","title":"\u5de5\u4f5c\u6d41\u7a0b","text":"<ol> <li>\u8bfb\u53d6\u5e76\u6821\u9a8c CSV \u6570\u636e\uff1b</li> <li>\u6309\u96c6\u4f53\u7c7b\u578b\u3001\u62d3\u6251\u7b49\u5206\u7ec4\uff1b</li> <li>\u81ea\u52a8\u5212\u5206\u6d88\u606f\u5927\u5c0f\u533a\u95f4\uff1b</li> <li>\u9009\u62e9\u5404\u7ec4\u6700\u4f73\u7ec4\u5408\uff1b</li> <li>\u8f93\u51fa NCCL Tuner \u914d\u7f6e\u3002</li> </ol> <p>\u9ed8\u8ba4\u5927\u5c0f\u533a\u95f4\uff08\u5b57\u8282\uff09\uff1a</p> <ul> <li>\u5c0f\uff1a0\u20131,024</li> <li>\u4e2d\uff1a1,025\u201365,536</li> <li>\u5927\uff1a65,537\u20131,048,576</li> <li>\u8d85\u5927\uff1a1,048,577\u201316,777,216</li> <li>\u7279\u5927\uff1a16,777,217\u20134,294,967,295</li> </ul> <p>\u793a\u4f8b\u6570\u636e\u53c2\u89c1 <code>sample_performance_data.csv</code>\u3002</p>"},{"location":"nccl/ext-tuner/example/scripts/#nccl","title":"\u4e0e NCCL \u96c6\u6210","text":"<pre><code>export NCCL_TUNER_CONFIG_FILE=/path/to/optimized_config.conf\nexport NCCL_TUNER_PLUGIN=/path/to/libnccl-tuner.so\nmpirun -np 8 your_nccl_application\n</code></pre>"},{"location":"nccl/ext-tuner/example/scripts/#_5","title":"\u6536\u96c6\u6027\u80fd\u6570\u636e","text":"<ul> <li>\u4f7f\u7528 NCCL \u57fa\u51c6\u6d4b\u8bd5\uff1b</li> <li>\u5728\u4e0d\u540c\u8c03\u4f18\u8bbe\u7f6e\u4e0b\u5206\u6790\u5e94\u7528\uff1b</li> <li>\u7cfb\u7edf\u6027\u904d\u5386\u53c2\u6570\u7ec4\u5408\uff1b</li> <li>\u5229\u7528 NCCL \u8c03\u8bd5\u8f93\u51fa\u6536\u96c6\u65f6\u95f4\u4fe1\u606f\u3002</li> </ul> <p>\u786e\u4fdd\u8986\u76d6\u4e0d\u540c\u6d88\u606f\u5927\u5c0f\u3001\u4e0d\u540c\u62d3\u6251\u3001\u5168\u90e8\u7b97\u6cd5/\u534f\u8bae\u7ec4\u5408\uff0c\u4ee5\u53ca\u901a\u9053\u6570\u3001pipeline \u53c2\u6570\u3002</p>"},{"location":"nccl/ext-tuner/example/test/","title":"NCCL Tuner \u63d2\u4ef6\u5355\u5143\u6d4b\u8bd5","text":"<p>\u672c\u76ee\u5f55\u63d0\u4f9b\u5b8c\u6574\u7684\u5355\u5143\u6d4b\u8bd5\uff0c\u8986\u76d6\u914d\u7f6e\u89e3\u6790\u3001\u5339\u914d\u903b\u8f91\u3001\u6210\u672c\u8868\u66f4\u65b0\u7b49\u6838\u5fc3\u529f\u80fd\u3002</p>"},{"location":"nccl/ext-tuner/example/test/#_1","title":"\u76ee\u5f55\u7ed3\u6784","text":"<pre><code>test/\n\u251c\u2500\u2500 test_plugin.c\n\u251c\u2500\u2500 Makefile\n\u2514\u2500\u2500 README.md\n</code></pre>"},{"location":"nccl/ext-tuner/example/test/#_2","title":"\u6784\u5efa\u4e0e\u8fd0\u884c","text":"<pre><code>make test       # \u6784\u5efa\u5e76\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\nmake            # \u4ec5\u6784\u5efa\n./test_plugin   # \u624b\u52a8\u8fd0\u884c\n</code></pre> <p>\u9ad8\u7ea7\u7528\u6cd5\uff1a</p> <pre><code>make test-memory   # \u4f7f\u7528 valgrind \u68c0\u67e5\u5185\u5b58\nmake test-verbose  # \u8f93\u51fa\u8be6\u7ec6\u65e5\u5fd7\nmake coverage      # \u751f\u6210\u8986\u76d6\u7387\u62a5\u544a\uff08\u9700 gcov\uff09\nmake test-configs  # \u751f\u6210\u793a\u4f8b\u914d\u7f6e\u6587\u4ef6\n</code></pre>"},{"location":"nccl/ext-tuner/example/test/#_3","title":"\u8986\u76d6\u8303\u56f4","text":"<ol> <li>\u521d\u59cb\u5316 (<code>test_plugin_init</code>)\uff1a\u4e0a\u4e0b\u6587\u521b\u5efa\u4e0e\u9500\u6bc1\uff1b</li> <li>\u914d\u7f6e\u89e3\u6790 (<code>test_config_parsing_valid/invalid</code>)\uff1aCSV \u89e3\u6790\u3001\u6ce8\u91ca/\u7a7a\u884c\u3001\u73af\u5883\u53d8\u91cf\uff1b</li> <li>\u96c6\u4f53\u5339\u914d (<code>test_collective_matching</code>)\uff1a\u7b97\u6cd5/\u534f\u8bae/\u901a\u9053\u9009\u62e9\uff1b</li> <li>\u5927\u5c0f\u5339\u914d (<code>test_size_matching</code>)\uff1a\u533a\u95f4\u8fb9\u754c\u3001\u591a\u914d\u7f6e\uff1b</li> <li>\u62d3\u6251\u5339\u914d (<code>test_topology_matching</code>)\uff1a\u5355/\u591a\u8282\u70b9\u3001\u7cbe\u51c6/\u901a\u914d\uff1b</li> <li>\u901a\u9053\u9ed8\u8ba4\u503c (<code>test_default_channels</code>)\uff1a<code>-1</code> \u7684\u5904\u7406\uff1b</li> <li>\u6ce8\u518c\u7f13\u51b2\u533a (<code>test_regbuff_matching</code>)\uff1a\u6ce8\u518c/\u975e\u6ce8\u518c/\u7f3a\u7701\u517c\u5bb9\uff1b</li> <li>pipeline \u5339\u914d (<code>test_pipeops_matching</code>)\uff1a\u5355/\u591a pipeline\u3001\u7f3a\u7701\u517c\u5bb9\uff1b</li> <li>\u515c\u5e95\u903b\u8f91 (<code>test_no_match_fallback</code>)\uff1a\u65e0\u5339\u914d\u65f6\u56de\u9000\u5230 ring/simple\u3002</li> </ol>"},{"location":"nccl/ext-tuner/example/test/#_4","title":"\u793a\u4f8b\u8f93\u51fa","text":"<p>\u6210\u529f\uff1a</p> <pre><code>PASS: test_plugin_init\n...\nTest Results: 9/9 tests passed\n</code></pre> <p>\u5931\u8d25\uff1a</p> <pre><code>FAIL: test_collective_matching - Tree/Simple should have low cost\nTest Results: 8/9 tests passed\n</code></pre>"},{"location":"nccl/ext-tuner/example/test/#nccl","title":"\u6a21\u62df NCCL","text":"<p>\u6d4b\u8bd5\u76f4\u63a5\u4f7f\u7528 <code>../nccl/</code> \u4e0b\u7684\u5934\u6587\u4ef6\uff08<code>tuner.h</code>\u3001<code>common.h</code>\u3001<code>err.h</code>\uff09\uff0c\u65e0\u9700\u5b8c\u6574 NCCL \u5b89\u88c5\u5373\u53ef\u57fa\u4e8e\u771f\u5b9e\u63a5\u53e3\u9a8c\u8bc1\u903b\u8f91\u3002</p>"},{"location":"nccl/ext-tuner/example/test/#cicd","title":"CI/CD \u96c6\u6210","text":"<pre><code>make install-test\nmake test &amp;&amp; echo \"Tests passed\" || echo \"Tests failed\"\n</code></pre>"},{"location":"nccl/ext-tuner/example/test/#_5","title":"\u5185\u5b58\u4e0e\u8986\u76d6\u7387","text":"<pre><code>make test-memory   # \u68c0\u6d4b\u6cc4\u6f0f/\u975e\u6cd5\u8bbf\u95ee\nmake coverage      # \u751f\u6210 gcov \u62a5\u544a\n</code></pre>"},{"location":"nccl/ext-tuner/example/test/#_6","title":"\u65b0\u589e\u6d4b\u8bd5","text":"<p>\u5728 <code>test_plugin.c</code> \u4e2d\u65b0\u589e\u51fd\u6570\u5e76\u5728\u4e3b\u51fd\u6570\u6ce8\u518c\uff1a</p> <pre><code>int test_new_feature() {\n  TEST_ASSERT(condition, \"description\");\n  TEST_PASS();\n}\n</code></pre> <p>\u6ce8\u518c\uff1a</p> <pre><code>total++; passed += test_new_feature();\n</code></pre>"},{"location":"nccl/ext-tuner/example/test/#_7","title":"\u8c03\u8bd5","text":"<pre><code>make CFLAGS=\"-g -O0 -DDEBUG\"\ngdb ./test_plugin\n</code></pre>"},{"location":"nccl/ext-tuner/example/test/#_8","title":"\u6e05\u7406","text":"<pre><code>make clean\n</code></pre> <p>\u8be5\u6d4b\u8bd5\u5957\u4ef6\u786e\u4fdd Tuner \u63d2\u4ef6\u5728\u5404\u79cd\u914d\u7f6e\u4e0e\u8fb9\u754c\u6761\u4ef6\u4e0b\u90fd\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002</p>"},{"location":"nccl/src/include/nccl_device/","title":"\u76ee\u5f55\u7ed3\u6784\u8bf4\u660e","text":"<p>\u4e3a\u4fbf\u4e8e\u5b66\u4e60 NCCL \u8bbe\u5907\u7aef API\uff0c\u672c\u76ee\u5f55\u5c06\u5934\u6587\u4ef6\u8fdb\u884c\u4e86\u5206\u5c42\u7ec4\u7ec7\u3002\u4e0e\u672c README \u540c\u7ea7\u7684\u6587\u4ef6\u4e3b\u8981\u9762\u5411\u9605\u8bfb\u8005\uff0c\u5305\u542b\u5173\u952e\u7c7b\u578b\u58f0\u660e\u3001\u51fd\u6570\u539f\u578b\u4ee5\u53ca\u4f7f\u7528\u8bf4\u660e\uff1b\u5176\u4f59\u5b9e\u73b0\u7ec6\u8282\u653e\u7f6e\u5728 <code>impl/</code> \u5b50\u76ee\u5f55\u3002\u901a\u5e38\u6bcf\u4e2a\u6a21\u5757\u5206\u4e3a\u4e09\u5c42\uff1a</p> <ol> <li><code>foo.h</code>\uff1a\u516c\u5f00 API \u58f0\u660e\uff1b</li> <li><code>impl/foo__types.h</code>\uff1a\u7ed3\u6784\u4f53\u5b9a\u4e49\uff0c\u9700\u5305\u542b\u7b2c 1 \u5c42\uff1b</li> <li><code>impl/foo__funcs.h</code>\uff1a\u5185\u8054\u51fd\u6570\u5b9e\u73b0\uff0c\u9700\u5305\u542b\u7b2c 2 \u5c42\u3002</li> </ol> <p>\u5c42 1 \u4e0e\u5c42 2 \u4e4b\u95f4\u5e94\u4fdd\u6301\u65e0\u5faa\u73af\u4f9d\u8d56\uff08\u58f0\u660e\u4e0e\u7c7b\u578b\u7684\u987a\u5e8f\u654f\u611f\uff09\uff1b\u5c42 3 \u53ef\u76f8\u4e92\u5305\u542b\uff08\u51fd\u6570\u5df2\u58f0\u660e\u540e\u5b9a\u4e49\u987a\u5e8f\u65e0\u5173\uff09\u3002</p> <p>\u901a\u5e38\u7684\u7f16\u8bd1\u5355\u5143\u53ea\u9700\u5305\u542b <code>nccl_device.h</code> \u5373\u53ef\u83b7\u5f97\u6240\u6709 <code>impl/foo__funcs.h</code>\uff1b\u5982\u9700\u7cbe\u786e\u63a7\u5236\uff0c\u53ef\u76f4\u63a5\u5305\u542b\u5bf9\u5e94\u7684 <code>impl/foo__funcs.h</code>\u3002</p> <p>\u4e4b\u6240\u4ee5\u9700\u8981\u8fd9\u79cd\u7ec4\u7ec7\u65b9\u5f0f\uff0c\u5176\u4e2d\u4e00\u4e2a\u539f\u56e0\u662f C++ \u7684\u9ed8\u8ba4\u53c2\u6570\u5b58\u5728\u9650\u5236\uff1a</p> <pre><code>// foo.h\nstruct Foo;  // \u5728\u67d0\u4e2a __types.h \u4e2d\u5b9a\u4e49\n\n// impl/foo__types.h\nstruct Foo { int x; };\n\n// bar.h\n#include \"impl/foo__types.h\"\nvoid bar(Foo arg = {});  // \u5982\u679c\u53ea\u5305\u542b foo.h\uff0cFoo \u4ecd\u662f\u4e0d\u5b8c\u6574\u7c7b\u578b\uff0c\u4f1a\u62a5\u9519\n</code></pre> <p>\u901a\u8fc7\u5728\u9700\u8981\u9ed8\u8ba4\u6784\u9020\u7684\u5730\u65b9\u5305\u542b <code>impl/foo__types.h</code>\uff0c\u5373\u53ef\u907f\u514d\u6b64\u7c7b\u95ee\u9898\u3002</p>"},{"location":"pytorch/docs/source/ddp_comm_hooks/","title":"DDP \u901a\u4fe1 Hook \u7b80\u4ecb","text":"<p>DistributedDataParallel\uff08DDP\uff09\u5728\u540c\u6b65\u68af\u5ea6\u65f6\u9ed8\u8ba4\u4f7f\u7528 all-reduce\u3002\u901a\u4fe1 Hook \u5141\u8bb8\u7528\u6237\u66ff\u6362\u8fd9\u4e00\u6d41\u7a0b\uff0c\u5b9e\u73b0\u66f4\u9ad8\u6548\u6216\u66f4\u7075\u6d3b\u7684\u901a\u4fe1\u7b56\u7565\u3002PyTorch \u63d0\u4f9b\u4e86\u4e00\u4e9b\u5185\u7f6e Hook\uff0c\u4e5f\u652f\u6301\u6ce8\u518c\u81ea\u5b9a\u4e49 Hook\u3002</p>"},{"location":"pytorch/docs/source/ddp_comm_hooks/#hook","title":"\u5982\u4f55\u6ce8\u518c Hook","text":"<p>\u5728\u8bad\u7ec3\u5faa\u73af\u5f00\u59cb\u524d\uff0c\u5bf9 DDP \u6a21\u578b\u8c03\u7528 <code>register_comm_hook(state, hook)</code>\uff1a</p> <pre><code>ddp_model = torch.nn.parallel.DistributedDataParallel(model)\nddp_model.register_comm_hook(state=None, hook=built_in_hook)\n</code></pre> <p><code>state</code> \u53ef\u4ee5\u4e3a <code>None</code> \u6216\u4efb\u610f\u7528\u6237\u81ea\u5b9a\u4e49\u5bf9\u8c61\uff0c<code>hook</code> \u5219\u662f\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u63a5\u6536 <code>state</code> \u548c <code>GradBucket</code>\uff0c\u8fd4\u56de\u4e00\u4e2a <code>torch.futures.Future</code>\u3002</p>"},{"location":"pytorch/docs/source/ddp_comm_hooks/#hook_1","title":"Hook \u4f5c\u7528\u5bf9\u8c61","text":"<p>Hook \u5728\u68af\u5ea6 all-reduce \u524d\u89e6\u53d1\u3002\u4e3a\u63d0\u9ad8\u901a\u4fe1\u4e0e\u8ba1\u7b97\u91cd\u53e0\uff0cDDP \u4f1a\u5c06\u68af\u5ea6\u5f20\u91cf\u5212\u5206\u4e3a\u591a\u4e2a bucket\uff0c\u901a\u8fc7 <code>torch.distributed.GradBucket</code> \u8868\u793a\u3002Hook \u53ef\u4ee5\u8bfb\u53d6\u6216\u4fee\u6539 bucket \u4e2d\u7684\u5185\u5bb9\uff0c\u7136\u540e\u6267\u884c\u81ea\u5b9a\u4e49\u901a\u4fe1\u903b\u8f91\u3002</p> <p>\u5e38\u7528\u65b9\u6cd5\uff1a</p> <ul> <li><code>bucket.buffer()</code>\uff1a\u83b7\u53d6\u6241\u5e73\u5316\u540e\u7684\u68af\u5ea6\u7f13\u51b2\u533a\u3002</li> <li><code>bucket.gradients()</code>\uff1a\u83b7\u53d6\u539f\u59cb\u68af\u5ea6\u5f20\u91cf\u5217\u8868\u3002</li> <li><code>bucket.set_buffer(tensor)</code>\uff1a\u66ff\u6362\u68af\u5ea6\u7f13\u51b2\u533a\uff08\u9700\u4e0e\u539f\u5f62\u72b6\u5339\u914d\uff09\u3002</li> </ul>"},{"location":"pytorch/docs/source/ddp_comm_hooks/#hook_2","title":"\u5185\u7f6e\u901a\u4fe1 Hook","text":"<ul> <li>\u9ed8\u8ba4 Hook\uff08AllReduce\uff09\uff1a\u7b49\u540c\u4e8e DDP \u539f\u751f\u884c\u4e3a\u3002</li> <li>PowerSGD Hook\uff1a\u5148\u5bf9\u68af\u5ea6\u8fdb\u884c\u4f4e\u79e9\u8fd1\u4f3c\uff0c\u518d\u540c\u6b65\u77e9\u9635\uff0c\u4ece\u800c\u51cf\u5c11\u5e26\u5bbd\u5360\u7528\u3002\u9002\u5408\u5927\u89c4\u6a21\u901a\u4fe1\u53d7\u9650\u7684\u8bad\u7ec3\u4efb\u52a1\u3002</li> <li>BatchNorm ReduceScatter\uff1a\u7528\u4e8e SyncBatchNorm\uff0c\u5c06 all-reduce \u66ff\u6362\u4e3a reduce-scatter + all-gather\uff0c\u4ee5\u63d0\u5347\u541e\u5410\u3002</li> </ul> <p>\u6ce8\u518c\u5185\u7f6e Hook \u7684\u793a\u4f8b\uff1a</p> <pre><code>from torch.distributed.algorithms.ddp_comm_hooks import default as comm_hooks\n\nddp_model.register_comm_hook(state=None, hook=comm_hooks.default_allreduce_hook)\n# \u6216\u8005\u4f7f\u7528 PowerSGD\nstate = comm_hooks.powerSGD.PowerSGDState(process_group=pg, matrix_approximation_rank=1)\nddp_model.register_comm_hook(state=state, hook=comm_hooks.powerSGD.powerSGD_hook)\n</code></pre>"},{"location":"pytorch/docs/source/ddp_comm_hooks/#hook_3","title":"\u81ea\u5b9a\u4e49 Hook \u601d\u8def","text":"<p>\u7528\u6237\u53ef\u7f16\u5199 <code>hook(state, bucket)</code>\uff0c\u5728\u51fd\u6570\u5185\u90e8\u6267\u884c\u4efb\u610f\u901a\u4fe1\u6216\u805a\u5408\u903b\u8f91\uff0c\u5e76\u8fd4\u56de\u5305\u542b\u7ed3\u679c\u5f20\u91cf\u7684 Future\u3002\u4f8b\u5982\uff1a</p> <pre><code>def average_hook(state, bucket):\n    tensor = bucket.buffer()\n    fut = dist.all_reduce(tensor, group=state.process_group, async_op=True).get_future()\n    fut = fut.then(lambda fut: fut.value()[0] / state.world_size)\n    return fut\n\nddp_model.register_comm_hook(state=SimpleNamespace(process_group=pg, world_size=pg.size()), hook=average_hook)\n</code></pre>"},{"location":"pytorch/docs/source/ddp_comm_hooks/#_1","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li>Hook \u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a <code>Future[Tensor]</code>\uff0c\u5e76\u5728\u5b8c\u6210\u540e\u5c06\u7ed3\u679c\u5f20\u91cf\u5199\u56de bucket\u3002</li> <li>\u4e3a\u4fdd\u8bc1\u6570\u503c\u6b63\u786e\u6027\uff0c\u5e94\u786e\u4fdd\u81ea\u5b9a\u4e49\u901a\u4fe1\u6700\u7ec8\u4ea7\u751f\u4e0e\u539f\u59cb all-reduce \u7b49\u4ef7\u7684\u68af\u5ea6\uff08\u6216\u6839\u636e\u7b97\u6cd5\u9700\u8981\u8fdb\u884c\u88c1\u526a\u3001\u538b\u7f29\uff09\u3002</li> <li>\u82e5 Hook \u6301\u6709\u6709\u72b6\u6001\u5bf9\u8c61\uff08\u5982\u4f18\u5316\u5668\u72b6\u6001\uff09\uff0c\u9700\u81ea\u884c\u5904\u7406\u8de8 rank \u7684\u540c\u6b65\u3002</li> </ul> <p>\u901a\u4fe1 Hook \u8ba9 DDP \u66f4\u6613\u4e8e\u6269\u5c55\u5230\u5e26\u5bbd\u53d7\u9650\u6216\u7279\u6b8a\u9700\u6c42\u7684\u573a\u666f\u3002\u5408\u7406\u5730\u7ec4\u5408\u5185\u7f6e Hook \u6216\u81ea\u5b9a\u4e49 Hook\uff0c\u53ef\u4ee5\u663e\u8457\u964d\u4f4e\u901a\u4fe1\u5f00\u9500\u5e76\u63d0\u5347\u8bad\u7ec3\u6548\u7387\u3002</p>"},{"location":"pytorch/docs/source/distributed._dist2/","title":"\u5b9e\u9a8c\u6027\u7684\u9762\u5411\u5bf9\u8c61\u5206\u5e03\u5f0f API","text":"<p><code>torch.distributed._dist2</code> \u63d0\u4f9b\u4e86\u4e00\u7ec4\u4ee5\u9762\u5411\u5bf9\u8c61\u98ce\u683c\u5c01\u88c5\u7684\u5b9e\u9a8c\u6027 API\uff0c\u76ee\u6807\u662f\u8ba9\u5206\u5e03\u5f0f\u7f16\u7a0b\u66f4\u52a0\u6a21\u5757\u5316\u3002\u8be5\u6a21\u5757\u4ecd\u5728\u63a2\u7d22\u9636\u6bb5\uff0c\u63a5\u53e3\u53ef\u80fd\u968f\u65f6\u8c03\u6574\u3002</p> <p>\u76ee\u524d\u6587\u6863\u4e3b\u8981\u9762\u5411 PyTorch \u5f00\u53d1\u8005\uff0c\u666e\u901a\u7528\u6237\u65e0\u9700\u76f4\u63a5\u4f7f\u7528\u3002\u5982\u9700\u4e86\u89e3\u5185\u90e8\u5b9e\u73b0\uff0c\u53ef\u67e5\u9605\u4ee3\u7801\u6216\u5173\u6ce8\u540e\u7eed\u7684\u5b98\u65b9\u516c\u544a\u3002</p>"},{"location":"pytorch/docs/source/distributed.algorithms.join/","title":"\u5206\u5e03\u5f0f Join \u4e0a\u4e0b\u6587\u7ba1\u7406\u5668","text":"<p>\u901a\u7528 Join \u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u53ef\u7528\u4e8e\u5904\u7406\u5206\u5e03\u5f0f\u8bad\u7ec3\u4e2d\u8f93\u5165\u6279\u6b21\u5927\u5c0f\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002\u672c\u9875\u5bf9\u6838\u5fc3\u7c7b\u8fdb\u884c\u7b80\u8981\u8bf4\u660e\uff0c\u5b8c\u6574\u793a\u4f8b\u53ef\u53c2\u8003\u5b98\u65b9\u6559\u7a0b\uff1aDistributed Training with Uneven Inputs Using the Join Context Manager\u3002</p>"},{"location":"pytorch/docs/source/distributed.algorithms.join/#_1","title":"\u4e3b\u8981\u7c7b","text":"<ul> <li> <p><code>torch.distributed.algorithms.Join</code>   \u63d0\u4f9b\u901a\u7528\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff0c\u8d1f\u8d23\u534f\u8c03\u5404\u4e2a\u53c2\u4e0e\u8fdb\u7a0b\u7684\u524d\u5411/\u53cd\u5411\u6267\u884c\u3002\u5f53\u90e8\u5206\u8fdb\u7a0b\u63d0\u524d\u5b8c\u6210\u8ba1\u7b97\u65f6\uff0c\u53ef\u901a\u8fc7 Join \u786e\u4fdd\u5269\u4f59\u8fdb\u7a0b\u5b89\u5168\u5730\u9000\u51fa\u6216\u7ee7\u7eed\u6267\u884c\u3002</p> </li> <li> <p><code>torch.distributed.algorithms.Joinable</code>   \u6240\u6709\u53ef\u53c2\u4e0e Join \u7684\u6a21\u5757\u9700\u7ee7\u627f\u8be5\u57fa\u7c7b\uff0c\u5b9e\u73b0 <code>join_hook()</code> \u7b49\u63a5\u53e3\uff0c\u4ee5\u5b9a\u4e49\u5f53\u8fdb\u7a0b\u9000\u51fa join \u65f6\u7684\u5177\u4f53\u884c\u4e3a\u3002</p> </li> <li> <p><code>torch.distributed.algorithms.JoinHook</code>   \u5c01\u88c5\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u94a9\u5b50\u903b\u8f91\u3002Join \u89e6\u53d1\u65f6\uff0c\u4f1a\u8c03\u7528\u5bf9\u5e94\u7684\u94a9\u5b50\u4ee5\u6267\u884c\u540c\u6b65\u3001\u6e05\u7406\u6216\u989d\u5916\u901a\u4fe1\u3002</p> </li> </ul>"},{"location":"pytorch/docs/source/distributed.algorithms.join/#_2","title":"\u4f7f\u7528\u5efa\u8bae","text":"<ol> <li>\u5728\u5206\u5e03\u5f0f\u8bad\u7ec3\u7684\u5faa\u73af\u4e2d\u4f7f\u7528 <code>with Join([...])</code> \u5c06\u6240\u6709 Joinable \u6a21\u5757\u7eb3\u5165\u4e0a\u4e0b\u6587\u7ba1\u7406\u3002</li> <li>\u4e3a\u6bcf\u4e2a Joinable \u6a21\u5757\u5b9e\u73b0\u5408\u9002\u7684 <code>join_hook</code>\uff0c\u4f8b\u5982\u5e7f\u64ad\u5269\u4f59\u68af\u5ea6\u3001\u540c\u6b65\u72b6\u6001\u6216\u6267\u884c\u989d\u5916\u7684 barrier\u3002</li> <li>\u5f53\u6a21\u578b\u5305\u542b\u591a\u79cd\u5e76\u884c\u7b56\u7565\uff08\u6d41\u6c34\u7ebf\u5e76\u884c\u3001ZeRO \u7b49\uff09\u65f6\uff0c\u53ef\u7ed3\u5408 JoinHook \u5b9e\u73b0\u66f4\u7ec6\u7c92\u5ea6\u7684\u9000\u51fa\u7b56\u7565\u3002</li> </ol> <p>\u901a\u8fc7 Join\uff0c\u53ef\u4ee5\u5728\u4fdd\u6301\u6570\u503c\u6b63\u786e\u6027\u7684\u540c\u65f6\u89e3\u51b3\u4e0d\u540c\u8fdb\u7a0b\u8017\u65f6\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\uff0c\u907f\u514d\u6b7b\u9501\u6216\u68af\u5ea6\u4e0d\u540c\u6b65\u3002</p>"},{"location":"pytorch/docs/source/distributed.checkpoint/","title":"\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9 \u2014\u2014 <code>torch.distributed.checkpoint</code>","text":"<p>\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\uff08Distributed Checkpoint\uff0c\u7b80\u79f0 DCP\uff09\u652f\u6301\u591a\u4e2a rank \u5e76\u884c\u5730\u4fdd\u5b58\u6216\u52a0\u8f7d\u6a21\u578b\u53c2\u6570\u3002\u4e0e\u4f20\u7edf\u7684 <code>torch.save</code> / <code>torch.load</code> \u76f8\u6bd4\uff0c\u5b83\u5177\u5907\u5982\u4e0b\u7279\u70b9\uff1a</p> <ul> <li>\u591a\u6587\u4ef6\u8f93\u51fa\uff1a\u6bcf\u4e2a rank \u81f3\u5c11\u751f\u6210\u4e00\u4e2a\u68c0\u67e5\u70b9\u6587\u4ef6\uff0c\u4fbf\u4e8e\u5728\u5927\u89c4\u6a21\u96c6\u7fa4\u4e2d\u5e76\u884c\u5199\u5165\u3002</li> <li>\u5c31\u5730\u64cd\u4f5c\uff1a\u6a21\u578b\u9700\u8981\u5148\u5206\u914d\u597d\u53c2\u6570\u7f13\u51b2\u533a\uff0cDCP \u4f1a\u76f4\u63a5\u5199\u5165\u8fd9\u4e9b\u7f13\u51b2\u533a\uff0c\u907f\u514d\u989d\u5916\u7684\u5185\u5b58\u590d\u5236\u3002</li> <li>\u62d3\u6251\u65e0\u5173\uff1a\u4fdd\u5b58\u548c\u52a0\u8f7d\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u96c6\u7fa4\u62d3\u6251\u4e0a\u5b8c\u6210\uff0c\u52a0\u8f7d\u65f6\u53ef\u81ea\u52a8\u91cd\u65b0\u5207\u5206\u5f20\u91cf\u3002</li> </ul>"},{"location":"pytorch/docs/source/distributed.checkpoint/#_1","title":"\u5165\u95e8\u8d44\u6599","text":"<ul> <li>Getting Started with Distributed Checkpoint</li> <li>Asynchronous Saving with Distributed Checkpoint</li> <li>TorchTitan \u4e2d\u7684\u4f7f\u7528\u793a\u4f8b</li> </ul>"},{"location":"pytorch/docs/source/distributed.checkpoint/#_2","title":"\u6838\u5fc3\u51fd\u6570","text":"<ul> <li><code>torch.distributed.checkpoint.save()</code> / <code>async_save()</code>\uff1a\u4fdd\u5b58\u6a21\u578b\u6216\u4f18\u5316\u5668 state_dict\u3002</li> <li><code>torch.distributed.checkpoint.load()</code>\uff1a\u52a0\u8f7d\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\u3002</li> <li><code>torch.distributed.checkpoint.save_state_dict()</code> \u4e0e <code>load_state_dict()</code>\uff1a\u9762\u5411\u5206\u5e03\u5f0f state_dict \u7684\u7b80\u5316\u5305\u88c5\u3002</li> </ul> <p>\u5bf9\u4e8e\u5f02\u6b65\u4fdd\u5b58\uff0c\u53ef\u4f7f\u7528 <code>async_save()</code> \u8fd4\u56de\u7684 <code>AsyncSaveResponse</code> \u5bf9\u8c61\u67e5\u8be2\u72b6\u6001\u6216\u7b49\u5f85\u5b8c\u6210\u3002</p>"},{"location":"pytorch/docs/source/distributed.checkpoint/#statefull","title":"\u72b6\u6001\u5b57\u5178\u4e0e Statefull \u5bf9\u8c61","text":"<p>\u90e8\u5206\u6a21\u5757\u6216\u4f18\u5316\u5668\u53ef\u80fd\u9700\u8981\u81ea\u5b9a\u4e49\u4fdd\u5b58/\u52a0\u8f7d\u903b\u8f91\u3002\u53ef\u4ee5\u7ee7\u627f <code>torch.distributed.checkpoint.stateful.Stateful</code> \u5e76\u5b9e\u73b0\u76f8\u5e94\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u5728\u5206\u5e03\u5f0f\u573a\u666f\u4e0b\u7ba1\u7406\u81ea\u5b9a\u4e49\u72b6\u6001\u3002</p> <p>\u5e38\u89c1\u7684\u8f85\u52a9\u7c7b\u578b\u5305\u62ec\uff1a</p> <ul> <li><code>AsyncCheckpointerType</code>\uff1a\u679a\u4e3e\u4e0d\u540c\u7684\u5f02\u6b65\u4fdd\u5b58\u5b9e\u73b0\u3002</li> <li><code>StorageReader</code> / <code>StorageWriter</code>\uff1a\u5b9a\u4e49\u5e95\u5c42\u5b58\u50a8\u63a5\u53e3\uff0c\u53ef\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u6587\u4ef6\u7cfb\u7edf\u6216\u5bf9\u8c61\u5b58\u50a8\u5199\u5165\u903b\u8f91\u3002</li> <li><code>LoadPlanner</code> / <code>SavePlanner</code> \u4e0e\u5bf9\u5e94\u7684 <code>Plan</code>\u3001<code>ReadItem</code>\u3001<code>WriteItem</code>\uff1a\u7528\u4e8e\u63cf\u8ff0\u52a0\u8f7d/\u4fdd\u5b58\u65f6\u7684\u5f20\u91cf\u5207\u5206\u3001\u4f20\u8f93\u8ba1\u5212\u3002</li> </ul> <p>PyTorch \u63d0\u4f9b\u4e86\u9ed8\u8ba4\u5b9e\u73b0 <code>DefaultSavePlanner</code> \u4e0e <code>DefaultLoadPlanner</code>\uff0c\u53ef\u76f4\u63a5\u914d\u5408 FSDP\u3001DDP\u3001ShardedTensor\u3001DistributedTensor \u7b49\u7ed3\u6784\u4f7f\u7528\u3002</p>"},{"location":"pytorch/docs/source/distributed.checkpoint/#_3","title":"\u5b58\u50a8\u540e\u7aef","text":"<p>DCP \u81ea\u5e26\u4ee5\u4e0b\u5b58\u50a8\u5b9e\u73b0\uff1a</p> <ul> <li><code>FileSystemReader</code> / <code>FileSystemWriter</code>\uff1a\u57fa\u4e8e\u6807\u51c6\u6587\u4ef6\u7cfb\u7edf\u7684\u8bfb\u5199\u3002</li> <li>HuggingFace \u76f8\u5173\u7684\u5b58\u50a8\u5c42\uff0c\u7528\u4e8e\u4e0e safetensors \u4e92\u64cd\u4f5c\u3002</li> </ul> <p>\u7528\u6237\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f <code>StorageReader</code> / <code>StorageWriter</code> \u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u5bf9\u8c61\u5b58\u50a8\u3001\u4e91\u5b58\u50a8\u7b49\u540e\u7aef\u3002</p>"},{"location":"pytorch/docs/source/distributed.checkpoint/#fsdpddp","title":"\u4e0e FSDP/DDP \u7684\u914d\u5408","text":"<p>\u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0cFSDP \u4e0e DDP \u7684 state_dict \u952e\u540d\u53ef\u80fd\u4e0d\u540c\u3002\u4e3a\u4e86\u7edf\u4e00\u952e\u540d\u5e76\u4fbf\u4e8e\u5728\u591a\u79cd\u5e76\u884c\u65b9\u5f0f\u95f4\u8fc1\u79fb\uff0c\u5efa\u8bae\u4f7f\u7528\uff1a</p> <ul> <li><code>torch.distributed.checkpoint.get_model_state_dict()</code></li> <li><code>torch.distributed.checkpoint.get_optimizer_state_dict()</code></li> </ul> <p>\u5b83\u4eec\u4f1a\u8fd4\u56de\u4e0e\u672a\u5e76\u884c\u6a21\u578b\u4e00\u81f4\u7684\u952e\u540d\uff0c\u4fbf\u4e8e\u76f4\u63a5\u642d\u914d DCP \u7684\u4fdd\u5b58/\u52a0\u8f7d\u51fd\u6570\u3002\u5bf9\u5e94\u7684 <code>set_model_state_dict()</code>\u3001<code>set_optimizer_state_dict()</code> \u53ef\u7528\u4e8e\u6062\u590d\u6a21\u578b\u4e0e\u4f18\u5316\u5668\u72b6\u6001\u3002</p> <p>\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\u8ba9\u5927\u6a21\u578b\u7684\u4fdd\u5b58\u4e0e\u6062\u590d\u66f4\u52a0\u9ad8\u6548\u3002\u7ed3\u5408\u9ed8\u8ba4\u8ba1\u5212\u5668\u4e0e\u5b58\u50a8\u5b9e\u73b0\uff0c\u5373\u53ef\u5728\u4fdd\u6301\u6613\u7528\u6027\u7684\u540c\u65f6\u83b7\u5f97\u826f\u597d\u7684\u6269\u5c55\u6027\u3002</p>"},{"location":"pytorch/docs/source/distributed.elastic/","title":"\u5f39\u6027\u8bad\u7ec3\uff08Torch Distributed Elastic\uff09","text":"<p>Torch Distributed Elastic \u65e8\u5728\u4e3a\u5206\u5e03\u5f0f\u8bad\u7ec3\u63d0\u4f9b\u5bb9\u9519\u3001\u5f39\u6027\u6269\u7f29\u5bb9\u7684\u80fd\u529b\uff0c\u53ef\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u52a8\u6001\u52a0\u5165\u6216\u5254\u9664\u8282\u70b9\uff0c\u81ea\u52a8\u91cd\u8bd5\u5931\u8d25\u7684 worker\u3002</p>"},{"location":"pytorch/docs/source/distributed.elastic/#_1","title":"\u4e3b\u8981\u7ec4\u4ef6","text":"<ul> <li>elastic-agent\uff1a\u8d1f\u8d23\u76d1\u63a7\u5404\u4e2a worker \u7684\u72b6\u6001\uff0c\u5904\u7406\u8282\u70b9\u52a0\u5165\u3001\u9000\u51fa\u4ee5\u53ca\u5931\u8d25\u91cd\u542f\u3002</li> <li>elastic/multiprocessing\uff1a\u63d0\u4f9b\u4e0e <code>torch.multiprocessing</code> \u7c7b\u4f3c\u7684\u63a5\u53e3\uff0c\u5c01\u88c5\u5f39\u6027\u8bad\u7ec3\u5e38\u89c1\u7684\u542f\u52a8\u6d41\u7a0b\u3002</li> <li>rendezvous\uff08\u96c6\u5408\u70b9\uff09\uff1a\u7528\u4e8e\u5728\u5f39\u6027\u73af\u5883\u4e0b\u534f\u8c03 rank \u5206\u914d\u4e0e\u4e16\u754c\u89c4\u6a21\u53d8\u5316\u3002\u652f\u6301\u591a\u79cd\u540e\u7aef\uff08\u5982 etcd\u3001C10d\uff09\u3002</li> <li>metrics / events\uff1a\u8bb0\u5f55\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7684\u4e8b\u4ef6\u4e0e\u6307\u6807\uff0c\u4fbf\u4e8e\u8bca\u65ad\u95ee\u9898\u3002</li> </ul>"},{"location":"pytorch/docs/source/distributed.elastic/#_2","title":"\u5e38\u89c1\u7528\u6cd5","text":"<ol> <li>\u7f16\u5199\u53ef\u5f39\u6027\u7684\u8bad\u7ec3\u811a\u672c\uff0c\u786e\u4fdd\u5728\u8282\u70b9\u6062\u590d\u65f6\u53ef\u4ee5\u91cd\u65b0\u52a0\u8f7d\u6700\u65b0\u68c0\u67e5\u70b9\u5e76\u7ee7\u7eed\u8bad\u7ec3\u3002</li> <li>\u4f7f\u7528 <code>torch.distributed.elastic.multiprocessing.run</code> \u6216\u547d\u4ee4\u884c\u5de5\u5177 <code>torchrun --standalone --max-restarts=...</code> \u542f\u52a8\u8bad\u7ec3\u3002</li> <li>\u7ed3\u5408 Kubernetes\u3001Slurm \u7b49\u96c6\u7fa4\u7ba1\u7406\u5668\uff0c\u901a\u8fc7\u76f8\u5e94\u63d2\u4ef6\u5b9e\u73b0\u81ea\u52a8\u6269\u7f29\u5bb9\u4e0e\u6545\u969c\u6062\u590d\u3002</li> </ol>"},{"location":"pytorch/docs/source/distributed.elastic/#_3","title":"\u63a8\u8350\u9605\u8bfb","text":"<ul> <li><code>elastic/quickstart</code>: \u5feb\u901f\u4f53\u9a8c\u5f39\u6027\u8bad\u7ec3\u3002</li> <li><code>elastic/train_script</code>: \u5982\u4f55\u7f16\u5199\u652f\u6301\u81ea\u52a8\u6062\u590d\u7684\u8bad\u7ec3\u811a\u672c\u3002</li> <li><code>elastic/examples</code>: \u7aef\u5230\u7aef\u793a\u4f8b\u3002</li> <li>\u8fdb\u9636\u4e3b\u9898\uff1a<code>elastic/customization</code>\u3002</li> <li>\u63d2\u4ef6\uff1a<code>elastic/kubernetes</code>\u3002</li> </ul> <p>\u501f\u52a9 Distributed Elastic\uff0c\u53ef\u4ee5\u5728\u4e0d\u727a\u7272\u8bad\u7ec3\u8fdb\u5ea6\u7684\u60c5\u51b5\u4e0b\u5e94\u5bf9\u8282\u70b9\u6545\u969c\u6216\u52a8\u6001\u6269\u5bb9\u9700\u6c42\uff0c\u662f\u6784\u5efa\u9c81\u68d2\u5206\u5e03\u5f0f\u8bad\u7ec3\u7cfb\u7edf\u7684\u5173\u952e\u5de5\u5177\u3002</p>"},{"location":"pytorch/docs/source/distributed.fsdp.fully_shard/","title":"<code>torch.distributed.fsdp.fully_shard</code>","text":"<p>FSDP2\uff08Fully Sharded Data Parallel v2\uff09\u57fa\u4e8e DTensor \u63d0\u4f9b\u5168\u65b0\u7684\u5206\u5e03\u5f0f\u5e76\u884c\u5b9e\u73b0\uff0c\u901a\u8fc7\u9010\u53c2\u6570\u5206\u7247\u5b9e\u73b0\u9ad8\u6548\u7684\u5185\u5b58\u5229\u7528\u548c\u66f4\u6613\u7406\u89e3\u7684\u8bed\u4e49\u3002RFC \u8ba8\u8bba \u4ecb\u7ecd\u4e86\u5176\u8bbe\u8ba1\u80cc\u666f\u3002</p>"},{"location":"pytorch/docs/source/distributed.fsdp.fully_shard/#fsdp1","title":"\u4e0e FSDP1 \u7684\u4e3b\u8981\u5dee\u5f02","text":"<ul> <li>\u6309\u53c2\u6570\u5206\u7247\uff1aFSDP2 \u6cbf\u7740\u7ef4\u5ea6 0 \u5bf9\u6bcf\u4e2a\u53c2\u6570\u5206\u7247\uff0c\u800c FSDP1 \u4f1a\u5c06\u82e5\u5e72\u5f20\u91cf\u5c55\u5e73\u518d\u5207\u5206\uff0cFSDP2 \u56e0\u800c\u66f4\u76f4\u89c2\uff0c\u4e5f\u4fbf\u4e8e\u652f\u6301\u51bb\u7ed3\u53c2\u6570\u4e0e\u5206\u7247 state_dict\u3002</li> <li>\u6539\u8fdb\u7684\u5185\u5b58\u7ba1\u7406\uff1a\u907f\u514d\u4f7f\u7528 <code>record_stream</code>\uff0c\u65e0\u9700\u50cf FSDP1 \u4e2d\u7684 <code>limit_all_gathers=True</code> \u90a3\u6837\u963b\u585e CPU\u3002</li> <li>\u53ef\u5b9a\u5236\u7684\u9884\u53d6\u4e0e\u8c03\u5ea6\uff1a\u901a\u8fc7 FSDPModule \u7684\u63a5\u53e3\uff0c\u7528\u6237\u53ef\u81ea\u5b9a\u4e49\u96c6\u5408\u901a\u4fe1\u987a\u5e8f\u4e0e\u9884\u53d6\u7b56\u7565\u3002</li> <li>\u66f4\u7b80\u5316\u7684 API\uff1aFSDP2 \u4e0d\u76f4\u63a5\u63d0\u4f9b\u5b8c\u6574 state_dict\uff0c\u800c\u662f\u63a8\u8350\u7ed3\u5408 DTensor API \u6216 Distributed Checkpoint \u6784\u5efa\u9700\u8981\u7684\u8868\u793a\u3002</li> </ul>"},{"location":"pytorch/docs/source/distributed.fsdp.fully_shard/#fully_shardmodel","title":"<code>fully_shard(model)</code> \u7684\u4f7f\u7528\u7ea6\u5b9a","text":"<ol> <li>\u6a21\u578b\u521d\u59cb\u5316\u540e\uff0c\u8c03\u7528 <code>fully_shard(model)</code>\u3002\u8be5\u51fd\u6570\u4f1a\u5c31\u5730\u5c06 <code>model.parameters()</code> \u8f6c\u6362\u4e3a DTensor\uff0c\u5e76\u6839\u636e\u8bbe\u5907 mesh \u5c06\u53c2\u6570\u79fb\u52a8\u5230\u76ee\u6807\u8bbe\u5907\u3002</li> <li>FSDP2 \u4f1a\u6ce8\u518c\u524d\u5411/\u53cd\u5411\u94a9\u5b50\uff0c\u5728\u6bcf\u6b21\u524d\u5411\u524d all-gather \u53c2\u6570\uff0c\u5728\u53cd\u5411\u7ed3\u675f\u540e\u91ca\u653e\u672a\u5206\u7247\u526f\u672c\u3002</li> <li>\u4f18\u5316\u5668\u9700\u8981\u57fa\u4e8e DTensor \u5f62\u5f0f\u7684\u53c2\u6570\u6784\u5efa\uff1b\u66f4\u65b0\u65f6\u540c\u6837\u5728 DTensor \u4e0a\u6267\u884c\u3002</li> <li>\u9700\u8981\u8c03\u7528 <code>model(input)</code> \u800c\u975e\u76f4\u63a5\u8c03\u7528 <code>model.forward</code>\uff0c\u4ee5\u89e6\u53d1\u94a9\u5b50\u3002\u82e5\u786e\u5b9e\u9700\u8981\u8c03\u7528 <code>forward</code>\uff0c\u53ef\u4f7f\u7528 <code>model.unshard()</code> \u6216\u6ce8\u518c <code>register_fsdp_forward_method</code>\u3002</li> <li>\u5728\u5c42\u7ea7\u5316\u6a21\u578b\uff08\u5982 Transformer\uff09\u4e2d\uff0c\u5efa\u8bae\u81ea\u5e95\u5411\u4e0a\u4f9d\u6b21\u8c03\u7528 <code>fully_shard</code>\uff0c\u8fd9\u6837\u53ef\u6309\u5c42\u5206\u7ec4 all-gather\u3002</li> <li>\u5e94\u7528\u540e\u6a21\u5757\u7c7b\u578b\u4f1a\u88ab\u201c\u5408\u5e76\u201d\u4e3a <code>FSDPModule</code>\uff0c\u4f8b\u5982\u539f\u672c\u7684 <code>nn.Linear</code> \u53d8\u4e3a <code>FSDPLinear</code>\uff0c\u540c\u65f6\u4fdd\u7559\u7ebf\u6027\u5c42\u4e0e <code>FSDPModule</code> \u7684\u65b9\u6cd5\uff08\u5982 <code>reshard()</code>\u3001<code>unshard()</code>\uff09\u3002</li> <li>\u53c2\u6570\u7684\u5168\u9650\u5b9a\u540d\u79f0\uff08FQN\uff09\u4e0d\u4f1a\u53d8\u5316\uff0c\u8c03\u7528 <code>model.state_dict()</code> \u65f6\u4ecd\u80fd\u5f97\u5230\u4e0e\u539f\u6a21\u578b\u4e00\u81f4\u7684\u952e\u540d\u3002</li> </ol>"},{"location":"pytorch/docs/source/distributed.fsdp.fully_shard/#api","title":"\u76f8\u5173 API","text":"<ul> <li><code>torch.distributed.fsdp.fully_shard()</code>\uff1a\u5bf9\u6a21\u5757\u5e94\u7528 FSDP2\u3002</li> <li><code>torch.distributed.fsdp.FSDPModule</code>\uff1aFSDP2 \u7684\u57fa\u7840\u7c7b\uff0c\u5305\u542b <code>reshard()</code>\u3001<code>unshard()</code> \u7b49\u65b9\u6cd5\u3002</li> <li><code>torch.distributed.fsdp.UnshardHandle</code>\uff1a\u8bb0\u5f55\u89e3\u9664\u5206\u7247\u65f6\u7684\u4e0a\u4e0b\u6587\u3002</li> <li><code>torch.distributed.fsdp.register_fsdp_forward_method()</code>\uff1a\u6ce8\u518c\u9700\u8981 Hook \u7684\u524d\u5411\u51fd\u6570\u3002</li> <li><code>MixedPrecisionPolicy</code>\u3001<code>OffloadPolicy</code>\u3001<code>CPUOffloadPolicy</code>\uff1a\u7528\u4e8e\u914d\u7f6e\u6df7\u5408\u7cbe\u5ea6\u53ca CPU offload \u7b56\u7565\u3002</li> <li><code>share_comm_ctx()</code>\uff1a\u5171\u4eab\u901a\u4fe1\u4e0a\u4e0b\u6587\u4ee5\u964d\u4f4e\u5f00\u9500\u3002</li> </ul>"},{"location":"pytorch/docs/source/distributed.fsdp.fully_shard/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>FSDP2 \u6559\u7a0b</li> <li>FSDP1 \u2192 FSDP2 \u8fc1\u79fb\u6307\u5357</li> <li>TorchTitan \u5173\u4e8e FSDP \u7684\u6587\u6863</li> </ul> <p>FSDP2 \u65e8\u5728\u5728\u4fdd\u8bc1\u6027\u80fd\u7684\u524d\u63d0\u4e0b\u63d0\u4f9b\u66f4\u76f4\u89c2\u7684 API \u4e0e\u53ef\u7ec4\u5408\u6027\uff0c\u9002\u5408\u4e0e DTensor\u3001\u5f20\u91cf\u5e76\u884c\u3001\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\u7b49\u529f\u80fd\u8054\u5408\u4f7f\u7528\u3002</p>"},{"location":"pytorch/docs/source/distributed/","title":"\u5206\u5e03\u5f0f\u901a\u4fe1\u5305 \u2014\u2014 <code>torch.distributed</code>","text":"<p>\u63d0\u793a</p> <p>\u5982\u9700\u5feb\u901f\u4e86\u89e3\u5206\u5e03\u5f0f\u8bad\u7ec3\u7684\u6574\u4f53\u7279\u6027\uff0c\u8bf7\u53c2\u8003\u5b98\u65b9\u6559\u7a0b\uff1aPyTorch Distributed Overview\u3002</p> <p><code>torch.distributed</code> \u4e3a\u591a\u8fdb\u7a0b\u5e76\u884c\u63d0\u4f9b\u901a\u4fe1\u539f\u8bed\uff0c\u53ef\u5728\u591a\u673a\u591a\u5361\u73af\u5883\u4e2d\u5b8c\u6210\u6a21\u578b\u8bad\u7ec3\u3001\u63a8\u7406\u4e0e\u72b6\u6001\u540c\u6b65\u3002\u5b83\u652f\u6301\u591a\u79cd\u901a\u4fe1\u540e\u7aef\uff0c\u5e76\u63d0\u4f9b\u4e86\u7528\u4e8e\u521d\u59cb\u5316\u3001\u5206\u7ec4\u3001\u70b9\u5bf9\u70b9\u901a\u4fe1\u3001\u96c6\u5408\u901a\u4fe1\u7b49\u64cd\u4f5c\u7684 API\u3002</p>"},{"location":"pytorch/docs/source/distributed/#_1","title":"\u540e\u7aef","text":"<p>PyTorch \u5f53\u524d\u5185\u7f6e\u56db\u79cd\u901a\u4fe1\u540e\u7aef\uff0c\u5b83\u4eec\u9488\u5bf9\u4e0d\u540c\u786c\u4ef6\u73af\u5883\u63d0\u4f9b\u4e0d\u540c\u7684\u80fd\u529b\u3002\u4e0b\u8868\u5217\u51fa\u4e86\u5404\u540e\u7aef\u5728 CPU/GPU \u4e0a\u652f\u6301\u7684\u4e3b\u8981\u63a5\u53e3\uff1b\u5bf9\u4e8e NCCL\uff0cGPU \u6307 CUDA \u8bbe\u5907\uff1b\u5bf9\u4e8e XCCL\uff0cGPU \u6307 XPU \u8bbe\u5907\u3002MPI \u662f\u5426\u652f\u6301 CUDA \u53d6\u51b3\u4e8e\u6784\u5efa PyTorch \u65f6\u7684 MPI \u5b9e\u73b0\u3002</p> <pre><code>+----------------+-----------+-----------+-----------+-----------+\n| Backend        | ``gloo``  | ``mpi``   | ``nccl``  | ``xccl``  |\n+----------------+-----+-----+-----+-----+-----+-----+-----+-----+\n| Device         | CPU | GPU | CPU | GPU | CPU | GPU | CPU | GPU |\n+================+=====+=====+=====+=====+=====+=====+=====+=====+\n| send           | \u2713   | \u2718   | \u2713   | ?   | \u2718   | \u2713   | \u2718   | \u2713   |\n+----------------+-----+-----+-----+-----+-----+-----+-----+-----+\n| recv           | \u2713   | \u2718   | \u2713   | ?   | \u2718   | \u2713   | \u2718   | \u2713   |\n+----------------+-----+-----+-----+-----+-----+-----+-----+-----+\n| broadcast      | \u2713   | \u2713   | \u2713   | ?   | \u2718   | \u2713   | \u2718   | \u2713   |\n+----------------+-----+-----+-----+-----+-----+-----+-----+-----+\n| all_reduce     | \u2713   | \u2713   | \u2713   | ?   | \u2718   | \u2713   | \u2718   | \u2713   |\n+----------------+-----+-----+-----+-----+-----+-----+-----+-----+\n| reduce         | \u2713   | \u2713   | \u2713   | ?   | \u2718   | \u2713   | \u2718   | \u2713   |\n+----------------+-----+-----+-----+-----+-----+-----+-----+-----+\n| all_gather     | \u2713   | \u2713   | \u2713   | ?   | \u2718   | \u2713   | \u2718   | \u2713   |\n+----------------+-----+-----+-----+-----+-----+-----+-----+-----+\n| gather         | \u2713   | \u2713   | \u2713   | ?   | \u2718   | \u2713   | \u2718   | \u2713   |\n+----------------+-----+-----+-----+-----+-----+-----+-----+-----+\n| scatter        | \u2713   | \u2713   | \u2713   | ?   | \u2718   | \u2713   | \u2718   | \u2713   |\n+----------------+-----+-----+-----+-----+-----+-----+-----+-----+\n| reduce_scatter | \u2713   | \u2713   | \u2718   | \u2718   | \u2718   | \u2713   | \u2718   | \u2713   |\n+----------------+-----+-----+-----+-----+-----+-----+-----+-----+\n| all_to_all     | \u2718   | \u2718   | \u2713   | ?   | \u2718   | \u2713   | \u2718   | \u2713   |\n+----------------+-----+-----+-----+-----+-----+-----+-----+-----+\n| barrier        | \u2713   | \u2718   | \u2713   | ?   | \u2718   | \u2713   | \u2718   | \u2713   |\n+----------------+-----+-----+-----+-----+-----+-----+-----+-----+\n</code></pre>"},{"location":"pytorch/docs/source/distributed/#_2","title":"\u540e\u7aef\u9009\u62e9\u5efa\u8bae","text":"<ul> <li>Gloo\uff1a\u9002\u7528\u4e8e CPU \u73af\u5883\u6216\u9700\u8981\u8de8\u4e3b\u673a\u901a\u4fe1\u7684 GPU \u8bad\u7ec3\u3002</li> <li>NCCL\uff1a\u63a8\u8350\u7528\u4e8e\u5355\u673a\u6216\u591a\u673a\u591a GPU \u8bad\u7ec3\u3002</li> <li>MPI\uff1a\u5728\u5df2\u6709 MPI \u57fa\u7840\u8bbe\u65bd\u65f6\u53ef\u9009\uff0c\u4f46\u9700\u8981\u81ea\u884c\u7f16\u8bd1\u652f\u6301 CUDA \u7684\u7248\u672c\u3002</li> <li>XCCL\uff1a\u9762\u5411 XPU \u7b49\u5f02\u6784\u786c\u4ef6\u3002</li> </ul> <p>PyTorch \u5728 Linux \u5e73\u53f0\u9ed8\u8ba4\u6784\u5efa Gloo \u548c NCCL \u540e\u7aef\uff08\u4ec5\u5728\u5f00\u542f CUDA \u65f6\u5305\u542b NCCL\uff09\u3002Windows \u81ea v1.8 \u8d77\u652f\u6301\u9664 NCCL \u5916\u7684\u6240\u6709\u540e\u7aef\u3002</p>"},{"location":"pytorch/docs/source/distributed/#_3","title":"\u7f51\u7edc\u63a5\u53e3\u8bbe\u7f6e","text":"<p>\u5728\u5b58\u5728\u591a\u4e2a\u7f51\u7edc\u63a5\u53e3\u7684\u73af\u5883\u4e2d\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4ee5\u4e0b\u73af\u5883\u53d8\u91cf\u6307\u5b9a\u901a\u4fe1\u63a5\u53e3\uff1a</p> <ul> <li><code>NCCL_SOCKET_IFNAME=eth0</code></li> <li><code>GLOO_SOCKET_IFNAME=eth0</code> \u6216 <code>eth0,eth1,eth2</code></li> </ul> <p>\u5bf9\u4e8e Gloo\uff0c\u53ef\u4e00\u6b21\u6307\u5b9a\u591a\u4e2a\u63a5\u53e3\uff0c\u540e\u7aef\u4f1a\u5bf9\u8fd9\u4e9b\u63a5\u53e3\u8f6e\u8be2\u53d1\u9001\u6570\u636e\u3002\u52a1\u5fc5\u4fdd\u8bc1\u6240\u6709\u8fdb\u7a0b\u8bbe\u7f6e\u76f8\u540c\u6570\u91cf\u7684\u63a5\u53e3\u3002</p>"},{"location":"pytorch/docs/source/distributed/#_4","title":"\u5176\u4ed6\u5e38\u7528\u73af\u5883\u53d8\u91cf","text":"<ul> <li><code>NCCL_DEBUG=INFO</code>\uff1a\u5728 NCCL \u5931\u8d25\u65f6\u8f93\u51fa\u8c03\u8bd5\u4fe1\u606f\u3002</li> <li><code>NCCL_DEBUG_SUBSYS=COLL</code> \u6216 <code>GRAPH</code>\uff1a\u5206\u522b\u7528\u4e8e\u8c03\u8bd5\u96c6\u5408\u901a\u4fe1\u6216\u62d3\u6251\u81ea\u52a8\u63a2\u6d4b\u3002</li> <li><code>NCCL_SOCKET_NTHREADS</code>\u3001<code>NCCL_NSOCKS_PERTHREAD</code>\uff1a\u5728\u90e8\u5206\u673a\u578b\u4e0a\u53ef\u8c03\u8282\u4ee5\u63d0\u9ad8\u5e26\u5bbd\u3002</li> </ul> <p>\u66f4\u591a\u53d8\u91cf\u8bf7\u53c2\u8003 NVIDIA NCCL \u5b98\u65b9\u6587\u6863\u3002</p>"},{"location":"pytorch/docs/source/distributed/#_5","title":"\u57fa\u7840\u6982\u5ff5","text":"<p><code>torch.distributed</code> \u4e0e {class}<code>torch.nn.parallel.DistributedDataParallel</code>\uff08DDP\uff09\u5171\u540c\u63d0\u4f9b\u4e86\u591a\u673a\u591a\u5361\u8bad\u7ec3\u6846\u67b6\u3002\u4e0e {func}<code>torch.nn.DataParallel</code> \u76f8\u6bd4\uff0cDDP/<code>torch.distributed</code> \u5177\u6709\u4ee5\u4e0b\u4f18\u52bf\uff1a</p> <ul> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u7ef4\u62a4\u81ea\u5df1\u7684\u4f18\u5316\u5668\u5e76\u6267\u884c\u5b8c\u6574\u7684\u4f18\u5316\u6b65\u9aa4\uff0c\u907f\u514d\u989d\u5916\u7684\u53c2\u6570\u5e7f\u64ad\u3002</li> <li>\u6bcf\u4e2a\u8fdb\u7a0b\u72ec\u7acb\u8fd0\u884c Python \u89e3\u91ca\u5668\uff0c\u51cf\u5c11 GIL \u7ade\u4e89\uff0c\u9002\u5408 RNN \u7b49\u5927\u91cf\u4f9d\u8d56 Python \u8fd0\u884c\u65f6\u7684\u6a21\u578b\u3002</li> </ul>"},{"location":"pytorch/docs/source/distributed/#_6","title":"\u521d\u59cb\u5316\u4e0e\u5e38\u7528\u5de5\u5177","text":"<p>\u8c03\u7528\u4efb\u4f55\u901a\u4fe1\u51fd\u6570\u524d\u5fc5\u987b\u521d\u59cb\u5316\u8fdb\u7a0b\u7ec4\u3002\u63a8\u8350\u4f7f\u7528 <code>torchrun</code> \u542f\u52a8\u811a\u672c\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u5747\u6267\u884c\u540c\u4e00\u6bb5\u4ee3\u7801\uff1a</p> <pre><code>import torch.distributed as dist\n\ndist.init_process_group(\n    backend=\"nccl\",\n    init_method=\"env://\",\n    world_size=int(os.environ[\"WORLD_SIZE\"]),\n    rank=int(os.environ[\"RANK\"]),\n)\n</code></pre>"},{"location":"pytorch/docs/source/distributed/#_7","title":"\u521d\u59cb\u5316\u65b9\u5f0f","text":"<ul> <li>\u73af\u5883\u53d8\u91cf\uff08\u9ed8\u8ba4\uff09\uff1a\u4f7f\u7528 <code>env://</code> \u65f6\u9700\u8bbe\u7f6e <code>MASTER_ADDR</code>\u3001<code>MASTER_PORT</code>\u3001<code>WORLD_SIZE</code>\u3001<code>RANK</code>\u3002</li> <li>TCP \u5730\u5740\uff1a\u901a\u8fc7 <code>tcp://host:port</code> \u6307\u5b9a rank0 \u6240\u5728\u673a\u5668\u7684\u5730\u5740\u3002</li> <li>\u5171\u4eab\u6587\u4ef6\u7cfb\u7edf\uff1a\u4f7f\u7528 <code>file://</code> \u6307\u5b9a\u6240\u6709\u8282\u70b9\u53ef\u89c1\u7684\u6587\u4ef6\u8def\u5f84\u3002</li> </ul> <p>\u82e5\u4f7f\u7528\u5171\u4eab\u6587\u4ef6\u7cfb\u7edf\uff0c\u8bf7\u786e\u4fdd\u6bcf\u6b21\u8fd0\u884c\u524d\u5220\u9664\u65e7\u6587\u4ef6\uff0c\u5e76\u4fdd\u8bc1\u6587\u4ef6\u7cfb\u7edf\u652f\u6301 <code>fcntl</code> \u9501\u3002</p>"},{"location":"pytorch/docs/source/distributed/#_8","title":"\u5e38\u7528\u68c0\u6d4b\u51fd\u6570","text":"<ul> <li><code>torch.distributed.is_available()</code></li> <li><code>torch.distributed.is_initialized()</code></li> <li><code>torch.distributed.get_backend()</code></li> <li><code>torch.distributed.get_rank()</code> / <code>get_world_size()</code></li> <li><code>torch.distributed.destroy_process_group()</code></li> </ul>"},{"location":"pytorch/docs/source/distributed/#devicemesh","title":"\u8fdb\u7a0b\u7ec4\u4e0e DeviceMesh","text":"<ul> <li>\u4f7f\u7528 <code>torch.distributed.new_group()</code> \u53ef\u4ee5\u521b\u5efa\u5b50\u8fdb\u7a0b\u7ec4\uff0c\u53ea\u5728\u6307\u5b9a\u8fdb\u7a0b\u4e4b\u95f4\u6267\u884c\u96c6\u5408\u901a\u4fe1\u3002</li> <li><code>torch.distributed.device_mesh.DeviceMesh</code> \u63d0\u4f9b\u4e86\u63cf\u8ff0\u96c6\u7fa4\u62d3\u6251\u7684\u9ad8\u5c42\u62bd\u8c61\uff0c\u53ef\u4e0e DTensor\u3001\u5f20\u91cf\u5e76\u884c\u7b49\u7ec4\u5408\u4f7f\u7528\u3002</li> </ul>"},{"location":"pytorch/docs/source/distributed/#_9","title":"\u70b9\u5bf9\u70b9\u901a\u4fe1","text":"<p>\u5e38\u7528\u63a5\u53e3\u5305\u62ec\uff1a</p> <ul> <li><code>torch.distributed.send()</code> / <code>recv()</code></li> <li><code>torch.distributed.isend()</code> / <code>irecv()</code> \uff08\u8fd4\u56de\u5f02\u6b65\u8bf7\u6c42\u5bf9\u8c61\uff0c\u652f\u6301 <code>is_completed()</code>\u3001<code>wait()</code>\uff09</li> <li><code>torch.distributed.batch_isend_irecv()</code></li> <li><code>torch.distributed.send_object_list()</code> / <code>recv_object_list()</code></li> </ul>"},{"location":"pytorch/docs/source/distributed/#_10","title":"\u96c6\u5408\u901a\u4fe1","text":"<p>\u6240\u6709\u96c6\u5408\u901a\u4fe1\u51fd\u6570\u5747\u652f\u6301 <code>async_op</code> \u53c2\u6570\u4ee5\u51b3\u5b9a\u662f\u5426\u5f02\u6b65\u6267\u884c\u3002\u5e38\u7528\u96c6\u5408\u901a\u4fe1\u5305\u62ec\uff1a</p> <ul> <li><code>torch.distributed.all_reduce()</code></li> <li><code>torch.distributed.reduce()</code></li> <li><code>torch.distributed.broadcast()</code></li> <li><code>torch.distributed.all_gather()</code> / <code>gather()</code> / <code>scatter()</code></li> <li><code>torch.distributed.reduce_scatter()</code></li> <li><code>torch.distributed.all_to_all()</code> / <code>all_to_all_single()</code></li> <li><code>torch.distributed.barrier()</code></li> </ul>"},{"location":"pytorch/docs/source/distributed/#gpu","title":"\u591a GPU\uff08\u5355\u7ebf\u7a0b\u591a\u8bbe\u5907\uff09\u63a5\u53e3","text":"<p>\u6ce8\u610f</p> <p>\u591a GPU \u63a5\u53e3\uff08\u5355\u4e2a CPU \u7ebf\u7a0b\u63a7\u5236\u591a\u4e2a GPU\uff09\u5df2\u88ab\u5f03\u7528\uff0c\u63a8\u8350\u4f7f\u7528\u201c\u4e00\u7ebf\u7a0b\u4e00\u8bbe\u5907\u201d\u7684\u7f16\u7a0b\u6a21\u578b\u3002</p>"},{"location":"pytorch/docs/source/distributed/#key-value-store","title":"Key-Value Store","text":"<p>\u540e\u7aef\u5185\u90e8\u4f9d\u8d56\u952e\u503c\u5b58\u50a8\u6765\u521d\u59cb\u5316\u548c\u5171\u4eab\u72b6\u6001\u3002PyTorch \u63d0\u4f9b\u4ee5\u4e0b\u5b9e\u73b0\uff1a</p> <ul> <li><code>torch.distributed.TCPStore</code></li> <li><code>torch.distributed.FileStore</code></li> <li><code>torch.distributed.HashStore</code></li> <li><code>torch.distributed.PrefixStore</code></li> </ul>"},{"location":"pytorch/docs/source/distributed/#_11","title":"\u6027\u80fd\u5206\u6790\u4e0e\u8c03\u8bd5","text":"<p>\u53ef\u4ee5\u4f7f\u7528 <code>torch.profiler</code> \u6216 <code>torch.autograd.profiler</code> \u8bb0\u5f55\u901a\u4fe1\u64cd\u4f5c\u3002\u4f8b\u5982\uff1a</p> <pre><code>with torch.profiler.profile():\n    tensor = torch.randn(20, 10)\n    dist.all_reduce(tensor)\n</code></pre> <p>\u542f\u7528\u65e5\u5fd7\u529f\u80fd\uff1a</p> <ul> <li><code>TORCH_LOGS=+pp</code>\uff08\u7ba1\u9053\u5e76\u884c\u65e5\u5fd7\uff09</li> <li><code>TORCH_LOGS=+dtensor</code>\uff08DTensor \u65e5\u5fd7\uff09</li> </ul>"},{"location":"pytorch/docs/source/distributed/#experimental","title":"\u5bf9\u8c61\u7ea7\u96c6\u5408\u901a\u4fe1\uff08Experimental\uff09","text":"<p>\u5bf9\u8c61\u96c6\u5408\u901a\u4fe1\u5141\u8bb8\u5728\u591a\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u5e7f\u64ad\u6216\u805a\u5408\u4efb\u610f\u53ef pickle \u7684 Python \u5bf9\u8c61\uff0c\u4f46\u5b58\u5728\u5982\u4e0b\u9650\u5236\uff1a</p> <ul> <li>\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u5f00\u9500\u53ef\u80fd\u5bfc\u81f4\u8d85\u65f6\u3002</li> <li>\u5bf9\u5f20\u91cf\u6267\u884c\u5bf9\u8c61\u96c6\u5408\u901a\u4fe1\u4f1a\u89e6\u53d1\u989d\u5916\u7684 CPU \u540c\u6b65\uff0c\u4e0d\u5efa\u8bae\u5728\u6027\u80fd\u654f\u611f\u573a\u666f\u4f7f\u7528\u3002</li> <li>\u5bf9\u4e8e CUDA \u5f20\u91cf\uff0cunpickle \u65f6\u4f1a\u5728\u9ed8\u8ba4\u8bbe\u5907\u4e0a\u5206\u914d\u663e\u5b58\uff0c\u53ef\u80fd\u5bfc\u81f4\u610f\u5916\u7684\u663e\u5b58\u5360\u7528\u3002</li> </ul> <p>\u82e5\u9700\u8981\u53d1\u9001\u5f20\u91cf\uff0c\u8bf7\u4f18\u5148\u4f7f\u7528\u5e38\u89c4\u96c6\u5408\u901a\u4fe1\u51fd\u6570\u3002</p>"},{"location":"pytorch/docs/source/distributed/#_12","title":"\u5176\u4ed6\u5e38\u7528\u51fd\u6570","text":"<ul> <li><code>torch.distributed.get_group_rank()</code> / <code>get_global_rank()</code></li> <li><code>torch.distributed.batch_isend_irecv()</code></li> <li><code>torch.distributed.loss_parallel</code>\uff08\u5f20\u91cf\u5e76\u884c\u4e2d\u7684\u635f\u5931\u5e76\u884c\uff09</li> </ul>"},{"location":"pytorch/docs/source/distributed/#_13","title":"\u5173\u95ed\u4e0e\u8d44\u6e90\u91ca\u653e","text":"<p>\u5728\u8bad\u7ec3\u7ed3\u675f\u65f6\u5e94\u8c03\u7528 <code>torch.distributed.destroy_process_group()</code> \u91ca\u653e\u6240\u6709\u901a\u4fe1\u8d44\u6e90\uff0c\u907f\u514d\u5728\u9000\u51fa\u9636\u6bb5\u51fa\u73b0\u6b7b\u9501\u3002\u6b64\u5916\uff0c\u5982\u679c\u4f60\u7684\u7a0b\u5e8f\u4f1a\u591a\u6b21\u521b\u5efa\u8fdb\u7a0b\u7ec4\uff08\u4f8b\u5982\u5bb9\u9519\u8bad\u7ec3\uff09\uff0c\u52a1\u5fc5\u5728\u6bcf\u6b21\u9500\u6bc1\u540e\u8fdb\u884c\u989d\u5916\u540c\u6b65\uff0c\u518d\u91cd\u65b0\u521d\u59cb\u5316\u3002</p> <p>\u4ee5\u4e0a\u5185\u5bb9\u6982\u8ff0\u4e86 <code>torch.distributed</code> \u7684\u6838\u5fc3\u7528\u6cd5\u3002\u6709\u5173\u66f4\u591a\u793a\u4f8b\u548c\u7ec6\u8282\uff0c\u8bf7\u53c2\u8003\u672c\u9879\u76ee\u5176\u4ed6\u7ae0\u8282\u4ee5\u53ca PyTorch \u5b98\u65b9\u6587\u6863\u3002</p>"},{"location":"pytorch/docs/source/distributed.optim/","title":"\u5206\u5e03\u5f0f\u4f18\u5316\u5668","text":"<p><code>torch.distributed.optim</code> \u6a21\u5757\u63d0\u4f9b\u4e86\u5728\u591a\u673a\u573a\u666f\u4e0b\u5c01\u88c5\u672c\u5730\u4f18\u5316\u5668\u7684\u5de5\u5177\uff0c\u7b80\u5316\u68af\u5ea6\u805a\u5408\u548c\u53c2\u6570\u66f4\u65b0\u6d41\u7a0b\u3002</p> <p>\u9650\u5236</p> <p>\u8fd9\u4e9b\u4f18\u5316\u5668\u76ee\u524d\u53ea\u652f\u6301 CPU \u5f20\u91cf\u3002\u5982\u679c\u9700\u8981\u5728 CUDA \u4e0a\u4f7f\u7528\uff0c\u5e94\u5148\u5c06\u68af\u5ea6\u540c\u6b65\u56de CPU\u3002</p>"},{"location":"pytorch/docs/source/distributed.optim/#_2","title":"\u5173\u952e\u7c7b","text":"<ul> <li><code>DistributedOptimizer</code>\uff1a\u63a5\u53d7\u4e00\u7ec4 <code>RRef</code>\uff08\u8fdc\u7a0b\u6216\u672c\u5730\u53c2\u6570\u5f15\u7528\uff09\uff0c\u5728\u6bcf\u4e2a\u53c2\u6570\u6240\u5c5e\u7684 worker \u4e0a\u521b\u5efa\u5e95\u5c42\u4f18\u5316\u5668\u5b9e\u4f8b\uff0c\u5e76\u5728 <code>step(context_id)</code> \u65f6\u5206\u5e03\u5f0f\u5730\u5e94\u7528\u68af\u5ea6\u3002\u68af\u5ea6\u503c\u4ece <code>torch.distributed.autograd</code> \u7684\u4e0a\u4e0b\u6587\u4e2d\u83b7\u53d6\u3002</li> <li><code>PostLocalSGDOptimizer</code>\uff1a\u5728\u8bad\u7ec3\u540e\u671f\u5c06\u672c\u5730 SGD \u66f4\u65b0\u4e0e\u5168\u5c40\u68af\u5ea6\u540c\u6b65\u7ed3\u5408\u4f7f\u7528\uff0c\u4ee5\u51cf\u5c11\u901a\u4fe1\u5f00\u9500\u3002</li> <li><code>ZeroRedundancyOptimizer</code>\uff1a\u5728\u591a\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u5206\u7247\u4f18\u5316\u5668\u72b6\u6001\uff0c\u907f\u514d\u5197\u4f59\u526f\u672c\uff0c\u5e38\u7528\u4e8e\u5927\u89c4\u6a21\u6a21\u578b\u8bad\u7ec3\u3002</li> </ul>"},{"location":"pytorch/docs/source/distributed.optim/#_3","title":"\u4f7f\u7528\u6d41\u7a0b\u6982\u8ff0","text":"<ol> <li>\u4e3a\u6a21\u578b\u53c2\u6570\u521b\u5efa <code>RRef</code>\uff08\u8fdc\u7a0b\u5f15\u7528\uff09\u3002\u672c\u5730\u53c2\u6570\u4e5f\u53ef\u4ee5\u901a\u8fc7\u672c\u5730 <code>RRef</code> \u5305\u88c5\u3002</li> <li>\u6784\u9020\u5206\u5e03\u5f0f\u4f18\u5316\u5668\uff0c\u4f8b\u5982\uff1a    <pre><code>dist_optim = DistributedOptimizer(\n    torch.optim.SGD,\n    [model_parameter_rref1, model_parameter_rref2],\n    lr=0.01,\n)\n</code></pre></li> <li>\u5728\u5206\u5e03\u5f0f autograd \u4e0a\u4e0b\u6587\u4e2d\u6267\u884c\u524d\u5411\u548c\u53cd\u5411\u8fd0\u7b97\uff0c\u5f97\u5230 <code>context_id</code>\u3002</li> <li>\u8c03\u7528 <code>dist_optim.step(context_id)</code>\uff0c\u5206\u5e03\u5f0f\u4f18\u5316\u5668\u4f1a\u5728\u5404\u81ea\u7684 worker \u4e0a\u6267\u884c\u5e95\u5c42\u4f18\u5316\u5668\u6b65\u9aa4\u3002</li> </ol>"},{"location":"pytorch/docs/source/distributed.optim/#_4","title":"\u53c2\u8003","text":"<p>\u5b8c\u6574\u793a\u4f8b\u53ef\u53c2\u89c1\u672c\u9879\u76ee\u7684 RPC/\u5206\u5e03\u5f0f Autograd \u7ae0\u8282\uff0c\u6216 PyTorch \u5b98\u65b9\u5206\u5e03\u5f0f\u4f18\u5316\u5668\u6587\u6863\u3002</p>"},{"location":"pytorch/docs/source/distributed.pipelining/","title":"\u7ba1\u9053\u5e76\u884c\uff08Pipeline Parallelism\uff09","text":"<p>\u72b6\u6001</p> <p><code>torch.distributed.pipelining</code> \u76ee\u524d\u4ecd\u5904\u4e8e Alpha \u9636\u6bb5\uff0cAPI \u53ef\u80fd\u4f1a\u6839\u636e\u793e\u533a\u53cd\u9988\u53d1\u751f\u53d8\u5316\u3002\u8be5\u7ec4\u4ef6\u8fc1\u79fb\u81ea PiPPy \u9879\u76ee\u3002</p>"},{"location":"pytorch/docs/source/distributed.pipelining/#_1","title":"\u4e3a\u4ec0\u4e48\u9009\u62e9\u7ba1\u9053\u5e76\u884c\uff1f","text":"<p>\u7ba1\u9053\u5e76\u884c\u662f\u6df1\u5ea6\u5b66\u4e60\u4e2d\u4e00\u79cd\u57fa\u7840\u7684\u5e76\u884c\u65b9\u5f0f\u3002\u5b83\u901a\u8fc7\u5212\u5206\u6a21\u578b\u7684\u6267\u884c\uff0c\u8ba9\u591a\u4e2a\u5fae\u6279\u6b21\u540c\u65f6\u8fd0\u884c\u6a21\u578b\u7684\u4e0d\u540c\u90e8\u5206\u3002 \u7ba1\u9053\u5e76\u884c\u5728\u4ee5\u4e0b\u573a\u666f\u4e2d\u5341\u5206\u6709\u6548\uff1a</p> <ul> <li>\u5927\u89c4\u6a21\u8bad\u7ec3\uff1b</li> <li>\u5e26\u5bbd\u53d7\u9650\u7684\u96c6\u7fa4\uff1b</li> <li>\u5927\u6a21\u578b\u63a8\u7406\u3002</li> </ul> <p>\u8fd9\u4e9b\u573a\u666f\u7684\u5171\u540c\u70b9\u662f\u5355\u4e2a\u8bbe\u5907\u4e0a\u7684\u8ba1\u7b97\u4e0d\u8db3\u4ee5\u63a9\u76d6\u5e38\u89c4\u5e76\u884c\u65b9\u5f0f\uff08\u4f8b\u5982 FSDP \u7684\u6743\u91cd all-gather\uff09\u5e26\u6765\u7684\u901a\u4fe1\u5f00\u9500\u3002</p>"},{"location":"pytorch/docs/source/distributed.pipelining/#torchdistributedpipelining","title":"<code>torch.distributed.pipelining</code> \u662f\u4ec0\u4e48\uff1f","text":"<p>\u5c3d\u7ba1\u7ba1\u9053\u5e76\u884c\u6709\u52a9\u4e8e\u6269\u5c55\u6027\u80fd\uff0c\u4f46\u5b9e\u73b0\u8d77\u6765\u5f80\u5f80\u5f88\u590d\u6742\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4ec5\u8981\u5bf9\u6a21\u578b\u6743\u91cd\u5206\u7247\uff0c\u8fd8\u9700\u8981\u5bf9\u6a21\u578b\u7684\u6267\u884c\u6d41\u7a0b\u8fdb\u884c\u5212\u5206\u3002 \u8fd9\u901a\u5e38\u610f\u5473\u7740\u9700\u8981\u5bf9\u6a21\u578b\u4ee3\u7801\u8fdb\u884c\u5927\u91cf\u4fee\u6539\u3002\u6b64\u5916\uff0c\u8fd8\u8981\u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\u8c03\u5ea6\u5fae\u6279\u6b21\uff0c\u540c\u65f6\u517c\u987e\u6570\u636e\u6d41\u4f9d\u8d56\u5173\u7cfb\u3002</p> <p><code>pipelining</code> \u5305\u63d0\u4f9b\u4e86\u4e00\u5957\u5de5\u5177\uff0c\u53ef\u4ee5\u81ea\u52a8\u5b8c\u6210\u4e0a\u8ff0\u4efb\u52a1\uff0c\u4ece\u800c\u5728\u901a\u7528\u6a21\u578b\u4e0a\u8f7b\u677e\u5b9e\u73b0\u7ba1\u9053\u5e76\u884c\u3002</p> <p>\u5b83\u7531\u4e24\u4e2a\u90e8\u5206\u7ec4\u6210\uff1a\u5207\u5206\u524d\u7aef\u4e0e\u5206\u5e03\u5f0f\u8fd0\u884c\u65f6\u3002\u5207\u5206\u524d\u7aef\u63a5\u6536\u539f\u59cb\u6a21\u578b\u4ee3\u7801\uff0c\u5c06\u5176\u62c6\u5206\u4e3a\u201c\u6a21\u578b\u5206\u533a\u201d\uff0c\u5e76\u6355\u6349\u6570\u636e\u6d41\u5173\u7cfb\uff1b\u5206\u5e03\u5f0f\u8fd0\u884c\u65f6 \u4f1a\u5728\u4e0d\u540c\u8bbe\u5907\u4e0a\u5e76\u884c\u6267\u884c\u8fd9\u4e9b\u5206\u533a\uff0c\u8d1f\u8d23\u5fae\u6279\u6b21\u5207\u5206\u3001\u8c03\u5ea6\u3001\u901a\u4fe1\u3001\u68af\u5ea6\u4f20\u64ad\u7b49\u5de5\u4f5c\u3002</p> <p>\u603b\u4f53\u800c\u8a00\uff0c<code>pipelining</code> \u63d0\u4f9b\u4e86\u5982\u4e0b\u7279\u6027\uff1a</p> <ul> <li>\u6839\u636e\u7b80\u5355\u7684\u89c4\u5219\u5207\u5206\u6a21\u578b\u4ee3\u7801\uff1b</li> <li>\u652f\u6301\u4e30\u5bcc\u7684\u8c03\u5ea6\u7b56\u7565\uff0c\u5305\u62ec GPipe\u30011F1B\u3001\u4ea4\u9519 1F1B\u3001Looped BFS\uff0c\u5e76\u63d0\u4f9b\u7f16\u5199\u81ea\u5b9a\u4e49\u8c03\u5ea6\u5668\u7684\u57fa\u7840\u8bbe\u65bd\uff1b</li> <li>\u539f\u751f\u652f\u6301\u8de8\u4e3b\u673a\u7684\u7ba1\u9053\u5e76\u884c\uff0c\u8fd9\u4e5f\u662f\u7ba1\u9053\u5e76\u884c\u5e38\u89c1\u7684\u5e94\u7528\u573a\u666f\uff08\u4f8b\u5982\u8de8\u6162\u901f\u4e92\u8fde\uff09\uff1b</li> <li>\u53ef\u4e0e PyTorch \u7684\u5176\u4ed6\u5e76\u884c\u6280\u672f\uff08\u5982 DDP\u3001FSDP\u3001\u5f20\u91cf\u5e76\u884c\uff09\u7ec4\u5408\u4f7f\u7528\u3002   TorchTitan \u5c55\u793a\u4e86\u5728 Llama \u6a21\u578b\u4e0a\u5b9e\u73b0\u201c\u4e09\u7ef4\u5e76\u884c\u201d\u7684\u793a\u4f8b\u3002</li> </ul>"},{"location":"pytorch/docs/source/distributed.pipelining/#pipelinestage","title":"\u6b65\u9aa4\u4e00\uff1a\u6784\u5efa <code>PipelineStage</code>","text":"<p>\u5728\u4f7f\u7528 <code>PipelineSchedule</code> \u4e4b\u524d\uff0c\u9700\u8981\u521b\u5efa <code>PipelineStage</code> \u5bf9\u8c61\uff0c\u5bf9\u5e94\u6bcf\u4e2a\u9636\u6bb5\u8981\u8fd0\u884c\u7684\u6a21\u578b\u90e8\u5206\u3002 <code>PipelineStage</code> \u8d1f\u8d23\u5206\u914d\u901a\u4fe1\u7f13\u51b2\u533a\u5e76\u521b\u5efa send/recv \u64cd\u4f5c\u4e0e\u5176\u4ed6\u9636\u6bb5\u901a\u4fe1\uff0c\u7ba1\u7406\u5c1a\u672a\u6d88\u8d39\u7684\u4e2d\u95f4\u7ed3\u679c\uff0c\u5e76\u63d0\u4f9b\u8fd0\u884c\u8be5\u9636\u6bb5\u53cd\u5411\u4f20\u64ad\u7684\u5de5\u5177\u3002</p> <p><code>PipelineStage</code> \u9700\u8981\u77e5\u9053\u9636\u6bb5\u6a21\u578b\u7684\u8f93\u5165\u548c\u8f93\u51fa\u5f62\u72b6\uff0c\u4ee5\u4fbf\u6b63\u786e\u5206\u914d\u901a\u4fe1\u7f13\u51b2\u533a\u3002\u8fd9\u4e9b\u5f62\u72b6\u5fc5\u987b\u662f\u9759\u6001\u7684\uff08\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4e0d\u80fd\u53d8\u5316\uff09\u3002 \u5982\u679c\u8fd0\u884c\u65f6\u5f62\u72b6\u4e0e\u9884\u671f\u4e0d\u5339\u914d\uff0c\u4f1a\u629b\u51fa <code>PipeliningShapeError</code>\u3002\u5728\u4e0e\u5176\u4ed6\u5e76\u884c\u65b9\u5f0f\u7ec4\u5408\u6216\u542f\u7528\u6df7\u5408\u7cbe\u5ea6\u65f6\uff0c\u9700\u8981\u8003\u8651\u8fd9\u4e9b\u56e0\u7d20\uff0c \u4ee5\u4fbf <code>PipelineStage</code> \u83b7\u53d6\u6b63\u786e\u7684\u5f62\u72b6\u4e0e dtype\u3002</p> <p>\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u6784\u9020 <code>PipelineStage</code>\uff0c\u5411\u5176\u4f20\u5165\u4ee3\u8868\u5f53\u524d\u9636\u6bb5\u6a21\u578b\u7684 <code>nn.Module</code>\u3002\u8fd9\u53ef\u80fd\u9700\u8981\u4fee\u6539\u539f\u59cb\u6a21\u578b\u4ee3\u7801\uff0c\u793a\u4f8b\u89c1 {ref}<code>option_1_manual</code>\u3002</p> <p>\u53e6\u4e00\u79cd\u65b9\u5f0f\u662f\u4f7f\u7528\u5207\u5206\u524d\u7aef\uff0c\u5b83\u4f1a\u57fa\u4e8e\u56fe\u5212\u5206\u81ea\u52a8\u5c06\u6a21\u578b\u62c6\u5206\u4e3a\u4e00\u7cfb\u5217 <code>nn.Module</code>\u3002\u8fd9\u79cd\u65b9\u5f0f\u8981\u6c42\u6a21\u578b\u53ef\u4ee5\u88ab <code>torch.Export</code> \u8ffd\u8e2a\u3002\u751f\u6210\u7684 <code>nn.Module</code> \u4e0e\u5176\u4ed6\u5e76\u884c\u65b9\u5f0f\u7684\u7ec4\u5408\u652f\u6301\u4ecd\u5728\u5b9e\u9a8c\u9636\u6bb5\uff0c\u53ef\u80fd\u9700\u8981\u4e00\u5b9a\u7684\u914d\u5408\u3002\u5bf9\u4e8e\u4e0d\u4fbf\u4fee\u6539\u6a21\u578b\u4ee3\u7801\u7684\u7528\u6237\u6765\u8bf4\uff0c\u8fd9\u79cd\u65b9\u5f0f\u66f4\u6613\u7528\u3002 \u8be6\u60c5\u89c1 {ref}<code>option_2_tracer</code>\u3002</p>"},{"location":"pytorch/docs/source/distributed.pipelining/#pipelineschedule","title":"\u6b65\u9aa4\u4e8c\uff1a\u4f7f\u7528 <code>PipelineSchedule</code> \u6267\u884c","text":"<p>\u6784\u5efa\u597d <code>PipelineStage</code> \u540e\uff0c\u5c31\u53ef\u4ee5\u5c06\u5176\u9644\u52a0\u5230\u8c03\u5ea6\u5668\u4e0a\u5e76\u8fd0\u884c\u3002\u4ee5\u4e0b\u662f GPipe \u7684\u793a\u4f8b\uff1a</p> <pre><code>from torch.distributed.pipelining import ScheduleGPipe\n\n# \u521b\u5efa\u8c03\u5ea6\u5668\nschedule = ScheduleGPipe(stage, n_microbatches)\n\n# \u8f93\u5165\uff08\u5b8c\u6574 batch\uff09\nx = torch.randn(batch_size, in_dim, device=device)\n\n# \u8fd0\u884c\u7ba1\u9053\uff0c`x` \u4f1a\u81ea\u52a8\u5212\u5206\u6210\u591a\u4e2a\u5fae\u6279\u6b21\nif rank == 0:\n    schedule.step(x)\nelse:\n    output = schedule.step()\n</code></pre> <p>\u9700\u8981\u6ce8\u610f\uff0c\u4e0a\u8ff0\u4ee3\u7801\u9700\u8981\u5728\u6bcf\u4e2a worker \u4e0a\u8fd0\u884c\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528 <code>torchrun</code> \u7b49\u542f\u52a8\u5668\u6765\u62c9\u8d77\u591a\u4e2a\u8fdb\u7a0b\uff1a</p> <pre><code>torchrun --nproc_per_node=2 example.py\n</code></pre>"},{"location":"pytorch/docs/source/distributed.pipelining/#_2","title":"\u6a21\u578b\u5207\u5206\u65b9\u5f0f","text":"<p>(option_1_manual)=</p>"},{"location":"pytorch/docs/source/distributed.pipelining/#_3","title":"\u65b9\u5f0f\u4e00\uff1a\u624b\u52a8\u5207\u5206\u6a21\u578b","text":"<p>\u5982\u679c\u8981\u76f4\u63a5\u6784\u9020 <code>PipelineStage</code>\uff0c\u7528\u6237\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a <code>nn.Module</code> \u5b9e\u4f8b\uff0c\u8be5\u5b9e\u4f8b\u5305\u542b\u5f53\u524d\u9636\u6bb5\u6240\u9700\u7684 <code>nn.Parameter</code> \u4e0e <code>nn.Buffer</code>\uff0c\u5e76\u5b9e\u73b0\u4e86\u5bf9\u5e94\u7684 <code>forward()</code>\u3002\u4e0b\u4f8b\u5c55\u793a\u4e86 Torchtitan \u4e2d Transformer \u7684\u7b80\u5316\u7248\u672c\uff0c \u4fbf\u4e8e\u5207\u5206\uff1a</p> <pre><code>class Transformer(nn.Module):\n    def __init__(self, model_args: ModelArgs):\n        super().__init__()\n\n        self.tok_embeddings = nn.Embedding(...)\n\n        # ModuleDict \u4fbf\u4e8e\u5220\u9664\u5c42\u540c\u65f6\u4fdd\u6301\u540d\u79f0\uff0c\u4ece\u800c\u6b63\u786e\u4fdd\u5b58/\u52a0\u8f7d\u68c0\u67e5\u70b9\n        self.layers = torch.nn.ModuleDict()\n        for layer_id in range(model_args.n_layers):\n            self.layers[str(layer_id)] = TransformerBlock(...)\n\n        self.output = nn.Linear(...)\n\n    def forward(self, tokens: torch.Tensor):\n        # \u5141\u8bb8\u5c42\u5728\u8fd0\u884c\u65f6\u4e3a None\uff0c\u4fbf\u4e8e\u7ba1\u9053\u5207\u5206\n        h = self.tok_embeddings(tokens) if self.tok_embeddings else tokens\n\n        for layer in self.layers.values():\n            h = layer(h, self.freqs_cis)\n\n        h = self.norm(h) if self.norm else h\n        output = self.output(h).float() if self.output else h\n        return output\n</code></pre> <p>\u6309\u7167\u4e0a\u8ff0\u6a21\u5f0f\u6784\u5efa\u6a21\u578b\u540e\uff0c\u53ef\u5148\u5728 meta \u8bbe\u5907\u4e0a\u521d\u59cb\u5316\u5b8c\u6574\u6a21\u578b\uff08\u907f\u514d OOM\uff09\uff0c\u518d\u5220\u9664\u5f53\u524d\u9636\u6bb5\u4e0d\u9700\u8981\u7684\u5c42\uff0c \u6700\u7ec8\u7528 <code>PipelineStage</code> \u5305\u88f9\u3002\u4f8b\u5982\uff1a</p> <pre><code>with torch.device(\"meta\"):\n    assert num_stages == 2, \"\u672c\u793a\u4f8b\u4ec5\u6f14\u793a\u4e24\u9636\u6bb5\"\n\n    model = Transformer()\n\n    if stage_index == 0:\n        del model.layers[\"1\"]\n        model.norm = None\n        model.output = None\n\n    elif stage_index == 1:\n        model.tok_embeddings = None\n        del model.layers[\"0\"]\n\n    from torch.distributed.pipelining import PipelineStage\n    stage = PipelineStage(\n        model,\n        stage_index,\n        num_stages,\n        device,\n    )\n</code></pre> <p>\u5f53\u4e0e\u5176\u4ed6\u6570\u636e\u6216\u6a21\u578b\u5e76\u884c\u65b9\u5f0f\u7ec4\u5408\u65f6\uff0c\u5982\u679c\u6a21\u578b\u5206\u533a\u7684\u8f93\u51fa\u5f62\u72b6\u6216 dtype \u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u53ef\u80fd\u9700\u8981\u989d\u5916\u63d0\u4f9b <code>output_args</code>\u3002</p> <p>(option_2_tracer)=</p>"},{"location":"pytorch/docs/source/distributed.pipelining/#_4","title":"\u65b9\u5f0f\u4e8c\uff1a\u81ea\u52a8\u5207\u5206\u6a21\u578b","text":"<p>\u5982\u679c\u5df2\u7ecf\u6709\u4e00\u4e2a\u5b8c\u6574\u6a21\u578b\uff0c\u53c8\u4e0d\u5e0c\u671b\u624b\u52a8\u62c6\u5206\u4e3a\u591a\u4e2a\u201c\u6a21\u578b\u5206\u533a\u201d\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>pipeline</code> API\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u8981\u793a\u4f8b\uff1a</p> <pre><code>class Model(torch.nn.Module):\n    def __init__(self) -&gt; None:\n        super().__init__()\n        self.emb = torch.nn.Embedding(10, 3)\n        self.layers = torch.nn.ModuleList(\n            Layer() for _ in range(2)\n        )\n        self.lm = LMHead()\n\n    def forward(self, x: torch.Tensor) -&gt; torch.Tensor:\n        x = self.emb(x)\n        for layer in self.layers:\n            x = layer(x)\n        x = self.lm(x)\n        return x\n</code></pre> <p>\u6253\u5370\u6a21\u578b\u53ef\u4ee5\u770b\u5230\u5b58\u5728\u591a\u5c42\u5d4c\u5957\uff0c\u624b\u52a8\u62c6\u5206\u5e76\u4e0d\u5bb9\u6613\uff1a</p> <pre><code>Model(\n  (emb): Embedding(10, 3)\n  (layers): ModuleList(\n    (0-1): 2 x Layer(\n      (lin): Linear(in_features=3, out_features=3, bias=True)\n    )\n  )\n  (lm): LMHead(\n    (proj): Linear(in_features=3, out_features=3, bias=True)\n  )\n)\n</code></pre> <p><code>pipeline</code> API \u7684\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>from torch.distributed.pipelining import pipeline, SplitPoint\n\n# \u4e00\u4e2a\u793a\u4f8b\u5fae\u6279\u6b21\nx = torch.LongTensor([1, 2, 4, 5])\n\npipe = pipeline(\n    module=mod,\n    mb_args=(x,),\n    split_spec={\n        \"layers.1\": SplitPoint.BEGINNING,\n    }\n)\n</code></pre> <p><code>split_spec</code> \u7528\u4e8e\u6307\u5b9a\u5207\u5206\u4f4d\u7f6e\uff0c\u5176\u4e2d <code>SplitPoint.BEGINNING</code> \u8868\u793a\u5728\u6307\u5b9a\u5b50\u6a21\u5757\u6267\u884c\u4e4b\u524d\u5207\u5206\uff0c <code>SplitPoint.END</code> \u8868\u793a\u5728\u6267\u884c\u4e4b\u540e\u5207\u5206\u3002</p> <p>\u6253\u5370 <code>pipe</code> \u53ef\u4ee5\u770b\u5230\uff1a</p> <pre><code>GraphModule(\n  (submod_0): GraphModule(\n    (emb): InterpreterModule()\n    (layers): Module(\n      (0): InterpreterModule(\n        (lin): InterpreterModule()\n      )\n    )\n  )\n  (submod_1): GraphModule(\n    (layers): Module(\n      (1): InterpreterModule(\n        (lin): InterpreterModule()\n      )\n    )\n    (lm): InterpreterModule(\n      (proj): InterpreterModule()\n    )\n  )\n)\n\ndef forward(self, x):\n    submod_0 = self.submod_0(x);  x = None\n    submod_1 = self.submod_1(submod_0);  submod_0 = None\n    return (submod_1,)\n</code></pre> <p>\u8fd9\u4e9b\u201c\u6a21\u578b\u5206\u533a\u201d\u7531\u5b50\u6a21\u5757 <code>submod_0</code>\u3001<code>submod_1</code> \u8868\u793a\uff0c\u5b83\u4eec\u4fdd\u7559\u4e86\u539f\u59cb\u6a21\u578b\u7684\u8fd0\u7b97\u3001\u6743\u91cd\u548c\u5c42\u7ea7\u7ed3\u6784\u3002 \u6839\u6a21\u5757\u91cd\u5efa\u7684 <code>forward</code> \u51fd\u6570\u8bb0\u5f55\u4e86\u5206\u533a\u4e4b\u95f4\u7684\u6570\u636e\u6d41\uff0c\u5206\u5e03\u5f0f\u8fd0\u884c\u65f6\u4f1a\u636e\u6b64\u5728\u5404\u9636\u6bb5\u4e4b\u95f4\u53d1\u9001/\u63a5\u6536\u6570\u636e\u3002</p> <p><code>Pipe</code> \u5bf9\u8c61\u63d0\u4f9b\u4ee5\u4e0b\u65b9\u6cd5\u83b7\u53d6\u201c\u6a21\u578b\u5206\u533a\u201d\uff1a</p> <pre><code>stage_mod : nn.Module = pipe.get_stage_module(stage_idx)\n</code></pre> <p>\u8fd4\u56de\u7684 <code>stage_mod</code> \u4ecd\u662f <code>nn.Module</code>\uff0c\u53ef\u4ee5\u7528\u6765\u521b\u5efa\u4f18\u5316\u5668\u3001\u4fdd\u5b58/\u52a0\u8f7d\u68c0\u67e5\u70b9\uff0c\u6216\u5e94\u7528\u5176\u4ed6\u5e76\u884c\u65b9\u5f0f\u3002</p> <p><code>Pipe</code> \u8fd8\u53ef\u4ee5\u57fa\u4e8e <code>ProcessGroup</code> \u5728\u6307\u5b9a\u8bbe\u5907\u4e0a\u6784\u5efa\u5206\u5e03\u5f0f\u9636\u6bb5\u8fd0\u884c\u65f6\uff1a</p> <pre><code>stage = pipe.build_stage(stage_idx, device, group)\n</code></pre> <p>\u5982\u679c\u5e0c\u671b\u5148\u5bf9 <code>stage_mod</code> \u505a\u8fdb\u4e00\u6b65\u5904\u7406\uff0c\u53ef\u4ee5\u4f7f\u7528\u51fd\u6570\u5f0f API\uff1a</p> <pre><code>from torch.distributed.pipelining import build_stage\nfrom torch.nn.parallel import DistributedDataParallel\n\ndp_mod = DistributedDataParallel(stage_mod)\ninfo = pipe.info()\nstage = build_stage(dp_mod, stage_idx, info, device, group)\n</code></pre> <p>\u63d0\u793a</p> <p><code>pipeline</code> \u524d\u7aef\u4f9d\u8d56 <code>torch.export</code> \u6784\u5efa\u5b8c\u6574\u8ba1\u7b97\u56fe\u3002\u5982\u679c\u6a21\u578b\u65e0\u6cd5\u88ab\u5b8c\u6574\u8ffd\u8e2a\uff0c\u8bf7\u6539\u7528\u624b\u52a8\u62c6\u5206\u65b9\u6848\u3002</p>"},{"location":"pytorch/docs/source/distributed.pipelining/#hugging-face","title":"Hugging Face \u793a\u4f8b","text":"<p>\u5728 <code>pipelining</code> \u6700\u521d\u6240\u5c5e\u7684 PiPPy \u4ed3\u5e93\u4e2d\uff0c\u4fdd\u7559\u4e86\u9488\u5bf9\u539f\u7248 Hugging Face \u6a21\u578b\u7684\u793a\u4f8b\uff0c \u89c1 examples/huggingface\u3002 \u5176\u4e2d\u5305\u62ec\uff1a</p> <ul> <li>GPT2</li> <li>Llama</li> </ul>"},{"location":"pytorch/docs/source/distributed.pipelining/#_5","title":"\u6280\u672f\u7ec6\u8282","text":""},{"location":"pytorch/docs/source/distributed.pipelining/#pipeline-api","title":"<code>pipeline</code> API \u5982\u4f55\u5207\u5206\u6a21\u578b\uff1f","text":"<p>\u9996\u5148\uff0c<code>pipeline</code> API \u4f7f\u7528 <code>torch.export</code> \u5c06\u6a21\u578b\u8f6c\u6362\u4e3a\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09\u3002</p> <p>\u968f\u540e\uff0c\u5b83\u5c06\u67d0\u4e2a\u9636\u6bb5\u6240\u9700\u7684\u7b97\u5b50\u548c\u53c2\u6570\u91cd\u65b0\u7ec4\u5408\u6210\u5b50\u6a21\u5757\uff08<code>submod_0</code>\u3001<code>submod_1</code> \u7b49\uff09\u3002</p> <p>\u4e0e\u5e38\u89c4\u7684 <code>Module.children()</code> \u7b49\u65b9\u6cd5\u4e0d\u540c\uff0c<code>pipeline</code> API \u4e0d\u4ec5\u5207\u5206\u6a21\u578b\u7ed3\u6784\uff0c\u8fd8\u5207\u5206\u6a21\u578b\u7684 <code>forward</code> \u51fd\u6570\u3002<code>Module.children()</code> \u53ea\u8bb0\u5f55 <code>Module.__init__()</code> \u4e2d\u7684\u4fe1\u606f\uff0c\u5e76\u4e0d\u4e86\u89e3 <code>Module.forward()</code> \u4e2d\u7684\u6267\u884c\u987a\u5e8f\u3001\u6fc0\u6d3b\u6d41\u4ee5\u53ca\u5b58\u5728\u7684\u51fd\u6570\u5f0f\u7b97\u5b50\uff08\u4f8b\u5982 <code>relu</code>\u3001<code>add</code>\uff09\u3002</p> <p><code>pipeline</code> API \u80fd\u591f\u4fdd\u7559\u5b8c\u6574\u7684 <code>forward</code> \u884c\u4e3a\uff0c\u8bb0\u5f55\u5206\u533a\u4e4b\u95f4\u7684\u6fc0\u6d3b\u6d41\uff0c\u5e2e\u52a9\u5206\u5e03\u5f0f\u8fd0\u884c\u65f6\u6b63\u786e\u5730\u4e0b\u53d1\u53d1\u9001/\u63a5\u6536\u64cd\u4f5c\u3002</p> <p>\u6b64\u5916\uff0c<code>pipeline</code> API \u652f\u6301\u5728\u6a21\u578b\u5c42\u7ea7\u4e2d\u7684\u4efb\u610f\u4f4d\u7f6e\u8bbe\u7f6e\u5207\u5206\u70b9\u3002\u751f\u6210\u7684\u5206\u533a\u4f1a\u4fdd\u7559\u4e0e\u8be5\u5206\u533a\u76f8\u5173\u7684\u6a21\u578b\u5c42\u7ea7\u7ed3\u6784\uff0c\u56e0\u6b64 \u6307\u5411\u5b50\u6a21\u5757\u6216\u53c2\u6570\u7684\u5168\u9650\u5b9a\u540d\u79f0\u4ecd\u7136\u6709\u6548\uff0c\u4f9d\u8d56 FQN \u7684\u670d\u52a1\uff08\u5982 FSDP\u3001\u5f20\u91cf\u5e76\u884c\u6216\u68c0\u67e5\u70b9\u4fdd\u5b58\uff09\u51e0\u4e4e\u65e0\u9700\u4fee\u6539\u5373\u53ef\u7ee7\u7eed\u4f7f\u7528\u3002</p>"},{"location":"pytorch/docs/source/distributed.pipelining/#_6","title":"\u81ea\u5b9a\u4e49\u8c03\u5ea6\u5668","text":"<p>\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f\u4e0b\u5217\u7c7b\u4e4b\u4e00\u5b9e\u73b0\u81ea\u5b9a\u4e49\u8c03\u5ea6\u5668\uff1a</p> <ul> <li><code>PipelineScheduleSingle</code></li> <li><code>PipelineScheduleMulti</code></li> </ul> <p><code>PipelineScheduleSingle</code> \u7528\u4e8e\u6bcf\u4e2a rank \u4ec5\u5206\u914d\u4e00\u4e2a\u9636\u6bb5\u7684\u8c03\u5ea6\uff1b<code>PipelineScheduleMulti</code> \u7528\u4e8e\u6bcf\u4e2a rank \u62e5\u6709\u591a\u4e2a\u9636\u6bb5\u7684\u8c03\u5ea6\u3002</p> <p>\u4f8b\u5982\uff0c<code>ScheduleGPipe</code> \u4e0e <code>Schedule1F1B</code> \u7ee7\u627f\u81ea <code>PipelineScheduleSingle</code>\uff1b<code>ScheduleInterleaved1F1B</code>\u3001 <code>ScheduleLoopedBFS</code>\u3001<code>ScheduleInterleavedZeroBubble</code>\u3001<code>ScheduleZBVZeroBubble</code> \u5219\u7ee7\u627f\u81ea <code>PipelineScheduleMulti</code>\u3002</p>"},{"location":"pytorch/docs/source/distributed.pipelining/#_7","title":"\u65e5\u5fd7","text":"<p>\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u73af\u5883\u53d8\u91cf <code>TORCH_LOGS</code>\uff08\u53c2\u89c1 torch._logging\uff09\u5f00\u542f\u989d\u5916\u65e5\u5fd7\uff1a</p> <ul> <li><code>TORCH_LOGS=+pp</code>\uff1a\u663e\u793a <code>logging.DEBUG</code> \u53ca\u4ee5\u4e0a\u7ea7\u522b\u7684\u65e5\u5fd7\uff1b</li> <li><code>TORCH_LOGS=pp</code>\uff1a\u663e\u793a <code>logging.INFO</code> \u53ca\u4ee5\u4e0a\u7ea7\u522b\u7684\u65e5\u5fd7\u3002</li> </ul>"},{"location":"pytorch/docs/source/distributed.tensor/","title":"<code>torch.distributed.tensor</code>\uff08DTensor\uff09","text":"<p>DTensor \u662f PyTorch \u4e3a\u5f20\u91cf\u5206\u7247\u63d0\u4f9b\u7684\u516c\u5171\u62bd\u8c61\u3002\u5b83\u4ee5 SPMD\uff08Single Program, Multiple Data\uff09\u7f16\u7a0b\u6a21\u578b\u4e3a\u57fa\u7840\uff0c\u8d1f\u8d23\u7ba1\u7406\u5206\u7247\u540e\u7684\u5b58\u50a8\u3001\u7b97\u5b50\u6267\u884c\u4ee5\u53ca\u96c6\u5408\u901a\u4fe1\u3002</p> <p>\u72b6\u6001</p> <p><code>torch.distributed.tensor</code> \u76ee\u524d\u4ecd\u5904\u4e8e Alpha \u9636\u6bb5\uff0cAPI \u53ef\u80fd\u4f1a\u6839\u636e\u53cd\u9988\u8c03\u6574\u3002</p>"},{"location":"pytorch/docs/source/distributed.tensor/#_1","title":"\u6838\u5fc3\u6982\u5ff5","text":"<ul> <li>DeviceMesh\uff1a\u4f7f\u7528\u591a\u7ef4\u6570\u7ec4\u63cf\u8ff0\u8bbe\u5907\u62d3\u6251\uff0c\u5e76\u5728\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\u7ef4\u62a4\u901a\u4fe1\u5668\u3002\u53ef\u4e0e\u6570\u636e\u5e76\u884c\u3001\u5f20\u91cf\u5e76\u884c\u7b49\u65b9\u6848\u7ec4\u5408\u3002</li> <li>Placement\uff1a\u63cf\u8ff0\u5f20\u91cf\u5728 DeviceMesh \u4e0a\u7684\u653e\u7f6e\u65b9\u5f0f\u3002\u5e38\u89c1\u7c7b\u578b\u5305\u62ec\uff1a</li> <li><code>Shard(dim)</code>\uff1a\u5728\u6307\u5b9a\u7ef4\u5ea6\u4e0a\u5207\u5206\u5f20\u91cf\uff1b</li> <li><code>Replicate()</code>\uff1a\u5728\u6240\u6709 rank \u4e0a\u590d\u5236\u6570\u636e\uff1b</li> <li><code>Partial()</code>\uff1a\u5b58\u50a8\u90e8\u5206\u7ed3\u679c\uff0c\u9700\u8981\u989d\u5916\u7684\u5f52\u7ea6\u64cd\u4f5c\u624d\u80fd\u5f97\u5230\u5b8c\u6574\u503c\u3002</li> <li>DTensor\uff1a<code>torch.Tensor</code> \u7684\u5b50\u7c7b\uff0c\u4f7f\u7528\u4e0a\u8ff0\u4fe1\u606f\u63cf\u8ff0\u903b\u8f91\u5f20\u91cf\u7684\u5206\u5e03\u5f0f\u5e03\u5c40\u3002\u7528\u6237\u53ef\u4ee5\u50cf\u4f7f\u7528\u666e\u901a\u5f20\u91cf\u4e00\u6837\u8c03\u7528\u7b97\u5b50\uff0cDTensor \u4f1a\u81ea\u52a8\u5904\u7406\u5e95\u5c42\u901a\u4fe1\u3002</li> </ul>"},{"location":"pytorch/docs/source/distributed.tensor/#_2","title":"\u521b\u5efa\u65b9\u5f0f","text":"<ol> <li>\u4ece\u903b\u8f91\u5f20\u91cf\u5206\u5e03\uff1a\u4f7f\u7528 <code>torch.distributed.tensor.distribute_tensor(tensor, device_mesh, placements)</code> \u5c06\u5df2\u6709\u7684\u903b\u8f91\u5f20\u91cf\u5206\u7247\u6210 DTensor\u3002\u9002\u5408\u7528\u4e8e\u6a21\u578b\u53c2\u6570\u6216\u8f93\u5165\u6570\u636e\u3002</li> <li>\u4ece\u672c\u5730\u5f20\u91cf\u5305\u88c5\uff1a<code>DTensor.from_local(local_tensor, device_mesh=device_mesh, placements=...)</code>\uff0c\u9002\u5408\u4e2d\u95f4\u6fc0\u6d3b\u6216\u81ea\u5b9a\u4e49\u6570\u636e\u3002</li> <li>\u5de5\u5382\u51fd\u6570\uff1a<code>dtensor.zeros()</code>\u3001<code>dtensor.ones()</code>\u3001<code>dtensor.empty()</code>\u3001<code>dtensor.rand()</code>\u3001<code>dtensor.randn()</code>\u3001<code>dtensor.full()</code> \u7b49\uff0c\u53ef\u76f4\u63a5\u5728\u76ee\u6807\u5e03\u5c40\u4e0a\u6784\u9020\u5f20\u91cf\u3002</li> </ol>"},{"location":"pytorch/docs/source/distributed.tensor/#_3","title":"\u5e38\u7528\u65b9\u6cd5","text":"<ul> <li><code>dtensor.to_local()</code>\uff1a\u83b7\u53d6\u5f53\u524d rank \u4e0a\u7684\u672c\u5730\u5f20\u91cf\u3002</li> <li><code>dtensor.full_tensor()</code>\uff1a\u5728\u672c\u5730\u8fd8\u539f\u5b8c\u6574\u5f20\u91cf\u526f\u672c\u3002</li> <li><code>dtensor.redistribute(device_mesh, placements)</code>\uff1a\u6539\u53d8\u5f20\u91cf\u5e03\u5c40\uff0c\u53ef\u5728\u4e0d\u540c\u5e76\u884c\u7b56\u7565\u4e4b\u95f4\u8f6c\u6362\u3002</li> <li><code>dtensor.device_mesh</code>\u3001<code>dtensor.placements</code>\uff1a\u67e5\u8be2\u5f53\u524d\u5e03\u5c40\u4fe1\u606f\u3002</li> </ul>"},{"location":"pytorch/docs/source/distributed.tensor/#_4","title":"\u968f\u673a\u6570\u4e0e\u8c03\u8bd5","text":"<p>DTensor \u5bf9\u968f\u673a\u6570\u751f\u6210\u63d0\u4f9b\u4e00\u81f4\u6027\u4fdd\u969c\uff1a\u5bf9\u4e8e\u5206\u7247\u5f20\u91cf\u751f\u6210\u7684\u968f\u673a\u503c\u5728\u5404 rank \u4e0a\u4e0d\u540c\uff0c\u800c\u590d\u5236\u5f20\u91cf\u4f1a\u5f97\u5230\u76f8\u540c\u7684\u7ed3\u679c\u3002\u82e5\u9700\u8981\u8c03\u8bd5\u901a\u4fe1\uff0c\u53ef\u4f7f\u7528 <code>torch.distributed.tensor.debug.CommDebugMode()</code> \u6216 <code>visualize_sharding(dtensor)</code> \u67e5\u770b\u5206\u7247\u60c5\u51b5\u3002</p>"},{"location":"pytorch/docs/source/distributed.tensor/#_5","title":"\u5b9e\u9a8c\u6027\u529f\u80fd","text":"<p>\u6a21\u5757 <code>torch.distributed.tensor.experimental</code> \u63d0\u4f9b <code>context_parallel</code>\u3001<code>local_map</code>\u3001<code>register_sharding</code> \u7b49\u5b9e\u9a8c\u7279\u6027\uff0c\u53ef\u63a2\u7d22\u66f4\u7075\u6d3b\u7684\u5e76\u884c\u6a21\u5f0f\u3002</p> <p>DTensor \u662f FSDP2\u3001\u5f20\u91cf\u5e76\u884c\u7b49\u9ad8\u7ea7\u529f\u80fd\u7684\u57fa\u7840\u6784\u4ef6\u3002\u901a\u8fc7\u7edf\u4e00\u7684 DeviceMesh \u4e0e Placement \u62bd\u8c61\uff0c\u5b83\u8ba9\u5206\u5e03\u5f0f\u5f20\u91cf\u8fd0\u7b97\u66f4\u6613\u7ec4\u5408\u3001\u66f4\u5177\u53ef\u8bfb\u6027\u3002</p>"},{"location":"pytorch/docs/source/distributed.tensor.parallel/","title":"\u5f20\u91cf\u5e76\u884c \u2014\u2014 <code>torch.distributed.tensor.parallel</code>","text":"<p><code>torch.distributed.tensor.parallel</code> \u5728 DTensor \u4e4b\u4e0a\u5b9e\u73b0\u4e0d\u540c\u98ce\u683c\u7684\u5f20\u91cf\u5e76\u884c\uff0c\u9002\u7528\u4e8e\u5c06\u5927\u578b\u6a21\u578b\u62c6\u5206\u5230\u591a\u4e2a\u8bbe\u5907\u4e0a\u6267\u884c\u3002\u4e3b\u8981\u652f\u6301\u4ee5\u4e0b\u6a21\u5f0f\uff1a</p> <ul> <li>\u5217\u5e76\u884c\uff08ColwiseParallel\uff09\uff1a\u6cbf\u6743\u91cd\u77e9\u9635\u5217\u65b9\u5411\u5207\u5206\uff0c\u5e38\u7528\u4e8e\u7ebf\u6027\u5c42\u7684\u8f93\u51fa\u6295\u5f71\u3002</li> <li>\u884c\u5e76\u884c\uff08RowwiseParallel\uff09\uff1a\u6cbf\u6743\u91cd\u77e9\u9635\u884c\u65b9\u5411\u5207\u5206\uff0c\u9002\u5408\u5904\u7406\u8f93\u5165\u65b9\u5411\u7684\u5206\u7247\u3002</li> <li>\u5e8f\u5217\u5e76\u884c\uff08SequenceParallel\uff09\uff1a\u6cbf\u5e8f\u5217\u957f\u5ea6\u6216\u6279\u6b21\u7ef4\u5ea6\u5207\u5206\uff0c\u964d\u4f4e\u8de8\u8bbe\u5907\u901a\u4fe1\u3002</li> </ul>"},{"location":"pytorch/docs/source/distributed.tensor.parallel/#_1","title":"\u5165\u53e3\u51fd\u6570","text":"<ul> <li><code>parallelize_module(module, parallelize_plan, device_mesh)</code>\uff1a\u6839\u636e\u7ed9\u5b9a\u7684 <code>parallelize_plan</code>\uff08\u5305\u542b\u82e5\u5e72 <code>ParallelStyle</code>\uff09\u5bf9 <code>nn.Module</code> \u6267\u884c\u5f20\u91cf\u5e76\u884c\u6539\u5199\u3002</li> </ul> <p>\u5e38\u7528\u7684 <code>ParallelStyle</code> \u5305\u62ec\uff1a</p> <ul> <li><code>ColwiseParallel</code></li> <li><code>RowwiseParallel</code></li> <li><code>SequenceParallel</code></li> <li><code>PrepareModuleInput</code> / <code>PrepareModuleOutput</code> / <code>PrepareModuleInputOutput</code>\uff1a\u53ea\u8c03\u6574\u8f93\u5165\u6216\u8f93\u51fa\u5f20\u91cf\u7684 DTensor \u5e03\u5c40\uff0c\u800c\u4e0d\u4fee\u6539\u6a21\u5757\u53c2\u6570\u3002</li> </ul> <p>\u5206\u7247\u8981\u6c42</p> <p>\u5f53 <code>ParallelStyle</code> \u6307\u5b9a\u8f93\u5165/\u8f93\u51fa\u5e03\u5c40\u4e3a <code>Shard(dim)</code> \u65f6\uff0c\u9ed8\u8ba4\u5047\u8bbe\u76f8\u5e94\u6fc0\u6d3b\u5f20\u91cf\u5df2\u7ecf\u5728\u7ef4\u5ea6 <code>dim</code> \u4e0a\u5747\u5300\u5206\u7247\u3002\u82e5\u5b58\u5728\u4e0d\u5747\u5300\u5206\u7247\uff0c\u8bf7\u76f4\u63a5\u4f20\u5165 DTensor\uff0c\u5e76\u5c06 <code>use_local_output=False</code> \u4ee5\u4fdd\u7559 DTensor \u7684\u5206\u7247\u4fe1\u606f\u3002</p>"},{"location":"pytorch/docs/source/distributed.tensor.parallel/#_2","title":"\u4f7f\u7528\u5efa\u8bae","text":"<ol> <li>\u5728 Transformer \u7b49\u6a21\u578b\u4e2d\uff0c\u53ef\u5728\u540c\u4e00\u5c42\u5185\u7ec4\u5408 <code>ColwiseParallel</code> \u4e0e <code>RowwiseParallel</code>\uff0c\u5206\u522b\u5904\u7406\u6ce8\u610f\u529b\u548c MLP \u90e8\u5206\u3002</li> <li>\u5bf9\u4e8e\u635f\u5931\u8ba1\u7b97\uff0c\u53ef\u4f7f\u7528 <code>torch.distributed.tensor.parallel.loss_parallel()</code> \u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff0c\u5b9e\u73b0\u4ea4\u53c9\u71b5\u7b49 loss \u7684\u5e76\u884c\u5316\u3002</li> <li>\u5f20\u91cf\u5e76\u884c\u53ef\u4e0e\u6570\u636e\u5e76\u884c\u3001\u7ba1\u9053\u5e76\u884c\u3001FSDP2 \u7b49\u65b9\u6848\u7ec4\u5408\uff0c\u6784\u5efa\u201c3D \u5e76\u884c\u201d\u8bad\u7ec3\u6d41\u7a0b\u3002</li> </ol> <p>\u5f20\u91cf\u5e76\u884c API \u4ecd\u5904\u4e8e\u5b9e\u9a8c\u9636\u6bb5\u3002\u82e5\u9700\u8981\u66f4\u7ec6\u7c92\u5ea6\u7684\u63a7\u5236\u6216\u81ea\u5b9a\u4e49\u5206\u7247\u7b56\u7565\uff0c\u53ef\u5728 <code>parallelize_plan</code> \u4e2d\u7ec4\u5408\u591a\u79cd <code>ParallelStyle</code>\uff0c\u6216\u76f4\u63a5\u4f7f\u7528 DTensor \u63d0\u4f9b\u7684\u4f4e\u5c42\u63a5\u53e3\u3002</p>"},{"location":"pytorch/docs/source/fsdp/","title":"FullyShardedDataParallel\uff08FSDP\uff09\u6982\u89c8","text":"<p>FullyShardedDataParallel\uff08FSDP\uff09\u662f PyTorch \u9762\u5411\u5927\u6a21\u578b\u8bad\u7ec3\u7684\u5206\u5e03\u5f0f\u6570\u636e\u5e76\u884c\u65b9\u6848\u3002\u5b83\u901a\u8fc7\u6241\u5e73\u5316\u53c2\u6570\u5e76\u5728 rank \u4e4b\u95f4\u5206\u7247\uff0c\u663e\u8457\u964d\u4f4e\u663e\u5b58\u5360\u7528\uff0c\u540c\u65f6\u5728\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\u6309\u9700 all-gather \u6743\u91cd\uff0c\u4fdd\u6301\u8bad\u7ec3\u7ed3\u679c\u4e0e\u5355\u673a\u4e00\u81f4\u3002</p>"},{"location":"pytorch/docs/source/fsdp/#_1","title":"\u6838\u5fc3\u80fd\u529b","text":"<ul> <li>\u53c2\u6570\u5206\u7247\u4e0e\u901a\u4fe1\uff1a\u6a21\u578b\u6743\u91cd\u5728\u6240\u6709 rank \u95f4\u5206\u7247\u5b58\u50a8\uff0c\u524d\u5411/\u53cd\u5411\u65f6\u518d\u805a\u5408\u6240\u9700\u7247\u6bb5\u3002\u652f\u6301\u591a\u79cd <code>ShardingStrategy</code>\uff08\u5168\u5206\u7247\u3001\u5206\u5c42\u5206\u7247\u3001\u6df7\u5408\u5206\u7247\u7b49\uff09\u3002</li> <li>\u53cd\u5411\u9884\u53d6\uff1a\u901a\u8fc7 <code>BackwardPrefetch</code> \u63a7\u5236\u53cd\u5411\u4f20\u64ad\u7684\u53c2\u6570\u9884\u53d6\u65f6\u673a\uff0c\u51cf\u5c11\u7b49\u5f85\u65f6\u95f4\u3002</li> <li>\u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3\uff1a<code>MixedPrecision</code> \u652f\u6301\u5728\u524d\u5411\u3001\u53cd\u5411\u548c\u53c2\u6570\u66f4\u65b0\u9636\u6bb5\u5206\u522b\u8bbe\u7f6e\u6570\u636e\u7c7b\u578b\uff1b\u53ef\u914d\u5408 <code>torch.cuda.amp</code> \u4f7f\u7528\u3002</li> <li>CPU Offload\uff1a\u5229\u7528 <code>CPUOffload</code> \u5c06\u90e8\u5206\u6743\u91cd\u4e34\u65f6\u653e\u5230 CPU \u5185\u5b58\uff0c\u8fdb\u4e00\u6b65\u964d\u4f4e\u663e\u5b58\u538b\u529b\u3002</li> <li>\u72b6\u6001\u5b57\u5178\u7ba1\u7406\uff1a\u901a\u8fc7 <code>StateDictConfig</code> \u7cfb\u5217\uff08<code>FullStateDictConfig</code>\u3001<code>LocalStateDictConfig</code>\u3001<code>ShardedStateDictConfig</code>\uff09\u7075\u6d3b\u5bfc\u51fa/\u52a0\u8f7d\u4e0d\u540c\u5f62\u6001\u7684 state_dict\u3002</li> </ul>"},{"location":"pytorch/docs/source/fsdp/#api","title":"\u5e38\u7528 API","text":"<ul> <li><code>torch.distributed.fsdp.FullyShardedDataParallel(module, ...)</code>\uff1a\u5305\u88c5\u5f85\u8bad\u7ec3\u7684 <code>nn.Module</code>\uff0c\u521b\u5efa FSDP \u5b9e\u4f8b\u3002</li> <li><code>ShardingStrategy</code>\uff1a\u9009\u62e9\u5177\u4f53\u7684\u5206\u7247\u7b56\u7565\uff0c\u4f8b\u5982 <code>FULL_SHARD</code>\u3001<code>SHARD_GRAD_OP</code> \u7b49\u3002</li> <li><code>MixedPrecision</code> / <code>CPUOffload</code>\uff1a\u914d\u7f6e\u6df7\u5408\u7cbe\u5ea6\u548c CPU offload\u3002</li> <li><code>StateDictType</code>\uff1a\u5728 <code>state_dict()</code> \u4e0e <code>load_state_dict()</code> \u65f6\u63a7\u5236\u5bfc\u51fa\u7684 state_dict \u7c7b\u578b\u3002</li> </ul> <p>FSDP \u8fd8\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u548c\u5de5\u5177\u51fd\u6570\uff0c\u7528\u4e8e\u4e34\u65f6\u5207\u6362 state_dict \u7c7b\u578b\u3001\u4e0e Optimizer \u96c6\u6210\u7b49\u3002</p>"},{"location":"pytorch/docs/source/fsdp/#_2","title":"\u5178\u578b\u4f7f\u7528\u6d41\u7a0b","text":"<ol> <li>\u5148\u4f7f\u7528 <code>torch.cuda.set_device(rank)</code> \u7ed1\u5b9a\u5f53\u524d\u8fdb\u7a0b\u6240\u5728\u7684 GPU\u3002</li> <li>\u6784\u9020\u57fa\u7840\u6a21\u578b\uff0c\u5e76\u4f7f\u7528 <code>FSDP(model, ...)</code> \u5305\u88c5\u3002</li> <li>\u82e5\u9700\u8981\u6df7\u5408\u7cbe\u5ea6\u6216 CPU offload\uff0c\u53ef\u5728\u6784\u9020 FSDP \u65f6\u4f20\u5165\u76f8\u5e94\u7b56\u7565\u3002</li> <li>\u6309\u5e38\u89c4\u65b9\u5f0f\u7f16\u5199\u524d\u5411\u3001\u53cd\u5411\u548c\u4f18\u5316\u6b65\u9aa4\uff1bFSDP \u4f1a\u81ea\u52a8\u5904\u7406\u901a\u4fe1\u3002</li> <li>\u5bfc\u51fa\u6216\u52a0\u8f7d state_dict \u65f6\uff0c\u6839\u636e\u9700\u6c42\u9009\u62e9 <code>StateDictType.SHARDED_STATE_DICT</code>\u3001<code>LOCAL_STATE_DICT</code> \u6216 <code>FULL_STATE_DICT</code>\u3002</li> </ol>"},{"location":"pytorch/docs/source/fsdp/#_3","title":"\u7ec4\u5408\u4f7f\u7528","text":"<p>FSDP \u53ef\u4ee5\u4e0e\u5176\u4ed6\u5e76\u884c\u65b9\u5f0f\uff08\u5982\u6570\u636e\u5e76\u884c\u3001\u5f20\u91cf\u5e76\u884c\u3001\u7ba1\u9053\u5e76\u884c\uff09\u7ed3\u5408\uff0c\u5728 K/N \u7ef4\u7a7a\u95f4\u4e0a\u5b9e\u73b0\u66f4\u590d\u6742\u7684\u5e76\u884c\u7b56\u7565\u3002\u5b98\u65b9\u63a8\u8350\u5728\u6781\u5927\u6a21\u578b\u8bad\u7ec3\u65f6\u7ed3\u5408 DTensor \u6216\u5206\u5e03\u5f0f\u68c0\u67e5\u70b9\u4ee5\u83b7\u5f97\u66f4\u9ad8\u7684\u53ef\u6269\u5c55\u6027\u3002</p> <p>\u66f4\u591a\u53c2\u6570\u548c\u793a\u4f8b\u53ef\u53c2\u9605 PyTorch \u5b98\u65b9 FSDP \u6587\u6863\u4e0e\u6559\u7a0b\u3002\u672c\u9875\u4e3b\u8981\u6982\u8ff0\u5173\u952e\u6982\u5ff5\uff0c\u5177\u4f53 API \u8bf7\u4ee5\u6700\u65b0\u5b98\u65b9\u6587\u6863\u4e3a\u51c6\u3002</p>"},{"location":"pytorch/docs/source/rpc/distributed_autograd/","title":"\u5206\u5e03\u5f0f Autograd \u8bbe\u8ba1","text":"<p>\u672c\u6587\u6982\u8ff0\u5206\u5e03\u5f0f autograd \u7684\u8bbe\u8ba1\uff0c\u5e76\u68b3\u7406\u5176\u5185\u90e8\u5b9e\u73b0\u3002\u9605\u8bfb\u524d\u5efa\u8bae\u5148\u4e86\u89e3 Autograd \u5de5\u4f5c\u539f\u7406\u548c RPC \u6846\u67b6\u7684\u57fa\u672c\u6982\u5ff5\u3002</p>"},{"location":"pytorch/docs/source/rpc/distributed_autograd/#_1","title":"\u80cc\u666f","text":"<p>\u5047\u8bbe\u6211\u4eec\u6709\u4e24\u4e2a\u8282\u70b9\uff0c\u4e00\u4e2a\u7b80\u5355\u6a21\u578b\u88ab\u62c6\u5206\u5728\u4e24\u4e2a\u8282\u70b9\u4e0a\u3002\u53ef\u4ee5\u4f7f\u7528 <code>torch.distributed.rpc</code> \u5b9e\u73b0\u5982\u4e0b\uff1a</p> <pre><code>import torch\nimport torch.distributed.rpc as rpc\n\ndef my_add(t1, t2):\n    return torch.add(t1, t2)\n\n# \u5728 worker0 \u4e0a\uff1a\nt1 = torch.rand((3, 3), requires_grad=True)\nt2 = torch.rand((3, 3), requires_grad=True)\n\n# \u8fdc\u7a0b\u6267\u884c\u90e8\u5206\u8ba1\u7b97\u3002\nt3 = rpc.rpc_sync(\"worker1\", my_add, args=(t1, t2))\n\n# \u57fa\u4e8e\u8fdc\u7a0b\u7ed3\u679c\u518d\u6267\u884c\u672c\u5730\u8ba1\u7b97\u3002\nt4 = torch.rand((3, 3), requires_grad=True)\nt5 = torch.mul(t3, t4)\n\n# \u8ba1\u7b97\u635f\u5931\u3002\nloss = t5.sum()\n</code></pre> <p>\u5206\u5e03\u5f0f autograd \u7684\u4e3b\u8981\u76ee\u6807\u662f\uff1a\u4ee5 <code>loss</code> \u4e3a\u8d77\u70b9\u8fd0\u884c backward\uff0c\u5e76\u4e3a\u6240\u6709\u9700\u8981\u68af\u5ea6\u7684\u5f20\u91cf\u8bb0\u5f55\u6b63\u786e\u7684\u68af\u5ea6\u3002</p>"},{"location":"pytorch/docs/source/rpc/distributed_autograd/#autograd_1","title":"\u524d\u5411\u8fc7\u7a0b\u4e2d\u7684 autograd \u8bb0\u5f55","text":"<p>PyTorch \u4f1a\u5728\u524d\u5411\u8fc7\u7a0b\u4e2d\u6784\u5efa autograd \u56fe\uff0c\u4e4b\u540e\u7528\u4e8e\u6267\u884c\u53cd\u5411\u4f20\u64ad\uff0c \u66f4\u591a\u80cc\u666f\u53ef\u53c2\u8003\u5b98\u65b9\u6587\u6863\u201cAutograd \u5982\u4f55\u8bb0\u5f55\u5386\u53f2\u201d\u7ae0\u8282\u3002</p> <p>\u5728\u5206\u5e03\u5f0f\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8ffd\u8e2a\u524d\u5411\u8fc7\u7a0b\u4e2d\u7684\u6240\u6709 RPC\uff0c\u786e\u4fdd\u53cd\u5411\u4f20\u64ad\u6b63\u786e\u6267\u884c\u3002 \u56e0\u6b64\uff0c\u5728\u6267\u884c RPC \u65f6\u4f1a\u5411 autograd \u56fe\u4e2d\u63d2\u5165 <code>send</code> \u4e0e <code>recv</code> \u51fd\u6570\u3002</p> <ul> <li><code>send</code> \u51fd\u6570\u9644\u7740\u5728 RPC \u6e90\u8282\u70b9\u4e0a\uff0c\u5176\u8f93\u51fa\u8fb9\u6307\u5411 RPC \u8f93\u5165\u5f20\u91cf\u7684 autograd \u51fd\u6570\u3002   \u53cd\u5411\u8fc7\u7a0b\u4e2d\uff0c\u5b83\u4f1a\u4ece\u76ee\u6807\u8282\u70b9\u63a5\u6536\u5bf9\u5e94 <code>recv</code> \u51fd\u6570\u7684\u8f93\u51fa\u4f5c\u4e3a\u8f93\u5165\u68af\u5ea6\u3002</li> <li><code>recv</code> \u51fd\u6570\u9644\u7740\u5728 RPC \u76ee\u6807\u8282\u70b9\u4e0a\uff0c\u5176\u8f93\u5165\u6765\u81ea\u76ee\u6807\u8282\u70b9\u4e0a\u57fa\u4e8e RPC \u8f93\u5165\u5f20\u91cf\u6267\u884c\u7684\u8fd0\u7b97\u3002   \u5b83\u7684\u8f93\u51fa\u68af\u5ea6\u4f1a\u5728\u53cd\u5411\u8fc7\u7a0b\u4e2d\u53d1\u9001\u56de\u6e90\u8282\u70b9\u7684 <code>send</code> \u51fd\u6570\u3002</li> <li>\u6bcf\u4e2a <code>send-recv</code> \u5bf9\u62e5\u6709\u5168\u5c40\u552f\u4e00\u7684 <code>autograd_message_id</code>\uff0c\u7528\u4e8e\u5728\u53cd\u5411\u65f6\u5728\u8fdc\u7aef\u67e5\u627e\u5bf9\u5e94\u51fd\u6570\u3002</li> <li>\u5bf9\u4e8e RRef\uff0c\u8c03\u7528 <code>torch.distributed.rpc.RRef.to_here()</code> \u65f6\u4f1a\u5bf9\u76f8\u5173\u5f20\u91cf\u63d2\u5165\u76f8\u5e94\u7684 <code>send-recv</code> \u5bf9\u3002</li> </ul> <p>\u4e0b\u56fe\u5c55\u793a\u4e86\u524d\u8ff0\u793a\u4f8b\u7684 autograd \u56fe\uff08\u4e3a\u7b80\u5316\u8d77\u89c1\u7701\u7565 <code>t5.sum()</code>\uff09\uff1a</p> <p></p>"},{"location":"pytorch/docs/source/rpc/distributed_autograd/#autograd_2","title":"\u5206\u5e03\u5f0f Autograd \u4e0a\u4e0b\u6587","text":"<p>\u6bcf\u6b21\u4f7f\u7528\u5206\u5e03\u5f0f autograd \u7684\u524d\u5411\u548c\u53cd\u5411\u90fd\u5bf9\u5e94\u4e00\u4e2a\u552f\u4e00\u7684\u4e0a\u4e0b\u6587 <code>torch.distributed.autograd.context</code>\uff0c\u8be5\u4e0a\u4e0b\u6587\u62e5\u6709\u5168\u5c40\u552f\u4e00\u7684 <code>autograd_context_id</code>\u3002 \u4e0a\u4e0b\u6587\u4f1a\u5728\u5404\u8282\u70b9\u6309\u9700\u521b\u5efa\u3002</p> <p>\u4e0a\u4e0b\u6587\u7684\u4f5c\u7528\u5982\u4e0b\uff1a</p> <ol> <li>\u591a\u4e2a\u8282\u70b9\u7684\u5206\u5e03\u5f0f backward \u53ef\u80fd\u4f1a\u5728\u540c\u4e00\u4e2a\u5f20\u91cf\u4e0a\u7d2f\u79ef\u68af\u5ea6\uff0c\u8fd9\u6837\u5728\u8fd0\u884c\u4f18\u5316\u5668\u4e4b\u524d\uff0c    \u5f20\u91cf\u7684 <code>.grad</code> \u5b57\u6bb5\u53ef\u80fd\u6df7\u6742\u6765\u81ea\u4e0d\u540c backward \u7684\u68af\u5ea6\uff0c\u7c7b\u4f3c\u672c\u5730\u591a\u6b21\u8c03\u7528    <code>torch.autograd.backward()</code>\u3002\u4e3a\u533a\u5206\u4e0d\u540c backward \u7684\u68af\u5ea6\uff0c\u6bcf\u6b21 backward \u7684\u68af\u5ea6\u90fd\u4f1a\u5b58\u5165\u5bf9\u5e94\u7684    \u8be5\u4e0a\u4e0b\u6587\u4f1a\u4fdd\u5b58\u6240\u6709 <code>send</code> / <code>recv</code> \u51fd\u6570\uff0c\u786e\u4fdd Autograd \u56fe\u5728 backward \u671f\u95f4\u4fdd\u6301\u6709\u6548\u3002</li> <li>\u524d\u5411\u8fc7\u7a0b\u4e2d\u4f1a\u5728\u4e0a\u4e0b\u6587\u4e2d\u8bb0\u5f55\u6bcf\u4e2a autograd pass \u7684 <code>send</code> \u548c <code>recv</code> \u51fd\u6570\u3002    \u8fd9\u6837\u65e2\u80fd\u4fdd\u6301\u5bf9 autograd \u56fe\u8282\u70b9\u7684\u5f15\u7528\uff08\u9632\u6b62\u88ab\u91ca\u653e\uff09\uff0c\u53c8\u4fbf\u4e8e\u5728 backward \u9636\u6bb5\u67e5\u627e\u5bf9\u5e94\u51fd\u6570\u3002</li> <li>\u4e0a\u4e0b\u6587\u8fd8\u7528\u4e8e\u5b58\u50a8\u6bcf\u6b21\u5206\u5e03\u5f0f autograd \u7684\u5143\u6570\u636e\u3002</li> </ol> <p>\u4ece\u7528\u6237\u89d2\u5ea6\uff0c\u53ef\u4ee5\u8fd9\u6837\u8bbe\u7f6e\u4e0a\u4e0b\u6587\uff1a</p> <pre><code>import torch.distributed.autograd as dist_autograd\n\nwith dist_autograd.context() as context_id:\n    loss = model.forward()\n    dist_autograd.backward(context_id, loss)\n</code></pre> <p>\u8bf7\u52a1\u5fc5\u5728\u5206\u5e03\u5f0f autograd \u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u5185\u6267\u884c\u6a21\u578b\u524d\u5411\u3002\u8fd9\u6837\u624d\u80fd\u786e\u4fdd\u6b63\u786e\u8bb0\u5f55\u6240\u6709 <code>send</code> \u548c <code>recv</code> \u51fd\u6570\uff0c \u4ece\u800c\u5728\u53c2\u4e0e\u7684\u6240\u6709\u8282\u70b9\u4e0a\u6267\u884c\u53cd\u5411\u4f20\u64ad\u3002</p>"},{"location":"pytorch/docs/source/rpc/distributed_autograd/#_2","title":"\u5206\u5e03\u5f0f\u53cd\u5411\u4f20\u64ad","text":"<p>\u672c\u8282\u8ba8\u8bba\u5728\u5206\u5e03\u5f0f\u53cd\u5411\u8fc7\u7a0b\u4e2d\u51c6\u786e\u8ba1\u7b97\u4f9d\u8d56\u5173\u7cfb\u7684\u6311\u6218\uff0c\u5e76\u4ecb\u7ecd\u4e24\u79cd\u7b97\u6cd5\uff08\u5404\u6709\u53d6\u820d\uff09\u3002</p>"},{"location":"pytorch/docs/source/rpc/distributed_autograd/#_3","title":"\u4f9d\u8d56\u5173\u7cfb\u8ba1\u7b97","text":"<p>\u8003\u8651\u5728\u5355\u673a\u4e0a\u8fd0\u884c\u7684\u4ee5\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>import torch\na = torch.rand((3, 3), requires_grad=True)\nb = torch.rand((3, 3), requires_grad=True)\nc = torch.rand((3, 3), requires_grad=True)\nd = a + b\ne = b * c\nd.sum().backward()\n</code></pre> <p>\u5176 autograd \u56fe\u5982\u4e0b\uff08\u62ec\u53f7\u4e2d\u7684\u6570\u5b57\u8868\u793a\u4f9d\u8d56\u6570\u91cf\uff09\uff1a</p> <p></p> <p>autograd \u5f15\u64ce\u5728 backward \u5f00\u59cb\u65f6\u4f1a\u7edf\u8ba1\u56fe\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u4f9d\u8d56\u6570\u91cf\uff0c\u8fd9\u6837\u5c31\u77e5\u9053\u4f55\u65f6\u53ef\u4ee5\u6267\u884c\u8be5\u8282\u70b9\u3002 \u672c\u5730 autograd \u5f15\u64ce\u901a\u8fc7\u904d\u5386\u6839\u8282\u70b9\uff08\u6b64\u4f8b\u4e2d\u4e3a <code>d</code>\uff09\u5373\u53ef\u5f97\u5230\u4f9d\u8d56\u3002</p> <p>\u7136\u800c\uff0c\u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\uff0c\u67d0\u4e9b\u8282\u70b9\u53ef\u80fd\u4e0d\u4f1a\u5728 backward \u4e2d\u6267\u884c\uff0c\u8fd9\u5e26\u6765\u4e86\u989d\u5916\u6311\u6218\u3002\u8003\u8651\u4ee5\u4e0b\u4f7f\u7528 RPC \u7684\u4ee3\u7801\uff1a</p> <pre><code>import torch\nimport torch.distributed.rpc as rpc\n\na = torch.rand((3, 3), requires_grad=True)\nb = torch.rand((3, 3), requires_grad=True)\nc = torch.rand((3, 3), requires_grad=True)\n\nd = rpc.rpc_sync(\"worker1\", torch.add, args=(a, b))\ne = rpc.rpc_sync(\"worker1\", torch.mul, args=(b, c))\nloss = d.sum()\n</code></pre> <p>\u5bf9\u5e94\u7684 autograd \u56fe\u5982\u4e0b\uff1a</p> <p></p> <p>\u5bf9\u8fd9\u6837\u7684\u5206\u5e03\u5f0f\u56fe\u7edf\u8ba1\u4f9d\u8d56\u66f4\u52a0\u56f0\u96be\uff0c\u9700\u8981\u989d\u5916\u7684\u8ba1\u7b97\u6216\u901a\u4fe1\u5f00\u9500\u3002</p> <p>\u5728\u6027\u80fd\u654f\u611f\u7684\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u5b9a\u6bcf\u4e2a <code>send</code> \u548c <code>recv</code> \u51fd\u6570\u90fd\u4f1a\u53c2\u4e0e backward\uff0c \u4ece\u800c\u907f\u514d\u5927\u91cf\u5f00\u9500\uff08\u5927\u591a\u6570\u5e94\u7528\u4e0d\u4f1a\u53d1\u8d77\u65e0\u7528\u7684 RPC\uff09\u3002\u8fd9\u6837\u53ef\u4ee5\u663e\u8457\u7b80\u5316\u5206\u5e03\u5f0f autograd \u7b97\u6cd5\uff0c\u63d0\u9ad8\u6548\u7387\uff0c \u4f46\u9700\u8981\u5e94\u7528\u4e86\u89e3\u8be5\u9650\u5236\u3002\u6211\u4eec\u79f0\u5176\u4e3a FAST \u6a21\u5f0f\u7b97\u6cd5\uff0c\u4e0b\u6587\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u3002</p> <p>\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5e76\u975e\u6240\u6709 <code>send</code>/<code>recv</code> \u90fd\u5fc5\u7136\u53c2\u4e0e backward\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u63d0\u51fa\u4e86 SMART \u6a21\u5f0f\u7b97\u6cd5\uff08\u4e0b\u6587\u8bf4\u660e\uff09\u3002\u76ee\u524d\u4ec5\u5b9e\u73b0\u4e86 FAST \u6a21\u5f0f\u3002</p>"},{"location":"pytorch/docs/source/rpc/distributed_autograd/#fast","title":"FAST \u6a21\u5f0f\u7b97\u6cd5","text":"<p>FAST \u6a21\u5f0f\u5047\u8bbe\u6bcf\u4e2a <code>send</code> \u5728 backward \u4e2d\u7684\u4f9d\u8d56\u6570\u4e3a 1\uff0c\u5373\u4e00\u5b9a\u4f1a\u4ece\u5176\u4ed6\u8282\u70b9\u63a5\u6536\u68af\u5ea6\u3002</p> <p>\u7b97\u6cd5\u6d41\u7a0b\uff1a</p> <ol> <li>\u4ece\u5305\u542b backward \u6839\u8282\u70b9\u7684 worker \u5f00\u59cb\uff08\u6240\u6709\u6839\u8282\u70b9\u5fc5\u987b\u662f\u672c\u5730\u7684\uff09\u3002</li> <li>\u67e5\u627e\u5f53\u524d\u5206\u5e03\u5f0f autograd \u4e0a\u4e0b\u6587\u4e2d\u7684\u6240\u6709 <code>send</code>\u3002</li> <li>\u4ece\u7ed9\u5b9a\u6839\u8282\u70b9\u53ca\u8fd9\u4e9b <code>send</code> \u51fa\u53d1\uff0c\u672c\u5730\u8ba1\u7b97\u4f9d\u8d56\u3002</li> <li>\u8ba1\u7b97\u5b8c\u6210\u540e\uff0c\u542f\u52a8\u672c\u5730 autograd \u5f15\u64ce\u3002</li> <li>\u5f53 autograd \u5f15\u64ce\u6267\u884c <code>recv</code> \u65f6\uff0c\u8be5\u51fd\u6570\u4f1a\u5c06\u8f93\u5165\u68af\u5ea6\u901a\u8fc7 RPC \u53d1\u9001\u7ed9\u76f8\u5e94\u7684\u6e90 worker\u3002    \u6bcf\u4e2a <code>recv</code> \u5728\u524d\u5411\u65f6\u5df2\u8bb0\u5f55\u76ee\u6807 worker ID\uff0c\u540c\u65f6\u4f1a\u53d1\u9001 <code>autograd_context_id</code> \u548c <code>autograd_message_id</code>\u3002</li> <li>\u6e90 worker \u6536\u5230\u8bf7\u6c42\u540e\uff0c\u5229\u7528\u8fd9\u4e24\u4e2a ID \u627e\u5230\u5bf9\u5e94\u7684 <code>send</code>\u3002</li> <li>\u5982\u679c\u8fd9\u662f\u8be5 worker \u7b2c\u4e00\u6b21\u5904\u7406\u8be5 <code>autograd_context_id</code>\uff0c\u5219\u91cd\u590d\u6b65\u9aa4 1-3 \u8ba1\u7b97\u672c\u5730\u4f9d\u8d56\u3002</li> <li>\u627e\u5230\u7684 <code>send</code> \u4f1a\u88ab\u52a0\u5165\u672c\u5730 autograd \u5f15\u64ce\u6267\u884c\u3002</li> <li>\u68af\u5ea6\u4e0d\u4f1a\u7d2f\u52a0\u5230\u5f20\u91cf\u7684 <code>.grad</code> \u4e0a\uff0c\u800c\u662f\u6309\u4e0a\u4e0b\u6587\u5355\u72ec\u4fdd\u5b58\uff0c\u4f7f\u7528    <code>torch.distributed.autograd.get_gradients()</code> \u53ef\u83b7\u53d6 <code>Dict[Tensor, Tensor]</code> \u6620\u5c04\u3002</li> </ol> <p>\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a</p> <pre><code>import torch\nimport torch.distributed.autograd as dist_autograd\nimport torch.distributed.rpc as rpc\n\ndef my_add(t1, t2):\n    return torch.add(t1, t2)\n\n# \u5728 worker0 \u4e0a\uff1a\nwith dist_autograd.context() as context_id:\n    t1 = torch.rand((3, 3), requires_grad=True)\n    t2 = torch.rand((3, 3), requires_grad=True)\n\n    # \u8fdc\u7a0b\u8ba1\u7b97\u3002\n    t3 = rpc.rpc_sync(\"worker1\", my_add, args=(t1, t2))\n\n    # \u57fa\u4e8e\u8fdc\u7a0b\u7ed3\u679c\u7684\u672c\u5730\u8ba1\u7b97\u3002\n    t4 = torch.rand((3, 3), requires_grad=True)\n    t5 = torch.mul(t3, t4)\n\n    # \u8ba1\u7b97\u635f\u5931\u3002\n    loss = t5.sum()\n\n    # \u8fd0\u884c\u5206\u5e03\u5f0f backward\u3002\n    dist_autograd.backward(context_id, [loss])\n\n    # \u83b7\u53d6\u68af\u5ea6\u3002\n    dist_autograd.get_gradients(context_id)\n</code></pre> <p>\u5176\u4f9d\u8d56\u56fe\u5982\u4e0b\uff08\u7701\u7565 <code>t5.sum()</code>\uff09\uff1a</p> <p></p> <p>FAST \u6a21\u5f0f\u5728\u6b64\u4f8b\u4e2d\u7684\u6267\u884c\u8fc7\u7a0b\uff1a</p> <ol> <li>\u5728 worker0 \u4e0a\u4ece\u6839\u8282\u70b9 <code>loss</code> \u4e0e <code>send1</code> \u5f00\u59cb\u8ba1\u7b97\u4f9d\u8d56\uff0c\u5f97\u5230 <code>send1</code> \u4f9d\u8d56 1 \u6b21\u3001worker0 \u4e0a\u7684 <code>mul</code> \u4f9d\u8d56 1 \u6b21\u3002</li> <li>\u542f\u52a8 worker0 \u7684\u672c\u5730 autograd \u5f15\u64ce\uff0c\u5148\u6267\u884c <code>mul</code> \u5e76\u5c06\u7ed3\u679c\u7d2f\u79ef\u4e3a <code>t4</code> \u7684\u68af\u5ea6\uff0c\u518d\u6267\u884c <code>recv2</code> \u5c06\u68af\u5ea6\u53d1\u9001\u7ed9 worker1\u3002</li> <li>worker1 \u9996\u6b21\u6536\u5230\u8be5 backward\uff0c\u5f00\u59cb\u8ba1\u7b97\u4f9d\u8d56\uff0c\u6807\u8bb0 <code>send2</code>\u3001<code>add</code>\u3001<code>recv1</code>\u3002</li> <li>\u5c06 <code>send2</code> \u52a0\u5165 worker1 \u7684 autograd \u5f15\u64ce\uff0c\u4f9d\u6b21\u6267\u884c <code>add</code> \u548c <code>recv1</code>\u3002</li> <li><code>recv1</code> \u6267\u884c\u540e\u5c06\u68af\u5ea6\u53d1\u9001\u7ed9 worker0\u3002</li> <li>worker0 \u5df2\u7ecf\u8ba1\u7b97\u8fc7\u4f9d\u8d56\uff0c\u76f4\u63a5\u5728\u672c\u5730\u6267\u884c <code>send1</code>\u3002</li> <li>\u6700\u7ec8\uff0c\u4e0a\u4e0b\u6587\u4e2d\u7d2f\u79ef\u4e86 <code>t1</code>\u3001<code>t2</code>\u3001<code>t4</code> \u7684\u68af\u5ea6\u3002</li> </ol>"},{"location":"pytorch/docs/source/rpc/distributed_autograd/#smart","title":"SMART \u6a21\u5f0f\u7b97\u6cd5","text":"<p>SMART \u6a21\u5f0f\u7b97\u6cd5\u8fd8\u5728\u5b8c\u5584\u4e2d\uff0c\u53ef\u53c2\u8003 <code>RFC</code>_ \u4e2d Distributed Autograd Algorithm Smart mode \u90e8\u5206\u4e86\u89e3\u601d\u8def\u3002</p>"},{"location":"pytorch/docs/source/rpc/distributed_autograd/#_4","title":"\u5206\u5e03\u5f0f\u4f18\u5316\u5668","text":"<p><code>torch.distributed.optim.DistributedOptimizer</code> \u7684\u5de5\u4f5c\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <ol> <li>\u63a5\u6536\u5f85\u4f18\u5316\u7684\u8fdc\u7a0b\u53c2\u6570\u5217\u8868\uff08<code>torch.distributed.rpc.RRef</code>\uff09\uff0c\u672c\u5730\u53c2\u6570\u53ef\u7528\u672c\u5730 <code>RRef</code> \u5305\u88c5\u3002</li> <li>\u63a5\u6536\u672c\u5730\u4f18\u5316\u5668\u7c7b\uff08\u5982 <code>torch.optim.Optimizer</code>\uff09\uff0c\u5c06\u5728\u6240\u6709\u62e5\u6709\u53c2\u6570\u7684 worker \u4e0a\u5b9e\u4f8b\u5316\u3002</li> <li>\u5206\u5e03\u5f0f\u4f18\u5316\u5668\u4f1a\u5728\u5404 worker \u4e0a\u521b\u5efa\u672c\u5730\u4f18\u5316\u5668\u5b9e\u4f8b\uff0c\u5e76\u6301\u6709\u5b83\u4eec\u7684 <code>RRef</code>\u3002</li> <li>\u8c03\u7528 <code>torch.distributed.optim.DistributedOptimizer.step()</code> \u65f6\uff0c\u4f1a\u901a\u8fc7 RPC \u5728\u5bf9\u5e94\u8282\u70b9\u6267\u884c\u672c\u5730\u4f18\u5316\u5668\u3002    \u8be5\u65b9\u6cd5\u9700\u8981\u4f20\u5165\u5206\u5e03\u5f0f autograd \u7684 <code>context_id</code>\uff0c\u4ee5\u4fbf\u672c\u5730\u4f18\u5316\u5668\u5e94\u7528\u5b58\u50a8\u5728\u4e0a\u4e0b\u6587\u4e2d\u7684\u68af\u5ea6\u3002</li> <li>\u5982\u679c\u591a\u4e2a\u5206\u5e03\u5f0f\u4f18\u5316\u5668\u540c\u65f6\u66f4\u65b0\u540c\u4e00 worker \u7684\u53c2\u6570\uff0c\u4f1a\u901a\u8fc7\u9501\u4e32\u884c\u5316\u8fd9\u4e9b\u66f4\u65b0\u3002</li> </ol>"},{"location":"pytorch/docs/source/rpc/distributed_autograd/#_5","title":"\u7aef\u5230\u7aef\u793a\u4f8b","text":"<p>\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e2a\u7ed3\u5408\u5206\u5e03\u5f0f autograd \u4e0e\u5206\u5e03\u5f0f\u4f18\u5316\u5668\u7684\u5b8c\u6574\u793a\u4f8b\u3002\u82e5\u5c06\u4ee3\u7801\u4fdd\u5b58\u4e3a \"dist_autograd_simple.py\"\uff0c\u53ef\u901a\u8fc7 <code>MASTER_ADDR=\"localhost\" MASTER_PORT=29500 python dist_autograd_simple.py</code> \u8fd0\u884c\uff1a</p> <pre><code>import torch\nimport torch.multiprocessing as mp\nimport torch.distributed.autograd as dist_autograd\nfrom torch.distributed import rpc\nfrom torch import optim\nfrom torch.distributed.optim import DistributedOptimizer\n\ndef random_tensor():\n    return torch.rand((3, 3), requires_grad=True)\n\ndef _run_process(rank, dst_rank, world_size):\n    name = f\"worker{rank}\"\n    dst_name = f\"worker{dst_rank}\"\n\n    rpc.init_rpc(name=name, rank=rank, world_size=world_size)\n\n    with dist_autograd.context() as context_id:\n        # \u524d\u5411\uff08\u5728\u8fdc\u7aef\u521b\u5efa\u53c2\u6570\uff09\n        rref1 = rpc.remote(dst_name, random_tensor)\n        rref2 = rpc.remote(dst_name, random_tensor)\n        loss = rref1.to_here() + rref2.to_here()\n\n        # \u5206\u5e03\u5f0f backward\n        dist_autograd.backward(context_id, [loss.sum()])\n\n        # \u6784\u9020\u5206\u5e03\u5f0f\u4f18\u5316\u5668\n        dist_optim = DistributedOptimizer(\n            optim.SGD,\n            [rref1, rref2],\n            lr=0.05,\n        )\n\n        # \u6267\u884c\u4f18\u5316\u6b65\u9aa4\n        dist_optim.step(context_id)\n\ndef run_process(rank, world_size):\n    dst_rank = (rank + 1) % world_size\n    _run_process(rank, dst_rank, world_size)\n    rpc.shutdown()\n\nif __name__ == \"__main__\":\n    world_size = 2\n    mp.spawn(run_process, args=(world_size,), nprocs=world_size)\n</code></pre> <p>\u66f4\u591a\u7ec6\u8282\u8bf7\u53c2\u8003 RFC \u8ba8\u8bba\u3002</p>"},{"location":"transformerengine/","title":"Transformer Engine \u6982\u89c8","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p> <p>\u5feb\u901f\u4e0a\u624b \u5b89\u88c5\u6307\u5357 \u7528\u6237\u624b\u518c \u793a\u4f8b FP8 \u6536\u655b\u6027 \u96c6\u6210\u65b9\u6848 \u53d1\u884c\u8bf4\u660e</p>"},{"location":"transformerengine/#_1","title":"\u6700\u65b0\u52a8\u6001","text":"<ul> <li>[09/2025] \u4f7f\u7528 NVFP4 \u9884\u8bad\u7ec3\u5927\u578b\u8bed\u8a00\u6a21\u578b</li> <li>[09/2025] Ling 2.0 \u539f\u751f FP8 \u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3\u5df2\u5f00\u6e90</li> <li>[09/2025] \u501f\u52a9 NVIDIA NeMo \u4ee5 FP8 \u7cbe\u5ea6\u63d0\u5347\u8bad\u7ec3\u541e\u5410</li> <li>[08/2025] DeepL \u5982\u4f55\u4ee5 FP8 \u6253\u9020\u4e0b\u4e00\u4ee3\u53ef\u8bad\u7ec3\u4e0e\u63a8\u7406\u7684 LLM</li> <li>[08/2025] NVFP4\uff1a\u517c\u5177 16 \u4f4d\u7cbe\u5ea6\u4e0e 4 \u4f4d\u901f\u5ea6\u4e0e\u6548\u7387</li> <li>[06/2025] \u6d6e\u70b9 8\uff1a\u9ad8\u6548\u4f4e\u7cbe\u5ea6 AI \u8bad\u7ec3\u5165\u95e8</li> <li>[05/2025] \u5728 NVIDIA Grace Hopper \u4e0a\u8bad\u7ec3 LLM \u7684\u9ad8\u7ea7\u4f18\u5316\u7b56\u7565</li> <li>[03/2025] \u7a33\u5b9a\u4e14\u53ef\u6269\u5c55\u7684 FP8 \u6df1\u5ea6\u5b66\u4e60\u8bad\u7ec3\uff08Blackwell  GTC 2025\uff09</li> <li>[03/2025] \u501f\u52a9 NVIDIA DGX Cloud \u57fa\u51c6\u6d4b\u8bd5\u8861\u91cf\u4e0e\u63d0\u5347 AI \u5de5\u4f5c\u8d1f\u8f7d\u6027\u80fd</li> </ul> <ul> <li>[02/2025] \u501f\u52a9 Evo 2 \u5728\u65b0\u5c3a\u5ea6\u7406\u89e3\u751f\u547d\u5206\u5b50\u7684\u8bed\u8a00</li> <li>[02/2025] NVIDIA DGX Cloud \u63a8\u51fa\u5f00\u7bb1\u5373\u7528\u7684\u57fa\u51c6\u6a21\u677f</li> <li>[01/2025] \u8054\u5408 iGenius \u4e0e NVIDIA DGX Cloud \u4e3a\u4e3b\u6743 AI \u4e0e\u53d7\u76d1\u7ba1\u884c\u4e1a\u6301\u7eed\u9884\u8bad\u7ec3 SOTA LLM</li> </ul> <p>\u5386\u53f2\u52a8\u6001</p>"},{"location":"transformerengine/#previous-news","title":"\u5386\u53f2\u52a8\u6001","text":"<p>\u66f4\u65e9\u7684\u91cc\u7a0b\u7891\u8bf7\u53c2\u9605 NVIDIA \u6587\u6863\u5f52\u6863 \u4e0e \u5b98\u65b9\u535a\u5ba2\u3002</p>"},{"location":"transformerengine/#transformer-engine_1","title":"\u4ec0\u4e48\u662f Transformer Engine\uff1f","text":"<p>Transformer Engine\uff08\u7b80\u79f0 TE\uff09\u662f\u9762\u5411 NVIDIA GPU \u7684 Transformer \u52a0\u901f\u5e93\uff0c\u652f\u6301\u5728 Hopper\u3001Ada \u4e0e Blackwell GPU \u4e0a\u4f7f\u7528 8 \u4f4d\u6d6e\u70b9\uff08FP8\uff09\u7cbe\u5ea6\uff0c\u4ee5\u5728\u8bad\u7ec3\u4e0e\u63a8\u7406\u4e2d\u63d0\u4f9b\u66f4\u9ad8\u6027\u80fd\u4e0e\u66f4\u4f4e\u5185\u5b58\u5360\u7528\u3002TE \u63d0\u4f9b\u9488\u5bf9\u4e3b\u6d41 Transformer \u67b6\u6784\u9ad8\u5ea6\u4f18\u5316\u7684\u6784\u5efa\u6a21\u5757\uff0c\u4ee5\u53ca\u7c7b\u4f3c\u81ea\u52a8\u6df7\u5408\u7cbe\u5ea6\u7684 API\uff0c\u53ef\u65e0\u7f1d\u878d\u5165\u5404\u6846\u67b6\u7684\u4ee3\u7801\u3002\u540c\u65f6\u8fd8\u5305\u542b\u4e0e\u6846\u67b6\u65e0\u5173\u7684 C++ API\uff0c\u4fbf\u4e8e\u5176\u4ed6\u6df1\u5ea6\u5b66\u4e60\u5e93\u96c6\u6210 FP8 \u652f\u6301\u3002</p> <p>\u968f\u7740 Transformer \u53c2\u6570\u89c4\u6a21\u6301\u7eed\u589e\u957f\uff0cBERT\u3001GPT\u3001T5 \u7b49\u67b6\u6784\u5728\u8bad\u7ec3\u4e0e\u63a8\u7406\u9636\u6bb5\u5bf9\u663e\u5b58\u4e0e\u7b97\u529b\u7684\u9700\u6c42\u4e5f\u4e0e\u65e5\u4ff1\u589e\u3002\u591a\u6570\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u9ed8\u8ba4\u4f7f\u7528 FP32 \u8bad\u7ec3\uff0c\u4f46\u5728\u8bb8\u591a\u6a21\u578b\u4e2d\uff0c\u4e3a\u83b7\u5f97\u5b8c\u6574\u7cbe\u5ea6\u5e76\u975e\u5fc5\u987b\u3002\u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3\u5c06\u5355\u7cbe\u5ea6\uff08FP32\uff09\u4e0e\u66f4\u4f4e\u7cbe\u5ea6\uff08\u5982 FP16\uff09\u7ed3\u5408\uff0c\u53ef\u5728\u51e0\u4e4e\u4e0d\u635f\u5931\u7cbe\u5ea6\u7684\u60c5\u51b5\u4e0b\u663e\u8457\u63d0\u5347\u901f\u5ea6\u3002Hopper GPU \u67b6\u6784\u5f15\u5165\u4e86 FP8 \u7cbe\u5ea6\uff0c\u8f83 FP16 \u8fdb\u4e00\u6b65\u63d0\u5347\u6027\u80fd\u4e14\u4e0d\u964d\u4f4e\u51c6\u786e\u6027\u3002\u4e0d\u8fc7\uff0c\u76ee\u524d\u4e3b\u6d41\u6846\u67b6\u5c1a\u672a\u539f\u751f\u652f\u6301 FP8\u3002</p> <p>TE \u901a\u8fc7\u63d0\u4f9b\u53ef\u4e0e\u4e3b\u6d41\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u5e93\u96c6\u6210\u7684 API \u6765\u89e3\u51b3 FP8 \u652f\u6301\u95ee\u9898\u3002\u5b83\u65e2\u5305\u542b\u53ef\u5feb\u901f\u6784\u5efa Transformer \u5c42\u7684 Python \u6a21\u5757\uff0c\u4e5f\u63d0\u4f9b\u6846\u67b6\u65e0\u5173\u7684 C++ \u5e93\uff08\u5305\u542b FP8 \u6240\u9700\u7684\u7ed3\u6784\u4f53\u4e0e\u7b97\u5b50\uff09\u3002TE \u6a21\u5757\u4f1a\u5728\u5185\u90e8\u7ef4\u62a4\u7f29\u653e\u56e0\u5b50\u7b49 FP8 \u8bad\u7ec3\u6240\u9700\u53c2\u6570\uff0c\u4ece\u800c\u5927\u5e45\u7b80\u5316\u6df7\u5408\u7cbe\u5ea6\u8bad\u7ec3\u6d41\u7a0b\u3002</p>"},{"location":"transformerengine/#_2","title":"\u4eae\u70b9","text":"<ul> <li>\u63d0\u4f9b\u4fbf\u6377\u7684 Transformer \u5c42\u6a21\u5757\uff0c\u5e76\u5185\u7f6e FP8 \u652f\u6301</li> <li>\u9488\u5bf9 Transformer \u6a21\u578b\u7684\u591a\u79cd\u4f18\u5316\uff08\u5982\u878d\u5408\u7b97\u5b50\uff09</li> <li>\u652f\u6301\u5728 NVIDIA Hopper\u3001Ada\u3001Blackwell GPU \u4e0a\u4f7f\u7528 FP8</li> <li>\u8986\u76d6 NVIDIA Ampere \u53ca\u66f4\u65b0\u67b6\u6784\u4e0a\u7684\u5404\u79cd\u7cbe\u5ea6\u4f18\u5316\uff08FP16\u3001BF16 \u7b49\uff09</li> </ul>"},{"location":"transformerengine/#examples","title":"\u793a\u4f8b","text":""},{"location":"transformerengine/#pytorch","title":"PyTorch","text":"<p>import torch   import transformer_engine.pytorch as te   from transformer_engine.common import recipe</p> <p># \u8bbe\u7f6e\u7ef4\u5ea6   in_features = 768   out_features = 3072   hidden_size = 2048</p> <p># \u521d\u59cb\u5316\u6a21\u578b\u4e0e\u8f93\u5165   model = te.Linear(in_features, out_features, bias=True)   inp = torch.randn(hidden_size, in_features, device=\"cuda\")</p> <p># \u521b\u5efa FP8 \u914d\u65b9\uff08\u6240\u6709\u53c2\u6570\u5747\u4e3a\u53ef\u9009\uff09   fp8_recipe = recipe.DelayedScaling(margin=0, fp8_format=recipe.Format.E4M3)</p> <p># \u5728\u524d\u5411\u4f20\u64ad\u4e2d\u542f\u7528\u81ea\u52a8\u6df7\u5408\u7cbe\u5ea6   with te.autocast(enabled=True, recipe=fp8_recipe):       out = model(inp)</p> <p>loss = out.sum()   loss.backward()</p>"},{"location":"transformerengine/#jax","title":"JAX","text":""},{"location":"transformerengine/#flax","title":"Flax","text":"<p>import flax   import jax   import jax.numpy as jnp   import transformer_engine.jax as te   import transformer_engine.jax.flax as te_flax   from transformer_engine.common import recipe</p> <p>BATCH = 32   SEQLEN = 128   HIDDEN = 1024</p> <p># \u521d\u59cb\u5316\u968f\u673a\u6570\u4e0e\u8f93\u5165   rng = jax.random.PRNGKey(0)   init_rng, data_rng = jax.random.split(rng)   inp = jax.random.normal(data_rng, [BATCH, SEQLEN, HIDDEN], jnp.float32)</p> <p># \u521b\u5efa FP8 \u914d\u65b9\uff08\u6240\u6709\u53c2\u6570\u5747\u4e3a\u53ef\u9009\uff09   fp8_recipe = recipe.DelayedScaling(margin=0, fp8_format=recipe.Format.HYBRID)</p> <p># \u5728\u524d\u5411\u4f20\u64ad\u4e2d\u542f\u7528\u81ea\u52a8\u6df7\u5408\u7cbe\u5ea6   with te.autocast(enabled=True, recipe=fp8_recipe):       model = te_flax.DenseGeneral(features=HIDDEN)</p> <pre><code>  def loss_fn(params, other_vars, inp):\n    out = model.apply({'params':params, **other_vars}, inp)\n    return jnp.mean(out)\n\n  # \u521d\u59cb\u5316\u6a21\u578b\n  variables = model.init(init_rng, inp)\n  other_variables, params = flax.core.pop(variables, 'params')\n\n  # \u6784\u5efa\u524d\u5411\u4e0e\u53cd\u5411\u51fd\u6570\n  fwd_bwd_fn = jax.value_and_grad(loss_fn, argnums=(0, 1))\n\n  for _ in range(10):\n    loss, (param_grads, other_grads) = fwd_bwd_fn(params, other_variables, inp)\n</code></pre> <p>\u5b8c\u6574\u6559\u7a0b\u8bf7\u53c2\u9605 \u5feb\u901f\u4e0a\u624b Notebook\u3002</p>"},{"location":"transformerengine/#installation","title":"\u5b89\u88c5\u6307\u5357","text":""},{"location":"transformerengine/#_3","title":"\u7cfb\u7edf\u8981\u6c42","text":"<ul> <li> <p>\u786c\u4ef6\uff1a Blackwell\u3001Hopper\u3001Grace Hopper/Blackwell\u3001Ada\u3001Ampere</p> </li> <li> <p>\u64cd\u4f5c\u7cfb\u7edf\uff1a Linux\uff08\u5b98\u65b9\u652f\u6301\uff09\u3001WSL2\uff08\u6709\u9650\u652f\u6301\uff09</p> </li> <li> <p>\u8f6f\u4ef6\uff1a</p> </li> <li> <p>CUDA\uff1a12.1+\uff08Hopper/Ada/Ampere\uff09\uff0c12.8+\uff08Blackwell\uff09\uff0c\u9700\u914d\u5957\u517c\u5bb9\u7684 NVIDIA \u9a71\u52a8</p> </li> <li>cuDNN\uff1a9.3+</li> <li>\u7f16\u8bd1\u5668\uff1a\u652f\u6301 C++17 \u7684 GCC 9+ \u6216 Clang 10+</li> <li> <p>Python\uff1a\u63a8\u8350 3.12</p> </li> <li> <p>\u6e90\u7801\u7f16\u8bd1\u989d\u5916\u9700\u6c42\uff1a CMake 3.18+\u3001Ninja\u3001Git 2.17+\u3001pybind11 2.6.0+</p> </li> <li> <p>\u6ce8\u610f\u4e8b\u9879\uff1a FP8 \u529f\u80fd\u9700\u8981\u8ba1\u7b97\u80fd\u529b 8.9+\uff08Ada/Hopper/Blackwell\uff09</p> </li> </ul>"},{"location":"transformerengine/#_4","title":"\u5b89\u88c5\u65b9\u5f0f","text":""},{"location":"transformerengine/#docker","title":"Docker\uff08\u63a8\u8350\uff09","text":"<p>\u6700\u5feb\u7684\u5165\u95e8\u65b9\u5f0f\u662f\u4f7f\u7528 NVIDIA GPU Cloud (NGC) Catalog \u4e2d\u7684 Docker \u6620\u50cf\u3002</p> <p>\u793a\u4f8b\uff1a\u4ea4\u4e92\u5f0f\u62c9\u8d77 NGC PyTorch \u5bb9\u5668</p> <pre><code>docker run --gpus all -it --rm nvcr.io/nvidia/pytorch:25.08-py3\n</code></pre> <p>\u793a\u4f8b\uff1a\u4ea4\u4e92\u5f0f\u62c9\u8d77 NGC JAX \u5bb9\u5668</p> <pre><code>docker run --gpus all -it --rm nvcr.io/nvidia/jax:25.08-py3\n</code></pre> <p>\u5176\u4e2d 25.08 \u8868\u793a 2025 \u5e74 8 \u6708\u53d1\u5e03\u7684\u5bb9\u5668\u7248\u672c\u3002</p> <p>\u4f7f\u7528 NGC \u5bb9\u5668\u7684\u4f18\u52bf\uff1a</p> <ul> <li>\u9884\u88c5\u6240\u6709\u4f9d\u8d56\u5e76\u7ecf\u8fc7\u4f18\u5316\u914d\u7f6e</li> <li>NGC PyTorch 23.08+ \u5bb9\u5668\u5185\u7f6e FlashAttention-2</li> </ul>"},{"location":"transformerengine/#pip","title":"pip \u5b89\u88c5","text":"<p>pip \u5b89\u88c5\u524d\u7f6e\u6761\u4ef6\uff1a</p> <ul> <li>\u517c\u5bb9\u7684 C++ \u7f16\u8bd1\u5668</li> <li>\u5b89\u88c5\u4e86 cuDNN \u4e0e NVCC \u7684 CUDA Toolkit</li> </ul> <p>\u5b89\u88c5\u6700\u65b0\u7a33\u5b9a\u7248\uff1a</p> <pre><code># \u96c6\u6210 PyTorch\npip install --no-build-isolation transformer_engine[pytorch]\n\n# \u96c6\u6210 JAX\npip install --no-build-isolation transformer_engine[jax]\n\n# \u540c\u65f6\u652f\u6301 PyTorch \u4e0e JAX\npip install --no-build-isolation transformer_engine[pytorch,jax]\n</code></pre> <p>\u4e5f\u53ef\u76f4\u63a5\u4ece GitHub \u4ed3\u5e93\u5b89\u88c5\uff1a</p> <pre><code>pip install --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@stable\n</code></pre> <p>\u4ece GitHub \u5b89\u88c5\u65f6\uff0c\u53ef\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u663e\u5f0f\u6307\u5b9a\u8981\u6784\u5efa\u7684\u6846\u67b6\uff1a</p> <pre><code>NVTE_FRAMEWORK=pytorch,jax pip install --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@stable\n</code></pre>"},{"location":"transformerengine/#conda","title":"conda \u5b89\u88c5","text":"<p>\u4f7f\u7528 conda-forge \u83b7\u53d6\u6700\u65b0\u7a33\u5b9a\u7248\uff1a</p> <pre><code># \u96c6\u6210 PyTorch\nconda install -c conda-forge transformer-engine-torch\n\n# JAX \u96c6\u6210\uff08\u5373\u5c06\u4e0a\u7ebf\uff09\n</code></pre>"},{"location":"transformerengine/#_5","title":"\u6e90\u7801\u5b89\u88c5","text":"<p>\u53c2\u89c1\u5b89\u88c5\u6307\u5357</p>"},{"location":"transformerengine/#_6","title":"\u73af\u5883\u53d8\u91cf","text":"<p>\u5b89\u88c5\u524d\u53ef\u8bbe\u7f6e\u4ee5\u4e0b\u73af\u5883\u53d8\u91cf\u81ea\u5b9a\u4e49\u6784\u5efa\u6d41\u7a0b\uff1a</p> <ul> <li>CUDA_PATH\uff1aCUDA \u5b89\u88c5\u8def\u5f84</li> <li>CUDNN_PATH\uff1acuDNN \u5b89\u88c5\u8def\u5f84</li> <li>CXX\uff1aC++ \u7f16\u8bd1\u5668\u8def\u5f84</li> <li>NVTE_FRAMEWORK\uff1a\u6784\u5efa\u6846\u67b6\u5217\u8868\uff0c\u9017\u53f7\u5206\u9694\uff08\u5982 <code>pytorch,jax</code>\uff09</li> <li>MAX_JOBS\uff1a\u9650\u5236\u5e76\u884c\u6784\u5efa\u4efb\u52a1\u6570\u91cf\uff08\u9ed8\u8ba4\u503c\u4f9d\u7cfb\u7edf\u800c\u5b9a\uff09</li> <li>NVTE_BUILD_THREADS_PER_JOB\uff1a\u63a7\u5236\u6bcf\u4e2a\u4efb\u52a1\u4f7f\u7528\u7684\u7ebf\u7a0b\u6570</li> </ul>"},{"location":"transformerengine/#flashattention","title":"\u7f16\u8bd1 FlashAttention","text":"<p>Transformer Engine \u5728 PyTorch \u4e2d\u652f\u6301 FlashAttention-2 \u4e0e FlashAttention-3\uff0c\u4ee5\u83b7\u5f97\u66f4\u9ad8\u6027\u80fd\u3002\u81ea v1.11 \u8d77\u65b0\u589e\u4e86 FlashAttention-3\uff0c\u5f53\u73af\u5883\u540c\u65f6\u5b58\u5728\u4e24\u4e2a\u7248\u672c\u65f6\u4f1a\u4f18\u5148\u4f7f\u7528 FlashAttention-3\u3002</p> <p>\u53ef\u901a\u8fc7\u4ee5\u4e0b\u73af\u5883\u53d8\u91cf\u68c0\u67e5\u5f53\u524d\u4f7f\u7528\u7684 FlashAttention \u7248\u672c\uff1a</p> <pre><code>NVTE_DEBUG=1 NVTE_DEBUG_LEVEL=1 python your_script.py\n</code></pre> <p>\u5df2\u77e5\u95ee\u9898\uff1aFlashAttention-2 \u7f16\u8bd1\u8fc7\u7a0b\u5360\u7528\u5185\u5b58\u8f83\u5927\uff08\u53c2\u89c1 \u76f8\u5173 issue\uff09\uff0c\u53ef\u80fd\u5bfc\u81f4\u5b89\u88c5 Transformer Engine \u65f6\u5185\u5b58\u4e0d\u8db3\u3002\u53ef\u5c1d\u8bd5\u8bbe\u7f6e MAX_JOBS=1 \u6765\u89c4\u907f\u3002</p>"},{"location":"transformerengine/#_7","title":"\u6545\u969c\u6392\u67e5","text":"<p>\u5e38\u89c1\u95ee\u9898\u4e0e\u89e3\u51b3\u65b9\u6848\uff1a</p> <ol> <li> <p>ABI \u517c\u5bb9\u6027\u95ee\u9898</p> </li> <li> <p>\u73b0\u8c61\uff1a \u5bfc\u5165 transformer_engine \u65f6\u51fa\u73b0 <code>ImportError</code>\uff0c\u63d0\u793a\u672a\u5b9a\u4e49\u7b26\u53f7</p> </li> <li>\u89e3\u51b3\u65b9\u6cd5\uff1a \u786e\u8ba4 PyTorch \u4e0e Transformer Engine \u4f7f\u7528\u76f8\u540c\u7684 C++ ABI \u8bbe\u7f6e\u3002\u5fc5\u8981\u65f6\u4ece\u6e90\u7801\u91cd\u65b0\u7f16\u8bd1 PyTorch\u3002</li> <li> <p>\u8865\u5145\u8bf4\u660e\uff1a \u82e5 PyTorch \u7684 C++ ABI \u4e0e\u7cfb\u7edf\u9ed8\u8ba4\u4e0d\u4e00\u81f4\uff08\u5728\u5bb9\u5668\u5916\u4f7f\u7528 pip \u5b89\u88c5\u7684 PyTorch \u65f6\u5e38\u89c1\uff09\uff0c\u5219\u5bb9\u6613\u51fa\u73b0\u6b64\u7c7b\u9519\u8bef\u3002</p> </li> <li> <p>\u7f3a\u5c11\u5934\u6587\u4ef6\u6216\u5e93</p> </li> <li> <p>\u73b0\u8c61\uff1a CMake \u62a5\u9519\u627e\u4e0d\u5230\u5934\u6587\u4ef6\uff08\u5982 <code>cudnn.h</code>\u3001<code>cublas_v2.h</code>\u3001<code>filesystem</code> \u7b49\uff09</p> </li> <li>\u89e3\u51b3\u65b9\u6cd5\uff1a \u5b89\u88c5\u7f3a\u5931\u7684\u5f00\u53d1\u5305\u6216\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u6307\u5b9a\u8def\u5f84\uff1a</li> </ol> <pre><code>export CUDA_PATH=/path/to/cuda\nexport CUDNN_PATH=/path/to/cudnn\n</code></pre> <ul> <li>\u82e5 CMake \u65e0\u6cd5\u627e\u5230 C++ \u7f16\u8bd1\u5668\uff0c\u53ef\u8bbe\u7f6e <code>CXX</code> \u73af\u5883\u53d8\u91cf\u3002</li> <li> <p>\u5b89\u88c5\u524d\u8bf7\u786e\u8ba4\u4e0a\u8ff0\u8def\u5f84\u5df2\u6b63\u786e\u914d\u7f6e\u3002</p> </li> <li> <p>\u6784\u5efa\u8d44\u6e90\u95ee\u9898</p> </li> <li> <p>\u73b0\u8c61\uff1a \u7f16\u8bd1\u5361\u4f4f\u3001\u7cfb\u7edf\u5047\u6b7b\u6216\u5185\u5b58\u4e0d\u8db3</p> </li> <li>\u89e3\u51b3\u65b9\u6cd5\uff1a \u9650\u5236\u5e76\u884c\u5ea6\uff1a</li> </ul> <pre><code>MAX_JOBS=1 NVTE_BUILD_THREADS_PER_JOB=1 pip install ...\n</code></pre> <ol> <li> <p>\u9700\u8981\u8be6\u7ec6\u7684\u6784\u5efa\u65e5\u5fd7</p> </li> <li> <p>\u65b9\u6cd5\uff1a</p> </li> </ol> <pre><code>cd transformer_engine\npip install -v -v -v --no-build-isolation .\n</code></pre>"},{"location":"transformerengine/#_8","title":"\u7834\u574f\u6027\u66f4\u65b0","text":""},{"location":"transformerengine/#v17pytorch-padding-mask","title":"v1.7\uff1aPyTorch \u7684 padding mask \u5b9a\u4e49\u53d8\u66f4","text":"<p>\u4e3a\u7edf\u4e00 Transformer Engine \u4e2d\u4e09\u4e2a\u6846\u67b6\u7684\u6ce8\u610f\u529b\u63a9\u7801\u5b9a\u4e49\uff0c\u6211\u4eec\u5c06 PyTorch \u5b9e\u73b0\u4e2d\u7684 padding mask \u542b\u4e49\u6539\u4e3a\uff1a<code>True</code> \u8868\u793a\u5c4f\u853d\u5bf9\u5e94\u4f4d\u7f6e\uff0c<code>False</code> \u8868\u793a\u53c2\u4e0e\u6ce8\u610f\u529b\u8ba1\u7b97\u3002\u81ea v1.7 \u8d77\uff0c\u6240\u6709\u7c7b\u578b\u7684\u6ce8\u610f\u529b\u63a9\u7801\u5747\u9075\u5faa\u76f8\u540c\u5b9a\u4e49\u3002</p> <pre><code>  # v1.6 \u53ca\u4e4b\u524d\n  [True,  True,  True, False, False,\n   True,  True, False, False, False,\n   True,  True,  True,  True, False]\n  # v1.7 \u53ca\u4e4b\u540e\n  [False, False, False,  True,  True,\n   False, False,  True,  True,  True,\n   False, False, False, False,  True]\n</code></pre>"},{"location":"transformerengine/#fp8-convergence","title":"FP8 \u6536\u655b\u6027","text":"<p>\u6211\u4eec\u5728\u591a\u79cd\u6a21\u578b\u67b6\u6784\u4e0e\u914d\u7f6e\u4e0a\u5bf9 FP8 \u8fdb\u884c\u4e86\u5e7f\u6cdb\u9a8c\u8bc1\uff0c\u8bad\u7ec3\u635f\u5931\u66f2\u7ebf\u4e0e BF16 \u51e0\u4e4e\u6ca1\u6709\u5dee\u5f02\u3002FP8 \u540c\u6837\u5df2\u5728\u4e0b\u6e38 LLM \u4efb\u52a1\uff08\u5982 LAMBADA\u3001WikiText\uff09\u4e0a\u9a8c\u8bc1\u5176\u7cbe\u5ea6\u3002\u4ee5\u4e0b\u5217\u4e3e\u90e8\u5206\u8de8\u6846\u67b6\u9a8c\u8bc1\u8fc7\u6536\u655b\u6027\u7684\u6a21\u578b\u3002</p> \u6a21\u578b \u6846\u67b6 \u53c2\u8003\u94fe\u63a5 T5-770M JAX / T5x https://github.com/NVIDIA/JAX-Toolbox/tree/main/rosetta/rosetta/projects/t5x#convergence-and-performance MPT-1.3B Mosaic Composer https://www.mosaicml.com/blog/coreweave-nvidia-h100-part-1 GPT-5B JAX / Paxml https://github.com/NVIDIA/JAX-Toolbox/tree/main/rosetta/rosetta/projects/pax#h100-results GPT-5B NVIDIA NeMo Framework \u53ef\u6309\u9700\u63d0\u4f9b Llama2-7B Alibaba Pai https://mp.weixin.qq.com/s/NQT0uKXLbXyh5031zBdeBQ T5-11B JAX / T5x \u53ef\u6309\u9700\u63d0\u4f9b MPT-13B Mosaic Composer https://www.databricks.com/blog/turbocharged-training-optimizing-databricks-mosaic-ai-stack-fp8 GPT-22B NVIDIA NeMo Framework \u53ef\u6309\u9700\u63d0\u4f9b Llama2-70B Alibaba Pai https://mp.weixin.qq.com/s/NQT0uKXLbXyh5031zBdeBQ GPT-175B JAX / Paxml https://github.com/NVIDIA/JAX-Toolbox/tree/main/rosetta/rosetta/projects/pax#h100-results"},{"location":"transformerengine/#integrations","title":"\u96c6\u6210\u65b9\u6848","text":"<p>Transformer Engine \u5df2\u96c6\u6210\u81f3\u591a\u6b3e\u70ed\u95e8 LLM \u6846\u67b6\uff1a</p> <ul> <li>DeepSpeed</li> <li>Hugging Face Accelerate</li> <li>Lightning</li> <li>MosaicML Composer</li> <li>NVIDIA JAX Toolbox</li> <li>NVIDIA Megatron-LM</li> <li>NVIDIA NeMo Framework</li> <li>Amazon SageMaker Model Parallel Library</li> <li>Levanter</li> <li>GPT-NeoX</li> <li>Hugging Face Nanotron \u2014\u2014 \u5373\u5c06\u4e0a\u7ebf\uff01</li> <li>Colossal-AI \u2014\u2014 \u5373\u5c06\u4e0a\u7ebf\uff01</li> <li>PeriFlow \u2014\u2014 \u5373\u5c06\u4e0a\u7ebf\uff01</li> </ul>"},{"location":"transformerengine/#_9","title":"\u53c2\u4e0e\u8d21\u732e","text":"<p>\u6211\u4eec\u6b22\u8fce\u793e\u533a\u5171\u540c\u5b8c\u5584 Transformer Engine\uff01\u5982\u9700\u63d0\u4ea4\u8d21\u732e\u4e0e Pull Request\uff0c\u8bf7\u9075\u5faa \u8d21\u732e\u6307\u5357\u3002</p>"},{"location":"transformerengine/docs/","title":"\u6587\u6863\u7d22\u5f15","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p>"},{"location":"transformerengine/docs/#transformer-engine","title":"Transformer Engine \u6587\u6863","text":"<p>\u5f00\u53d1\u8005\u9884\u89c8</p> <p>\u5f53\u524d\u9875\u9762\u5bf9\u5e94\u5f00\u53d1\u5206\u652f\u5185\u5bb9\u3002\u82e5\u9700\u6700\u65b0\u7a33\u5b9a\u7248\uff0c\u8bf7\u8bbf\u95ee \u53d1\u884c\u8bf4\u660e \u4e0e \u5b98\u65b9\u5f00\u53d1\u8005\u6307\u5357\u3002</p> <p>Transformer Engine\uff08TE\uff09\u662f\u9762\u5411 NVIDIA GPU \u7684 Transformer \u52a0\u901f\u5e93\uff0c\u5728 Hopper\u3001Ada\u3001Blackwell \u7b49\u67b6\u6784\u4e0a\u63d0\u4f9b FP8 \u8bad\u7ec3\u4e0e\u63a8\u7406\u652f\u6301\u3002TE \u65e2\u5305\u542b\u9ad8\u6027\u80fd\u7684 Python \u6a21\u5757\uff08PyTorch\u3001JAX \u7b49\uff09\uff0c\u4e5f\u53ef\u901a\u8fc7\u901a\u7528 C++ API \u96c6\u6210\u81f3\u5176\u4ed6\u6846\u67b6\uff0c\u5e76\u5185\u7f6e\u591a\u79cd\u6df7\u5408\u7cbe\u5ea6\u548c\u8c03\u8bd5\u5de5\u5177\u3002</p>"},{"location":"transformerengine/docs/#_1","title":"\u5feb\u901f\u5165\u53e3","text":"<ul> <li>\u5b89\u88c5\u6307\u5357\uff1a\u5217\u51fa\u7cfb\u7edf\u4f9d\u8d56\u3001\u5bb9\u5668\u955c\u50cf\u4ee5\u53ca pip/\u6e90\u7801\u5b89\u88c5\u65b9\u5f0f\u3002</li> <li>\u5e38\u89c1\u95ee\u9898\uff1a\u89e3\u7b54 FP8 \u68c0\u67e5\u70b9\u517c\u5bb9\u6027\u7b49\u9ad8\u9891\u95ee\u9898\u3002</li> <li>\u8c03\u8bd5\u5de5\u5177\u6587\u6863\uff1a\u4ecb\u7ecd Precision Debug \u7684\u914d\u7f6e\u3001\u7279\u6027\u4e0e API\u3002</li> <li>API \u7d22\u5f15\uff1a\u6309\u6846\u67b6\u6574\u7406 PyTorch\u3001JAX \u4e0e\u901a\u7528\u914d\u65b9\u6a21\u5757\u3002</li> <li>Jupyter \u793a\u4f8b\uff08\u4f4d\u4e8e <code>docs/examples</code> \u76ee\u5f55\uff09\uff1a</li> <li>FP8 \u5165\u95e8</li> <li>\u9ad8\u7ea7\u4f18\u5316\u5b9e\u8df5</li> <li>TE + Llama \u63a8\u7406\u52a0\u901f</li> <li>TE + Gemma \u6587\u672c\u751f\u6210</li> <li>ONNX \u5bfc\u51fa\u6d41\u7a0b</li> </ul> <p>\u66f4\u591a\u8d44\u6e90\u8bf7\u53c2\u9605\u4ed3\u5e93\u6839\u76ee\u5f55\u4e0b\u7684 <code>README.md</code>\u3002</p>"},{"location":"transformerengine/docs/debug/","title":"\u76ee\u5f55","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p>"},{"location":"transformerengine/docs/debug/#_1","title":"\u7cbe\u5ea6\u8c03\u8bd5\u5de5\u5177","text":"<ul> <li>debug/1_getting_started.rst</li> <li>debug/2_config_file_structure.rst</li> <li>debug/api</li> <li>debug/4_distributed.rst</li> </ul>"},{"location":"transformerengine/docs/faq/","title":"FAQ","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p>"},{"location":"transformerengine/docs/faq/#faq","title":"\u5e38\u89c1\u95ee\u9898\uff08FAQ\uff09","text":""},{"location":"transformerengine/docs/faq/#fp8","title":"FP8 \u68c0\u67e5\u70b9\u517c\u5bb9\u6027","text":"<p>Transformer Engine \u81ea 1.6 \u8d77\u652f\u6301 FP8 \u6ce8\u610f\u529b\uff0c\u4f1a\u5728\u68c0\u67e5\u70b9\u7684 <code>._extra_state</code> \u952e\u4e0b\u5b58\u50a8 FP8 \u5143\u6570\u636e\uff08\u7f29\u653e\u56e0\u5b50\u4e0e amax \u5386\u53f2\uff09\u3002\u968f\u7740 FP8 \u6ce8\u610f\u529b\u4ece\u5355\u540e\u7aef\u6269\u5c55\u5230\u591a\u540e\u7aef\uff0c\u8be5\u952e\u6240\u5728\u7684\u4f4d\u7f6e\u4e5f\u53d1\u751f\u4e86\u53d8\u5316\u3002</p> <p>\u4ee5 <code>MultiheadAttention</code> \u6a21\u5757\u4e3a\u4f8b\u3002\u5728 Transformer Engine 1.11 \u4e2d\uff0c\u5176 FP8 \u6ce8\u610f\u529b\u5143\u6570\u636e\u4f4d\u4e8e <code>core_attention._extra_state</code>\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>&gt;&gt;&gt; from transformer_engine.pytorch import MultiheadAttention, quantized_model_init\n&gt;&gt;&gt; with quantized_model_init(enabled=True):\n...     mha = MultiheadAttention(\n...         hidden_size=1024,\n...         num_attention_heads=16,\n...         bias=True,\n...         params_dtype=torch.bfloat16,\n...         input_layernorm=False,\n...         fuse_qkv_params=True,\n...         attention_type=\"self\",\n...         qkv_weight_interleaved=True,\n...     ).to(dtype=torch.bfloat16, device=\"cuda\")\n...\n&gt;&gt;&gt; state_dict = mha.state_dict()\n&gt;&gt;&gt; print(state_dict.keys())\nodict_keys(['qkv.weight', 'qkv.bias', 'qkv._extra_state', 'core_attention._extra_state', 'proj.weight', 'proj.bias', 'proj._extra_state'])\n</code></pre> <p>\u4e0b\u8868\u6c47\u603b\u4e86\u5404\u7248\u672c Transformer Engine \u7684\u68c0\u67e5\u70b9\u4fdd\u5b58/\u52a0\u8f7d\u884c\u4e3a\u3002</p>"},{"location":"transformerengine/docs/faq/#15","title":"\u7248\u672c \u2264 1.5","text":"<ul> <li>\u4fdd\u5b58\u4f4d\u7f6e\uff1a \u4e0d\u5199\u5165\u4efb\u4f55 FP8 \u5143\u6570\u636e\uff08\u5f53\u65f6\u5c1a\u672a\u5f15\u5165 FP8 \u6ce8\u610f\u529b\uff09\u3002</li> <li>\u52a0\u8f7d\u884c\u4e3a\uff1a</li> <li>\u52a0\u8f7d 1.5 \u53ca\u4ee5\u4e0b\u7248\u672c\u7684\u68c0\u67e5\u70b9\uff1a\u4e0d\u4f1a\u5bfb\u627e FP8 \u5143\u6570\u636e\u3002</li> <li>\u52a0\u8f7d\u66f4\u9ad8\u7248\u672c\uff08&gt;1.5\uff09\u7684\u68c0\u67e5\u70b9\uff1a\u51fa\u73b0 <code>unexpected key</code> \u62a5\u9519\u3002</li> </ul>"},{"location":"transformerengine/docs/faq/#16-17","title":"\u7248\u672c 1.6 ~ 1.7","text":"<ul> <li>\u4fdd\u5b58\u4f4d\u7f6e\uff1a <code>core_attention.fused_attention._extra_state</code></li> <li>\u52a0\u8f7d\u884c\u4e3a\uff1a</li> <li>\u76ee\u6807\u7248\u672c \u2264 1.5\uff1a\u81ea\u52a8\u5c06 FP8 \u5143\u6570\u636e\u91cd\u7f6e\u4e3a\u9ed8\u8ba4\u503c\uff08\u7f29\u653e\u56e0\u5b50 1\uff0camax 0\uff09\u3002</li> <li>\u76ee\u6807\u7248\u672c 1.6 \u6216 1.7\uff1a\u53ef\u76f4\u63a5\u52a0\u8f7d\u4fdd\u5b58\u7684 FP8 \u5143\u6570\u636e\u3002</li> <li>\u76ee\u6807\u7248\u672c \u2265 1.8\uff1a\u51fa\u73b0 <code>unexpected key</code>\uff0c\u9700\u624b\u52a8\u5904\u7406\u952e\u540d\u6216\u5347\u7ea7\u4fdd\u5b58\u7aef\u3002</li> </ul>"},{"location":"transformerengine/docs/faq/#18-111","title":"\u7248\u672c 1.8 ~ 1.11","text":"<ul> <li>\u4fdd\u5b58\u4f4d\u7f6e\uff1a <code>core_attention._extra_state</code></li> <li>\u52a0\u8f7d\u884c\u4e3a\uff1a</li> <li>\u76ee\u6807\u7248\u672c \u2264 1.5\uff1a\u4f9d\u65e7\u91cd\u7f6e\u4e3a\u9ed8\u8ba4\u503c\u3002</li> <li>\u76ee\u6807\u7248\u672c 1.6 \u6216 1.7\uff1a\u9700\u8981\u624b\u52a8\u5c06\u65e7\u952e <code>core_attention.fused_attention._extra_state</code> \u6620\u5c04\u4e3a\u65b0\u952e\uff0c\u5426\u5219\u540c\u6837\u56de\u843d\u5230\u9ed8\u8ba4\u503c\u3002\u4ee5 <code>MultiheadAttention</code> \u4e3a\u4f8b\uff1a</li> </ul> <pre><code>state_dict[\"core_attention._extra_state\"] = (\n    state_dict[\"core_attention.fused_attention._extra_state\"]\n)\ndel state_dict[\"core_attention.fused_attention._extra_state\"]\n</code></pre> <ul> <li>\u76ee\u6807\u7248\u672c \u2265 1.8\uff1a\u53ef\u76f4\u63a5\u52a0\u8f7d\u4fdd\u5b58\u7684 FP8 \u5143\u6570\u636e\u3002</li> </ul>"},{"location":"transformerengine/docs/faq/#112","title":"\u7248\u672c \u2265 1.12","text":"<ul> <li>\u4fdd\u5b58\u4f4d\u7f6e\uff1a <code>core_attention._extra_state</code></li> <li>\u52a0\u8f7d\u884c\u4e3a\uff1a</li> <li>\u76ee\u6807\u7248\u672c \u2264 1.5\uff1a\u91cd\u7f6e\u4e3a\u9ed8\u8ba4\u503c\u3002</li> <li>\u76ee\u6807\u7248\u672c \u2265 1.6\uff1a\u76f4\u63a5\u52a0\u8f7d\u5143\u6570\u636e\uff08\u5305\u542b NVFP4\u3001MXFP8 \u7b49\u6700\u65b0\u6269\u5c55\uff09\u3002</li> </ul>"},{"location":"transformerengine/docs/installation/","title":"\u5b89\u88c5\u6307\u5357","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p>"},{"location":"transformerengine/docs/installation/#_1","title":"\u5b89\u88c5","text":""},{"location":"transformerengine/docs/installation/#_2","title":"\u5148\u51b3\u6761\u4ef6","text":"<ol> <li>\u64cd\u4f5c\u7cfb\u7edf\uff1aLinux x86_64\u3002</li> <li>CUDA\uff1a\u5b89\u88c5 CUDA 12.1+\uff0c\u82e5\u4f7f\u7528 Blackwell GPU \u5219\u9700 12.8 \u53ca\u4ee5\u4e0a\u3002</li> <li>\u9a71\u52a8\uff1a\u4f7f\u7528\u4e0e CUDA \u7248\u672c\u5339\u914d\u7684 NVIDIA \u9a71\u52a8\u3002</li> <li>cuDNN\uff1a\u5b89\u88c5 cuDNN 9.3+\u3002</li> </ol> <p>\u82e5\u8fd0\u884c\u9636\u6bb5\u65e0\u6cd5\u5728\u9ed8\u8ba4\u8def\u5f84\uff08\u5982 <code>CUDA_HOME</code>\uff09\u627e\u5230 CUDA Toolkit \u5934\u6587\u4ef6\uff0c\u53ef\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u8865\u5145\uff1a</p> <pre><code>export NVTE_CUDA_INCLUDE_PATH=/opt/cuda/include\n</code></pre>"},{"location":"transformerengine/docs/installation/#ngc-transformer-engine","title":"\u5728 NGC \u5bb9\u5668\u4e2d\u4f7f\u7528 Transformer Engine","text":"<p>\u81ea 22.09 \u7248\u672c\u8d77\uff0cNVIDIA GPU Cloud \u53d1\u5e03\u7684 PyTorch \u5bb9\u5668\u5df2\u9884\u88c5 Transformer Engine\u3002\u76f4\u63a5\u62c9\u53d6\u5bb9\u5668\u5373\u53ef\u4f53\u9a8c\uff1a</p> <pre><code>docker run --gpus all -it --rm nvcr.io/nvidia/pytorch:25.08-py3\n</code></pre>"},{"location":"transformerengine/docs/installation/#pypi","title":"\u901a\u8fc7 PyPI \u5b89\u88c5","text":"<p>\u53ef\u4ee5\u76f4\u63a5\u4ece PyPI \u5b89\u88c5\uff1a</p> <pre><code>pip3 install --no-build-isolation transformer_engine[pytorch]\n</code></pre> <p>\u5982\u9700\u542f\u7528\u591a\u4e2a\u6846\u67b6\u7684 Python \u7ed1\u5b9a\uff08\u4f8b\u5982\u540c\u65f6\u652f\u6301 JAX \u4e0e PyTorch\uff09\uff0c\u8bf7\u5728\u65b9\u62ec\u53f7\u4e2d\u4ee5\u9017\u53f7\u5217\u51fa\u6240\u9700\u6846\u67b6\uff1a<code>transformer_engine[jax,pytorch]</code>\u3002PyPI wheel \u63d0\u4f9b\u6838\u5fc3\u5e93\uff0c\u5e76\u643a\u5e26 JAX/PyTorch \u6269\u5c55\u7684\u6e90\u7801\u3002</p>"},{"location":"transformerengine/docs/installation/#github","title":"\u901a\u8fc7 GitHub \u5b89\u88c5","text":""},{"location":"transformerengine/docs/installation/#_3","title":"\u989d\u5916\u5148\u51b3\u6761\u4ef6","text":"<ol> <li>PyTorch \u652f\u6301\uff1a\u9884\u5148\u5b89\u88c5\u5e26 GPU \u652f\u6301\u7684 PyTorch\u3002</li> <li>JAX \u652f\u6301\uff1a\u9884\u5148\u5b89\u88c5\u5e26 GPU \u652f\u6301\u7684 JAX \u2265 0.4.7\u3002</li> </ol>"},{"location":"transformerengine/docs/installation/#_4","title":"\u5b89\u88c5\u7a33\u5b9a\u5206\u652f","text":"<pre><code>pip3 install --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@stable\n</code></pre> <p>\u547d\u4ee4\u4f1a\u81ea\u52a8\u63a2\u6d4b\u5f53\u524d\u73af\u5883\u4e2d\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u5e76\u6784\u5efa\u5bf9\u5e94\u6269\u5c55\u3002\u5982\u9700\u624b\u52a8\u6307\u5b9a\uff0c\u53ef\u8bbe\u7f6e <code>NVTE_FRAMEWORK</code>\uff08\u4f8b\u5982 <code>NVTE_FRAMEWORK=jax,pytorch</code>\uff09\u3002</p>"},{"location":"transformerengine/docs/installation/#_5","title":"\u5b89\u88c5\u6700\u65b0\u5f00\u53d1\u7248","text":"<p>\u5f00\u53d1\u7248\u9002\u7528\u573a\u666f</p> <p>Main \u5206\u652f\u53ef\u80fd\u5305\u542b\u5c1a\u672a\u53d1\u5e03\u7684\u7279\u6027\uff0c\u4e0d\u4fdd\u8bc1\u751f\u4ea7\u53ef\u7528\u6027\u3002</p> <pre><code>pip3 install --no-build-isolation git+https://github.com/NVIDIA/TransformerEngine.git@main\n</code></pre> <p>\u82e5\u53ea\u6784\u5efa\u4e0e\u6846\u67b6\u65e0\u5173\u7684 C++ API\uff0c\u53ef\u8bbe\u7f6e <code>NVTE_FRAMEWORK=none</code>\u3002\u5b89\u88c5\u7279\u5b9a PR\uff08\u5c06 <code>NNN</code> \u66ff\u6362\u4e3a\u7f16\u53f7\uff09\uff1a</p> <pre><code>pip3 install --no-build-isolation \\\n  git+https://github.com/NVIDIA/TransformerEngine.git@refs/pull/NNN/merge\n</code></pre>"},{"location":"transformerengine/docs/installation/#_6","title":"\u4ece\u6e90\u7801\u6784\u5efa","text":"<pre><code>git clone --branch stable --recursive https://github.com/NVIDIA/TransformerEngine.git\ncd TransformerEngine\nexport NVTE_FRAMEWORK=pytorch   # \u53ef\u9009\uff1a\u4ec5\u6784\u5efa\u6240\u9700\u6846\u67b6\npip3 install --no-build-isolation .\n</code></pre> <p>\u82e5\u4ed3\u5e93\u5df2\u5b58\u5728\uff0c\u8bf7\u540c\u6b65\u5b50\u6a21\u5757\uff1a</p> <pre><code>git submodule update --init --recursive\n</code></pre> <p>\u542f\u7528\u6d4b\u8bd5\u4f9d\u8d56\u6216\u8c03\u8bd5\u7b26\u53f7\uff1a</p> <pre><code>pip3 install --no-build-isolation .[test]\nNVTE_BUILD_DEBUG=1 pip3 install --no-build-isolation .\n</code></pre>"},{"location":"transformerengine/docs/installation/#_7","title":"\u6545\u969c\u6392\u67e5","text":""},{"location":"transformerengine/docs/installation/#1-abi","title":"1. ABI \u517c\u5bb9\u6027\u95ee\u9898","text":"<ul> <li>\u73b0\u8c61\uff1a\u5bfc\u5165 <code>transformer_engine</code> \u65f6\u51fa\u73b0 <code>ImportError</code>\uff0c\u63d0\u793a\u672a\u5b9a\u4e49\u7b26\u53f7\u3002</li> <li>\u89e3\u51b3\u65b9\u6cd5\uff1a\u786e\u8ba4 PyTorch \u4e0e Transformer Engine \u4f7f\u7528\u4e00\u81f4\u7684 C++ ABI\uff1b\u5fc5\u8981\u65f6\u91cd\u65b0\u7f16\u8bd1 PyTorch\u3002</li> <li>\u8865\u5145\u8bf4\u660e\uff1a\u82e5\u5728\u5bb9\u5668\u5916\u901a\u8fc7 pip \u5b89\u88c5 PyTorch\uff0c\u5e38\u89c1\u9ed8\u8ba4 ABI \u4e0e\u7cfb\u7edf\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\u3002</li> </ul>"},{"location":"transformerengine/docs/installation/#2","title":"2. \u7f3a\u5c11\u5934\u6587\u4ef6\u6216\u5e93","text":"<ul> <li>\u73b0\u8c61\uff1aCMake \u62a5\u9519\u627e\u4e0d\u5230 <code>cudnn.h</code>\u3001<code>cublas_v2.h</code>\u3001<code>filesystem</code> \u7b49\u5934\u6587\u4ef6\u3002</li> <li>\u89e3\u51b3\u65b9\u6cd5\uff1a\u5b89\u88c5\u7f3a\u5931\u7684\u5f00\u53d1\u5305\uff0c\u6216\u624b\u52a8\u8bbe\u7f6e\u8def\u5f84\u3002</li> </ul> <pre><code>export CUDA_PATH=/path/to/cuda\nexport CUDNN_PATH=/path/to/cudnn\n</code></pre> <p>\u5fc5\u8981\u65f6\u6307\u5b9a C++ \u7f16\u8bd1\u5668\uff1a<code>export CXX=/usr/bin/g++</code>.</p>"},{"location":"transformerengine/docs/installation/#3","title":"3. \u6784\u5efa\u8fc7\u7a0b\u5360\u7528\u8d44\u6e90\u8fc7\u9ad8","text":"<ul> <li>\u73b0\u8c61\uff1a\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u5361\u4f4f\u6216\u5185\u5b58\u4e0d\u8db3\u3002</li> <li>\u89e3\u51b3\u65b9\u6cd5\uff1a\u9650\u5236\u5e76\u884c\u5ea6\u3002</li> </ul> <pre><code>MAX_JOBS=1 NVTE_BUILD_THREADS_PER_JOB=1 pip3 install --no-build-isolation .\n</code></pre>"},{"location":"transformerengine/docs/installation/#4","title":"4. \u9700\u8981\u8be6\u7ec6\u6784\u5efa\u65e5\u5fd7","text":"<pre><code>cd TransformerEngine\npip3 install -v -v -v --no-build-isolation .\n</code></pre>"},{"location":"transformerengine/docs/api/common/","title":"\u901a\u7528\u914d\u65b9","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p>"},{"location":"transformerengine/docs/api/common/#api","title":"\u901a\u7528 API","text":"<p><code>transformer_engine.common.recipe</code> \u6a21\u5757\u5c01\u88c5\u4e86 FP8/FP4 \u63a8\u7406\u4e0e\u8bad\u7ec3\u4e2d\u5e38\u7528\u7684\u91cf\u5316\u914d\u65b9\uff0c\u5e2e\u52a9\u7528\u6237\u5feb\u901f\u9009\u62e9\u5408\u9002\u7684\u7f29\u653e\u7b56\u7565\u3002\u672c\u9875\u5217\u51fa\u53ef\u7528\u7684\u914d\u65b9\u7c7b\u578b\uff0c\u5e76\u5728\u5b8c\u6574\u6587\u6863\u751f\u6210\u65f6\u63d0\u4f9b\u8be6\u7ec6\u53c2\u6570\u8bf4\u660e\u3002</p>"},{"location":"transformerengine/docs/api/common/#_1","title":"\u679a\u4e3e\u4e0e\u57fa\u7840\u7c7b\u578b","text":"<ul> <li><code>transformer_engine.common.recipe.Format</code>\uff1a\u5b9a\u4e49 TE \u4e2d\u652f\u6301\u7684 FP8 \u4e0e FP4 \u6570\u503c\u683c\u5f0f\uff08E4M3\u3001E5M2\u3001HYBRID \u7b49\uff09\uff0c\u53ef\u76f4\u63a5\u7528\u4e8e\u914d\u65b9\u914d\u7f6e\u3002</li> </ul>"},{"location":"transformerengine/docs/api/common/#_2","title":"\u9884\u8bbe\u914d\u65b9","text":"<ul> <li><code>DelayedScaling</code>\uff1a\u5ef6\u8fdf\u66f4\u65b0\u7f29\u653e\u56e0\u5b50\uff0c\u8bb0\u5f55 <code>amax_history_len</code> \u6b65\u7684\u5386\u53f2\uff0c\u5e38\u7528\u4e8e\u7a33\u5b9a FP8 \u8bad\u7ec3\uff1b\u53ef\u81ea\u5b9a\u4e49 <code>amax_compute_algo</code> \u4e0e\u7f29\u653e\u8ba1\u7b97\u65b9\u5f0f\u3002</li> <li><code>MXFP8BlockScaling</code>\uff1a\u5bf9\u5f20\u91cf\u6267\u884c\u5757\u7ea7\u7f29\u653e\uff0c\u6bcf 32 \u4e2a\u5143\u7d20\u5171\u4eab\u7f29\u653e\u56e0\u5b50\uff0c\u9002\u5408 MXFP8 \u8bad\u7ec3\u6d41\u7a0b\u3002</li> <li><code>NVFP4BlockScaling</code>\uff1a\u5b9e\u73b0 NVFP4 \u53cc\u5c42\u5757\u7ea7\u7f29\u653e\u7b56\u7565\uff0816\u00d716 \u6743\u91cd\u5757 + \u5168\u5c40 FP32 \u7f29\u653e\uff09\uff0c\u5e76\u5728\u9700\u8981\u65f6\u542f\u7528\u968f\u673a\u54c8\u8fbe\u739b\u53d8\u6362\u4e0e\u968f\u673a\u820d\u5165\u3002</li> <li><code>Float8CurrentScaling</code>\uff1a\u5bf9\u6bcf\u4e2a\u5f20\u91cf\u4f7f\u7528\u5f53\u524d\u6b65\u7684\u7edf\u8ba1\u91cf\u8ba1\u7b97\u7f29\u653e\uff0c\u652f\u6301\u6309\u9700\u542f\u7528 2 \u7684\u5e42\u6b21\u7f29\u653e\u4e0e DPA/MHA \u573a\u666f\u3002</li> <li><code>Float8BlockScaling</code>\uff1a\u9488\u5bf9 FP8 \u5f20\u91cf\u7684\u5757\u7ea7\u7f29\u653e\u7b56\u7565\uff0c\u53ef\u914d\u7f6e\u8f93\u5165/\u6743\u91cd/\u68af\u5ea6\u7684\u5757\u7ef4\u5ea6\u4e0e\u7f29\u653e\u7cbe\u5ea6\uff0c\u9ed8\u8ba4\u7ea6\u675f\u4e3a 2 \u7684\u5e42\u6b21\u3002</li> </ul>"},{"location":"transformerengine/docs/api/framework/","title":"\u6846\u67b6\u4e13\u5c5e API","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p>"},{"location":"transformerengine/docs/api/framework/#api","title":"\u6846\u67b6\u4e13\u5c5e API","text":"<p>Transformer Engine \u9488\u5bf9\u4e0d\u540c\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6\u63d0\u4f9b\u4e86\u72ec\u7acb\u7684\u9ad8\u6027\u80fd\u63a5\u53e3\u3002\u4e0b\u5217\u9875\u9762\u6c47\u603b\u4e86\u5404\u6846\u67b6\u7684\u8be6\u7ec6 API\uff1a</p> <ul> <li>PyTorch API\uff1a\u8986\u76d6\u7ebf\u6027\u5c42\u3001\u6ce8\u610f\u529b\u6a21\u5757\u3001FP8 \u81ea\u52a8\u6df7\u5408\u7cbe\u5ea6\u4e0e MoE \u8f85\u52a9\u51fd\u6570\u3002</li> <li>JAX API\uff1a\u5305\u542b\u903b\u8f91\u8f74\u89c4\u5219\u3001\u68c0\u67e5\u70b9\u7b56\u7565\u4ee5\u53ca Flax \u96c6\u6210\u7ec4\u4ef6\u3002</li> </ul>"},{"location":"transformerengine/docs/api/jax/","title":"JAX API","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p>"},{"location":"transformerengine/docs/api/jax/#jax-api","title":"JAX API","text":""},{"location":"transformerengine/docs/api/jax/#_1","title":"\u9884\u5b9a\u4e49\u7684\u903b\u8f91\u8f74\u53d8\u91cf","text":"<p>\u4ee5\u4e0b\u53d8\u91cf\u53ef\u4ece <code>transformer_engine.jax.sharding</code> \u6a21\u5757\u76f4\u63a5\u83b7\u53d6\uff0c\u7528\u4e8e\u5728 Mesh \u4e2d\u63cf\u8ff0\u5404\u4e2a\u7ef4\u5ea6\u7684\u5206\u7247\u7b56\u7565\u3002</p> <ul> <li><code>BATCH_AXES</code>\uff1a\u6279\u6b21\u7ef4\u5ea6\u7684\u903b\u8f91\u8f74\uff0c\u901a\u5e38\u6cbf\u6570\u636e\u5e76\u884c\uff08DP\uff09\u4e0e FSDP \u65b9\u5411\u5206\u7247\u3002</li> <li><code>SEQLEN_AXES</code>\uff1a\u5e8f\u5217\u957f\u5ea6\u7ef4\u5ea6\u7684\u903b\u8f91\u8f74\uff0c\u901a\u5e38\u4e0d\u8fdb\u884c\u5206\u7247\u3002</li> <li><code>SEQLEN_TP_AXES</code>\uff1a\u5e8f\u5217\u957f\u5ea6\u7ef4\u5ea6\u7684\u903b\u8f91\u8f74\uff0c\u901a\u5e38\u6cbf\u5f20\u91cf\u5e76\u884c\uff08TP\uff09\u65b9\u5411\u5206\u7247\u3002</li> <li><code>HEAD_AXES</code>\uff1a\u591a\u5934\u6ce8\u610f\u529b\u4e2d head \u7ef4\u5ea6\u7684\u903b\u8f91\u8f74\uff0c\u901a\u5e38\u6cbf TP \u5206\u7247\u3002</li> <li><code>HIDDEN_AXES</code>\uff1a\u9690\u85cf\u7ef4\u5ea6\u7684\u903b\u8f91\u8f74\uff0c\u901a\u5e38\u4e0d\u5206\u7247\u3002</li> <li><code>HIDDEN_TP_AXES</code>\uff1a\u9690\u85cf\u7ef4\u5ea6\u7684\u903b\u8f91\u8f74\uff0c\u901a\u5e38\u6cbf TP \u5206\u7247\u3002</li> <li><code>JOINED_AXES</code>\uff1a\u672a\u663e\u5f0f\u5b9a\u4e49\u7684\u903b\u8f91\u8f74\uff0c\u901a\u5e38\u4e0d\u5206\u7247\u3002</li> </ul>"},{"location":"transformerengine/docs/api/jax/#_2","title":"\u68c0\u67e5\u70b9\u7b56\u7565","text":"<p>\u5728 Transformer Engine JAX \u4e2d\u542f\u7528\u6fc0\u6d3b\u91cd\u8ba1\u7b97\uff08checkpointing\uff09\u65f6\uff0c\u9700\u8981\u7559\u610f\u6a21\u578b\u4f7f\u7528\u7684\u68c0\u67e5\u70b9\u7b56\u7565\u3002\u82e5\u7b56\u7565\u4f9d\u8d56 <code>dot</code> \u539f\u8bed\uff0c\u5982 <code>jax.checkpoint_policies.dots_with_no_batch_dims</code>\uff0c\u5219\u53ef\u80fd\u4e0e Transformer Engine \u63d0\u4f9b\u7684 GEMM \u4e0d\u517c\u5bb9\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u7b97\u5b50\u5e76\u4e0d\u603b\u662f\u4f7f\u7528 <code>jax.lax.dot_general</code>\u3002\u5efa\u8bae\u6539\u7528 <code>transformer_engine.jax.checkpoint_policies.dots_and_te_gemms_with_no_batch_dims</code> \u7b49\u4e13\u4e3a Transformer Engine GEMM \u4e0e <code>jax.lax.dot_general</code> \u8bbe\u8ba1\u7684\u7b56\u7565\u3002\u82e5\u7b56\u7565\u4e0d\u901a\u8fc7\u539f\u8bed\u540d\u79f0\u8fdb\u884c\u8fc7\u6ee4\uff08\u4f8b\u5982 <code>jax.checkpoint_policies.save_only_these_names</code> \u6216 <code>jax.checkpoint_policies.everything_saveable</code>\uff09\uff0c\u5219\u53ef\u76f4\u63a5\u642d\u914d\u4f7f\u7528\u3002</p>"},{"location":"transformerengine/docs/api/jax/#_3","title":"\u6a21\u5757","text":"<ul> <li><code>transformer_engine.jax.flax.TransformerLayerType</code>\uff1a\u679a\u4e3e\u652f\u6301\u7684 Transformer \u5c42\u7c7b\u578b\uff0c\u7528\u4e8e\u5728 Flax \u4e2d\u9009\u62e9\u5b9e\u73b0\u3002</li> <li><code>transformer_engine.jax.MeshResource</code>\uff1a\u5c01\u88c5 Mesh \u8d44\u6e90\u4fe1\u606f\uff0c\u5e2e\u52a9\u5728 PJIT/PGJIT \u4e2d\u7ba1\u7406\u8bbe\u5907\u62d3\u6251\u3002</li> <li><code>transformer_engine.jax.fp8_autocast</code> / <code>autocast</code>\uff1aJAX \u7aef\u542f\u7528 FP8 \u6df7\u5408\u7cbe\u5ea6\u7684\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u3002</li> <li><code>transformer_engine.jax.update_collections</code>\uff1a\u5728\u8bad\u7ec3\u5faa\u73af\u4e2d\u66f4\u65b0 FP8 \u7edf\u8ba1\u91cf\u4e0e\u96c6\u5408\u3002</li> <li><code>transformer_engine.jax.flax.LayerNorm</code>\u3001<code>DenseGeneral</code>\u3001<code>LayerNormDenseGeneral</code>\u3001<code>LayerNormMLP</code>\uff1aTE \u63d0\u4f9b\u7684 Flax \u6a21\u5757\uff0c\u5747\u5185\u7f6e FP8 \u7f29\u653e\u903b\u8f91\u3002</li> <li><code>transformer_engine.jax.flax.RelativePositionBiases</code>\uff1a\u5b9e\u73b0\u76f8\u5bf9\u4f4d\u7f6e\u504f\u7f6e\uff0c\u7528\u4e8e Transformer \u6ce8\u610f\u529b\u3002</li> <li><code>transformer_engine.jax.flax.DotProductAttention</code>\u3001<code>MultiHeadAttention</code>\u3001<code>TransformerLayer</code>\uff1aJAX/Flax \u7684\u6ce8\u610f\u529b\u4e0e Transformer \u7ec4\u4ef6\uff0c\u9002\u914d Mesh/Sharding \u4e0e FP8\u3002</li> <li><code>transformer_engine.jax.flax.extend_logical_axis_rules</code>\uff1a\u6269\u5c55 Flax \u903b\u8f91\u8f74\u89c4\u5219\uff0c\u786e\u4fdd\u81ea\u5b9a\u4e49\u6a21\u5757\u5728 Mesh \u4e2d\u6b63\u786e\u5206\u7247\u3002</li> </ul>"},{"location":"transformerengine/docs/api/pytorch/","title":"PyTorch API","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p>"},{"location":"transformerengine/docs/api/pytorch/#pytorch-api","title":"PyTorch API","text":"<p>Transformer Engine \u9488\u5bf9 PyTorch \u63d0\u4f9b\u4e86\u9ad8\u6027\u80fd\u6a21\u5757\u3001\u81ea\u52a8\u6df7\u5408\u7cbe\u5ea6\u5de5\u5177\u4e0e\u8f85\u52a9\u51fd\u6570\u3002\u672c\u9875\u6309\u7167\u6a21\u5757\u7c7b\u522b\u5217\u51fa\u53ef\u7528\u63a5\u53e3\uff1b\u8be6\u7ec6\u53c2\u6570\u8bf4\u660e\u53ef\u5728\u5b8c\u6574 API \u751f\u6210\u6d41\u7a0b\u4e2d\u67e5\u770b\u3002</p>"},{"location":"transformerengine/docs/api/pytorch/#_1","title":"\u6838\u5fc3\u5c42\u4e0e\u6a21\u5757","text":"<ul> <li><code>transformer_engine.pytorch.Linear</code>\uff1a\u5e26\u6709 FP8 \u7f29\u653e\u4e0e\u5f20\u91cf\u5e76\u884c\u5206\u7ec4\u63a5\u53e3\u7684\u7ebf\u6027\u5c42\u3002</li> <li><code>transformer_engine.pytorch.GroupedLinear</code>\uff1a\u9488\u5bf9\u4e13\u5bb6\u5e76\u884c/\u5206\u7ec4\u6743\u91cd\u7684\u7ebf\u6027\u5c42\uff0c\u5b9e\u73b0\u9ad8\u6548\u5757\u72b6 GEMM\u3002</li> <li><code>transformer_engine.pytorch.LayerNorm</code>\uff1aTE \u7248\u672c\u7684 LayerNorm\uff0c\u4fdd\u6301\u4e0e PyTorch \u63a5\u53e3\u4e00\u81f4\u3002</li> <li><code>transformer_engine.pytorch.RMSNorm</code>\uff1a\u63d0\u4f9b RMSNorm \u53d8\u4f53\uff0c\u7528\u4e8e\u66ff\u4ee3\u6807\u51c6 LayerNorm\u3002</li> <li><code>transformer_engine.pytorch.LayerNormLinear</code>\uff1a\u5728\u4e00\u6b21\u8c03\u7528\u4e2d\u5b8c\u6210 LayerNorm + \u7ebf\u6027\u5c42\u7684\u878d\u5408\u6a21\u5757\u3002</li> <li><code>transformer_engine.pytorch.LayerNormMLP</code>\uff1a\u5305\u542b LayerNorm \u7684\u524d\u9988\u5c42\u7ec4\u5408\uff0c\u9002\u5408 GPT/T5 \u7ed3\u6784\u3002</li> </ul>"},{"location":"transformerengine/docs/api/pytorch/#transformer","title":"\u6ce8\u610f\u529b\u4e0e Transformer \u7ec4\u4ef6","text":"<ul> <li><code>transformer_engine.pytorch.DotProductAttention</code>\uff1a\u652f\u6301\u4e0a\u4e0b\u6587\u5e76\u884c\u7684\u70b9\u79ef\u6ce8\u610f\u529b\u5b9e\u73b0\u3002</li> <li><code>transformer_engine.pytorch.MultiheadAttention</code>\uff1aTE \u4f18\u5316\u7684\u6807\u51c6\u591a\u5934\u6ce8\u610f\u529b\uff0c\u53ef\u540c\u65f6\u914d\u7f6e\u5f20\u91cf\u5e76\u884c\u4e0e\u4e0a\u4e0b\u6587\u5e76\u884c\u7ec4\u3002</li> <li><code>transformer_engine.pytorch.TransformerLayer</code>\uff1a\u6574\u5408\u6ce8\u610f\u529b\u3001\u524d\u9988\u4e0e\u5f52\u4e00\u5316\u7684 Transformer \u57fa\u7840\u5c42\u3002</li> <li><code>transformer_engine.pytorch.dot_product_attention.inference.InferenceParams</code>\uff1a\u63a8\u7406\u9636\u6bb5\u7528\u4e8e\u7ba1\u7406 KV \u7f13\u5b58\u548c\u6b65\u957f\u7684\u8f85\u52a9\u7ed3\u6784\u3002</li> </ul>"},{"location":"transformerengine/docs/api/pytorch/#_2","title":"\u968f\u673a\u6570\u4e0e\u7f13\u51b2\u533a\u7ba1\u7406","text":"<ul> <li><code>transformer_engine.pytorch.CudaRNGStatesTracker</code>\uff1a\u8ddf\u8e2a CUDA RNG \u72b6\u6001\uff0c\u4fbf\u4e8e\u5728\u4e0d\u540c\u9636\u6bb5\u590d\u73b0\u968f\u673a\u6570\u3002</li> <li><code>transformer_engine.pytorch.UserBufferQuantizationMode</code>\uff1a\u679a\u4e3e UserBuffer \u652f\u6301\u7684\u91cf\u5316\u6a21\u5f0f\uff08<code>FP8</code>\u3001<code>NONE</code>\uff09\u3002</li> </ul>"},{"location":"transformerengine/docs/api/pytorch/#_3","title":"\u81ea\u52a8\u6df7\u5408\u7cbe\u5ea6\u4e0e\u6a21\u578b\u521d\u59cb\u5316","text":"<ul> <li><code>transformer_engine.pytorch.fp8_autocast</code> / <code>autocast</code>\uff1a\u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\uff0c\u5728\u524d\u5411\u4f20\u64ad\u4e2d\u542f\u7528 FP8 \u81ea\u52a8\u6df7\u5408\u7cbe\u5ea6\u3002</li> <li><code>transformer_engine.pytorch.fp8_model_init</code> / <code>quantized_model_init</code>\uff1a\u4ee5 FP8/BF16 \u7b49\u7cbe\u5ea6\u521d\u59cb\u5316\u6a21\u5757\u53c2\u6570\u3002</li> <li><code>transformer_engine.pytorch.checkpoint</code>\uff1a\u96c6\u6210 PyTorch \u6fc0\u6d3b\u91cd\u8ba1\u7b97\u673a\u5236\uff0c\u4fdd\u8bc1\u4e0e FP8 \u517c\u5bb9\u3002</li> <li><code>transformer_engine.pytorch.is_fp8_available</code>\u3001<code>is_mxfp8_available</code>\u3001<code>is_fp8_block_scaling_available</code>\u3001<code>is_nvfp4_available</code>\u3001<code>is_bf16_available</code>\uff1a\u5feb\u901f\u68c0\u6d4b\u5f53\u524d\u786c\u4ef6/\u8f6f\u4ef6\u662f\u5426\u652f\u6301\u5bf9\u5e94\u6570\u503c\u683c\u5f0f\u3002</li> <li><code>transformer_engine.pytorch.get_cudnn_version</code>\u3001<code>get_device_compute_capability</code>\uff1a\u67e5\u8be2\u8fd0\u884c\u65f6\u73af\u5883\u3002</li> <li><code>transformer_engine.pytorch.get_default_recipe</code>\uff1a\u8fd4\u56de\u9ed8\u8ba4\u7684 FP8 \u7f29\u653e\u914d\u65b9\u3002</li> <li><code>transformer_engine.pytorch.make_graphed_callables</code>\uff1a\u57fa\u4e8e CUDA Graphs \u5c01\u88c5\u53ef\u590d\u7528\u7684\u524d\u5411/\u53cd\u5411\u51fd\u6570\u3002</li> <li><code>transformer_engine.pytorch.get_cpu_offload_context</code>\uff1a\u83b7\u53d6\u4e0e CPU Offload \u76f8\u5173\u7684\u4e0a\u4e0b\u6587\u914d\u7f6e\u3002</li> </ul>"},{"location":"transformerengine/docs/api/pytorch/#moe","title":"MoE \u76f8\u5173\u5de5\u5177","text":"<ul> <li><code>transformer_engine.pytorch.moe_permute</code> / <code>moe_unpermute</code>\uff1a\u5728\u4e13\u5bb6\u524d\u540e\u6267\u884c\u5f20\u91cf\u91cd\u6392\u3002</li> <li><code>transformer_engine.pytorch.moe_permute_with_probs</code> / <code>moe_sort_chunks_by_index_with_probs</code>\uff1a\u540c\u65f6\u4fdd\u7559\u8def\u7531\u6982\u7387\u7684\u91cd\u6392\u4e0e\u6392\u5e8f\u51fd\u6570\u3002</li> <li><code>transformer_engine.pytorch.moe_sort_chunks_by_index</code>\uff1a\u6839\u636e\u4e13\u5bb6\u7d22\u5f15\u5bf9\u5f20\u91cf\u5757\u6392\u5e8f\u3002</li> <li><code>transformer_engine.pytorch.parallel_cross_entropy</code>\uff1a\u652f\u6301\u5e76\u884c\u4e13\u5bb6\u8def\u7531\u7684\u4ea4\u53c9\u71b5\u5b9e\u73b0\u3002</li> </ul>"},{"location":"transformerengine/docs/api/pytorch/#userbuffer","title":"UserBuffer \u7ba1\u7406","text":"<ul> <li><code>transformer_engine.pytorch.initialize_ub</code>\uff1a\u521d\u59cb\u5316 UserBuffer\uff0c\u7528\u4e8e\u5728\u6d41\u6c34\u7ebf/\u4e13\u5bb6\u5e76\u884c\u573a\u666f\u4e0b\u7f13\u5b58\u5f20\u91cf\u3002</li> <li><code>transformer_engine.pytorch.destroy_ub</code>\uff1a\u91ca\u653e UserBuffer \u8d44\u6e90\u3002</li> </ul>"},{"location":"transformerengine/docs/debug/1_getting_started/","title":"\u5feb\u901f\u5165\u95e8","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p>"},{"location":"transformerengine/docs/debug/1_getting_started/#_1","title":"\u5feb\u901f\u5165\u95e8","text":"<p>\u5de5\u5177\u652f\u6301\u8303\u56f4</p> <p>\u76ee\u524d\u501f\u52a9 Nvidia-DL-Framework-Inspect \u7684 Precision Debug \u5de5\u5177\u4ec5\u652f\u6301 Transformer Engine \u7684 PyTorch \u63a5\u53e3\u3002</p> <p>Transformer Engine \u63d0\u4f9b\u4e86\u4e00\u7ec4\u7cbe\u5ea6\u8c03\u8bd5\u5de5\u5177\uff0c\u53ef\u5e2e\u52a9\u4f60\uff1a</p> <ul> <li>\u8bb0\u5f55\u6bcf\u4e2a\u77e9\u9635\u4e58\uff08GEMM\uff09\u7b97\u5b50\u4e2d\u5404\u5f20\u91cf\u7684\u7edf\u8ba1\u91cf\uff1b</li> <li>\u4ee5\u66f4\u9ad8\u7cbe\u5ea6\u8fd0\u884c\u6307\u5b9a\u7684 GEMM\uff1b</li> <li>\u4e3a\u7279\u5b9a GEMM \u542f\u7528\u5f53\u524d\u7684\u5355\u5f20\u91cf\u7f29\u653e\u65b9\u6848\uff1b</li> <li>\u8bd5\u9a8c\u65b0\u7684\u6570\u503c\u7cbe\u5ea6\u5e76\u5c06\u5176\u96c6\u6210\u81f3 FP8 \u8bad\u7ec3\u6d41\u7a0b\uff1b</li> <li>\u2026\u2026\u4ee5\u53ca\u66f4\u591a\u80fd\u529b\u3002</li> </ul> <p>\u8981\u542f\u7528 Transformer Engine \u7684\u8c03\u8bd5\u529f\u80fd\uff0c\u9700\u8981\u5b8c\u6210\u4ee5\u4e0b\u56db\u6b65\uff1a</p> <ol> <li>\u7f16\u5199\u914d\u7f6e YAML \u6587\u4ef6\uff0c\u58f0\u660e\u8981\u542f\u7528\u7684\u529f\u80fd\u3002</li> <li>\u5bfc\u5165\u3001\u521d\u59cb\u5316\u5e76\u5b89\u88c5 Nvidia-DL-Framework-Inspect \u5de5\u5177\u3002</li> <li>\u5728\u521b\u5efa TE \u5c42\u65f6\uff0c\u53ef\u4ee5\u4f20\u5165 <code>name=\"...\"</code> \u4fbf\u4e8e\u8bc6\u522b\u5c42\u540d\uff1b\u82e5\u672a\u6307\u5b9a\uff0c\u5c06\u81ea\u52a8\u63a8\u65ad\u3002</li> <li>\u5728\u4e00\u6b21\u524d\u5411-\u53cd\u5411\u6d41\u7a0b\u7ed3\u675f\u65f6\u8c03\u7528 <code>debug_api.step()</code>\u3002</li> </ol> <p>\u8c03\u8bd5\u7684\u7b2c\u4e00\u6b65\u662f\u521b\u5efa\u914d\u7f6e YAML \u6587\u4ef6\uff0c\u7528\u4e8e\u58f0\u660e\u5404\u5c42\u542f\u7528\u7684\u529f\u80fd\u3002\u529f\u80fd\u5206\u4e3a\u4e24\u7c7b\uff1a</p> <ul> <li>Transformer Engine \u5185\u7f6e\u529f\u80fd\uff0c\u4f8b\u5982 DisableFP8GEMM\u3001LogTensorStats\uff0c\u8be6\u89c1 \u8c03\u8bd5\u529f\u80fd API\u3002</li> <li>\u7528\u6237\u81ea\u5b9a\u4e49\u529f\u80fd\u3002\u5173\u4e8e\u5982\u4f55\u7f16\u5199\u81ea\u5b9a\u4e49\u529f\u80fd\uff0c\u8bf7\u53c2\u8003 Nvidia-DL-Framework-Inspect \u8c03\u7528\u8bf4\u660e\u3002</li> </ul> <p></p> <p>\u56fe 1\uff1aNvidia-DL-Framework-Inspect \u5bf9\u542b 3 \u4e2a TE Linear \u5c42\u7684\u8bad\u7ec3\u811a\u672c\u8fdb\u884c\u62e6\u622a\u793a\u4f8b\u3002<code>config.yaml</code> \u4e3a\u6bcf\u4e2a Linear \u5c42\u58f0\u660e\u8981\u542f\u7528\u7684\u529f\u80fd\u3002\u90e8\u5206\u529f\u80fd\u7c7b\u7531 TE \u63d0\u4f9b\uff0c<code>UserProvidedPrecision</code> \u5219\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u529f\u80fd\u3002Nvidia-DL-Framework-Inspect \u4f1a\u6309\u914d\u7f6e\u5c06\u529f\u80fd\u6ce8\u5165\u81f3\u5bf9\u5e94\u5c42\u3002</p>"},{"location":"transformerengine/docs/debug/1_getting_started/#_2","title":"\u793a\u4f8b\u8bad\u7ec3\u811a\u672c","text":"<p>\u4ee5\u4e0b\u5c55\u793a\u5982\u4f55\u4f7f\u7528 Transformer Engine \u4ee5 FP8 \u7cbe\u5ea6\u8bad\u7ec3\u4e00\u4e2a Transformer \u5c42\uff0c\u5305\u62ec\u8bbe\u7f6e\u5c42\u3001\u5b9a\u4e49\u4f18\u5316\u5668\u4ee5\u53ca\u4f7f\u7528\u5408\u6210\u6570\u636e\u8fd0\u884c\u82e5\u5e72\u8bad\u7ec3\u8fed\u4ee3\u3002</p> <pre><code># train.py\n\nfrom transformer_engine.pytorch import TransformerLayer\nimport torch\nimport torch.nn as nn\nimport torch.optim as optim\nimport transformer_engine.pytorch as te\n\nhidden_size = 512\nnum_attention_heads = 8\n\ntransformer_layer = TransformerLayer(\n    hidden_size=hidden_size,\n    ffn_hidden_size=hidden_size,\n    num_attention_heads=num_attention_heads\n).cuda()\n\ndummy_input = torch.randn(10, 32, hidden_size).cuda()\ncriterion = nn.MSELoss()\noptimizer = optim.Adam(transformer_layer.parameters(), lr=1e-4)\ndummy_target = torch.randn(10, 32, hidden_size).cuda()\n\nfor epoch in range(5):\n    transformer_layer.train()\n    optimizer.zero_grad()\n    with te.autocast(enabled=True):\n        output = transformer_layer(dummy_input)\n    loss = criterion(output, dummy_target)\n    loss.backward()\n    optimizer.step()\n</code></pre> <p>\u6211\u4eec\u5c06\u5728\u4e0a\u8ff0\u811a\u672c\u4e2d\u5c55\u793a\u4e24\u4e2a\u8c03\u8bd5\u529f\u80fd\uff1a</p> <ol> <li>\u7981\u7528\u7279\u5b9a GEMM \u7684 FP8 \u7cbe\u5ea6\uff0c\u4f8b\u5982 FC1\u3001FC2 \u7684\u524d\u5411 GEMM\u3002</li> <li>\u8bb0\u5f55\u5176\u4ed6 GEMM \u7684\u7edf\u8ba1\u91cf\uff0c\u4f8b\u5982 TransformerLayer \u4e2d LayerNormLinear \u5b50\u5c42\u7684\u6570\u636e\u68af\u5ea6 GEMM\u3002</li> </ol>"},{"location":"transformerengine/docs/debug/1_getting_started/#_3","title":"\u914d\u7f6e\u6587\u4ef6","text":"<p>\u51c6\u5907\u5982\u4e0b\u914d\u7f6e YAML \u6587\u4ef6\uff1a</p> <pre><code># config.yaml\n\nfc1_fprop_to_fp8:\n  enabled: True\n  layers:\n    layer_types: [fc1, fc2] # \u540d\u79f0\u5305\u542b fc1 \u6216 fc2\n  transformer_engine:\n    DisableFP8GEMM:\n      enabled: True\n      gemms: [fprop]\n\nlog_tensor_stats:\n  enabled: True\n  layers:\n    layer_types: [layernorm_linear] # \u540d\u79f0\u5305\u542b layernorm_linear\n  transformer_engine:\n    LogTensorStats:\n      enabled: True\n      stats: [max, min, mean, std, l1_norm]\n      tensors: [activation]\n      freq: 1\n      start_step: 2\n      end_step: 5\n</code></pre> <p>\u5173\u4e8e\u914d\u7f6e\u6587\u4ef6\u7684\u66f4\u591a\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605 \u4e0b\u4e00\u8282\u3002</p>"},{"location":"transformerengine/docs/debug/1_getting_started/#python","title":"\u8c03\u6574 Python \u811a\u672c","text":"<pre><code># (...)\n\nimport nvdlfw_inspect.api as debug_api\ndebug_api.initialize(\n    config_file=\"./config.yaml\",\n    feature_dirs=[\"/path/to/transformer_engine/debug/features\"],\n    log_dir=\"./log\",\n    default_logging_enabled=True)\n\n# \u521d\u59cb\u5316\u5e26\u540d\u79f0\u7684 TransformerLayer\ntransformer_layer = TransformerLayer(\n  name=\"transformer_layer\",\n  # ...)\n\n# (...)\nfor epoch in range(5):\n  # \u524d\u5411\u4e0e\u53cd\u5411\n  # ...\n  debug_api.step()\n</code></pre> <p>\u4e0a\u8ff0\u4fee\u6539\u5305\u542b\u4ee5\u4e0b\u5185\u5bb9\uff1a</p> <ol> <li>\u65b0\u589e <code>nvdlfw_inspect.api</code> \u7684\u5bfc\u5165\u3002</li> <li>\u901a\u8fc7 <code>debug_api.initialize()</code> \u521d\u59cb\u5316 Nvidia-DL-Framework-Inspect\uff0c\u4f20\u5165\u914d\u7f6e\u6587\u4ef6\u3001\u529f\u80fd\u76ee\u5f55\u4e0e\u65e5\u5fd7\u76ee\u5f55\u3002\u5176\u4e2d Transformer Engine \u63d0\u4f9b\u7684\u529f\u80fd\u76ee\u5f55\u4f4d\u4e8e \u6b64\u5904\uff0c\u5b8c\u6574\u53c2\u6570\u8bf4\u660e\u89c1 \u6b64\u6587\u6863\u3002</li> <li>\u5728\u6bcf\u6b21\u524d\u5411/\u53cd\u5411\u540e\u8c03\u7528 <code>debug_api.step()</code>\u3002</li> </ol>"},{"location":"transformerengine/docs/debug/1_getting_started/#_4","title":"\u67e5\u770b\u65e5\u5fd7","text":"<p>\u65e5\u5fd7\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210\u4e24\u4e2a\u6587\u4ef6\uff1a</p> <ol> <li>\u8c03\u8bd5\u65e5\u5fd7\u3002</li> <li>\u7edf\u8ba1\u65e5\u5fd7\u3002</li> </ol> <p>\u6211\u4eec\u9010\u4e00\u67e5\u770b\u3002</p> <p>\u4e3b\u65e5\u5fd7\u6587\u4ef6\u8bb0\u5f55\u4e86 Transformer \u5c42\u5404\u4e2a GEMM \u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u53ef\u4ee5\u770b\u5230 <code>fc1</code> \u4e0e <code>fc2</code> \u7684 fprop GEMM \u5df2\u6309\u9884\u671f\u8fd0\u884c\u5728\u9ad8\u7cbe\u5ea6\u6a21\u5f0f\u4e0b\u3002</p> <pre><code># log/nvdlfw_inspect_logs/nvdlfw_inspect_globalrank-0.log\n\nINFO - Default logging to file enabled at ./log\nINFO - Reading config from ./config.yaml.\nINFO - Loaded configs for dict_keys(['fc1_fprop_to_fp8', 'log_tensor_stats']).\nINFO - transformer_layer.self_attention.layernorm_qkv: Tensor: activation, gemm fprop - FP8 quantization\nINFO - transformer_layer.self_attention.layernorm_qkv: Tensor: activation, gemm wgrad - FP8 quantization\nINFO - transformer_layer.self_attention.layernorm_qkv: Tensor: weight, gemm fprop - FP8 quantization\nINFO - transformer_layer.self_attention.layernorm_qkv: Tensor: weight, gemm dgrad - FP8 quantization\nINFO - transformer_layer.self_attention.layernorm_qkv: Tensor: gradient, gemm dgrad - FP8 quantization\nINFO - transformer_layer.self_attention.layernorm_qkv: Tensor: gradient, gemm wgrad - FP8 quantization\nINFO - transformer_layer.self_attention.proj: Tensor: activation, gemm fprop - FP8 quantization\nINFO - transformer_layer.self_attention.proj: Tensor: activation, gemm wgrad - FP8 quantization\nINFO - transformer_layer.self_attention.proj: Tensor: weight, gemm fprop - FP8 quantization\nINFO - transformer_layer.self_attention.proj: Tensor: weight, gemm dgrad - FP8 quantization\nINFO - transformer_layer.self_attention.proj: Tensor: gradient, gemm dgrad - FP8 quantization\nINFO - transformer_layer.self_attention.proj: Tensor: gradient, gemm wgrad - FP8 quantization\nINFO - transformer_layer.layernorm_mlp.fc1: Tensor: activation, gemm fprop - High precision\nINFO - transformer_layer.layernorm_mlp.fc1: Tensor: activation, gemm wgrad - FP8 quantization\nINFO - transformer_layer.layernorm_mlp.fc1: Tensor: weight, gemm fprop - High precision\nINFO - transformer_layer.layernorm_mlp.fc1: Tensor: weight, gemm dgrad - FP8 quantization\nINFO - transformer_layer.layernorm_mlp.fc1: Tensor: gradient, gemm dgrad - FP8 quantization\nINFO - transformer_layer.layernorm_mlp.fc1: Tensor: gradient, gemm wgrad - FP8 quantization\nINFO - transformer_layer.layernorm_mlp.fc2: Tensor: activation, gemm fprop - High precision\nINFO - transformer_layer.layernorm_mlp.fc2: Tensor: activation, gemm wgrad - FP8 quantization\nINFO - transformer_layer.layernorm_mlp.fc2: Tensor: weight, gemm fprop - High precision\nINFO - transformer_layer.layernorm_mlp.fc2: Tensor: weight, gemm dgrad - FP8 quantization\nINFO - transformer_layer.layernorm_mlp.fc2: Tensor: gradient, gemm dgrad - FP8 quantization\nINFO - transformer_layer.layernorm_mlp.fc2: Tensor: gradient, gemm wgrad - FP8 quantization\nINFO - transformer_layer.self_attention.layernorm_qkv: Feature=LogTensorStats, API=look_at_tensor_before_process: activation\n....\n</code></pre> <p>\u7b2c\u4e8c\u4e2a\u65e5\u5fd7\u6587\u4ef6\uff08<code>nvdlfw_inspect_statistics_logs/nvdlfw_inspect_globalrank-0.log</code>\uff09\u5219\u8bb0\u5f55\u4e86\u6211\u4eec\u5728 <code>config.yaml</code> \u4e2d\u8bf7\u6c42\u7684\u5f20\u91cf\u7edf\u8ba1\u3002</p> <pre><code># log/nvdlfw_inspect_statistics_logs/nvdlfw_inspect_globalrank-0.log\n\nINFO - transformer_layer.self_attention.layernorm_qkv_activation_max                 iteration=000002                  value=4.3188\nINFO - transformer_layer.self_attention.layernorm_qkv_activation_min                 iteration=000002                  value=-4.3386\nINFO - transformer_layer.self_attention.layernorm_qkv_activation_mean                iteration=000002                  value=0.0000\nINFO - transformer_layer.self_attention.layernorm_qkv_activation_std                 iteration=000002                  value=0.9998\nINFO - transformer_layer.self_attention.layernorm_qkv_activation_l1_norm             iteration=000002                  value=130799.6953\nINFO - transformer_layer.self_attention.layernorm_qkv_activation_max                 iteration=000003                  value=4.3184\nINFO - transformer_layer.self_attention.layernorm_qkv_activation_min                 iteration=000003                  value=-4.3381\nINFO - transformer_layer.self_attention.layernorm_qkv_activation_mean                iteration=000003                  value=0.0000\nINFO - transformer_layer.self_attention.layernorm_qkv_activation_std                 iteration=000003                  value=0.9997\nINFO - transformer_layer.self_attention.layernorm_qkv_activation_l1_norm             iteration=000003                  value=130788.1016\nINFO - transformer_layer.self_attention.layernorm_qkv_activation_max                 iteration=000004                  value=4.3181\nINFO - transformer_layer.self_attention.layernorm_qkv_activation_min                 iteration=000004                  value=-4.3377\nINFO - transformer_layer.self_attention.layernorm_qkv_activation_mean                iteration=000004                  value=0.0000\nINFO - transformer_layer.self_attention.layernorm_qkv_activation_std                 iteration=000004                  value=0.9996\nINFO - transformer_layer.self_attention.layernorm_qkv_activation_l1_norm             iteration=000004                  value=130776.7969\n</code></pre>"},{"location":"transformerengine/docs/debug/1_getting_started/#tensorboard","title":"\u4f7f\u7528 TensorBoard \u8bb0\u5f55\u65e5\u5fd7","text":"<p>Precision Debug \u5de5\u5177\u652f\u6301\u4f7f\u7528 TensorBoard \u5c55\u793a\u7edf\u8ba1\u4fe1\u606f\u3002\u53ea\u9700\u5728 <code>debug_api.initialize()</code> \u4e2d\u4f20\u5165 <code>tb_writer</code>\u3002\u4ee5\u4e0b\u5bf9 <code>train.py</code> \u505a\u51fa\u4fee\u6539\uff1a</p> <pre><code># (...)\n\nfrom torch.utils.tensorboard import SummaryWriter\ntb_writer = SummaryWriter('./tensorboard_dir/run1')\n\n# \u5728 Debug API \u521d\u59cb\u5316\u65f6\u4f20\u5165 tb_writer\ndebug_api.initialize(\n    config_file=\"./config.yaml\",\n    feature_dirs=[\"/path/to/transformer_engine/debug/features\"],\n    log_dir=\"./log\",\n    tb_writer=tb_writer)\n\n# (...)\n</code></pre> <p>\u8fd0\u884c\u8bad\u7ec3\u811a\u672c\u540e\uff0c\u901a\u8fc7 <code>tensorboard --logdir=./tensorboard_dir/run1</code> \u6253\u5f00 TensorBoard\uff1a</p> <p></p> <p>\u56fe 2\uff1a\u4f7f\u7528 TensorBoard \u7ed8\u5236\u7684\u7edf\u8ba1\u4fe1\u606f\u3002</p>"},{"location":"transformerengine/docs/debug/2_config_file_structure/","title":"\u914d\u7f6e\u7ed3\u6784","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p>"},{"location":"transformerengine/docs/debug/2_config_file_structure/#_1","title":"\u914d\u7f6e\u6587\u4ef6\u7ed3\u6784","text":"<p>\u82e5\u8981\u542f\u7528\u8c03\u8bd5\u529f\u80fd\uff0c\u9700\u8981\u7f16\u5199\u4e00\u4e2a YAML \u914d\u7f6e\u6587\u4ef6\uff0c\u7528\u4e8e\u58f0\u660e\u6240\u9700\u884c\u4e3a\uff0c\u4f8b\u5982\u54ea\u4e9b GEMM\uff08\u77e9\u9635\u4e58\uff09\u5e94\u4f7f\u7528\u9ad8\u7cbe\u5ea6\u800c\u975e FP8\uff0c\u4ee5\u53ca\u9700\u8981\u8bb0\u5f55\u54ea\u4e9b\u7edf\u8ba1\u6570\u636e\u3002\u4e0b\u9762\u4ecb\u7ecd\u5982\u4f55\u7ec4\u7ec7\u8be5\u914d\u7f6e\u6587\u4ef6\u3002</p>"},{"location":"transformerengine/docs/debug/2_config_file_structure/#_2","title":"\u901a\u7528\u683c\u5f0f","text":"<p>\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a section\uff0c\u6bcf\u4e2a section \u6307\u5b9a\u7279\u5b9a\u5c42\u4e0e\u529f\u80fd\u7684\u8bbe\u7f6e\uff1a</p> <pre><code>section_name_1:\n  enabled: ...\n  layers:\n    # \u6307\u5b9a\u5c42...\n  transformer_engine:\n    Feature1Name:\n      enabled: ...\n      # \u529f\u80fd\u53c2\u6570...\n    Feature2Name:\n      enabled: ...\n      # \u529f\u80fd\u53c2\u6570...\n\nsection_name_2:\n  enabled: ...\n  layers:\n    # \u6307\u5b9a\u5c42...\n  Feature1Name: # \u5982\u679c\u529f\u80fd\u672a\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\uff0c\u5219\u9ed8\u8ba4\u4f7f\u7528\u5168\u5c40\u547d\u540d\u7a7a\u95f4\n    enabled: ...\n    # \u529f\u80fd\u53c2\u6570...\n\nsection_name_3:\n  enabled: ...\n  layers:\n    # \u6307\u5b9a\u5c42...\n  transformer_engine:\n    Feature1Name:\n      enabled: ...\n      # \u529f\u80fd\u53c2\u6570...\n    Feature2Name:\n      enabled: ...\n      # \u529f\u80fd\u53c2\u6570...\n</code></pre> <p>Section \u540d\u79f0\u53ef\u81ea\u884c\u51b3\u5b9a\uff0c\u4f46\u5fc5\u987b\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5\uff1a</p> <ol> <li><code>enabled</code>\uff1a\u662f\u5426\u542f\u7528\u8be5 section \u4e0b\u7684\u529f\u80fd\u3002</li> <li><code>layers</code>\uff1a\u8be5\u529f\u80fd\u9002\u7528\u7684\u5c42\u3002\u6bcf\u4e2a\u5c42\u53ea\u80fd\u5c5e\u4e8e\u4e00\u4e2a section\u3002</li> <li>\u9488\u5bf9\u8fd9\u4e9b\u5c42\u7684\u529f\u80fd\u914d\u7f6e\u9879\u3002</li> </ol>"},{"location":"transformerengine/docs/debug/2_config_file_structure/#_3","title":"\u5c42\u7684\u6307\u5b9a\u65b9\u5f0f","text":"<p>\u8c03\u8bd5\u529f\u80fd\u53ef\u901a\u8fc7 <code>name</code> \u53c2\u6570\u4e3a\u5c42\u547d\u540d\uff1a</p> <pre><code>linear = transformer_engine.debug.pytorch.Linear(in_features, out_features, name=\"linear1\")\n</code></pre> <p>\u914d\u7f6e\u6587\u4ef6\u4f1a\u57fa\u4e8e\u8be5\u540d\u79f0\u8bc6\u522b\u5c42\u3002<code>layers</code> \u5b57\u6bb5\u652f\u6301\u4ee5\u4e0b\u6307\u5b9a\u65b9\u5f0f\uff1a</p> <ol> <li><code>layer_name_regex_pattern</code>\uff1a\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5c42\u540d\u79f0\uff0c\u8bed\u6cd5\u4e0e Python <code>re</code> \u6a21\u5757\u4e00\u81f4\u3002</li> <li><code>layer_types</code>\uff1a\u63d0\u4f9b\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u53ea\u8981\u5c42\u540d\u5305\u542b\u4efb\u4e00\u5b57\u7b26\u4e32\uff0c\u5373\u89c6\u4e3a\u5339\u914d\u3002</li> </ol> <p>\u793a\u4f8b\uff1a</p> <pre><code># \u793a\u4f8b 1\uff1a\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u7b5b\u9009\u5c42\nmy_section:\n  enabled: ...\n  layers:\n    layer_name_regex_pattern: 'self_attn.*'\n  transformer_engine:\n    (...)\n\n# \u793a\u4f8b 2\uff1a\u4f7f\u7528 layer type \u7b5b\u9009\u5c42\nanother_section:\n  enabled: ...\n  layers:\n    layer_types: ['fc1', 'layernorm_linear']\n  transformer_engine:\n    (...)\n</code></pre>"},{"location":"transformerengine/docs/debug/2_config_file_structure/#transformer","title":"Transformer \u5c42\u7684\u547d\u540d","text":"<p>\u5728 Transformer Engine \u4e2d\uff0c\u53ef\u901a\u8fc7\u4ee5\u4e0b\u4e09\u79cd\u65b9\u5f0f\u4e3a\u5c42\u547d\u540d\uff1a</p> <ul> <li>\u521d\u59cb\u5316\u65f6\u4f20\u5165 <code>name=...</code>\u3002</li> <li>\u4f7f\u7528 <code>debug_api.infer_and_assign_layer_names(model)</code>\uff0c\u6839\u636e\u7c7b\u540d\u81ea\u52a8\u8d4b\u503c\u3002</li> <li>\u4f9d\u8d56\u9ed8\u8ba4\u547d\u540d\uff08\u5982 <code>Layer_n</code>\uff0c\u5176\u4e2d <code>n</code> \u4e3a\u7f16\u53f7\uff09\u3002</li> </ul> <p>Transformer Engine \u7684 <code>TransformerLayer</code> \u7531\u591a\u4e2a\u5b50\u5c42\u7ec4\u6210\u3002\u6211\u4eec\u53ef\u4ee5\u9488\u5bf9\u5176\u4e2d\u6070\u597d\u5305\u542b\u4e00\u4e2a\u7ebf\u6027\u5c42\u7684\u5b50\u5c42\u5e94\u7528\u7cbe\u5ea6\u8c03\u8bd5\u5de5\u5177\u3002\u53ef\u5728\u65e5\u5fd7\u4e2d\u67e5\u770b\u8fd9\u4e9b\u5c42\u7684\u540d\u79f0\u3002\u4f8b\u5982\uff0c\u540d\u4e3a <code>transformer_layer</code> \u7684 TransformerLayer \u53ef\u80fd\u5305\u542b\uff1a</p> <ul> <li><code>transformer_layer.self_attn.layernorm_linear_qkv</code> / <code>transformer_layer.self_attn.linear_qkv</code> / <code>transformer_layer.self_attn.layernorm_linear_q</code> / <code>transformer_layer.self_attn.linear_q</code> / <code>transformer_layer.self_attn.linear_kv</code>\uff1b</li> <li><code>transformer_layer.self_attn.proj</code>\uff1b</li> <li><code>transformer_layer.inter_attn.*</code>\uff08<code>layer_type=\"decoder\"</code> \u65f6\uff09\uff1b</li> <li><code>transformer_layer.layernorm_mlp.fc1</code>\uff1b</li> <li><code>transformer_layer.layernorm_mlp.fc2</code>\u3002</li> </ul> <p>\u6709\u4e9b\u5c42\uff08\u5982 <code>LayerNormLinear</code>\uff09\u878d\u5408\u4e86 <code>LayerNorm</code> \u4e0e <code>Linear</code>\u3002\u5728\u7cbe\u5ea6\u8c03\u8bd5\u4e2d\uff0c\u53ea\u6709\u5176\u4e2d\u7684 <code>Linear</code> \u90e8\u5206\u4f1a\u53d7\u5230\u5f71\u54cd\u3002</p> <p>\u4e0b\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u5305\u542b\u56db\u4e2a\u7ebf\u6027\u5c42\u7684 <code>TransformerLayer</code> \u793a\u4f8b\uff0c\u8fd9\u4e9b\u5c42\u90fd\u53ef\u4ee5\u901a\u8fc7\u7cbe\u5ea6\u8c03\u8bd5\u5de5\u5177\u8fdb\u884c\u8c03\u6574\u3002</p> <p></p> <p>\u56fe 1\uff1a\u793a\u4f8b TransformerLayer \u4e2d\u5404\u5c42\u7684\u547d\u540d\u3002\u6700\u5185\u5c42\u65b9\u5757\u8868\u793a\u57fa\u7840\u5c42\uff0c\u6bcf\u4e2a\u57fa\u7840\u5c42\u5305\u542b\u4e00\u4e2a\u7ebf\u6027\u5c42\u3002\u4e0d\u5305\u542b\u7ebf\u6027\u5c42\u7684\u6a21\u5757\uff08\u5982 <code>DotProductAttention</code>\uff09\u672a\u663e\u793a\u3002</p> <p>\u914d\u7f6e\u6587\u4ef6\u793a\u4f8b</p> <pre><code># \u7981\u7528\u56db\u4e2a GEMM \u7684 wgrad\nsection1:\n  enabled: True\n  layers:\n    layer_types: [transformer_layer]\n  transformer_engine:\n    DisableFP8GEMM:\n      enabled: True\n      gemms: [wgrad]\n\n# \u7981\u7528 layernorm_mlp \u5185\u7684\u6240\u6709 GEMM\nsection2:\n  enabled: True\n  layers:\n    layer_types: [layernorm_mlp]\n  transformer_engine:\n    DisableFP8Layer:\n      enabled: True\n\n# \u8bb0\u5f55 fc1 \u7684 wgrad \u7edf\u8ba1\nsection3:\n  enabled: True\n  layers:\n    layer_types: [fc1]\n  transformer_engine:\n    LogTensorStats:\n      enabled: True\n      stats: [min]\n      tensors: [wgrad]\n      freq: 1\n      start_step: 0\n      end_step: 50\n</code></pre>"},{"location":"transformerengine/docs/debug/2_config_file_structure/#gemm","title":"GEMM \u4e0e\u5f20\u91cf\u7684\u7ed3\u6784\u5316\u914d\u7f6e","text":"<p>\u67d0\u4e9b\u529f\u80fd\u9700\u8981\u4f20\u5165\u5f20\u91cf\u5217\u8868\u6216 GEMM \u5217\u8868\u3002\u53ef\u4ee5\u6309\u4e0d\u540c\u65b9\u5f0f\u8fdb\u884c\u63cf\u8ff0\u3002</p> <p>\u53ef\u76f4\u63a5\u4f20\u5165\u5217\u8868\uff1a</p> <pre><code>Feature:\n  enabled: ...\n  gemms: [gemm1, gemm2]\n  tensors: [tensor1, tensor2]\n  ...\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u4e3a\u5f20\u91cf\u4f7f\u7528\u7ed3\u6784\u4f53\u5199\u6cd5\uff1a</p> <pre><code>Feature:\n  gemms: [gemm1, gemm2]\n  tensors_struct:\n  - tensor: tensor1\n    feature_param1: value\n  - tensor: tensor2\n    feature_param1: value\n  gemm_feature_param1: value\n</code></pre> <p>\u540c\u7406\uff0cGEMM \u4e5f\u53ef\u4f7f\u7528\u7ed3\u6784\u4f53\u5199\u6cd5\uff1a</p> <pre><code>Feature:\n  enabled: ...\n  tensors: [tensor1, tensor2]\n  gemms_struct:\n  - gemm: gemm1\n    feature_param1: value\n  - gemm: gemm2\n    feature_param1: value\n  gemm_feature_param1: value\n</code></pre> <p>\u5f53\u7136\u4e5f\u53ef\u4ee5\u540c\u65f6\u5bf9\u5f20\u91cf\u4e0e GEMM \u4f7f\u7528\u7ed3\u6784\u4f53\uff0c\u6b64\u65f6 <code>tensors_struct</code> \u9700\u5d4c\u5957\u5728 <code>gemms_struct</code> \u4e2d\u3002</p>"},{"location":"transformerengine/docs/debug/3_api_debug_setup/","title":"\u521d\u59cb\u5316 API","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p>"},{"location":"transformerengine/docs/debug/3_api_debug_setup/#_1","title":"\u521d\u59cb\u5316","text":"<p>Transformer Engine \u7684\u7cbe\u5ea6\u8c03\u8bd5\u5de5\u5177\u4f9d\u8d56 NVIDIA \u7684 <code>Nvidia-DL-Framework-Inspect &lt;https://github.com/NVIDIA/nvidia-dlfw-inspect&gt;</code> \u8f6f\u4ef6\u5305\u3002\u8be6\u7ec6\u4fe1\u606f\u8bf7\u53c2\u9605\u5176 <code>\u5b98\u65b9\u6587\u6863 &lt;https://github.com/NVIDIA/nvidia-dlfw-inspect/tree/main/docs&gt;</code>\u3002\u4e0b\u6587\u6982\u8ff0\u8c03\u8bd5\u521d\u59cb\u5316\u7684\u6b65\u9aa4\u3002</p>"},{"location":"transformerengine/docs/debug/3_api_debug_setup/#initialize","title":"initialize()","text":"<p>\u9700\u5728\u5168\u5c40\u4e0a\u4e0b\u6587\u7684\u6bcf\u4e2a rank \u4e0a\u8c03\u7528\u4e00\u6b21\uff0c\u7528\u4e8e\u521d\u59cb\u5316 Nvidia-DL-Framework-Inspect\u3002</p> <p>\u53c2\u6570</p> <ul> <li>config_file (str, \u9ed8\u8ba4 <code>\"\"</code>)\uff1a\u914d\u7f6e YAML \u6587\u4ef6\u8def\u5f84\uff0c\u5176\u4e2d\u5305\u542b\u8981\u542f\u7528\u7684\u529f\u80fd\u53ca\u5c42\u540d\u79f0\u3002\u5982\u9700\u5728\u65e0\u914d\u7f6e\u6587\u4ef6\u7684\u60c5\u51b5\u4e0b\u8fd0\u884c\uff0c\u53ef\u4f20\u5165\u7a7a\u5b57\u7b26\u4e32 <code>\"\"</code>\u3002</li> <li>feature_dirs (List[str] | str)\uff1a\u529f\u80fd\u5b9e\u73b0\u6240\u5728\u76ee\u5f55\u5217\u8868\u3002\u82e5\u9700\u542f\u7528 TE \u5185\u7f6e\u529f\u80fd\uff0c\u8bf7\u4f20\u5165 <code>[/path/to/transformerengine/transformer_engine/debug/features]</code>\u3002</li> <li>logger (Union[BaseLogger, None], \u9ed8\u8ba4 <code>None</code>)\uff1a\u7528\u4e8e\u8bb0\u5f55\u5f20\u91cf\u7edf\u8ba1\u7684 Logger\uff0c\u9700\u5b9e\u73b0 <code>Nvidia-DL-Framework-Inspect &lt;https://github.com/NVIDIA/nvidia-dlfw-inspect&gt;</code>_ \u4e2d\u7684 <code>BaseLogger</code> \u63a5\u53e3\u3002</li> <li>log_dir (str, \u9ed8\u8ba4 <code>\".\"</code>)\uff1a\u4fdd\u5b58 <code>debug_logs</code> \u4e0e <code>debug_statistics_logs</code> \u7684\u76ee\u5f55\u3002</li> <li>tb_writer (TensorBoardWriter, \u9ed8\u8ba4 <code>None</code>)\uff1a\u7528\u4e8e\u8bb0\u5f55 TensorBoard \u6570\u636e\u7684\u5199\u5165\u5668\u3002</li> <li>default_logging_enabled (bool, \u9ed8\u8ba4 <code>False</code>)\uff1a\u662f\u5426\u542f\u7528\u9ed8\u8ba4\u6587\u4ef6\u65e5\u5fd7\u3002</li> </ul> <pre><code>import nvdlfw_inspect.api as debug_api\n\ndebug_api.initialize(\n    config_file=\"./config.yaml\",\n    feature_dirs=[\"/path/to/transformer_engine/debug/features\"],\n    log_dir=\"./log_dir\")\n</code></pre>"},{"location":"transformerengine/docs/debug/3_api_debug_setup/#set_tensor_reduction_group","title":"set_tensor_reduction_group()","text":"<p>\u4ec5\u5728\u8bb0\u5f55\u5f20\u91cf\u7edf\u8ba1\u65f6\u9700\u8981\u8c03\u7528\u3002\u591a GPU \u8bad\u7ec3\u4e2d\uff0c\u6fc0\u6d3b\u4e0e\u68af\u5ea6\u5f20\u91cf\u4f1a\u5206\u5e03\u5728\u591a\u4e2a\u8282\u70b9\u4e0a\u3002\u8be5\u65b9\u6cd5\u5141\u8bb8\u6307\u5b9a\u7edf\u8ba1\u91cf\u7684\u5f52\u7ea6\u5206\u7ec4\uff1b\u8be6\u60c5\u53c2\u89c1 <code>Reduction Groups &lt;./4_distributed.rst#reduction-groups&gt;</code>_\u3002</p> <p>\u82e5\u672a\u663e\u5f0f\u8bbe\u7f6e\uff0c\u7edf\u8ba1\u91cf\u5c06\u5728\u6240\u6709 rank \u4e0a\u5f52\u7ea6\u3002</p> <p>\u53c2\u6570</p> <ul> <li>group (torch.distributed.ProcessGroup)\uff1a\u6267\u884c\u7edf\u8ba1\u5f52\u7ea6\u7684\u8fdb\u7a0b\u7ec4\u3002</li> </ul> <pre><code>import nvdlfw_inspect.api as debug_api\n\n# \u521d\u59cb\u5316\n# (...)\n\npipeline_parallel_group = initialize_pipeline_parallel_group()\n\ndebug_api.set_tensor_reduction_group(pipeline_parallel_group)\n\n# \u8bad\u7ec3\n# (...)\n# \u6fc0\u6d3b\u4e0e\u68af\u5ea6\u7edf\u8ba1\u5c06\u6cbf pipeline_parallel_group \u5f52\u7ea6\n</code></pre>"},{"location":"transformerengine/docs/debug/3_api_debug_setup/#set_weight_tensor_tp_group_reduce","title":"set_weight_tensor_tp_group_reduce()","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6743\u91cd\u5f20\u91cf\u7684\u7edf\u8ba1\u4f1a\u5728\u5f20\u91cf\u5e76\u884c\u7ec4\u5185\u5f52\u7ea6\u3002\u901a\u8fc7\u8be5\u51fd\u6570\u53ef\u63a7\u5236\u662f\u5426\u7981\u7528\u6b64\u884c\u4e3a\uff0c\u8be6\u89c1 <code>Reduction Groups &lt;./4_distributed.rst#reduction-groups&gt;</code>_\u3002</p> <p>\u8be5\u65b9\u6cd5\u7531 <code>transformer_engine.debug</code> \u63d0\u4f9b\uff0c\u800c\u975e <code>debug_api</code>\u3002</p> <p>\u53c2\u6570</p> <ul> <li>enabled (bool, \u9ed8\u8ba4 <code>True</code>)\uff1a\u662f\u5426\u5728\u5f20\u91cf\u5e76\u884c\u7ec4\u5185\u5f52\u7ea6\u6743\u91cd\u7edf\u8ba1\u3002</li> </ul> <pre><code>import nvdlfw_inspect.api as debug_api\nfrom transformer_engine.debug import set_weight_tensor_tp_group_reduce\n\n# \u521d\u59cb\u5316\n# (...)\n\nset_weight_tensor_tp_group_reduce(False)\n\n# \u8bad\u7ec3\n# (...)\n# \u6743\u91cd\u5f20\u91cf\u7edf\u8ba1\u5c06\u4e0d\u518d\u5f52\u7ea6\n</code></pre>"},{"location":"transformerengine/docs/debug/3_api_features/","title":"\u529f\u80fd\u5217\u8868","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p>"},{"location":"transformerengine/docs/debug/3_api_features/#_1","title":"\u8c03\u8bd5\u529f\u80fd\u5217\u8868","text":"<ul> <li><code>LogTensorStats</code>\uff1a\u8bb0\u5f55\u6bcf\u6b21 GEMM \u7684\u8f93\u5165\u3001\u6743\u91cd\u3001\u8f93\u51fa\u7b49\u5f20\u91cf\u7edf\u8ba1\u4fe1\u606f\uff08\u5747\u503c\u3001\u65b9\u5dee\u3001amax\uff09\u3002</li> <li><code>LogFp8TensorStats</code>\uff1a\u4e13\u95e8\u8bb0\u5f55 FP8 \u5f20\u91cf\u7684\u7edf\u8ba1\u91cf\uff0c\u4fbf\u4e8e\u5206\u6790\u7f29\u653e\u56e0\u5b50\u4e0e\u6ea2\u51fa\u60c5\u51b5\u3002</li> <li><code>DisableFP8GEMM</code>\uff1a\u5bf9\u6307\u5b9a GEMM \u5173\u95ed FP8 \u7cbe\u5ea6\uff0c\u5f3a\u5236\u4f7f\u7528\u9ad8\u7cbe\u5ea6\u8def\u5f84\u4ee5\u5bf9\u6bd4\u7ed3\u679c\u3002</li> <li><code>DisableFP8Layer</code>\uff1a\u9488\u5bf9\u5b8c\u6574\u5c42\u7981\u7528 FP8\uff0c\u9002\u5408\u9010\u5c42\u6392\u67e5\u6570\u503c\u95ee\u9898\u3002</li> <li><code>PerTensorScaling</code>\uff1a\u5bf9\u7279\u5b9a\u5f20\u91cf\u542f\u7528\u5355\u5f20\u91cf\u7f29\u653e\u7b56\u7565\uff0c\u7528\u4e8e\u5b9e\u9a8c\u65b0\u7684\u7f29\u653e\u65b9\u5f0f\u3002</li> <li><code>FakeQuant</code>\uff1a\u5bf9\u5f20\u91cf\u6267\u884c\u5047\u91cf\u5316\uff0c\u53ef\u5728\u4e0d\u6539\u52a8\u4e3b\u6d41\u7a0b\u7684\u60c5\u51b5\u4e0b\u8bc4\u4f30\u4f4e\u7cbe\u5ea6\u65b9\u6848\u3002</li> </ul>"},{"location":"transformerengine/docs/debug/3_api_te_calls/","title":"Inspect API \u8c03\u7528","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p>"},{"location":"transformerengine/docs/debug/3_api_te_calls/#nvidia-dl-framework-inspect","title":"\u8c03\u7528 Nvidia-DL-Framework-Inspect","text":"<p>\u672c\u8282\u66f4\u8be6\u7ec6\u5730\u8bf4\u660e Transformer Engine \u4e0e Nvidia-DL-Framework-Inspect \u7684\u534f\u4f5c\u65b9\u5f0f\u3002TransformerEngine \u7684\u5404\u4e2a GEMM \u5185\u90e8\u90fd\u9884\u7559\u4e86\u94a9\u5b50\uff08hook\uff09\u3002\u7528\u6237\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5b9a\u4e49\u529f\u80fd\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u590d\u7528 TE \u5185\u7f6e\u529f\u80fd\u3002<code>config.yaml</code> \u7528\u4e8e\u63cf\u8ff0\u54ea\u4e9b\u5c42\u9700\u8981\u542f\u7528\u54ea\u4e9b\u94a9\u5b50\u3002Nvidia-DL-Framework-Inspect \u4f1a\u7ed3\u5408 TE \u8bad\u7ec3\u6d41\u7a0b\u3001\u529f\u80fd\u7c7b\u4ee5\u53ca <code>config.yaml</code>\uff0c\u5e76\u8d1f\u8d23\u5728\u6b63\u786e\u4f4d\u7f6e\u63d2\u5165\u94a9\u5b50\u3002\u4e0b\u56fe\u7ed9\u51fa\u4e86\u793a\u610f\uff1a</p> <p></p> <p>\u56fe 1\uff1a\u4ec5\u542b\u4e00\u4e2a Linear \u5c42\u7684\u8bad\u7ec3\u811a\u672c\u793a\u4f8b\u3002\u5bf9\u4e8e <code>config.yaml</code> \u4e2d\u63d0\u5230\u7684\u5f20\u91cf\uff0c<code>modify_tensor_enabled()</code> \u4e0e <code>modify_tensor()</code> \u7684\u884c\u4e3a\u4f1a\u88ab\u529f\u80fd\u7c7b\u4e2d\u7684\u5b9a\u4e49\u66ff\u6362\u3002\u5176\u4ed6\u8c03\u7528\u5219\u8fd4\u56de\u9ed8\u8ba4\u503c\uff08\u5373\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\uff09\u3002</p> <p>\u672c\u9875\u5217\u51fa\u4e86 TransformerEngine \u5728\u6bcf\u4e2a GEMM \u4e2d\u89e6\u53d1\u7684 Nvidia-DL-Framework-Inspect API \u8c03\u7528\u3002\u8c03\u7528\u5206\u4e3a\u4e24\u7c7b\uff1a</p> <ul> <li>GEMM \u8c03\u7528\uff1a\u5728\u6bcf\u6b21 GEMM \u65f6\u6267\u884c\uff0c\u7528\u4e8e\u5904\u7406\u6216\u91cf\u5316\u5f20\u91cf\u5e76\u6536\u96c6\u4fe1\u606f\uff1b</li> <li>\u8def\u7531\u8c03\u7528\uff1a\u5728\u524d\u5411\u4f20\u64ad\u5f00\u59cb\u65f6\u6267\u884c\uff0c\u7528\u4e8e\u6307\u793a\u662f\u5426\u9700\u8981\u8c03\u7528 <code>modify_tensor()</code> \u7b49\u51fd\u6570\u3002</li> </ul> <p>\u82e5\u67d0\u5c42\u7684\u6240\u6709\u8def\u7531\u8c03\u7528\u5747\u8fd4\u56de <code>False</code>\uff0c\u5219\u8be5\u5c42\u4f1a\u4f7f\u7528 Transformer Engine \u7684\u878d\u5408\u5b9e\u73b0\uff0c\u4ee5\u83b7\u5f97\u6700\u4f73\u6027\u80fd\u3002\u82e5\u4efb\u610f\u8def\u7531\u8c03\u7528\u8fd4\u56de <code>True</code>\uff0c\u8be5\u5c42\u5c06\u4e0d\u4f7f\u7528\u878d\u5408\uff0c\u4ee5\u4fbf\u8bbf\u95ee\u6240\u6709\u5f20\u91cf\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u5c42\u4e0a\u672a\u542f\u7528\u4efb\u4f55\u529f\u80fd\uff0c\u5176\u6027\u80fd\u5e94\u4e0e\u672a\u521d\u59cb\u5316 <code>debug_api</code> \u7684\u60c5\u51b5\u4e00\u81f4\u3002</p> \u8c03\u7528 \u89e6\u53d1\u9636\u6bb5 \u4f5c\u7528\u8bf4\u660e <code>modify_tensor</code> GEMM \u5728\u6267\u884c GEMM \u4e4b\u524d\u4fee\u6539\u5f20\u91cf\uff08\u5982\u66ff\u6362\u6570\u503c\u3001\u63d2\u5165\u5047\u91cf\u5316\uff09\uff0c\u7531\u529f\u80fd\u7c7b\u5177\u4f53\u5b9e\u73b0\u3002 <code>modify_tensor_enabled</code> \u8def\u7531 \u8fd4\u56de\u5e03\u5c14\u503c\uff0c\u6307\u793a\u662f\u5426\u9700\u8981\u8c03\u7528 <code>modify_tensor</code>\u3002\u82e5\u4e3a <code>False</code>\uff0c\u4fdd\u6301\u878d\u5408\u5b9e\u73b0\u3002 <code>fp8_gemm_enabled</code> \u8def\u7531 \u63a7\u5236\u662f\u5426\u5141\u8bb8\u8be5 GEMM \u4f7f\u7528 FP8 \u7cbe\u5ea6\uff1b\u5f53\u8fd4\u56de <code>False</code> \u65f6\u4f1a\u56de\u9000\u5230\u9ad8\u7cbe\u5ea6\u8def\u5f84\u3002 <code>inspect_tensor</code> GEMM \u5728 GEMM \u524d\u540e\u6536\u96c6\u5f20\u91cf\u4fe1\u606f\uff08\u4f8b\u5982\u7edf\u8ba1\u91cf\u3001\u5bfc\u51fa\u622a\u65ad\u6837\u672c\uff09\u3002 <code>inspect_tensor_postquantize</code> GEMM \u9488\u5bf9\u91cf\u5316\u540e\u7684\u5f20\u91cf\u6267\u884c\u989d\u5916\u68c0\u67e5\u6216\u8bb0\u5f55\u3002 <code>inspect_tensor_enabled</code> \u8def\u7531 \u5224\u65ad\u662f\u5426\u9700\u8981\u6267\u884c <code>inspect_tensor</code>\u3002 <code>inspect_tensor_postquantize_enabled</code> \u8def\u7531 \u5224\u65ad\u662f\u5426\u9700\u8981\u6267\u884c <code>inspect_tensor_postquantize</code>\u3002"},{"location":"transformerengine/docs/debug/4_distributed/","title":"\u5206\u5e03\u5f0f\u8c03\u8bd5","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p>"},{"location":"transformerengine/docs/debug/4_distributed/#_1","title":"\u5206\u5e03\u5f0f\u8bad\u7ec3","text":"<p>Nvidia-DL-Framework-Inspect \u4e0e Transformer Engine \u652f\u6301\u591a GPU \u8bad\u7ec3\u3002\u672c\u6307\u5357\u8bf4\u660e\u5982\u4f55\u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\u4f7f\u7528\u8c03\u8bd5\u5de5\u5177\uff0c\u4ee5\u53ca\u5404\u529f\u80fd\u5728\u8be5\u73af\u5883\u4e0b\u7684\u884c\u4e3a\u3002</p> <p>\u542f\u7528\u7cbe\u5ea6\u8c03\u8bd5\u5de5\u5177\u9700\u6ee1\u8db3\uff1a</p> <ol> <li>\u5728\u6bcf\u4e2a\u8282\u70b9\u8c03\u7528 <code>debug_api.initialize(...)</code>\uff0c\u5e76\u63d0\u4f9b\u76f8\u540c\u7684\u914d\u7f6e YAML \u6587\u4ef6\u3002</li> <li>\u82e5\u9700\u8bb0\u5f55\u7edf\u8ba1\u91cf\uff0c\u53ef\u8c03\u7528 <code>debug_api.set_tensor_reduction_group</code> \u6307\u5b9a\u9002\u5f53\u7684\u5f52\u7ea6\u5206\u7ec4\u3002</li> </ol>"},{"location":"transformerengine/docs/debug/4_distributed/#_2","title":"\u529f\u80fd\u884c\u4e3a","text":"<p>\u5728\u5206\u5e03\u5f0f\u573a\u666f\u4e0b\uff0cDisableFP8GEMM \u4e0e DisableFP8Layer \u7684\u884c\u4e3a\u4e0e\u5355 GPU \u57fa\u672c\u4e00\u81f4\u3002</p> <p>PerTensorScaling \u4e0e FakeQuant \u4f1a\u5728\u6bcf\u4e2a\u8282\u70b9\u72ec\u7acb\u8ba1\u7b97 FP8 \u7f29\u653e\u56e0\u5b50\uff0c\u56e0\u6b64 GPU \u6570\u91cf\u4f1a\u5f71\u54cd\u7ed3\u679c\u3002\u8fd9\u4e0e\u5ef6\u8fdf\u7f29\u653e\uff08Delayed Scaling\uff09FP8 \u914d\u65b9\u4e0d\u540c\uff0c\u540e\u8005\u4f1a\u540c\u6b65\u7f29\u653e\u56e0\u5b50\u3002</p> <p></p> <p>\u56fe 1\uff1a\u5bf9\u4e8e PerTensorScaling \u4e0e FakeQuant\uff0c\u6bcf\u4e2a\u5f20\u91cf\u5206\u7247\u5355\u72ec\u8ba1\u7b97\u7f29\u653e\u56e0\u5b50\uff1b\u800c\u5ef6\u8fdf\u7f29\u653e FP8 \u4f1a\u5728\u5404\u8282\u70b9\u95f4\u540c\u6b65\u3002</p> <p>\u4e0e\u65e5\u5fd7\u76f8\u5173\u7684\u529f\u80fd\u66f4\u4e3a\u590d\u6742\uff0c\u540e\u7eed\u7ae0\u8282\u5c06\u8be6\u7ec6\u4ecb\u7ecd\u3002</p>"},{"location":"transformerengine/docs/debug/4_distributed/#_3","title":"\u5f52\u7ea6\u5206\u7ec4","text":"<p>\u5728\u5f20\u91cf\u5e76\u884c\u3001\u6570\u636e\u5e76\u884c\u6216\u6d41\u6c34\u7ebf\u5e76\u884c\u7684\u8bbe\u7f6e\u4e2d\uff0c\u90e8\u5206\u5f20\u91cf\u4f1a\u5206\u5e03\u5728\u591a\u5757 GPU \u4e0a\uff0c\u56e0\u6b64\u9700\u8981\u6267\u884c\u5f52\u7ea6\u624d\u80fd\u83b7\u5f97\u5b8c\u6574\u7684\u7edf\u8ba1\u91cf\u3002</p> <p>\u6743\u91cd\u5f20\u91cf\u59cb\u7ec8\u6309\u5f20\u91cf\u5e76\u884c\u7ec4\u5212\u5206\uff0c\u8c03\u8bd5\u5de5\u5177\u9ed8\u8ba4\u4f1a\u5728\u8be5\u7ec4\u5185\u81ea\u52a8\u5f52\u7ea6\u3002\u5982\u9700\u7981\u7528\uff0c\u53ef\u8c03\u7528\uff1a</p> <pre><code>transformer_engine.debug.set_weight_tensor_tp_group_reduce(False)\n</code></pre> <p>\u5bf9\u4e8e\u6570\u636e\u5e76\u884c\u573a\u666f\uff0cTransformer Engine \u6a21\u5757\u672c\u8eab\u4e0d\u6301\u6709\u5f52\u7ea6\u6240\u9700\u7684\u8fdb\u7a0b\u7ec4\uff0c\u53ef\u4f7f\u7528\uff1a</p> <pre><code>debug_api.set_tensor_reduction_group(group)\n</code></pre> <p>\u8be5\u8c03\u7528\u4fdd\u8bc1\u7edf\u8ba1\u91cf\u4f1a\u5728\u6307\u5b9a\u5206\u7ec4\u5185\u5f52\u7ea6\u3002\u6fc0\u6d3b\u7edf\u8ba1\u5728\u524d\u5411\u7ed3\u675f\uff08\u79bb\u5f00 autocast\uff09\u540e\u8bb0\u5f55\uff1b\u68af\u5ea6\uff08dgrad\u3001wgrad\uff09\u7edf\u8ba1\u5728\u53cd\u5411\u7ed3\u675f\u540e\u8bb0\u5f55\u3002</p> <p>\u4e0b\u56fe\u5c55\u793a\u4e86 4 \u8282\u70b9\u3001\u5f20\u91cf\u5e76\u884c\u5ea6 2\u3001\u6570\u636e\u5e76\u884c\u5ea6 2 \u7684\u4e09\u79cd\u5f52\u7ea6\u914d\u7f6e\u3002</p> <p></p> <p>\u56fe 2\uff1a\u6240\u6709\u8282\u70b9\u7ec4\u6210\u5355\u4e00\u7684\u5f20\u91cf\u5f52\u7ea6\u7ec4\uff0c\u56e0\u6b64\u5404\u8282\u70b9\u8bb0\u5f55\u5230\u7684\u7edf\u8ba1\u91cf\u5b8c\u5168\u4e00\u81f4\u3002</p> <p></p> <p>\u56fe 3\uff1a\u6bcf\u4e2a\u8282\u70b9\u5c06\u81ea\u8eab\u89c6\u4e3a\u72ec\u7acb\u7684\u5f52\u7ea6\u7ec4\u3002\u6743\u91cd\u7edf\u8ba1\u4ecd\u5728\u5f20\u91cf\u5e76\u884c\u7ec4\u5185\u540c\u6b65\uff0c\u4f46\u6fc0\u6d3b\u4e0e\u68af\u5ea6\u7edf\u8ba1\u4e0d\u518d\u540c\u6b65\u3002</p> <p></p> <p>\u56fe 4\uff1a\u901a\u8fc7 <code>set_weight_tensor_tp_group_reduce(False)</code> \u7981\u7528\u6743\u91cd\u540c\u6b65\u540e\uff0c\u6bcf\u4e2a\u8282\u70b9\u8bb0\u5f55\u81ea\u8eab\u5206\u7247\u7684\u6743\u91cd\u7edf\u8ba1\u3002</p>"},{"location":"transformerengine/docs/debug/4_distributed/#_4","title":"\u5fae\u6279\u5904\u7406","text":"<p>\u4e0b\u9762\u8bf4\u660e\u5728\u5fae\u6279\uff08microbatch\uff09\u573a\u666f\u4e0b\u7684\u7edf\u8ba1\u884c\u4e3a\u3002\u8fd9\u91cc\u7684\u5fae\u6279\u6307\u7684\u662f\u5728\u4e00\u6b21 <code>debug_api.step()</code> \u524d\u6267\u884c\u591a\u6b21 <code>forward()</code>\u3002\u5176\u8868\u73b0\u4e3a\uff1a</p> <ul> <li>\u5bf9\u6743\u91cd\u5f20\u91cf\u800c\u8a00\uff0c\u7edf\u8ba1\u91cf\u5728\u6bcf\u4e2a\u5fae\u6279\u95f4\u4fdd\u6301\u4e0d\u53d8\uff08\u6743\u91cd\u672a\u66f4\u65b0\uff09\u3002</li> <li>\u5176\u4ed6\u5f20\u91cf\u7684\u7edf\u8ba1\u91cf\u4f1a\u7d2f\u52a0\u3002</li> </ul>"},{"location":"transformerengine/docs/debug/4_distributed/#tensorboard","title":"\u5199\u5165\u6587\u4ef6\u4e0e TensorBoard","text":"<p>\u5728\u5355\u8282\u70b9\u8fd0\u884c\u3001\u4e14 <code>default_logging_enabled=True</code> \u65f6\uff0c\u65e5\u5fd7\u9ed8\u8ba4\u5199\u5165 <code>log_dir/nvdlfw_inspect_statistics_logs/nvdlfw_inspect_globalrank-0.log</code>\u3002\u5728\u591a GPU \u8bad\u7ec3\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u4f1a\u5c06\u5f52\u7ea6\u540e\u7684\u7edf\u8ba1\u5199\u5165\u81ea\u8eab\u7684\u6587\u4ef6\uff0c\u540c\u4e00\u5f52\u7ea6\u7ec4\u5185\u7684\u8282\u70b9\u7531\u4e8e\u8bb0\u5f55\u7684\u662f\u5df2\u5f52\u7ea6\u6570\u636e\uff0c\u56e0\u6b64\u6570\u503c\u76f8\u540c\u3002</p> <p>\u82e5\u4ec5\u90e8\u5206\u8282\u70b9\u4f20\u5165 TensorBoard writer\uff0c\u5219\u53ea\u6709\u8fd9\u4e9b\u8282\u70b9\u4f1a\u8f93\u51fa TensorBoard \u65e5\u5fd7\u3002\u8fd9\u5728\u590d\u6742\u7684\u5e76\u884c\u573a\u666f\uff08\u5982\u6709\u4e24\u4e2a Transformer \u5c42\uff0c\u4e14 TP_SIZE=2\u3001DP_SIZE=2\u3001PP_SIZE=2\uff09\u4e2d\u975e\u5e38\u6709\u7528\u3002\u82e5\u5e0c\u671b\u6240\u6709\u7edf\u8ba1\u5199\u5165 TensorBoard\uff0c\u9700\u786e\u4fdd\u6bcf\u4e2a\u6d41\u6c34\u7ebf\u5e76\u884c\u7ec4\u81f3\u5c11\u6709\u4e00\u4e2a\u8fdb\u7a0b\u4f20\u5165 writer\u3002</p> <p></p> <p>\u56fe 5\uff1a\u6d41\u6c34\u7ebf\u5e76\u884c\u793a\u4f8b\u3002\u4e3a\u6bcf\u4e2a\u6d41\u6c34\u7ebf\u5e76\u884c\u7ec4\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\u4f20\u5165 <code>tb_writer</code>\uff0c\u5e76\u4ee5\u6b64\u6307\u5b9a\u5f20\u91cf\u5f52\u7ea6\u7ec4\u3002</p> <p>\u5982\u679c\u5c06\u5f20\u91cf\u5f52\u7ea6\u7ec4\u8bbe\u7f6e\u4e3a <code>None</code>\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u4f1a\u4fdd\u7559\u672a\u5f52\u7ea6\u7684 wgrad/dgrad \u7edf\u8ba1\uff0c\u4fbf\u4e8e\u540e\u7eed\u5904\u7406\u3002\u82e5\u9700\u7981\u7528\u5f20\u91cf\u5e76\u884c\u7ec4\u5185\u7684\u6743\u91cd\u5f52\u7ea6\uff0c\u53ef\u8c03\u7528\uff1a</p> <pre><code>transformer_engine.debug.set_weight_tensor_tp_group_reduce(False)\n</code></pre>"},{"location":"transformerengine/docs/debug/api/","title":"API \u7d22\u5f15","text":"<p>Copyright (c) 2022-2025, NVIDIA CORPORATION &amp; AFFILIATES.</p> <p>See LICENSE for license information.</p>"},{"location":"transformerengine/docs/debug/api/#api","title":"API","text":"<ul> <li>3_api_debug_setup.rst</li> <li>3_api_features.rst</li> <li>3_api_te_calls.rst</li> </ul>"}]}